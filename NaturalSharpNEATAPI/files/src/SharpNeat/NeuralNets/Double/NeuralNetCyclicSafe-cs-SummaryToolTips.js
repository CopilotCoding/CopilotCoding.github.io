NDSummary.OnToolTipsLoaded("File:src/SharpNeat/NeuralNets/Double/NeuralNetCyclicSafe.cs",{2250:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype2250\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">namespace</span> SharpNeat.NeuralNets.Double</div></div></div>",2251:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2251\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public sealed</span></div><div class=\"CPName\">NeuralNetCyclicSafe</div></div></div><div class=\"TTSummary\">This class is functionally equivalent to NeuralNetCyclic, but doesn\'t use any of the unsafe memory pointer techniques used in that class, and therefore this class is much slower.&nbsp; This class is intended to be used as a safe reference implementation that can be used when testing or debugging NeuralNetCyclic.</div></div>",2253:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype2253\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">readonly</span> ConnectionIds _connIds</div></div></div>",2254:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype2254\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">readonly double</span>[] _weightArr</div></div></div>",2255:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype2255\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">readonly</span> VecFn2&lt;<span class=\"SHKeyword\">double</span>&gt; _activationFn</div></div></div>",2256:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype2256\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">readonly double</span>[] _preActivationArr</div></div></div>",2257:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype2257\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">readonly double</span>[] _postActivationArr</div></div></div>",2258:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype2258\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">readonly int</span> _inputCount</div></div></div>",2259:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype2259\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">readonly int</span> _outputCount</div></div></div>",2260:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype2260\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">readonly int</span> _cyclesPerActivation</div></div></div>",2262:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2262\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> NeuralNetCyclicSafe(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">WeightedDirectedGraph&lt;<span class=\"SHKeyword\">double</span>&gt;&nbsp;</td><td class=\"PName last\">digraph,</td></tr><tr><td class=\"PType first\">VecFn2&lt;<span class=\"SHKeyword\">double</span>&gt;&nbsp;</td><td class=\"PName last\">activationFn,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">cyclesPerActivation</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Constructs a cyclic neural network.</div></div>",2263:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2263\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> NeuralNetCyclicSafe(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">DirectedGraph&nbsp;</td><td class=\"PName last\">digraph,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">double</span>[]&nbsp;</td><td class=\"PName last\">weightArr,</td></tr><tr><td class=\"PType first\">VecFn2&lt;<span class=\"SHKeyword\">double</span>&gt;&nbsp;</td><td class=\"PName last\">activationFn,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">cyclesPerActivation</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Constructs a cyclic neural network.</div></div>",2265:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype2265\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">public</span> Memory&lt;<span class=\"SHKeyword\">double</span>&gt; Inputs { <span class=\"SHKeyword\">get</span> }</div></div><div class=\"TTSummary\">Gets a memory segment that represents a vector of input values.</div></div>",2266:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype2266\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">public</span> Memory&lt;<span class=\"SHKeyword\">double</span>&gt; Outputs { <span class=\"SHKeyword\">get</span> }</div></div><div class=\"TTSummary\">Gets a memory segment that represents a vector of output values.</div></div>",2268:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2268\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">public void</span> Activate()</div></div><div class=\"TTSummary\">Activate the network for a fixed number of iterations defined by the \'maxIterations\' parameter at construction time. Activation reads input signals from InputSignalArray and writes output signals to OutputSignalArray.</div></div>",2269:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2269\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">public void</span> Reset()</div></div><div class=\"TTSummary\">Reset the network\'s internal state.</div></div>",2270:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2270\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">public void</span> Dispose()</div></div></div>"});