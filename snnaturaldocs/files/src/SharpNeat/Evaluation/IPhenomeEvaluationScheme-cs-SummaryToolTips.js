NDSummary.OnToolTipsLoaded("File:src/SharpNeat/Evaluation/IPhenomeEvaluationScheme.cs",{379:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype379\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">namespace</span> SharpNeat.Evaluation</div></div></div>",380:"<div class=\"NDToolTip TInterface LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype380\"><div class=\"CPEntry TInterface Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span> <span class=\"SHKeyword\">interface</span></div><div class=\"CPName\">IPhenomeEvaluationScheme&#8203;<span class=\"TemplateSignature\">&lt;TPhenome&gt;</span></div></div></div><div class=\"TTSummary\">Represents an overall phenome evaluation scheme.</div></div>",382:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype382\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">bool</span> IsDeterministic { <span class=\"SHKeyword\">get</span> }</div></div><div class=\"TTSummary\">Indicates if the evaluation scheme is deterministic, i.e. will always return the same fitness score for a given genome.</div></div>",383:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype383\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">IComparer&lt;FitnessInfo&gt; FitnessComparer { <span class=\"SHKeyword\">get</span> }</div></div><div class=\"TTSummary\">Gets a fitness comparer for the scheme.</div></div>",384:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype384\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">FitnessInfo NullFitness { <span class=\"SHKeyword\">get</span> }</div></div><div class=\"TTSummary\">Represents the zero or null fitness for the task. I.e. e.g. for genomes that utterly fail at the task, or genomes that fail even to decode (not possible in NEAT).</div></div>",385:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype385\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">bool</span> EvaluatorsHaveState { <span class=\"SHKeyword\">get</span> }</div></div><div class=\"TTSummary\">Indicates if the evaluators created by CreateEvaluator have state.</div></div>",387:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype387\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">IPhenomeEvaluator&lt;TPhenome&gt; CreateEvaluator()</div></div><div class=\"TTSummary\">Create a new evaluator object.</div></div>",388:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype388\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">bool</span> TestForStopCondition(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">FitnessInfo&nbsp;</td><td class=\"PName last\">fitnessInfo</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Accepts a FitnessInfo, which is intended to be from the fittest genome in the population, and returns a boolean that indicates if the evolution algorithm can stop, i.e. because the fitness is the best that can be achieved (or good enough).</div></div>"});