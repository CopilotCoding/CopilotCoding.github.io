NDContentPage.OnToolTipsLoaded({402:"<div class=\"NDToolTip TInterface LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype402\"><div class=\"CPEntry TInterface Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span> <span class=\"SHKeyword\">interface</span></div><div class=\"CPName\">IGenomeDecoder&#8203;<span class=\"TemplateSignature\">&lt;TGenome,TPhenome&gt;</span></div><div class=\"CPPostPrototypeLine\"><span class=\"SHKeyword\">where</span> TPhenome : IDisposable</div></div></div><div class=\"TTSummary\">Represents types that decode genomes into phenomes.</div></div>",1322:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1322\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\">NeatGenome&#8203;<span class=\"TemplateSignature\">&lt;T&gt;</span></div><div class=\"CPPostPrototypeLine\"><span class=\"SHKeyword\">where</span> T : <span class=\"SHKeyword\">struct</span></div></div></div><div class=\"TTSummary\">Represents a NEAT genome, i.e the genetic representation of a neural network.</div></div>",2367:"<div class=\"NDToolTip TInterface LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2367\"><div class=\"CPEntry TInterface Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span> <span class=\"SHKeyword\">interface</span></div><div class=\"CPName\">IBlackBox&#8203;<span class=\"TemplateSignature\">&lt;T&gt;</span></div><div class=\"CPPostPrototypeLine\"><span class=\"SHKeyword\">where</span> T : <span class=\"SHKeyword\">struct</span></div></div></div><div class=\"TTSummary\">Represents an abstract \'black box\' function, with an input vector, and an Activate() method that takes the inputs to produce an output vector. I.e. \'black box\' here could also be described as a multivariate mathematical function.&nbsp; Typically a black box will be a neural network, whereby we set the input vector, activate the network, and read its output vector. However, in principle a black box could be any kind of function or information processing system such as a C# program or a genetic programming tree.</div></div>",2921:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2921\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public sealed</span></div><div class=\"CPName\">PreyCaptureWorld</div></div></div><div class=\"TTSummary\">The prey capture task\'s grid world, as defined in:&nbsp; Incremental Evolution Of Complex General Behavior, Faustino Gomez and Risto Miikkulainen (1997) http://&#8203;nn&#8203;.cs&#8203;.utexas&#8203;.edu&#8203;/downloads&#8203;/papers&#8203;/gomez&#8203;.adaptive-behavior&#8203;.pdf&nbsp; Encapsulates the agent\'s sensor and motor hardware, and the prey\'s simple stochastic movement.</div></div>",3064:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3064\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> PreyCaptureControl(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">IGenomeDecoder&lt;NeatGenome&lt;<span class=\"SHKeyword\">double</span>&gt;, IBlackBox&lt;<span class=\"SHKeyword\">double</span>&gt;&gt;&nbsp;</td><td class=\"PName last\">genomeDecoder,</td></tr><tr><td class=\"PType first\">PreyCaptureWorld&nbsp;</td><td class=\"PName last\">world</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Constructs a new instance of PreyCaptureControl.</div></div>",3145:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype3145\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\">GenomeControl</div></div></div><div class=\"TTSummary\">A user control for genome visualization.&nbsp; This is used for displaying a genome directly (e.g. a neural net structure), or some other type of visualization that uses the genome, e.g. a task view that shows how the genome performs on some task.</div></div>"});