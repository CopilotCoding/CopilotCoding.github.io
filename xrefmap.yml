### YamlMime:XRefMap
sorted: true
references:
- uid: EfficacySampler
  name: EfficacySampler
  href: api/EfficacySampler.html
  commentId: N:EfficacySampler
  fullName: EfficacySampler
  nameWithType: EfficacySampler
- uid: EfficacySampler.ArgUtils
  name: ArgUtils
  href: api/EfficacySampler.ArgUtils.html
  commentId: T:EfficacySampler.ArgUtils
  fullName: EfficacySampler.ArgUtils
  nameWithType: ArgUtils
- uid: EfficacySampler.ArgUtils.ReadArgs(System.String[],System.String@,System.String@)
  name: ReadArgs(string[], out string?, out string?)
  href: api/EfficacySampler.ArgUtils.html#EfficacySampler_ArgUtils_ReadArgs_System_String___System_String__System_String__
  commentId: M:EfficacySampler.ArgUtils.ReadArgs(System.String[],System.String@,System.String@)
  name.vb: ReadArgs(String(), String, String)
  fullName: EfficacySampler.ArgUtils.ReadArgs(string[], out string?, out string?)
  fullName.vb: EfficacySampler.ArgUtils.ReadArgs(String(), String, String)
  nameWithType: ArgUtils.ReadArgs(string[], out string?, out string?)
  nameWithType.vb: ArgUtils.ReadArgs(String(), String, String)
- uid: EfficacySampler.ArgUtils.ReadArgs*
  name: ReadArgs
  href: api/EfficacySampler.ArgUtils.html#EfficacySampler_ArgUtils_ReadArgs_
  commentId: Overload:EfficacySampler.ArgUtils.ReadArgs
  isSpec: "True"
  fullName: EfficacySampler.ArgUtils.ReadArgs
  nameWithType: ArgUtils.ReadArgs
- uid: EfficacySampler.EvolutionAlgorithmHostClockTime
  name: EvolutionAlgorithmHostClockTime
  href: api/EfficacySampler.EvolutionAlgorithmHostClockTime.html
  commentId: T:EfficacySampler.EvolutionAlgorithmHostClockTime
  fullName: EfficacySampler.EvolutionAlgorithmHostClockTime
  nameWithType: EvolutionAlgorithmHostClockTime
- uid: EfficacySampler.EvolutionAlgorithmHostClockTime.#ctor(SharpNeat.Experiments.INeatExperiment{System.Double},System.Int32)
  name: EvolutionAlgorithmHostClockTime(INeatExperiment<double>, int)
  href: api/EfficacySampler.EvolutionAlgorithmHostClockTime.html#EfficacySampler_EvolutionAlgorithmHostClockTime__ctor_SharpNeat_Experiments_INeatExperiment_System_Double__System_Int32_
  commentId: M:EfficacySampler.EvolutionAlgorithmHostClockTime.#ctor(SharpNeat.Experiments.INeatExperiment{System.Double},System.Int32)
  name.vb: New(INeatExperiment(Of Double), Integer)
  fullName: EfficacySampler.EvolutionAlgorithmHostClockTime.EvolutionAlgorithmHostClockTime(SharpNeat.Experiments.INeatExperiment<double>, int)
  fullName.vb: EfficacySampler.EvolutionAlgorithmHostClockTime.New(SharpNeat.Experiments.INeatExperiment(Of Double), Integer)
  nameWithType: EvolutionAlgorithmHostClockTime.EvolutionAlgorithmHostClockTime(INeatExperiment<double>, int)
  nameWithType.vb: EvolutionAlgorithmHostClockTime.New(INeatExperiment(Of Double), Integer)
- uid: EfficacySampler.EvolutionAlgorithmHostClockTime.#ctor*
  name: EvolutionAlgorithmHostClockTime
  href: api/EfficacySampler.EvolutionAlgorithmHostClockTime.html#EfficacySampler_EvolutionAlgorithmHostClockTime__ctor_
  commentId: Overload:EfficacySampler.EvolutionAlgorithmHostClockTime.#ctor
  isSpec: "True"
  name.vb: New
  fullName: EfficacySampler.EvolutionAlgorithmHostClockTime.EvolutionAlgorithmHostClockTime
  fullName.vb: EfficacySampler.EvolutionAlgorithmHostClockTime.New
  nameWithType: EvolutionAlgorithmHostClockTime.EvolutionAlgorithmHostClockTime
  nameWithType.vb: EvolutionAlgorithmHostClockTime.New
- uid: EfficacySampler.EvolutionAlgorithmHostClockTime.Dispose
  name: Dispose()
  href: api/EfficacySampler.EvolutionAlgorithmHostClockTime.html#EfficacySampler_EvolutionAlgorithmHostClockTime_Dispose
  commentId: M:EfficacySampler.EvolutionAlgorithmHostClockTime.Dispose
  fullName: EfficacySampler.EvolutionAlgorithmHostClockTime.Dispose()
  nameWithType: EvolutionAlgorithmHostClockTime.Dispose()
- uid: EfficacySampler.EvolutionAlgorithmHostClockTime.Dispose*
  name: Dispose
  href: api/EfficacySampler.EvolutionAlgorithmHostClockTime.html#EfficacySampler_EvolutionAlgorithmHostClockTime_Dispose_
  commentId: Overload:EfficacySampler.EvolutionAlgorithmHostClockTime.Dispose
  isSpec: "True"
  fullName: EfficacySampler.EvolutionAlgorithmHostClockTime.Dispose
  nameWithType: EvolutionAlgorithmHostClockTime.Dispose
- uid: EfficacySampler.EvolutionAlgorithmHostClockTime.Sample
  name: Sample()
  href: api/EfficacySampler.EvolutionAlgorithmHostClockTime.html#EfficacySampler_EvolutionAlgorithmHostClockTime_Sample
  commentId: M:EfficacySampler.EvolutionAlgorithmHostClockTime.Sample
  fullName: EfficacySampler.EvolutionAlgorithmHostClockTime.Sample()
  nameWithType: EvolutionAlgorithmHostClockTime.Sample()
- uid: EfficacySampler.EvolutionAlgorithmHostClockTime.Sample*
  name: Sample
  href: api/EfficacySampler.EvolutionAlgorithmHostClockTime.html#EfficacySampler_EvolutionAlgorithmHostClockTime_Sample_
  commentId: Overload:EfficacySampler.EvolutionAlgorithmHostClockTime.Sample
  isSpec: "True"
  fullName: EfficacySampler.EvolutionAlgorithmHostClockTime.Sample
  nameWithType: EvolutionAlgorithmHostClockTime.Sample
- uid: EfficacySampler.EvolutionAlgorithmHostGenerational
  name: EvolutionAlgorithmHostGenerational
  href: api/EfficacySampler.EvolutionAlgorithmHostGenerational.html
  commentId: T:EfficacySampler.EvolutionAlgorithmHostGenerational
  fullName: EfficacySampler.EvolutionAlgorithmHostGenerational
  nameWithType: EvolutionAlgorithmHostGenerational
- uid: EfficacySampler.EvolutionAlgorithmHostGenerational.#ctor(SharpNeat.Experiments.INeatExperiment{System.Double},System.Int32)
  name: EvolutionAlgorithmHostGenerational(INeatExperiment<double>, int)
  href: api/EfficacySampler.EvolutionAlgorithmHostGenerational.html#EfficacySampler_EvolutionAlgorithmHostGenerational__ctor_SharpNeat_Experiments_INeatExperiment_System_Double__System_Int32_
  commentId: M:EfficacySampler.EvolutionAlgorithmHostGenerational.#ctor(SharpNeat.Experiments.INeatExperiment{System.Double},System.Int32)
  name.vb: New(INeatExperiment(Of Double), Integer)
  fullName: EfficacySampler.EvolutionAlgorithmHostGenerational.EvolutionAlgorithmHostGenerational(SharpNeat.Experiments.INeatExperiment<double>, int)
  fullName.vb: EfficacySampler.EvolutionAlgorithmHostGenerational.New(SharpNeat.Experiments.INeatExperiment(Of Double), Integer)
  nameWithType: EvolutionAlgorithmHostGenerational.EvolutionAlgorithmHostGenerational(INeatExperiment<double>, int)
  nameWithType.vb: EvolutionAlgorithmHostGenerational.New(INeatExperiment(Of Double), Integer)
- uid: EfficacySampler.EvolutionAlgorithmHostGenerational.#ctor*
  name: EvolutionAlgorithmHostGenerational
  href: api/EfficacySampler.EvolutionAlgorithmHostGenerational.html#EfficacySampler_EvolutionAlgorithmHostGenerational__ctor_
  commentId: Overload:EfficacySampler.EvolutionAlgorithmHostGenerational.#ctor
  isSpec: "True"
  name.vb: New
  fullName: EfficacySampler.EvolutionAlgorithmHostGenerational.EvolutionAlgorithmHostGenerational
  fullName.vb: EfficacySampler.EvolutionAlgorithmHostGenerational.New
  nameWithType: EvolutionAlgorithmHostGenerational.EvolutionAlgorithmHostGenerational
  nameWithType.vb: EvolutionAlgorithmHostGenerational.New
- uid: EfficacySampler.EvolutionAlgorithmHostGenerational.Dispose
  name: Dispose()
  href: api/EfficacySampler.EvolutionAlgorithmHostGenerational.html#EfficacySampler_EvolutionAlgorithmHostGenerational_Dispose
  commentId: M:EfficacySampler.EvolutionAlgorithmHostGenerational.Dispose
  fullName: EfficacySampler.EvolutionAlgorithmHostGenerational.Dispose()
  nameWithType: EvolutionAlgorithmHostGenerational.Dispose()
- uid: EfficacySampler.EvolutionAlgorithmHostGenerational.Dispose*
  name: Dispose
  href: api/EfficacySampler.EvolutionAlgorithmHostGenerational.html#EfficacySampler_EvolutionAlgorithmHostGenerational_Dispose_
  commentId: Overload:EfficacySampler.EvolutionAlgorithmHostGenerational.Dispose
  isSpec: "True"
  fullName: EfficacySampler.EvolutionAlgorithmHostGenerational.Dispose
  nameWithType: EvolutionAlgorithmHostGenerational.Dispose
- uid: EfficacySampler.EvolutionAlgorithmHostGenerational.Sample
  name: Sample()
  href: api/EfficacySampler.EvolutionAlgorithmHostGenerational.html#EfficacySampler_EvolutionAlgorithmHostGenerational_Sample
  commentId: M:EfficacySampler.EvolutionAlgorithmHostGenerational.Sample
  fullName: EfficacySampler.EvolutionAlgorithmHostGenerational.Sample()
  nameWithType: EvolutionAlgorithmHostGenerational.Sample()
- uid: EfficacySampler.EvolutionAlgorithmHostGenerational.Sample*
  name: Sample
  href: api/EfficacySampler.EvolutionAlgorithmHostGenerational.html#EfficacySampler_EvolutionAlgorithmHostGenerational_Sample_
  commentId: Overload:EfficacySampler.EvolutionAlgorithmHostGenerational.Sample
  isSpec: "True"
  fullName: EfficacySampler.EvolutionAlgorithmHostGenerational.Sample
  nameWithType: EvolutionAlgorithmHostGenerational.Sample
- uid: EfficacySampler.IEvolutionAlgorithmHost
  name: IEvolutionAlgorithmHost
  href: api/EfficacySampler.IEvolutionAlgorithmHost.html
  commentId: T:EfficacySampler.IEvolutionAlgorithmHost
  fullName: EfficacySampler.IEvolutionAlgorithmHost
  nameWithType: IEvolutionAlgorithmHost
- uid: EfficacySampler.IEvolutionAlgorithmHost.Sample
  name: Sample()
  href: api/EfficacySampler.IEvolutionAlgorithmHost.html#EfficacySampler_IEvolutionAlgorithmHost_Sample
  commentId: M:EfficacySampler.IEvolutionAlgorithmHost.Sample
  fullName: EfficacySampler.IEvolutionAlgorithmHost.Sample()
  nameWithType: IEvolutionAlgorithmHost.Sample()
- uid: EfficacySampler.IEvolutionAlgorithmHost.Sample*
  name: Sample
  href: api/EfficacySampler.IEvolutionAlgorithmHost.html#EfficacySampler_IEvolutionAlgorithmHost_Sample_
  commentId: Overload:EfficacySampler.IEvolutionAlgorithmHost.Sample
  isSpec: "True"
  fullName: EfficacySampler.IEvolutionAlgorithmHost.Sample
  nameWithType: IEvolutionAlgorithmHost.Sample
- uid: EfficacySampler.Sample
  name: Sample
  href: api/EfficacySampler.Sample.html
  commentId: T:EfficacySampler.Sample
  fullName: EfficacySampler.Sample
  nameWithType: Sample
- uid: EfficacySampler.Sample.BestFitness
  name: BestFitness
  href: api/EfficacySampler.Sample.html#EfficacySampler_Sample_BestFitness
  commentId: F:EfficacySampler.Sample.BestFitness
  fullName: EfficacySampler.Sample.BestFitness
  nameWithType: Sample.BestFitness
- uid: EfficacySampler.Sample.ElapsedTimeSecs
  name: ElapsedTimeSecs
  href: api/EfficacySampler.Sample.html#EfficacySampler_Sample_ElapsedTimeSecs
  commentId: F:EfficacySampler.Sample.ElapsedTimeSecs
  fullName: EfficacySampler.Sample.ElapsedTimeSecs
  nameWithType: Sample.ElapsedTimeSecs
- uid: EfficacySampler.Sample.EvaluationCount
  name: EvaluationCount
  href: api/EfficacySampler.Sample.html#EfficacySampler_Sample_EvaluationCount
  commentId: F:EfficacySampler.Sample.EvaluationCount
  fullName: EfficacySampler.Sample.EvaluationCount
  nameWithType: Sample.EvaluationCount
- uid: EfficacySampler.Sample.GenerationCount
  name: GenerationCount
  href: api/EfficacySampler.Sample.html#EfficacySampler_Sample_GenerationCount
  commentId: F:EfficacySampler.Sample.GenerationCount
  fullName: EfficacySampler.Sample.GenerationCount
  nameWithType: Sample.GenerationCount
- uid: EfficacySampler.Sample.MaxComplexity
  name: MaxComplexity
  href: api/EfficacySampler.Sample.html#EfficacySampler_Sample_MaxComplexity
  commentId: F:EfficacySampler.Sample.MaxComplexity
  fullName: EfficacySampler.Sample.MaxComplexity
  nameWithType: Sample.MaxComplexity
- uid: EfficacySampler.Sample.MeanComplexity
  name: MeanComplexity
  href: api/EfficacySampler.Sample.html#EfficacySampler_Sample_MeanComplexity
  commentId: F:EfficacySampler.Sample.MeanComplexity
  fullName: EfficacySampler.Sample.MeanComplexity
  nameWithType: Sample.MeanComplexity
- uid: EfficacySampler.Sample.MeanFitness
  name: MeanFitness
  href: api/EfficacySampler.Sample.html#EfficacySampler_Sample_MeanFitness
  commentId: F:EfficacySampler.Sample.MeanFitness
  fullName: EfficacySampler.Sample.MeanFitness
  nameWithType: Sample.MeanFitness
- uid: EfficacySampler.StopCondition
  name: StopCondition
  href: api/EfficacySampler.StopCondition.html
  commentId: T:EfficacySampler.StopCondition
  fullName: EfficacySampler.StopCondition
  nameWithType: StopCondition
- uid: EfficacySampler.StopCondition.StopConditionType
  name: StopConditionType
  href: api/EfficacySampler.StopCondition.html#EfficacySampler_StopCondition_StopConditionType
  commentId: F:EfficacySampler.StopCondition.StopConditionType
  fullName: EfficacySampler.StopCondition.StopConditionType
  nameWithType: StopCondition.StopConditionType
- uid: EfficacySampler.StopCondition.Value
  name: Value
  href: api/EfficacySampler.StopCondition.html#EfficacySampler_StopCondition_Value
  commentId: F:EfficacySampler.StopCondition.Value
  fullName: EfficacySampler.StopCondition.Value
  nameWithType: StopCondition.Value
- uid: EfficacySampler.StopConditionType
  name: StopConditionType
  href: api/EfficacySampler.StopConditionType.html
  commentId: T:EfficacySampler.StopConditionType
  fullName: EfficacySampler.StopConditionType
  nameWithType: StopConditionType
- uid: EfficacySampler.StopConditionType.ElapsedClockTime
  name: ElapsedClockTime
  href: api/EfficacySampler.StopConditionType.html#EfficacySampler_StopConditionType_ElapsedClockTime
  commentId: F:EfficacySampler.StopConditionType.ElapsedClockTime
  fullName: EfficacySampler.StopConditionType.ElapsedClockTime
  nameWithType: StopConditionType.ElapsedClockTime
- uid: EfficacySampler.StopConditionType.GenerationCount
  name: GenerationCount
  href: api/EfficacySampler.StopConditionType.html#EfficacySampler_StopConditionType_GenerationCount
  commentId: F:EfficacySampler.StopConditionType.GenerationCount
  fullName: EfficacySampler.StopConditionType.GenerationCount
  nameWithType: StopConditionType.GenerationCount
- uid: EfficacySampler.SysInfo
  name: SysInfo
  href: api/EfficacySampler.SysInfo.html
  commentId: T:EfficacySampler.SysInfo
  fullName: EfficacySampler.SysInfo
  nameWithType: SysInfo
- uid: EfficacySampler.SysInfo.DumpSystemInfo
  name: DumpSystemInfo()
  href: api/EfficacySampler.SysInfo.html#EfficacySampler_SysInfo_DumpSystemInfo
  commentId: M:EfficacySampler.SysInfo.DumpSystemInfo
  fullName: EfficacySampler.SysInfo.DumpSystemInfo()
  nameWithType: SysInfo.DumpSystemInfo()
- uid: EfficacySampler.SysInfo.DumpSystemInfo*
  name: DumpSystemInfo
  href: api/EfficacySampler.SysInfo.html#EfficacySampler_SysInfo_DumpSystemInfo_
  commentId: Overload:EfficacySampler.SysInfo.DumpSystemInfo
  isSpec: "True"
  fullName: EfficacySampler.SysInfo.DumpSystemInfo
  nameWithType: SysInfo.DumpSystemInfo
- uid: SharpNeat
  name: SharpNeat
  href: api/SharpNeat.html
  commentId: N:SharpNeat
  fullName: SharpNeat
  nameWithType: SharpNeat
- uid: SharpNeat.Benchmarks
  name: SharpNeat.Benchmarks
  href: api/SharpNeat.Benchmarks.html
  commentId: N:SharpNeat.Benchmarks
  fullName: SharpNeat.Benchmarks
  nameWithType: SharpNeat.Benchmarks
- uid: SharpNeat.Benchmarks.ConnectionSorterBenchmarks
  name: ConnectionSorterBenchmarks
  href: api/SharpNeat.Benchmarks.ConnectionSorterBenchmarks.html
  commentId: T:SharpNeat.Benchmarks.ConnectionSorterBenchmarks
  fullName: SharpNeat.Benchmarks.ConnectionSorterBenchmarks
  nameWithType: ConnectionSorterBenchmarks
- uid: SharpNeat.Benchmarks.ConnectionSorterBenchmarks.#ctor
  name: ConnectionSorterBenchmarks()
  href: api/SharpNeat.Benchmarks.ConnectionSorterBenchmarks.html#SharpNeat_Benchmarks_ConnectionSorterBenchmarks__ctor
  commentId: M:SharpNeat.Benchmarks.ConnectionSorterBenchmarks.#ctor
  name.vb: New()
  fullName: SharpNeat.Benchmarks.ConnectionSorterBenchmarks.ConnectionSorterBenchmarks()
  fullName.vb: SharpNeat.Benchmarks.ConnectionSorterBenchmarks.New()
  nameWithType: ConnectionSorterBenchmarks.ConnectionSorterBenchmarks()
  nameWithType.vb: ConnectionSorterBenchmarks.New()
- uid: SharpNeat.Benchmarks.ConnectionSorterBenchmarks.#ctor*
  name: ConnectionSorterBenchmarks
  href: api/SharpNeat.Benchmarks.ConnectionSorterBenchmarks.html#SharpNeat_Benchmarks_ConnectionSorterBenchmarks__ctor_
  commentId: Overload:SharpNeat.Benchmarks.ConnectionSorterBenchmarks.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Benchmarks.ConnectionSorterBenchmarks.ConnectionSorterBenchmarks
  fullName.vb: SharpNeat.Benchmarks.ConnectionSorterBenchmarks.New
  nameWithType: ConnectionSorterBenchmarks.ConnectionSorterBenchmarks
  nameWithType.vb: ConnectionSorterBenchmarks.New
- uid: SharpNeat.Benchmarks.ConnectionSorterBenchmarks.ConnectionSorter_Init
  name: ConnectionSorter_Init()
  href: api/SharpNeat.Benchmarks.ConnectionSorterBenchmarks.html#SharpNeat_Benchmarks_ConnectionSorterBenchmarks_ConnectionSorter_Init
  commentId: M:SharpNeat.Benchmarks.ConnectionSorterBenchmarks.ConnectionSorter_Init
  fullName: SharpNeat.Benchmarks.ConnectionSorterBenchmarks.ConnectionSorter_Init()
  nameWithType: ConnectionSorterBenchmarks.ConnectionSorter_Init()
- uid: SharpNeat.Benchmarks.ConnectionSorterBenchmarks.ConnectionSorter_Init*
  name: ConnectionSorter_Init
  href: api/SharpNeat.Benchmarks.ConnectionSorterBenchmarks.html#SharpNeat_Benchmarks_ConnectionSorterBenchmarks_ConnectionSorter_Init_
  commentId: Overload:SharpNeat.Benchmarks.ConnectionSorterBenchmarks.ConnectionSorter_Init
  isSpec: "True"
  fullName: SharpNeat.Benchmarks.ConnectionSorterBenchmarks.ConnectionSorter_Init
  nameWithType: ConnectionSorterBenchmarks.ConnectionSorter_Init
- uid: SharpNeat.Benchmarks.ConnectionSorterBenchmarks.ConnectionSorterBenchmark
  name: ConnectionSorterBenchmark()
  href: api/SharpNeat.Benchmarks.ConnectionSorterBenchmarks.html#SharpNeat_Benchmarks_ConnectionSorterBenchmarks_ConnectionSorterBenchmark
  commentId: M:SharpNeat.Benchmarks.ConnectionSorterBenchmarks.ConnectionSorterBenchmark
  fullName: SharpNeat.Benchmarks.ConnectionSorterBenchmarks.ConnectionSorterBenchmark()
  nameWithType: ConnectionSorterBenchmarks.ConnectionSorterBenchmark()
- uid: SharpNeat.Benchmarks.ConnectionSorterBenchmarks.ConnectionSorterBenchmark*
  name: ConnectionSorterBenchmark
  href: api/SharpNeat.Benchmarks.ConnectionSorterBenchmarks.html#SharpNeat_Benchmarks_ConnectionSorterBenchmarks_ConnectionSorterBenchmark_
  commentId: Overload:SharpNeat.Benchmarks.ConnectionSorterBenchmarks.ConnectionSorterBenchmark
  isSpec: "True"
  fullName: SharpNeat.Benchmarks.ConnectionSorterBenchmarks.ConnectionSorterBenchmark
  nameWithType: ConnectionSorterBenchmarks.ConnectionSorterBenchmark
- uid: SharpNeat.Benchmarks.ConnectionSorterBenchmarks.ConnectionSorterV1_Init
  name: ConnectionSorterV1_Init()
  href: api/SharpNeat.Benchmarks.ConnectionSorterBenchmarks.html#SharpNeat_Benchmarks_ConnectionSorterBenchmarks_ConnectionSorterV1_Init
  commentId: M:SharpNeat.Benchmarks.ConnectionSorterBenchmarks.ConnectionSorterV1_Init
  fullName: SharpNeat.Benchmarks.ConnectionSorterBenchmarks.ConnectionSorterV1_Init()
  nameWithType: ConnectionSorterBenchmarks.ConnectionSorterV1_Init()
- uid: SharpNeat.Benchmarks.ConnectionSorterBenchmarks.ConnectionSorterV1_Init*
  name: ConnectionSorterV1_Init
  href: api/SharpNeat.Benchmarks.ConnectionSorterBenchmarks.html#SharpNeat_Benchmarks_ConnectionSorterBenchmarks_ConnectionSorterV1_Init_
  commentId: Overload:SharpNeat.Benchmarks.ConnectionSorterBenchmarks.ConnectionSorterV1_Init
  isSpec: "True"
  fullName: SharpNeat.Benchmarks.ConnectionSorterBenchmarks.ConnectionSorterV1_Init
  nameWithType: ConnectionSorterBenchmarks.ConnectionSorterV1_Init
- uid: SharpNeat.Benchmarks.ConnectionSorterBenchmarks.ConnectionSorterV1Benchmark
  name: ConnectionSorterV1Benchmark()
  href: api/SharpNeat.Benchmarks.ConnectionSorterBenchmarks.html#SharpNeat_Benchmarks_ConnectionSorterBenchmarks_ConnectionSorterV1Benchmark
  commentId: M:SharpNeat.Benchmarks.ConnectionSorterBenchmarks.ConnectionSorterV1Benchmark
  fullName: SharpNeat.Benchmarks.ConnectionSorterBenchmarks.ConnectionSorterV1Benchmark()
  nameWithType: ConnectionSorterBenchmarks.ConnectionSorterV1Benchmark()
- uid: SharpNeat.Benchmarks.ConnectionSorterBenchmarks.ConnectionSorterV1Benchmark*
  name: ConnectionSorterV1Benchmark
  href: api/SharpNeat.Benchmarks.ConnectionSorterBenchmarks.html#SharpNeat_Benchmarks_ConnectionSorterBenchmarks_ConnectionSorterV1Benchmark_
  commentId: Overload:SharpNeat.Benchmarks.ConnectionSorterBenchmarks.ConnectionSorterV1Benchmark
  isSpec: "True"
  fullName: SharpNeat.Benchmarks.ConnectionSorterBenchmarks.ConnectionSorterV1Benchmark
  nameWithType: ConnectionSorterBenchmarks.ConnectionSorterV1Benchmark
- uid: SharpNeat.Benchmarks.ConnectionSorterV1
  name: ConnectionSorterV1
  href: api/SharpNeat.Benchmarks.ConnectionSorterV1.html
  commentId: T:SharpNeat.Benchmarks.ConnectionSorterV1
  fullName: SharpNeat.Benchmarks.ConnectionSorterV1
  nameWithType: ConnectionSorterV1
- uid: SharpNeat.Benchmarks.ConnectionSorterV1.Sort*
  name: Sort
  href: api/SharpNeat.Benchmarks.ConnectionSorterV1.html#SharpNeat_Benchmarks_ConnectionSorterV1_Sort_
  commentId: Overload:SharpNeat.Benchmarks.ConnectionSorterV1.Sort
  isSpec: "True"
  fullName: SharpNeat.Benchmarks.ConnectionSorterV1.Sort
  nameWithType: ConnectionSorterV1.Sort
- uid: SharpNeat.Benchmarks.ConnectionSorterV1.Sort``1(SharpNeat.Graphs.ConnectionIds@,``0[])
  name: Sort<T>(in ConnectionIds, T[])
  href: api/SharpNeat.Benchmarks.ConnectionSorterV1.html#SharpNeat_Benchmarks_ConnectionSorterV1_Sort__1_SharpNeat_Graphs_ConnectionIds____0___
  commentId: M:SharpNeat.Benchmarks.ConnectionSorterV1.Sort``1(SharpNeat.Graphs.ConnectionIds@,``0[])
  name.vb: Sort(Of T)(ConnectionIds, T())
  fullName: SharpNeat.Benchmarks.ConnectionSorterV1.Sort<T>(in SharpNeat.Graphs.ConnectionIds, T[])
  fullName.vb: SharpNeat.Benchmarks.ConnectionSorterV1.Sort(Of T)(SharpNeat.Graphs.ConnectionIds, T())
  nameWithType: ConnectionSorterV1.Sort<T>(in ConnectionIds, T[])
  nameWithType.vb: ConnectionSorterV1.Sort(Of T)(ConnectionIds, T())
- uid: SharpNeat.ConfigurationException
  name: ConfigurationException
  href: api/SharpNeat.ConfigurationException.html
  commentId: T:SharpNeat.ConfigurationException
  fullName: SharpNeat.ConfigurationException
  nameWithType: ConfigurationException
- uid: SharpNeat.ConfigurationException.#ctor(System.String,System.Exception)
  name: ConfigurationException(string?, Exception?)
  href: api/SharpNeat.ConfigurationException.html#SharpNeat_ConfigurationException__ctor_System_String_System_Exception_
  commentId: M:SharpNeat.ConfigurationException.#ctor(System.String,System.Exception)
  name.vb: New(String, Exception)
  fullName: SharpNeat.ConfigurationException.ConfigurationException(string?, System.Exception?)
  fullName.vb: SharpNeat.ConfigurationException.New(String, System.Exception)
  nameWithType: ConfigurationException.ConfigurationException(string?, Exception?)
  nameWithType.vb: ConfigurationException.New(String, Exception)
- uid: SharpNeat.ConfigurationException.#ctor(System.String)
  name: ConfigurationException(string?)
  href: api/SharpNeat.ConfigurationException.html#SharpNeat_ConfigurationException__ctor_System_String_
  commentId: M:SharpNeat.ConfigurationException.#ctor(System.String)
  name.vb: New(String)
  fullName: SharpNeat.ConfigurationException.ConfigurationException(string?)
  fullName.vb: SharpNeat.ConfigurationException.New(String)
  nameWithType: ConfigurationException.ConfigurationException(string?)
  nameWithType.vb: ConfigurationException.New(String)
- uid: SharpNeat.ConfigurationException.#ctor*
  name: ConfigurationException
  href: api/SharpNeat.ConfigurationException.html#SharpNeat_ConfigurationException__ctor_
  commentId: Overload:SharpNeat.ConfigurationException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.ConfigurationException.ConfigurationException
  fullName.vb: SharpNeat.ConfigurationException.New
  nameWithType: ConfigurationException.ConfigurationException
  nameWithType.vb: ConfigurationException.New
- uid: SharpNeat.Domains.FunctionRegression
  name: SharpNeat.Domains.FunctionRegression
  href: api/SharpNeat.Domains.FunctionRegression.html
  commentId: N:SharpNeat.Domains.FunctionRegression
  fullName: SharpNeat.Domains.FunctionRegression
  nameWithType: SharpNeat.Domains.FunctionRegression
- uid: SharpNeat.Domains.FunctionRegression.FnRegressionControl
  name: FnRegressionControl
  href: api/SharpNeat.Domains.FunctionRegression.FnRegressionControl.html
  commentId: T:SharpNeat.Domains.FunctionRegression.FnRegressionControl
  fullName: SharpNeat.Domains.FunctionRegression.FnRegressionControl
  nameWithType: FnRegressionControl
- uid: SharpNeat.Domains.FunctionRegression.FnRegressionControl.#ctor(System.Func{System.Double,System.Double},SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo,System.Boolean,SharpNeat.Evaluation.IGenomeDecoder{SharpNeat.Neat.Genome.NeatGenome{System.Double},SharpNeat.IBlackBox{System.Double}})
  name: FnRegressionControl(Func<double, double>, ParamSamplingInfo, bool, IGenomeDecoder<NeatGenome<double>, IBlackBox<double>>)
  href: api/SharpNeat.Domains.FunctionRegression.FnRegressionControl.html#SharpNeat_Domains_FunctionRegression_FnRegressionControl__ctor_System_Func_System_Double_System_Double__SharpNeat_Tasks_FunctionRegression_ParamSamplingInfo_System_Boolean_SharpNeat_Evaluation_IGenomeDecoder_SharpNeat_Neat_Genome_NeatGenome_System_Double__SharpNeat_IBlackBox_System_Double___
  commentId: M:SharpNeat.Domains.FunctionRegression.FnRegressionControl.#ctor(System.Func{System.Double,System.Double},SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo,System.Boolean,SharpNeat.Evaluation.IGenomeDecoder{SharpNeat.Neat.Genome.NeatGenome{System.Double},SharpNeat.IBlackBox{System.Double}})
  name.vb: New(Func(Of Double, Double), ParamSamplingInfo, Boolean, IGenomeDecoder(Of NeatGenome(Of Double), IBlackBox(Of Double)))
  fullName: SharpNeat.Domains.FunctionRegression.FnRegressionControl.FnRegressionControl(System.Func<double, double>, SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo, bool, SharpNeat.Evaluation.IGenomeDecoder<SharpNeat.Neat.Genome.NeatGenome<double>, SharpNeat.IBlackBox<double>>)
  fullName.vb: SharpNeat.Domains.FunctionRegression.FnRegressionControl.New(System.Func(Of Double, Double), SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo, Boolean, SharpNeat.Evaluation.IGenomeDecoder(Of SharpNeat.Neat.Genome.NeatGenome(Of Double), SharpNeat.IBlackBox(Of Double)))
  nameWithType: FnRegressionControl.FnRegressionControl(Func<double, double>, ParamSamplingInfo, bool, IGenomeDecoder<NeatGenome<double>, IBlackBox<double>>)
  nameWithType.vb: FnRegressionControl.New(Func(Of Double, Double), ParamSamplingInfo, Boolean, IGenomeDecoder(Of NeatGenome(Of Double), IBlackBox(Of Double)))
- uid: SharpNeat.Domains.FunctionRegression.FnRegressionControl.#ctor*
  name: FnRegressionControl
  href: api/SharpNeat.Domains.FunctionRegression.FnRegressionControl.html#SharpNeat_Domains_FunctionRegression_FnRegressionControl__ctor_
  commentId: Overload:SharpNeat.Domains.FunctionRegression.FnRegressionControl.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Domains.FunctionRegression.FnRegressionControl.FnRegressionControl
  fullName.vb: SharpNeat.Domains.FunctionRegression.FnRegressionControl.New
  nameWithType: FnRegressionControl.FnRegressionControl
  nameWithType.vb: FnRegressionControl.New
- uid: SharpNeat.Domains.FunctionRegression.FnRegressionControl.Dispose(System.Boolean)
  name: Dispose(bool)
  href: api/SharpNeat.Domains.FunctionRegression.FnRegressionControl.html#SharpNeat_Domains_FunctionRegression_FnRegressionControl_Dispose_System_Boolean_
  commentId: M:SharpNeat.Domains.FunctionRegression.FnRegressionControl.Dispose(System.Boolean)
  name.vb: Dispose(Boolean)
  fullName: SharpNeat.Domains.FunctionRegression.FnRegressionControl.Dispose(bool)
  fullName.vb: SharpNeat.Domains.FunctionRegression.FnRegressionControl.Dispose(Boolean)
  nameWithType: FnRegressionControl.Dispose(bool)
  nameWithType.vb: FnRegressionControl.Dispose(Boolean)
- uid: SharpNeat.Domains.FunctionRegression.FnRegressionControl.Dispose*
  name: Dispose
  href: api/SharpNeat.Domains.FunctionRegression.FnRegressionControl.html#SharpNeat_Domains_FunctionRegression_FnRegressionControl_Dispose_
  commentId: Overload:SharpNeat.Domains.FunctionRegression.FnRegressionControl.Dispose
  isSpec: "True"
  fullName: SharpNeat.Domains.FunctionRegression.FnRegressionControl.Dispose
  nameWithType: FnRegressionControl.Dispose
- uid: SharpNeat.Domains.FunctionRegression.FnRegressionControl.OnGenomeUpdated
  name: OnGenomeUpdated()
  href: api/SharpNeat.Domains.FunctionRegression.FnRegressionControl.html#SharpNeat_Domains_FunctionRegression_FnRegressionControl_OnGenomeUpdated
  commentId: M:SharpNeat.Domains.FunctionRegression.FnRegressionControl.OnGenomeUpdated
  fullName: SharpNeat.Domains.FunctionRegression.FnRegressionControl.OnGenomeUpdated()
  nameWithType: FnRegressionControl.OnGenomeUpdated()
- uid: SharpNeat.Domains.FunctionRegression.FnRegressionControl.OnGenomeUpdated*
  name: OnGenomeUpdated
  href: api/SharpNeat.Domains.FunctionRegression.FnRegressionControl.html#SharpNeat_Domains_FunctionRegression_FnRegressionControl_OnGenomeUpdated_
  commentId: Overload:SharpNeat.Domains.FunctionRegression.FnRegressionControl.OnGenomeUpdated
  isSpec: "True"
  fullName: SharpNeat.Domains.FunctionRegression.FnRegressionControl.OnGenomeUpdated
  nameWithType: FnRegressionControl.OnGenomeUpdated
- uid: SharpNeat.Drawing
  name: SharpNeat.Drawing
  href: api/SharpNeat.Drawing.html
  commentId: N:SharpNeat.Drawing
  fullName: SharpNeat.Drawing
  nameWithType: SharpNeat.Drawing
- uid: SharpNeat.Drawing.DirectedGraphViewModel
  name: DirectedGraphViewModel
  href: api/SharpNeat.Drawing.DirectedGraphViewModel.html
  commentId: T:SharpNeat.Drawing.DirectedGraphViewModel
  fullName: SharpNeat.Drawing.DirectedGraphViewModel
  nameWithType: DirectedGraphViewModel
- uid: SharpNeat.Drawing.DirectedGraphViewModel.#ctor(SharpNeat.Graphs.DirectedGraph,System.Single[],SharpNeat.Graphs.INodeIdMap,System.Drawing.Point[])
  name: DirectedGraphViewModel(DirectedGraph, float[], INodeIdMap, Point[])
  href: api/SharpNeat.Drawing.DirectedGraphViewModel.html#SharpNeat_Drawing_DirectedGraphViewModel__ctor_SharpNeat_Graphs_DirectedGraph_System_Single___SharpNeat_Graphs_INodeIdMap_System_Drawing_Point___
  commentId: M:SharpNeat.Drawing.DirectedGraphViewModel.#ctor(SharpNeat.Graphs.DirectedGraph,System.Single[],SharpNeat.Graphs.INodeIdMap,System.Drawing.Point[])
  name.vb: New(DirectedGraph, Single(), INodeIdMap, Point())
  fullName: SharpNeat.Drawing.DirectedGraphViewModel.DirectedGraphViewModel(SharpNeat.Graphs.DirectedGraph, float[], SharpNeat.Graphs.INodeIdMap, System.Drawing.Point[])
  fullName.vb: SharpNeat.Drawing.DirectedGraphViewModel.New(SharpNeat.Graphs.DirectedGraph, Single(), SharpNeat.Graphs.INodeIdMap, System.Drawing.Point())
  nameWithType: DirectedGraphViewModel.DirectedGraphViewModel(DirectedGraph, float[], INodeIdMap, Point[])
  nameWithType.vb: DirectedGraphViewModel.New(DirectedGraph, Single(), INodeIdMap, Point())
- uid: SharpNeat.Drawing.DirectedGraphViewModel.#ctor(SharpNeat.Graphs.DirectedGraph,System.Single[],SharpNeat.Graphs.INodeIdMap)
  name: DirectedGraphViewModel(DirectedGraph, float[], INodeIdMap)
  href: api/SharpNeat.Drawing.DirectedGraphViewModel.html#SharpNeat_Drawing_DirectedGraphViewModel__ctor_SharpNeat_Graphs_DirectedGraph_System_Single___SharpNeat_Graphs_INodeIdMap_
  commentId: M:SharpNeat.Drawing.DirectedGraphViewModel.#ctor(SharpNeat.Graphs.DirectedGraph,System.Single[],SharpNeat.Graphs.INodeIdMap)
  name.vb: New(DirectedGraph, Single(), INodeIdMap)
  fullName: SharpNeat.Drawing.DirectedGraphViewModel.DirectedGraphViewModel(SharpNeat.Graphs.DirectedGraph, float[], SharpNeat.Graphs.INodeIdMap)
  fullName.vb: SharpNeat.Drawing.DirectedGraphViewModel.New(SharpNeat.Graphs.DirectedGraph, Single(), SharpNeat.Graphs.INodeIdMap)
  nameWithType: DirectedGraphViewModel.DirectedGraphViewModel(DirectedGraph, float[], INodeIdMap)
  nameWithType.vb: DirectedGraphViewModel.New(DirectedGraph, Single(), INodeIdMap)
- uid: SharpNeat.Drawing.DirectedGraphViewModel.#ctor*
  name: DirectedGraphViewModel
  href: api/SharpNeat.Drawing.DirectedGraphViewModel.html#SharpNeat_Drawing_DirectedGraphViewModel__ctor_
  commentId: Overload:SharpNeat.Drawing.DirectedGraphViewModel.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Drawing.DirectedGraphViewModel.DirectedGraphViewModel
  fullName.vb: SharpNeat.Drawing.DirectedGraphViewModel.New
  nameWithType: DirectedGraphViewModel.DirectedGraphViewModel
  nameWithType.vb: DirectedGraphViewModel.New
- uid: SharpNeat.Drawing.DirectedGraphViewModel.DirectedGraph
  name: DirectedGraph
  href: api/SharpNeat.Drawing.DirectedGraphViewModel.html#SharpNeat_Drawing_DirectedGraphViewModel_DirectedGraph
  commentId: P:SharpNeat.Drawing.DirectedGraphViewModel.DirectedGraph
  fullName: SharpNeat.Drawing.DirectedGraphViewModel.DirectedGraph
  nameWithType: DirectedGraphViewModel.DirectedGraph
- uid: SharpNeat.Drawing.DirectedGraphViewModel.DirectedGraph*
  name: DirectedGraph
  href: api/SharpNeat.Drawing.DirectedGraphViewModel.html#SharpNeat_Drawing_DirectedGraphViewModel_DirectedGraph_
  commentId: Overload:SharpNeat.Drawing.DirectedGraphViewModel.DirectedGraph
  isSpec: "True"
  fullName: SharpNeat.Drawing.DirectedGraphViewModel.DirectedGraph
  nameWithType: DirectedGraphViewModel.DirectedGraph
- uid: SharpNeat.Drawing.DirectedGraphViewModel.NodeIdByIdx
  name: NodeIdByIdx
  href: api/SharpNeat.Drawing.DirectedGraphViewModel.html#SharpNeat_Drawing_DirectedGraphViewModel_NodeIdByIdx
  commentId: P:SharpNeat.Drawing.DirectedGraphViewModel.NodeIdByIdx
  fullName: SharpNeat.Drawing.DirectedGraphViewModel.NodeIdByIdx
  nameWithType: DirectedGraphViewModel.NodeIdByIdx
- uid: SharpNeat.Drawing.DirectedGraphViewModel.NodeIdByIdx*
  name: NodeIdByIdx
  href: api/SharpNeat.Drawing.DirectedGraphViewModel.html#SharpNeat_Drawing_DirectedGraphViewModel_NodeIdByIdx_
  commentId: Overload:SharpNeat.Drawing.DirectedGraphViewModel.NodeIdByIdx
  isSpec: "True"
  fullName: SharpNeat.Drawing.DirectedGraphViewModel.NodeIdByIdx
  nameWithType: DirectedGraphViewModel.NodeIdByIdx
- uid: SharpNeat.Drawing.DirectedGraphViewModel.NodePosByIdx
  name: NodePosByIdx
  href: api/SharpNeat.Drawing.DirectedGraphViewModel.html#SharpNeat_Drawing_DirectedGraphViewModel_NodePosByIdx
  commentId: P:SharpNeat.Drawing.DirectedGraphViewModel.NodePosByIdx
  fullName: SharpNeat.Drawing.DirectedGraphViewModel.NodePosByIdx
  nameWithType: DirectedGraphViewModel.NodePosByIdx
- uid: SharpNeat.Drawing.DirectedGraphViewModel.NodePosByIdx*
  name: NodePosByIdx
  href: api/SharpNeat.Drawing.DirectedGraphViewModel.html#SharpNeat_Drawing_DirectedGraphViewModel_NodePosByIdx_
  commentId: Overload:SharpNeat.Drawing.DirectedGraphViewModel.NodePosByIdx
  isSpec: "True"
  fullName: SharpNeat.Drawing.DirectedGraphViewModel.NodePosByIdx
  nameWithType: DirectedGraphViewModel.NodePosByIdx
- uid: SharpNeat.Drawing.DirectedGraphViewModel.WeightArr
  name: WeightArr
  href: api/SharpNeat.Drawing.DirectedGraphViewModel.html#SharpNeat_Drawing_DirectedGraphViewModel_WeightArr
  commentId: P:SharpNeat.Drawing.DirectedGraphViewModel.WeightArr
  fullName: SharpNeat.Drawing.DirectedGraphViewModel.WeightArr
  nameWithType: DirectedGraphViewModel.WeightArr
- uid: SharpNeat.Drawing.DirectedGraphViewModel.WeightArr*
  name: WeightArr
  href: api/SharpNeat.Drawing.DirectedGraphViewModel.html#SharpNeat_Drawing_DirectedGraphViewModel_WeightArr_
  commentId: Overload:SharpNeat.Drawing.DirectedGraphViewModel.WeightArr
  isSpec: "True"
  fullName: SharpNeat.Drawing.DirectedGraphViewModel.WeightArr
  nameWithType: DirectedGraphViewModel.WeightArr
- uid: SharpNeat.Drawing.Graph
  name: SharpNeat.Drawing.Graph
  href: api/SharpNeat.Drawing.Graph.html
  commentId: N:SharpNeat.Drawing.Graph
  fullName: SharpNeat.Drawing.Graph
  nameWithType: SharpNeat.Drawing.Graph
- uid: SharpNeat.Drawing.Graph.DepthLayoutScheme
  name: DepthLayoutScheme
  href: api/SharpNeat.Drawing.Graph.DepthLayoutScheme.html
  commentId: T:SharpNeat.Drawing.Graph.DepthLayoutScheme
  fullName: SharpNeat.Drawing.Graph.DepthLayoutScheme
  nameWithType: DepthLayoutScheme
- uid: SharpNeat.Drawing.Graph.DepthLayoutScheme.Layout(SharpNeat.Graphs.DirectedGraph,System.Drawing.Size,System.Span{System.Drawing.Point},System.Object@)
  name: Layout(DirectedGraph, Size, Span<Point>, ref object?)
  href: api/SharpNeat.Drawing.Graph.DepthLayoutScheme.html#SharpNeat_Drawing_Graph_DepthLayoutScheme_Layout_SharpNeat_Graphs_DirectedGraph_System_Drawing_Size_System_Span_System_Drawing_Point__System_Object__
  commentId: M:SharpNeat.Drawing.Graph.DepthLayoutScheme.Layout(SharpNeat.Graphs.DirectedGraph,System.Drawing.Size,System.Span{System.Drawing.Point},System.Object@)
  name.vb: Layout(DirectedGraph, Size, Span(Of Point), Object)
  fullName: SharpNeat.Drawing.Graph.DepthLayoutScheme.Layout(SharpNeat.Graphs.DirectedGraph, System.Drawing.Size, System.Span<System.Drawing.Point>, ref object?)
  fullName.vb: SharpNeat.Drawing.Graph.DepthLayoutScheme.Layout(SharpNeat.Graphs.DirectedGraph, System.Drawing.Size, System.Span(Of System.Drawing.Point), Object)
  nameWithType: DepthLayoutScheme.Layout(DirectedGraph, Size, Span<Point>, ref object?)
  nameWithType.vb: DepthLayoutScheme.Layout(DirectedGraph, Size, Span(Of Point), Object)
- uid: SharpNeat.Drawing.Graph.DepthLayoutScheme.Layout(SharpNeat.Graphs.DirectedGraph,System.Drawing.Size,System.Span{System.Drawing.Point})
  name: Layout(DirectedGraph, Size, Span<Point>)
  href: api/SharpNeat.Drawing.Graph.DepthLayoutScheme.html#SharpNeat_Drawing_Graph_DepthLayoutScheme_Layout_SharpNeat_Graphs_DirectedGraph_System_Drawing_Size_System_Span_System_Drawing_Point__
  commentId: M:SharpNeat.Drawing.Graph.DepthLayoutScheme.Layout(SharpNeat.Graphs.DirectedGraph,System.Drawing.Size,System.Span{System.Drawing.Point})
  name.vb: Layout(DirectedGraph, Size, Span(Of Point))
  fullName: SharpNeat.Drawing.Graph.DepthLayoutScheme.Layout(SharpNeat.Graphs.DirectedGraph, System.Drawing.Size, System.Span<System.Drawing.Point>)
  fullName.vb: SharpNeat.Drawing.Graph.DepthLayoutScheme.Layout(SharpNeat.Graphs.DirectedGraph, System.Drawing.Size, System.Span(Of System.Drawing.Point))
  nameWithType: DepthLayoutScheme.Layout(DirectedGraph, Size, Span<Point>)
  nameWithType.vb: DepthLayoutScheme.Layout(DirectedGraph, Size, Span(Of Point))
- uid: SharpNeat.Drawing.Graph.DepthLayoutScheme.Layout*
  name: Layout
  href: api/SharpNeat.Drawing.Graph.DepthLayoutScheme.html#SharpNeat_Drawing_Graph_DepthLayoutScheme_Layout_
  commentId: Overload:SharpNeat.Drawing.Graph.DepthLayoutScheme.Layout
  isSpec: "True"
  fullName: SharpNeat.Drawing.Graph.DepthLayoutScheme.Layout
  nameWithType: DepthLayoutScheme.Layout
- uid: SharpNeat.Drawing.Graph.GraphViewportPainter
  name: GraphViewportPainter
  href: api/SharpNeat.Drawing.Graph.GraphViewportPainter.html
  commentId: T:SharpNeat.Drawing.Graph.GraphViewportPainter
  fullName: SharpNeat.Drawing.Graph.GraphViewportPainter
  nameWithType: GraphViewportPainter
- uid: SharpNeat.Drawing.Graph.GraphViewportPainter.#ctor
  name: GraphViewportPainter()
  href: api/SharpNeat.Drawing.Graph.GraphViewportPainter.html#SharpNeat_Drawing_Graph_GraphViewportPainter__ctor
  commentId: M:SharpNeat.Drawing.Graph.GraphViewportPainter.#ctor
  name.vb: New()
  fullName: SharpNeat.Drawing.Graph.GraphViewportPainter.GraphViewportPainter()
  fullName.vb: SharpNeat.Drawing.Graph.GraphViewportPainter.New()
  nameWithType: GraphViewportPainter.GraphViewportPainter()
  nameWithType.vb: GraphViewportPainter.New()
- uid: SharpNeat.Drawing.Graph.GraphViewportPainter.#ctor(SharpNeat.Drawing.Graph.IGraphLayoutScheme,SharpNeat.Drawing.Graph.Painting.GraphPainter)
  name: GraphViewportPainter(IGraphLayoutScheme, GraphPainter)
  href: api/SharpNeat.Drawing.Graph.GraphViewportPainter.html#SharpNeat_Drawing_Graph_GraphViewportPainter__ctor_SharpNeat_Drawing_Graph_IGraphLayoutScheme_SharpNeat_Drawing_Graph_Painting_GraphPainter_
  commentId: M:SharpNeat.Drawing.Graph.GraphViewportPainter.#ctor(SharpNeat.Drawing.Graph.IGraphLayoutScheme,SharpNeat.Drawing.Graph.Painting.GraphPainter)
  name.vb: New(IGraphLayoutScheme, GraphPainter)
  fullName: SharpNeat.Drawing.Graph.GraphViewportPainter.GraphViewportPainter(SharpNeat.Drawing.Graph.IGraphLayoutScheme, SharpNeat.Drawing.Graph.Painting.GraphPainter)
  fullName.vb: SharpNeat.Drawing.Graph.GraphViewportPainter.New(SharpNeat.Drawing.Graph.IGraphLayoutScheme, SharpNeat.Drawing.Graph.Painting.GraphPainter)
  nameWithType: GraphViewportPainter.GraphViewportPainter(IGraphLayoutScheme, GraphPainter)
  nameWithType.vb: GraphViewportPainter.New(IGraphLayoutScheme, GraphPainter)
- uid: SharpNeat.Drawing.Graph.GraphViewportPainter.#ctor*
  name: GraphViewportPainter
  href: api/SharpNeat.Drawing.Graph.GraphViewportPainter.html#SharpNeat_Drawing_Graph_GraphViewportPainter__ctor_
  commentId: Overload:SharpNeat.Drawing.Graph.GraphViewportPainter.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Drawing.Graph.GraphViewportPainter.GraphViewportPainter
  fullName.vb: SharpNeat.Drawing.Graph.GraphViewportPainter.New
  nameWithType: GraphViewportPainter.GraphViewportPainter
  nameWithType.vb: GraphViewportPainter.New
- uid: SharpNeat.Drawing.Graph.GraphViewportPainter.Dispose
  name: Dispose()
  href: api/SharpNeat.Drawing.Graph.GraphViewportPainter.html#SharpNeat_Drawing_Graph_GraphViewportPainter_Dispose
  commentId: M:SharpNeat.Drawing.Graph.GraphViewportPainter.Dispose
  fullName: SharpNeat.Drawing.Graph.GraphViewportPainter.Dispose()
  nameWithType: GraphViewportPainter.Dispose()
- uid: SharpNeat.Drawing.Graph.GraphViewportPainter.Dispose*
  name: Dispose
  href: api/SharpNeat.Drawing.Graph.GraphViewportPainter.html#SharpNeat_Drawing_Graph_GraphViewportPainter_Dispose_
  commentId: Overload:SharpNeat.Drawing.Graph.GraphViewportPainter.Dispose
  isSpec: "True"
  fullName: SharpNeat.Drawing.Graph.GraphViewportPainter.Dispose
  nameWithType: GraphViewportPainter.Dispose
- uid: SharpNeat.Drawing.Graph.GraphViewportPainter.GraphViewModel
  name: GraphViewModel
  href: api/SharpNeat.Drawing.Graph.GraphViewportPainter.html#SharpNeat_Drawing_Graph_GraphViewportPainter_GraphViewModel
  commentId: P:SharpNeat.Drawing.Graph.GraphViewportPainter.GraphViewModel
  fullName: SharpNeat.Drawing.Graph.GraphViewportPainter.GraphViewModel
  nameWithType: GraphViewportPainter.GraphViewModel
- uid: SharpNeat.Drawing.Graph.GraphViewportPainter.GraphViewModel*
  name: GraphViewModel
  href: api/SharpNeat.Drawing.Graph.GraphViewportPainter.html#SharpNeat_Drawing_Graph_GraphViewportPainter_GraphViewModel_
  commentId: Overload:SharpNeat.Drawing.Graph.GraphViewportPainter.GraphViewModel
  isSpec: "True"
  fullName: SharpNeat.Drawing.Graph.GraphViewportPainter.GraphViewModel
  nameWithType: GraphViewportPainter.GraphViewModel
- uid: SharpNeat.Drawing.Graph.GraphViewportPainter.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Single)
  name: Paint(Graphics, Rectangle, float)
  href: api/SharpNeat.Drawing.Graph.GraphViewportPainter.html#SharpNeat_Drawing_Graph_GraphViewportPainter_Paint_System_Drawing_Graphics_System_Drawing_Rectangle_System_Single_
  commentId: M:SharpNeat.Drawing.Graph.GraphViewportPainter.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Single)
  name.vb: Paint(Graphics, Rectangle, Single)
  fullName: SharpNeat.Drawing.Graph.GraphViewportPainter.Paint(System.Drawing.Graphics, System.Drawing.Rectangle, float)
  fullName.vb: SharpNeat.Drawing.Graph.GraphViewportPainter.Paint(System.Drawing.Graphics, System.Drawing.Rectangle, Single)
  nameWithType: GraphViewportPainter.Paint(Graphics, Rectangle, float)
  nameWithType.vb: GraphViewportPainter.Paint(Graphics, Rectangle, Single)
- uid: SharpNeat.Drawing.Graph.GraphViewportPainter.Paint*
  name: Paint
  href: api/SharpNeat.Drawing.Graph.GraphViewportPainter.html#SharpNeat_Drawing_Graph_GraphViewportPainter_Paint_
  commentId: Overload:SharpNeat.Drawing.Graph.GraphViewportPainter.Paint
  isSpec: "True"
  fullName: SharpNeat.Drawing.Graph.GraphViewportPainter.Paint
  nameWithType: GraphViewportPainter.Paint
- uid: SharpNeat.Drawing.Graph.IGraphLayoutScheme
  name: IGraphLayoutScheme
  href: api/SharpNeat.Drawing.Graph.IGraphLayoutScheme.html
  commentId: T:SharpNeat.Drawing.Graph.IGraphLayoutScheme
  fullName: SharpNeat.Drawing.Graph.IGraphLayoutScheme
  nameWithType: IGraphLayoutScheme
- uid: SharpNeat.Drawing.Graph.IGraphLayoutScheme.Layout(SharpNeat.Graphs.DirectedGraph,System.Drawing.Size,System.Span{System.Drawing.Point},System.Object@)
  name: Layout(DirectedGraph, Size, Span<Point>, ref object?)
  href: api/SharpNeat.Drawing.Graph.IGraphLayoutScheme.html#SharpNeat_Drawing_Graph_IGraphLayoutScheme_Layout_SharpNeat_Graphs_DirectedGraph_System_Drawing_Size_System_Span_System_Drawing_Point__System_Object__
  commentId: M:SharpNeat.Drawing.Graph.IGraphLayoutScheme.Layout(SharpNeat.Graphs.DirectedGraph,System.Drawing.Size,System.Span{System.Drawing.Point},System.Object@)
  name.vb: Layout(DirectedGraph, Size, Span(Of Point), Object)
  fullName: SharpNeat.Drawing.Graph.IGraphLayoutScheme.Layout(SharpNeat.Graphs.DirectedGraph, System.Drawing.Size, System.Span<System.Drawing.Point>, ref object?)
  fullName.vb: SharpNeat.Drawing.Graph.IGraphLayoutScheme.Layout(SharpNeat.Graphs.DirectedGraph, System.Drawing.Size, System.Span(Of System.Drawing.Point), Object)
  nameWithType: IGraphLayoutScheme.Layout(DirectedGraph, Size, Span<Point>, ref object?)
  nameWithType.vb: IGraphLayoutScheme.Layout(DirectedGraph, Size, Span(Of Point), Object)
- uid: SharpNeat.Drawing.Graph.IGraphLayoutScheme.Layout(SharpNeat.Graphs.DirectedGraph,System.Drawing.Size,System.Span{System.Drawing.Point})
  name: Layout(DirectedGraph, Size, Span<Point>)
  href: api/SharpNeat.Drawing.Graph.IGraphLayoutScheme.html#SharpNeat_Drawing_Graph_IGraphLayoutScheme_Layout_SharpNeat_Graphs_DirectedGraph_System_Drawing_Size_System_Span_System_Drawing_Point__
  commentId: M:SharpNeat.Drawing.Graph.IGraphLayoutScheme.Layout(SharpNeat.Graphs.DirectedGraph,System.Drawing.Size,System.Span{System.Drawing.Point})
  name.vb: Layout(DirectedGraph, Size, Span(Of Point))
  fullName: SharpNeat.Drawing.Graph.IGraphLayoutScheme.Layout(SharpNeat.Graphs.DirectedGraph, System.Drawing.Size, System.Span<System.Drawing.Point>)
  fullName.vb: SharpNeat.Drawing.Graph.IGraphLayoutScheme.Layout(SharpNeat.Graphs.DirectedGraph, System.Drawing.Size, System.Span(Of System.Drawing.Point))
  nameWithType: IGraphLayoutScheme.Layout(DirectedGraph, Size, Span<Point>)
  nameWithType.vb: IGraphLayoutScheme.Layout(DirectedGraph, Size, Span(Of Point))
- uid: SharpNeat.Drawing.Graph.IGraphLayoutScheme.Layout*
  name: Layout
  href: api/SharpNeat.Drawing.Graph.IGraphLayoutScheme.html#SharpNeat_Drawing_Graph_IGraphLayoutScheme_Layout_
  commentId: Overload:SharpNeat.Drawing.Graph.IGraphLayoutScheme.Layout
  isSpec: "True"
  fullName: SharpNeat.Drawing.Graph.IGraphLayoutScheme.Layout
  nameWithType: IGraphLayoutScheme.Layout
- uid: SharpNeat.Drawing.Graph.Painting
  name: SharpNeat.Drawing.Graph.Painting
  href: api/SharpNeat.Drawing.Graph.Painting.html
  commentId: N:SharpNeat.Drawing.Graph.Painting
  fullName: SharpNeat.Drawing.Graph.Painting
  nameWithType: SharpNeat.Drawing.Graph.Painting
- uid: SharpNeat.Drawing.Graph.Painting.ConnectionPointInfo
  name: ConnectionPointInfo
  href: api/SharpNeat.Drawing.Graph.Painting.ConnectionPointInfo.html
  commentId: T:SharpNeat.Drawing.Graph.Painting.ConnectionPointInfo
  fullName: SharpNeat.Drawing.Graph.Painting.ConnectionPointInfo
  nameWithType: ConnectionPointInfo
- uid: SharpNeat.Drawing.Graph.Painting.ConnectionPointInfo.LowerLeft
  name: LowerLeft
  href: api/SharpNeat.Drawing.Graph.Painting.ConnectionPointInfo.html#SharpNeat_Drawing_Graph_Painting_ConnectionPointInfo_LowerLeft
  commentId: F:SharpNeat.Drawing.Graph.Painting.ConnectionPointInfo.LowerLeft
  fullName: SharpNeat.Drawing.Graph.Painting.ConnectionPointInfo.LowerLeft
  nameWithType: ConnectionPointInfo.LowerLeft
- uid: SharpNeat.Drawing.Graph.Painting.ConnectionPointInfo.LowerRight
  name: LowerRight
  href: api/SharpNeat.Drawing.Graph.Painting.ConnectionPointInfo.html#SharpNeat_Drawing_Graph_Painting_ConnectionPointInfo_LowerRight
  commentId: F:SharpNeat.Drawing.Graph.Painting.ConnectionPointInfo.LowerRight
  fullName: SharpNeat.Drawing.Graph.Painting.ConnectionPointInfo.LowerRight
  nameWithType: ConnectionPointInfo.LowerRight
- uid: SharpNeat.Drawing.Graph.Painting.ConnectionPointInfo.UpperLeft
  name: UpperLeft
  href: api/SharpNeat.Drawing.Graph.Painting.ConnectionPointInfo.html#SharpNeat_Drawing_Graph_Painting_ConnectionPointInfo_UpperLeft
  commentId: F:SharpNeat.Drawing.Graph.Painting.ConnectionPointInfo.UpperLeft
  fullName: SharpNeat.Drawing.Graph.Painting.ConnectionPointInfo.UpperLeft
  nameWithType: ConnectionPointInfo.UpperLeft
- uid: SharpNeat.Drawing.Graph.Painting.ConnectionPointInfo.UpperRight
  name: UpperRight
  href: api/SharpNeat.Drawing.Graph.Painting.ConnectionPointInfo.html#SharpNeat_Drawing_Graph_Painting_ConnectionPointInfo_UpperRight
  commentId: F:SharpNeat.Drawing.Graph.Painting.ConnectionPointInfo.UpperRight
  fullName: SharpNeat.Drawing.Graph.Painting.ConnectionPointInfo.UpperRight
  nameWithType: ConnectionPointInfo.UpperRight
- uid: SharpNeat.Drawing.Graph.Painting.GraphPainter
  name: GraphPainter
  href: api/SharpNeat.Drawing.Graph.Painting.GraphPainter.html
  commentId: T:SharpNeat.Drawing.Graph.Painting.GraphPainter
  fullName: SharpNeat.Drawing.Graph.Painting.GraphPainter
  nameWithType: GraphPainter
- uid: SharpNeat.Drawing.Graph.Painting.GraphPainter.#ctor
  name: GraphPainter()
  href: api/SharpNeat.Drawing.Graph.Painting.GraphPainter.html#SharpNeat_Drawing_Graph_Painting_GraphPainter__ctor
  commentId: M:SharpNeat.Drawing.Graph.Painting.GraphPainter.#ctor
  name.vb: New()
  fullName: SharpNeat.Drawing.Graph.Painting.GraphPainter.GraphPainter()
  fullName.vb: SharpNeat.Drawing.Graph.Painting.GraphPainter.New()
  nameWithType: GraphPainter.GraphPainter()
  nameWithType.vb: GraphPainter.New()
- uid: SharpNeat.Drawing.Graph.Painting.GraphPainter.#ctor(SharpNeat.Drawing.Graph.Painting.PainterSettings)
  name: GraphPainter(PainterSettings)
  href: api/SharpNeat.Drawing.Graph.Painting.GraphPainter.html#SharpNeat_Drawing_Graph_Painting_GraphPainter__ctor_SharpNeat_Drawing_Graph_Painting_PainterSettings_
  commentId: M:SharpNeat.Drawing.Graph.Painting.GraphPainter.#ctor(SharpNeat.Drawing.Graph.Painting.PainterSettings)
  name.vb: New(PainterSettings)
  fullName: SharpNeat.Drawing.Graph.Painting.GraphPainter.GraphPainter(SharpNeat.Drawing.Graph.Painting.PainterSettings)
  fullName.vb: SharpNeat.Drawing.Graph.Painting.GraphPainter.New(SharpNeat.Drawing.Graph.Painting.PainterSettings)
  nameWithType: GraphPainter.GraphPainter(PainterSettings)
  nameWithType.vb: GraphPainter.New(PainterSettings)
- uid: SharpNeat.Drawing.Graph.Painting.GraphPainter.#ctor*
  name: GraphPainter
  href: api/SharpNeat.Drawing.Graph.Painting.GraphPainter.html#SharpNeat_Drawing_Graph_Painting_GraphPainter__ctor_
  commentId: Overload:SharpNeat.Drawing.Graph.Painting.GraphPainter.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Drawing.Graph.Painting.GraphPainter.GraphPainter
  fullName.vb: SharpNeat.Drawing.Graph.Painting.GraphPainter.New
  nameWithType: GraphPainter.GraphPainter
  nameWithType.vb: GraphPainter.New
- uid: SharpNeat.Drawing.Graph.Painting.GraphPainter.Dispose
  name: Dispose()
  href: api/SharpNeat.Drawing.Graph.Painting.GraphPainter.html#SharpNeat_Drawing_Graph_Painting_GraphPainter_Dispose
  commentId: M:SharpNeat.Drawing.Graph.Painting.GraphPainter.Dispose
  fullName: SharpNeat.Drawing.Graph.Painting.GraphPainter.Dispose()
  nameWithType: GraphPainter.Dispose()
- uid: SharpNeat.Drawing.Graph.Painting.GraphPainter.Dispose*
  name: Dispose
  href: api/SharpNeat.Drawing.Graph.Painting.GraphPainter.html#SharpNeat_Drawing_Graph_Painting_GraphPainter_Dispose_
  commentId: Overload:SharpNeat.Drawing.Graph.Painting.GraphPainter.Dispose
  isSpec: "True"
  fullName: SharpNeat.Drawing.Graph.Painting.GraphPainter.Dispose
  nameWithType: GraphPainter.Dispose
- uid: SharpNeat.Drawing.Graph.Painting.GraphPainter.PaintBackConnection(System.Int32,System.Int32,System.Drawing.Point,System.Drawing.Point,SharpNeat.Drawing.Graph.Painting.PaintState,System.Drawing.Pen)
  name: PaintBackConnection(int, int, Point, Point, PaintState, Pen)
  href: api/SharpNeat.Drawing.Graph.Painting.GraphPainter.html#SharpNeat_Drawing_Graph_Painting_GraphPainter_PaintBackConnection_System_Int32_System_Int32_System_Drawing_Point_System_Drawing_Point_SharpNeat_Drawing_Graph_Painting_PaintState_System_Drawing_Pen_
  commentId: M:SharpNeat.Drawing.Graph.Painting.GraphPainter.PaintBackConnection(System.Int32,System.Int32,System.Drawing.Point,System.Drawing.Point,SharpNeat.Drawing.Graph.Painting.PaintState,System.Drawing.Pen)
  name.vb: PaintBackConnection(Integer, Integer, Point, Point, PaintState, Pen)
  fullName: SharpNeat.Drawing.Graph.Painting.GraphPainter.PaintBackConnection(int, int, System.Drawing.Point, System.Drawing.Point, SharpNeat.Drawing.Graph.Painting.PaintState, System.Drawing.Pen)
  fullName.vb: SharpNeat.Drawing.Graph.Painting.GraphPainter.PaintBackConnection(Integer, Integer, System.Drawing.Point, System.Drawing.Point, SharpNeat.Drawing.Graph.Painting.PaintState, System.Drawing.Pen)
  nameWithType: GraphPainter.PaintBackConnection(int, int, Point, Point, PaintState, Pen)
  nameWithType.vb: GraphPainter.PaintBackConnection(Integer, Integer, Point, Point, PaintState, Pen)
- uid: SharpNeat.Drawing.Graph.Painting.GraphPainter.PaintBackConnection*
  name: PaintBackConnection
  href: api/SharpNeat.Drawing.Graph.Painting.GraphPainter.html#SharpNeat_Drawing_Graph_Painting_GraphPainter_PaintBackConnection_
  commentId: Overload:SharpNeat.Drawing.Graph.Painting.GraphPainter.PaintBackConnection
  isSpec: "True"
  fullName: SharpNeat.Drawing.Graph.Painting.GraphPainter.PaintBackConnection
  nameWithType: GraphPainter.PaintBackConnection
- uid: SharpNeat.Drawing.Graph.Painting.GraphPainter.PaintConnection(System.Int32,System.Int32,System.Drawing.Point,System.Drawing.Point,System.Single,SharpNeat.Drawing.Graph.Painting.PaintState)
  name: PaintConnection(int, int, Point, Point, float, PaintState)
  href: api/SharpNeat.Drawing.Graph.Painting.GraphPainter.html#SharpNeat_Drawing_Graph_Painting_GraphPainter_PaintConnection_System_Int32_System_Int32_System_Drawing_Point_System_Drawing_Point_System_Single_SharpNeat_Drawing_Graph_Painting_PaintState_
  commentId: M:SharpNeat.Drawing.Graph.Painting.GraphPainter.PaintConnection(System.Int32,System.Int32,System.Drawing.Point,System.Drawing.Point,System.Single,SharpNeat.Drawing.Graph.Painting.PaintState)
  name.vb: PaintConnection(Integer, Integer, Point, Point, Single, PaintState)
  fullName: SharpNeat.Drawing.Graph.Painting.GraphPainter.PaintConnection(int, int, System.Drawing.Point, System.Drawing.Point, float, SharpNeat.Drawing.Graph.Painting.PaintState)
  fullName.vb: SharpNeat.Drawing.Graph.Painting.GraphPainter.PaintConnection(Integer, Integer, System.Drawing.Point, System.Drawing.Point, Single, SharpNeat.Drawing.Graph.Painting.PaintState)
  nameWithType: GraphPainter.PaintConnection(int, int, Point, Point, float, PaintState)
  nameWithType.vb: GraphPainter.PaintConnection(Integer, Integer, Point, Point, Single, PaintState)
- uid: SharpNeat.Drawing.Graph.Painting.GraphPainter.PaintConnection*
  name: PaintConnection
  href: api/SharpNeat.Drawing.Graph.Painting.GraphPainter.html#SharpNeat_Drawing_Graph_Painting_GraphPainter_PaintConnection_
  commentId: Overload:SharpNeat.Drawing.Graph.Painting.GraphPainter.PaintConnection
  isSpec: "True"
  fullName: SharpNeat.Drawing.Graph.Painting.GraphPainter.PaintConnection
  nameWithType: GraphPainter.PaintConnection
- uid: SharpNeat.Drawing.Graph.Painting.GraphPainter.PaintConnections(SharpNeat.Drawing.DirectedGraphViewModel,SharpNeat.Drawing.Graph.Painting.PaintState)
  name: PaintConnections(DirectedGraphViewModel, PaintState)
  href: api/SharpNeat.Drawing.Graph.Painting.GraphPainter.html#SharpNeat_Drawing_Graph_Painting_GraphPainter_PaintConnections_SharpNeat_Drawing_DirectedGraphViewModel_SharpNeat_Drawing_Graph_Painting_PaintState_
  commentId: M:SharpNeat.Drawing.Graph.Painting.GraphPainter.PaintConnections(SharpNeat.Drawing.DirectedGraphViewModel,SharpNeat.Drawing.Graph.Painting.PaintState)
  fullName: SharpNeat.Drawing.Graph.Painting.GraphPainter.PaintConnections(SharpNeat.Drawing.DirectedGraphViewModel, SharpNeat.Drawing.Graph.Painting.PaintState)
  nameWithType: GraphPainter.PaintConnections(DirectedGraphViewModel, PaintState)
- uid: SharpNeat.Drawing.Graph.Painting.GraphPainter.PaintConnections*
  name: PaintConnections
  href: api/SharpNeat.Drawing.Graph.Painting.GraphPainter.html#SharpNeat_Drawing_Graph_Painting_GraphPainter_PaintConnections_
  commentId: Overload:SharpNeat.Drawing.Graph.Painting.GraphPainter.PaintConnections
  isSpec: "True"
  fullName: SharpNeat.Drawing.Graph.Painting.GraphPainter.PaintConnections
  nameWithType: GraphPainter.PaintConnections
- uid: SharpNeat.Drawing.Graph.Painting.GraphPainter.PaintGraph(SharpNeat.Drawing.DirectedGraphViewModel,SharpNeat.Drawing.Graph.Painting.PaintState)
  name: PaintGraph(DirectedGraphViewModel, PaintState)
  href: api/SharpNeat.Drawing.Graph.Painting.GraphPainter.html#SharpNeat_Drawing_Graph_Painting_GraphPainter_PaintGraph_SharpNeat_Drawing_DirectedGraphViewModel_SharpNeat_Drawing_Graph_Painting_PaintState_
  commentId: M:SharpNeat.Drawing.Graph.Painting.GraphPainter.PaintGraph(SharpNeat.Drawing.DirectedGraphViewModel,SharpNeat.Drawing.Graph.Painting.PaintState)
  fullName: SharpNeat.Drawing.Graph.Painting.GraphPainter.PaintGraph(SharpNeat.Drawing.DirectedGraphViewModel, SharpNeat.Drawing.Graph.Painting.PaintState)
  nameWithType: GraphPainter.PaintGraph(DirectedGraphViewModel, PaintState)
- uid: SharpNeat.Drawing.Graph.Painting.GraphPainter.PaintGraph(SharpNeat.Drawing.DirectedGraphViewModel,System.Drawing.Graphics,System.Drawing.Rectangle,System.Single)
  name: PaintGraph(DirectedGraphViewModel, Graphics, Rectangle, float)
  href: api/SharpNeat.Drawing.Graph.Painting.GraphPainter.html#SharpNeat_Drawing_Graph_Painting_GraphPainter_PaintGraph_SharpNeat_Drawing_DirectedGraphViewModel_System_Drawing_Graphics_System_Drawing_Rectangle_System_Single_
  commentId: M:SharpNeat.Drawing.Graph.Painting.GraphPainter.PaintGraph(SharpNeat.Drawing.DirectedGraphViewModel,System.Drawing.Graphics,System.Drawing.Rectangle,System.Single)
  name.vb: PaintGraph(DirectedGraphViewModel, Graphics, Rectangle, Single)
  fullName: SharpNeat.Drawing.Graph.Painting.GraphPainter.PaintGraph(SharpNeat.Drawing.DirectedGraphViewModel, System.Drawing.Graphics, System.Drawing.Rectangle, float)
  fullName.vb: SharpNeat.Drawing.Graph.Painting.GraphPainter.PaintGraph(SharpNeat.Drawing.DirectedGraphViewModel, System.Drawing.Graphics, System.Drawing.Rectangle, Single)
  nameWithType: GraphPainter.PaintGraph(DirectedGraphViewModel, Graphics, Rectangle, float)
  nameWithType.vb: GraphPainter.PaintGraph(DirectedGraphViewModel, Graphics, Rectangle, Single)
- uid: SharpNeat.Drawing.Graph.Painting.GraphPainter.PaintGraph*
  name: PaintGraph
  href: api/SharpNeat.Drawing.Graph.Painting.GraphPainter.html#SharpNeat_Drawing_Graph_Painting_GraphPainter_PaintGraph_
  commentId: Overload:SharpNeat.Drawing.Graph.Painting.GraphPainter.PaintGraph
  isSpec: "True"
  fullName: SharpNeat.Drawing.Graph.Painting.GraphPainter.PaintGraph
  nameWithType: GraphPainter.PaintGraph
- uid: SharpNeat.Drawing.Graph.Painting.GraphPainter.PaintNode(System.Drawing.Point,System.Int32,SharpNeat.Drawing.Graph.Painting.PaintState)
  name: PaintNode(Point, int, PaintState)
  href: api/SharpNeat.Drawing.Graph.Painting.GraphPainter.html#SharpNeat_Drawing_Graph_Painting_GraphPainter_PaintNode_System_Drawing_Point_System_Int32_SharpNeat_Drawing_Graph_Painting_PaintState_
  commentId: M:SharpNeat.Drawing.Graph.Painting.GraphPainter.PaintNode(System.Drawing.Point,System.Int32,SharpNeat.Drawing.Graph.Painting.PaintState)
  name.vb: PaintNode(Point, Integer, PaintState)
  fullName: SharpNeat.Drawing.Graph.Painting.GraphPainter.PaintNode(System.Drawing.Point, int, SharpNeat.Drawing.Graph.Painting.PaintState)
  fullName.vb: SharpNeat.Drawing.Graph.Painting.GraphPainter.PaintNode(System.Drawing.Point, Integer, SharpNeat.Drawing.Graph.Painting.PaintState)
  nameWithType: GraphPainter.PaintNode(Point, int, PaintState)
  nameWithType.vb: GraphPainter.PaintNode(Point, Integer, PaintState)
- uid: SharpNeat.Drawing.Graph.Painting.GraphPainter.PaintNode*
  name: PaintNode
  href: api/SharpNeat.Drawing.Graph.Painting.GraphPainter.html#SharpNeat_Drawing_Graph_Painting_GraphPainter_PaintNode_
  commentId: Overload:SharpNeat.Drawing.Graph.Painting.GraphPainter.PaintNode
  isSpec: "True"
  fullName: SharpNeat.Drawing.Graph.Painting.GraphPainter.PaintNode
  nameWithType: GraphPainter.PaintNode
- uid: SharpNeat.Drawing.Graph.Painting.GraphPainter.PaintNodes(SharpNeat.Drawing.DirectedGraphViewModel,SharpNeat.Drawing.Graph.Painting.PaintState)
  name: PaintNodes(DirectedGraphViewModel, PaintState)
  href: api/SharpNeat.Drawing.Graph.Painting.GraphPainter.html#SharpNeat_Drawing_Graph_Painting_GraphPainter_PaintNodes_SharpNeat_Drawing_DirectedGraphViewModel_SharpNeat_Drawing_Graph_Painting_PaintState_
  commentId: M:SharpNeat.Drawing.Graph.Painting.GraphPainter.PaintNodes(SharpNeat.Drawing.DirectedGraphViewModel,SharpNeat.Drawing.Graph.Painting.PaintState)
  fullName: SharpNeat.Drawing.Graph.Painting.GraphPainter.PaintNodes(SharpNeat.Drawing.DirectedGraphViewModel, SharpNeat.Drawing.Graph.Painting.PaintState)
  nameWithType: GraphPainter.PaintNodes(DirectedGraphViewModel, PaintState)
- uid: SharpNeat.Drawing.Graph.Painting.GraphPainter.PaintNodes*
  name: PaintNodes
  href: api/SharpNeat.Drawing.Graph.Painting.GraphPainter.html#SharpNeat_Drawing_Graph_Painting_GraphPainter_PaintNodes_
  commentId: Overload:SharpNeat.Drawing.Graph.Painting.GraphPainter.PaintNodes
  isSpec: "True"
  fullName: SharpNeat.Drawing.Graph.Painting.GraphPainter.PaintNodes
  nameWithType: GraphPainter.PaintNodes
- uid: SharpNeat.Drawing.Graph.Painting.PainterSettings
  name: PainterSettings
  href: api/SharpNeat.Drawing.Graph.Painting.PainterSettings.html
  commentId: T:SharpNeat.Drawing.Graph.Painting.PainterSettings
  fullName: SharpNeat.Drawing.Graph.Painting.PainterSettings
  nameWithType: PainterSettings
- uid: SharpNeat.Drawing.Graph.Painting.PainterSettings.ConnectionWeightRange
  name: ConnectionWeightRange
  href: api/SharpNeat.Drawing.Graph.Painting.PainterSettings.html#SharpNeat_Drawing_Graph_Painting_PainterSettings_ConnectionWeightRange
  commentId: P:SharpNeat.Drawing.Graph.Painting.PainterSettings.ConnectionWeightRange
  fullName: SharpNeat.Drawing.Graph.Painting.PainterSettings.ConnectionWeightRange
  nameWithType: PainterSettings.ConnectionWeightRange
- uid: SharpNeat.Drawing.Graph.Painting.PainterSettings.ConnectionWeightRange*
  name: ConnectionWeightRange
  href: api/SharpNeat.Drawing.Graph.Painting.PainterSettings.html#SharpNeat_Drawing_Graph_Painting_PainterSettings_ConnectionWeightRange_
  commentId: Overload:SharpNeat.Drawing.Graph.Painting.PainterSettings.ConnectionWeightRange
  isSpec: "True"
  fullName: SharpNeat.Drawing.Graph.Painting.PainterSettings.ConnectionWeightRange
  nameWithType: PainterSettings.ConnectionWeightRange
- uid: SharpNeat.Drawing.Graph.Painting.PainterSettings.NegativeWeightColor
  name: NegativeWeightColor
  href: api/SharpNeat.Drawing.Graph.Painting.PainterSettings.html#SharpNeat_Drawing_Graph_Painting_PainterSettings_NegativeWeightColor
  commentId: P:SharpNeat.Drawing.Graph.Painting.PainterSettings.NegativeWeightColor
  fullName: SharpNeat.Drawing.Graph.Painting.PainterSettings.NegativeWeightColor
  nameWithType: PainterSettings.NegativeWeightColor
- uid: SharpNeat.Drawing.Graph.Painting.PainterSettings.NegativeWeightColor*
  name: NegativeWeightColor
  href: api/SharpNeat.Drawing.Graph.Painting.PainterSettings.html#SharpNeat_Drawing_Graph_Painting_PainterSettings_NegativeWeightColor_
  commentId: Overload:SharpNeat.Drawing.Graph.Painting.PainterSettings.NegativeWeightColor
  isSpec: "True"
  fullName: SharpNeat.Drawing.Graph.Painting.PainterSettings.NegativeWeightColor
  nameWithType: PainterSettings.NegativeWeightColor
- uid: SharpNeat.Drawing.Graph.Painting.PainterSettings.NodeBorderColor
  name: NodeBorderColor
  href: api/SharpNeat.Drawing.Graph.Painting.PainterSettings.html#SharpNeat_Drawing_Graph_Painting_PainterSettings_NodeBorderColor
  commentId: P:SharpNeat.Drawing.Graph.Painting.PainterSettings.NodeBorderColor
  fullName: SharpNeat.Drawing.Graph.Painting.PainterSettings.NodeBorderColor
  nameWithType: PainterSettings.NodeBorderColor
- uid: SharpNeat.Drawing.Graph.Painting.PainterSettings.NodeBorderColor*
  name: NodeBorderColor
  href: api/SharpNeat.Drawing.Graph.Painting.PainterSettings.html#SharpNeat_Drawing_Graph_Painting_PainterSettings_NodeBorderColor_
  commentId: Overload:SharpNeat.Drawing.Graph.Painting.PainterSettings.NodeBorderColor
  isSpec: "True"
  fullName: SharpNeat.Drawing.Graph.Painting.PainterSettings.NodeBorderColor
  nameWithType: PainterSettings.NodeBorderColor
- uid: SharpNeat.Drawing.Graph.Painting.PainterSettings.NodeDiameter
  name: NodeDiameter
  href: api/SharpNeat.Drawing.Graph.Painting.PainterSettings.html#SharpNeat_Drawing_Graph_Painting_PainterSettings_NodeDiameter
  commentId: P:SharpNeat.Drawing.Graph.Painting.PainterSettings.NodeDiameter
  fullName: SharpNeat.Drawing.Graph.Painting.PainterSettings.NodeDiameter
  nameWithType: PainterSettings.NodeDiameter
- uid: SharpNeat.Drawing.Graph.Painting.PainterSettings.NodeDiameter*
  name: NodeDiameter
  href: api/SharpNeat.Drawing.Graph.Painting.PainterSettings.html#SharpNeat_Drawing_Graph_Painting_PainterSettings_NodeDiameter_
  commentId: Overload:SharpNeat.Drawing.Graph.Painting.PainterSettings.NodeDiameter
  isSpec: "True"
  fullName: SharpNeat.Drawing.Graph.Painting.PainterSettings.NodeDiameter
  nameWithType: PainterSettings.NodeDiameter
- uid: SharpNeat.Drawing.Graph.Painting.PainterSettings.NodeFillColor
  name: NodeFillColor
  href: api/SharpNeat.Drawing.Graph.Painting.PainterSettings.html#SharpNeat_Drawing_Graph_Painting_PainterSettings_NodeFillColor
  commentId: P:SharpNeat.Drawing.Graph.Painting.PainterSettings.NodeFillColor
  fullName: SharpNeat.Drawing.Graph.Painting.PainterSettings.NodeFillColor
  nameWithType: PainterSettings.NodeFillColor
- uid: SharpNeat.Drawing.Graph.Painting.PainterSettings.NodeFillColor*
  name: NodeFillColor
  href: api/SharpNeat.Drawing.Graph.Painting.PainterSettings.html#SharpNeat_Drawing_Graph_Painting_PainterSettings_NodeFillColor_
  commentId: Overload:SharpNeat.Drawing.Graph.Painting.PainterSettings.NodeFillColor
  isSpec: "True"
  fullName: SharpNeat.Drawing.Graph.Painting.PainterSettings.NodeFillColor
  nameWithType: PainterSettings.NodeFillColor
- uid: SharpNeat.Drawing.Graph.Painting.PainterSettings.NodeLabelColor
  name: NodeLabelColor
  href: api/SharpNeat.Drawing.Graph.Painting.PainterSettings.html#SharpNeat_Drawing_Graph_Painting_PainterSettings_NodeLabelColor
  commentId: P:SharpNeat.Drawing.Graph.Painting.PainterSettings.NodeLabelColor
  fullName: SharpNeat.Drawing.Graph.Painting.PainterSettings.NodeLabelColor
  nameWithType: PainterSettings.NodeLabelColor
- uid: SharpNeat.Drawing.Graph.Painting.PainterSettings.NodeLabelColor*
  name: NodeLabelColor
  href: api/SharpNeat.Drawing.Graph.Painting.PainterSettings.html#SharpNeat_Drawing_Graph_Painting_PainterSettings_NodeLabelColor_
  commentId: Overload:SharpNeat.Drawing.Graph.Painting.PainterSettings.NodeLabelColor
  isSpec: "True"
  fullName: SharpNeat.Drawing.Graph.Painting.PainterSettings.NodeLabelColor
  nameWithType: PainterSettings.NodeLabelColor
- uid: SharpNeat.Drawing.Graph.Painting.PainterSettings.NodeLabelFont
  name: NodeLabelFont
  href: api/SharpNeat.Drawing.Graph.Painting.PainterSettings.html#SharpNeat_Drawing_Graph_Painting_PainterSettings_NodeLabelFont
  commentId: P:SharpNeat.Drawing.Graph.Painting.PainterSettings.NodeLabelFont
  fullName: SharpNeat.Drawing.Graph.Painting.PainterSettings.NodeLabelFont
  nameWithType: PainterSettings.NodeLabelFont
- uid: SharpNeat.Drawing.Graph.Painting.PainterSettings.NodeLabelFont*
  name: NodeLabelFont
  href: api/SharpNeat.Drawing.Graph.Painting.PainterSettings.html#SharpNeat_Drawing_Graph_Painting_PainterSettings_NodeLabelFont_
  commentId: Overload:SharpNeat.Drawing.Graph.Painting.PainterSettings.NodeLabelFont
  isSpec: "True"
  fullName: SharpNeat.Drawing.Graph.Painting.PainterSettings.NodeLabelFont
  nameWithType: PainterSettings.NodeLabelFont
- uid: SharpNeat.Drawing.Graph.Painting.PainterSettings.PositiveWeightColor
  name: PositiveWeightColor
  href: api/SharpNeat.Drawing.Graph.Painting.PainterSettings.html#SharpNeat_Drawing_Graph_Painting_PainterSettings_PositiveWeightColor
  commentId: P:SharpNeat.Drawing.Graph.Painting.PainterSettings.PositiveWeightColor
  fullName: SharpNeat.Drawing.Graph.Painting.PainterSettings.PositiveWeightColor
  nameWithType: PainterSettings.PositiveWeightColor
- uid: SharpNeat.Drawing.Graph.Painting.PainterSettings.PositiveWeightColor*
  name: PositiveWeightColor
  href: api/SharpNeat.Drawing.Graph.Painting.PainterSettings.html#SharpNeat_Drawing_Graph_Painting_PainterSettings_PositiveWeightColor_
  commentId: Overload:SharpNeat.Drawing.Graph.Painting.PainterSettings.PositiveWeightColor
  isSpec: "True"
  fullName: SharpNeat.Drawing.Graph.Painting.PainterSettings.PositiveWeightColor
  nameWithType: PainterSettings.PositiveWeightColor
- uid: SharpNeat.Drawing.Graph.Painting.PaintState
  name: PaintState
  href: api/SharpNeat.Drawing.Graph.Painting.PaintState.html
  commentId: T:SharpNeat.Drawing.Graph.Painting.PaintState
  fullName: SharpNeat.Drawing.Graph.Painting.PaintState
  nameWithType: PaintState
- uid: SharpNeat.Drawing.Graph.Painting.PaintState._backConnectionLegLength
  name: _backConnectionLegLength
  href: api/SharpNeat.Drawing.Graph.Painting.PaintState.html#SharpNeat_Drawing_Graph_Painting_PaintState__backConnectionLegLength
  commentId: F:SharpNeat.Drawing.Graph.Painting.PaintState._backConnectionLegLength
  fullName: SharpNeat.Drawing.Graph.Painting.PaintState._backConnectionLegLength
  nameWithType: PaintState._backConnectionLegLength
- uid: SharpNeat.Drawing.Graph.Painting.PaintState._g
  name: _g
  href: api/SharpNeat.Drawing.Graph.Painting.PaintState.html#SharpNeat_Drawing_Graph_Painting_PaintState__g
  commentId: F:SharpNeat.Drawing.Graph.Painting.PaintState._g
  fullName: SharpNeat.Drawing.Graph.Painting.PaintState._g
  nameWithType: PaintState._g
- uid: SharpNeat.Drawing.Graph.Painting.PaintState._nodeDiameter
  name: _nodeDiameter
  href: api/SharpNeat.Drawing.Graph.Painting.PaintState.html#SharpNeat_Drawing_Graph_Painting_PaintState__nodeDiameter
  commentId: F:SharpNeat.Drawing.Graph.Painting.PaintState._nodeDiameter
  fullName: SharpNeat.Drawing.Graph.Painting.PaintState._nodeDiameter
  nameWithType: PaintState._nodeDiameter
- uid: SharpNeat.Drawing.Graph.Painting.PaintState._nodeDiameterHalf
  name: _nodeDiameterHalf
  href: api/SharpNeat.Drawing.Graph.Painting.PaintState.html#SharpNeat_Drawing_Graph_Painting_PaintState__nodeDiameterHalf
  commentId: F:SharpNeat.Drawing.Graph.Painting.PaintState._nodeDiameterHalf
  fullName: SharpNeat.Drawing.Graph.Painting.PaintState._nodeDiameterHalf
  nameWithType: PaintState._nodeDiameterHalf
- uid: SharpNeat.Drawing.Graph.Painting.PaintState._nodeStateByIdx
  name: _nodeStateByIdx
  href: api/SharpNeat.Drawing.Graph.Painting.PaintState.html#SharpNeat_Drawing_Graph_Painting_PaintState__nodeStateByIdx
  commentId: F:SharpNeat.Drawing.Graph.Painting.PaintState._nodeStateByIdx
  fullName: SharpNeat.Drawing.Graph.Painting.PaintState._nodeStateByIdx
  nameWithType: PaintState._nodeStateByIdx
- uid: SharpNeat.Drawing.Graph.Painting.PaintState._viewportArea
  name: _viewportArea
  href: api/SharpNeat.Drawing.Graph.Painting.PaintState.html#SharpNeat_Drawing_Graph_Painting_PaintState__viewportArea
  commentId: F:SharpNeat.Drawing.Graph.Painting.PaintState._viewportArea
  fullName: SharpNeat.Drawing.Graph.Painting.PaintState._viewportArea
  nameWithType: PaintState._viewportArea
- uid: SharpNeat.Drawing.Graph.Painting.PaintState._zoomFactor
  name: _zoomFactor
  href: api/SharpNeat.Drawing.Graph.Painting.PaintState.html#SharpNeat_Drawing_Graph_Painting_PaintState__zoomFactor
  commentId: F:SharpNeat.Drawing.Graph.Painting.PaintState._zoomFactor
  fullName: SharpNeat.Drawing.Graph.Painting.PaintState._zoomFactor
  nameWithType: PaintState._zoomFactor
- uid: SharpNeat.Drawing.Graph.Painting.PaintState.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle,System.Single,System.Single,System.Int32)
  name: PaintState(Graphics, Rectangle, float, float, int)
  href: api/SharpNeat.Drawing.Graph.Painting.PaintState.html#SharpNeat_Drawing_Graph_Painting_PaintState__ctor_System_Drawing_Graphics_System_Drawing_Rectangle_System_Single_System_Single_System_Int32_
  commentId: M:SharpNeat.Drawing.Graph.Painting.PaintState.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle,System.Single,System.Single,System.Int32)
  name.vb: New(Graphics, Rectangle, Single, Single, Integer)
  fullName: SharpNeat.Drawing.Graph.Painting.PaintState.PaintState(System.Drawing.Graphics, System.Drawing.Rectangle, float, float, int)
  fullName.vb: SharpNeat.Drawing.Graph.Painting.PaintState.New(System.Drawing.Graphics, System.Drawing.Rectangle, Single, Single, Integer)
  nameWithType: PaintState.PaintState(Graphics, Rectangle, float, float, int)
  nameWithType.vb: PaintState.New(Graphics, Rectangle, Single, Single, Integer)
- uid: SharpNeat.Drawing.Graph.Painting.PaintState.#ctor*
  name: PaintState
  href: api/SharpNeat.Drawing.Graph.Painting.PaintState.html#SharpNeat_Drawing_Graph_Painting_PaintState__ctor_
  commentId: Overload:SharpNeat.Drawing.Graph.Painting.PaintState.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Drawing.Graph.Painting.PaintState.PaintState
  fullName.vb: SharpNeat.Drawing.Graph.Painting.PaintState.New
  nameWithType: PaintState.PaintState
  nameWithType.vb: PaintState.New
- uid: SharpNeat.Drawing.HSLColor
  name: HSLColor
  href: api/SharpNeat.Drawing.HSLColor.html
  commentId: T:SharpNeat.Drawing.HSLColor
  fullName: SharpNeat.Drawing.HSLColor
  nameWithType: HSLColor
- uid: SharpNeat.Drawing.HSLColor.#ctor
  name: HSLColor()
  href: api/SharpNeat.Drawing.HSLColor.html#SharpNeat_Drawing_HSLColor__ctor
  commentId: M:SharpNeat.Drawing.HSLColor.#ctor
  name.vb: New()
  fullName: SharpNeat.Drawing.HSLColor.HSLColor()
  fullName.vb: SharpNeat.Drawing.HSLColor.New()
  nameWithType: HSLColor.HSLColor()
  nameWithType.vb: HSLColor.New()
- uid: SharpNeat.Drawing.HSLColor.#ctor(System.Double,System.Double,System.Double)
  name: HSLColor(double, double, double)
  href: api/SharpNeat.Drawing.HSLColor.html#SharpNeat_Drawing_HSLColor__ctor_System_Double_System_Double_System_Double_
  commentId: M:SharpNeat.Drawing.HSLColor.#ctor(System.Double,System.Double,System.Double)
  name.vb: New(Double, Double, Double)
  fullName: SharpNeat.Drawing.HSLColor.HSLColor(double, double, double)
  fullName.vb: SharpNeat.Drawing.HSLColor.New(Double, Double, Double)
  nameWithType: HSLColor.HSLColor(double, double, double)
  nameWithType.vb: HSLColor.New(Double, Double, Double)
- uid: SharpNeat.Drawing.HSLColor.#ctor(System.Drawing.Color)
  name: HSLColor(Color)
  href: api/SharpNeat.Drawing.HSLColor.html#SharpNeat_Drawing_HSLColor__ctor_System_Drawing_Color_
  commentId: M:SharpNeat.Drawing.HSLColor.#ctor(System.Drawing.Color)
  name.vb: New(Color)
  fullName: SharpNeat.Drawing.HSLColor.HSLColor(System.Drawing.Color)
  fullName.vb: SharpNeat.Drawing.HSLColor.New(System.Drawing.Color)
  nameWithType: HSLColor.HSLColor(Color)
  nameWithType.vb: HSLColor.New(Color)
- uid: SharpNeat.Drawing.HSLColor.#ctor(System.Int32,System.Int32,System.Int32)
  name: HSLColor(int, int, int)
  href: api/SharpNeat.Drawing.HSLColor.html#SharpNeat_Drawing_HSLColor__ctor_System_Int32_System_Int32_System_Int32_
  commentId: M:SharpNeat.Drawing.HSLColor.#ctor(System.Int32,System.Int32,System.Int32)
  name.vb: New(Integer, Integer, Integer)
  fullName: SharpNeat.Drawing.HSLColor.HSLColor(int, int, int)
  fullName.vb: SharpNeat.Drawing.HSLColor.New(Integer, Integer, Integer)
  nameWithType: HSLColor.HSLColor(int, int, int)
  nameWithType.vb: HSLColor.New(Integer, Integer, Integer)
- uid: SharpNeat.Drawing.HSLColor.#ctor*
  name: HSLColor
  href: api/SharpNeat.Drawing.HSLColor.html#SharpNeat_Drawing_HSLColor__ctor_
  commentId: Overload:SharpNeat.Drawing.HSLColor.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Drawing.HSLColor.HSLColor
  fullName.vb: SharpNeat.Drawing.HSLColor.New
  nameWithType: HSLColor.HSLColor
  nameWithType.vb: HSLColor.New
- uid: SharpNeat.Drawing.HSLColor.Hue
  name: Hue
  href: api/SharpNeat.Drawing.HSLColor.html#SharpNeat_Drawing_HSLColor_Hue
  commentId: P:SharpNeat.Drawing.HSLColor.Hue
  fullName: SharpNeat.Drawing.HSLColor.Hue
  nameWithType: HSLColor.Hue
- uid: SharpNeat.Drawing.HSLColor.Hue*
  name: Hue
  href: api/SharpNeat.Drawing.HSLColor.html#SharpNeat_Drawing_HSLColor_Hue_
  commentId: Overload:SharpNeat.Drawing.HSLColor.Hue
  isSpec: "True"
  fullName: SharpNeat.Drawing.HSLColor.Hue
  nameWithType: HSLColor.Hue
- uid: SharpNeat.Drawing.HSLColor.Luminosity
  name: Luminosity
  href: api/SharpNeat.Drawing.HSLColor.html#SharpNeat_Drawing_HSLColor_Luminosity
  commentId: P:SharpNeat.Drawing.HSLColor.Luminosity
  fullName: SharpNeat.Drawing.HSLColor.Luminosity
  nameWithType: HSLColor.Luminosity
- uid: SharpNeat.Drawing.HSLColor.Luminosity*
  name: Luminosity
  href: api/SharpNeat.Drawing.HSLColor.html#SharpNeat_Drawing_HSLColor_Luminosity_
  commentId: Overload:SharpNeat.Drawing.HSLColor.Luminosity
  isSpec: "True"
  fullName: SharpNeat.Drawing.HSLColor.Luminosity
  nameWithType: HSLColor.Luminosity
- uid: SharpNeat.Drawing.HSLColor.op_Implicit(SharpNeat.Drawing.HSLColor)~System.Drawing.Color
  name: implicit operator Color(HSLColor)
  href: api/SharpNeat.Drawing.HSLColor.html#SharpNeat_Drawing_HSLColor_op_Implicit_SharpNeat_Drawing_HSLColor__System_Drawing_Color
  commentId: M:SharpNeat.Drawing.HSLColor.op_Implicit(SharpNeat.Drawing.HSLColor)~System.Drawing.Color
  name.vb: CType(HSLColor)
  fullName: SharpNeat.Drawing.HSLColor.implicit operator System.Drawing.Color(SharpNeat.Drawing.HSLColor)
  fullName.vb: SharpNeat.Drawing.HSLColor.CType(SharpNeat.Drawing.HSLColor)
  nameWithType: HSLColor.implicit operator Color(HSLColor)
  nameWithType.vb: HSLColor.CType(HSLColor)
- uid: SharpNeat.Drawing.HSLColor.op_Implicit(System.Drawing.Color)~SharpNeat.Drawing.HSLColor
  name: implicit operator HSLColor(Color)
  href: api/SharpNeat.Drawing.HSLColor.html#SharpNeat_Drawing_HSLColor_op_Implicit_System_Drawing_Color__SharpNeat_Drawing_HSLColor
  commentId: M:SharpNeat.Drawing.HSLColor.op_Implicit(System.Drawing.Color)~SharpNeat.Drawing.HSLColor
  name.vb: CType(Color)
  fullName: SharpNeat.Drawing.HSLColor.implicit operator SharpNeat.Drawing.HSLColor(System.Drawing.Color)
  fullName.vb: SharpNeat.Drawing.HSLColor.CType(System.Drawing.Color)
  nameWithType: HSLColor.implicit operator HSLColor(Color)
  nameWithType.vb: HSLColor.CType(Color)
- uid: SharpNeat.Drawing.HSLColor.op_Implicit*
  name: implicit operator
  href: api/SharpNeat.Drawing.HSLColor.html#SharpNeat_Drawing_HSLColor_op_Implicit_
  commentId: Overload:SharpNeat.Drawing.HSLColor.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: SharpNeat.Drawing.HSLColor.implicit operator
  fullName.vb: SharpNeat.Drawing.HSLColor.CType
  nameWithType: HSLColor.implicit operator
  nameWithType.vb: HSLColor.CType
- uid: SharpNeat.Drawing.HSLColor.Saturation
  name: Saturation
  href: api/SharpNeat.Drawing.HSLColor.html#SharpNeat_Drawing_HSLColor_Saturation
  commentId: P:SharpNeat.Drawing.HSLColor.Saturation
  fullName: SharpNeat.Drawing.HSLColor.Saturation
  nameWithType: HSLColor.Saturation
- uid: SharpNeat.Drawing.HSLColor.Saturation*
  name: Saturation
  href: api/SharpNeat.Drawing.HSLColor.html#SharpNeat_Drawing_HSLColor_Saturation_
  commentId: Overload:SharpNeat.Drawing.HSLColor.Saturation
  isSpec: "True"
  fullName: SharpNeat.Drawing.HSLColor.Saturation
  nameWithType: HSLColor.Saturation
- uid: SharpNeat.Drawing.HSLColor.SetRGB(System.Int32,System.Int32,System.Int32)
  name: SetRGB(int, int, int)
  href: api/SharpNeat.Drawing.HSLColor.html#SharpNeat_Drawing_HSLColor_SetRGB_System_Int32_System_Int32_System_Int32_
  commentId: M:SharpNeat.Drawing.HSLColor.SetRGB(System.Int32,System.Int32,System.Int32)
  name.vb: SetRGB(Integer, Integer, Integer)
  fullName: SharpNeat.Drawing.HSLColor.SetRGB(int, int, int)
  fullName.vb: SharpNeat.Drawing.HSLColor.SetRGB(Integer, Integer, Integer)
  nameWithType: HSLColor.SetRGB(int, int, int)
  nameWithType.vb: HSLColor.SetRGB(Integer, Integer, Integer)
- uid: SharpNeat.Drawing.HSLColor.SetRGB*
  name: SetRGB
  href: api/SharpNeat.Drawing.HSLColor.html#SharpNeat_Drawing_HSLColor_SetRGB_
  commentId: Overload:SharpNeat.Drawing.HSLColor.SetRGB
  isSpec: "True"
  fullName: SharpNeat.Drawing.HSLColor.SetRGB
  nameWithType: HSLColor.SetRGB
- uid: SharpNeat.Drawing.IViewportPainter
  name: IViewportPainter
  href: api/SharpNeat.Drawing.IViewportPainter.html
  commentId: T:SharpNeat.Drawing.IViewportPainter
  fullName: SharpNeat.Drawing.IViewportPainter
  nameWithType: IViewportPainter
- uid: SharpNeat.Drawing.IViewportPainter.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Single)
  name: Paint(Graphics, Rectangle, float)
  href: api/SharpNeat.Drawing.IViewportPainter.html#SharpNeat_Drawing_IViewportPainter_Paint_System_Drawing_Graphics_System_Drawing_Rectangle_System_Single_
  commentId: M:SharpNeat.Drawing.IViewportPainter.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Single)
  name.vb: Paint(Graphics, Rectangle, Single)
  fullName: SharpNeat.Drawing.IViewportPainter.Paint(System.Drawing.Graphics, System.Drawing.Rectangle, float)
  fullName.vb: SharpNeat.Drawing.IViewportPainter.Paint(System.Drawing.Graphics, System.Drawing.Rectangle, Single)
  nameWithType: IViewportPainter.Paint(Graphics, Rectangle, float)
  nameWithType.vb: IViewportPainter.Paint(Graphics, Rectangle, Single)
- uid: SharpNeat.Drawing.IViewportPainter.Paint*
  name: Paint
  href: api/SharpNeat.Drawing.IViewportPainter.html#SharpNeat_Drawing_IViewportPainter_Paint_
  commentId: Overload:SharpNeat.Drawing.IViewportPainter.Paint
  isSpec: "True"
  fullName: SharpNeat.Drawing.IViewportPainter.Paint
  nameWithType: IViewportPainter.Paint
- uid: SharpNeat.Evaluation
  name: SharpNeat.Evaluation
  href: api/SharpNeat.Evaluation.html
  commentId: N:SharpNeat.Evaluation
  fullName: SharpNeat.Evaluation
  nameWithType: SharpNeat.Evaluation
- uid: SharpNeat.Evaluation.FitnessInfo
  name: FitnessInfo
  href: api/SharpNeat.Evaluation.FitnessInfo.html
  commentId: T:SharpNeat.Evaluation.FitnessInfo
  fullName: SharpNeat.Evaluation.FitnessInfo
  nameWithType: FitnessInfo
- uid: SharpNeat.Evaluation.FitnessInfo.#ctor(System.Double,System.Double[])
  name: FitnessInfo(double, double[])
  href: api/SharpNeat.Evaluation.FitnessInfo.html#SharpNeat_Evaluation_FitnessInfo__ctor_System_Double_System_Double___
  commentId: M:SharpNeat.Evaluation.FitnessInfo.#ctor(System.Double,System.Double[])
  name.vb: New(Double, Double())
  fullName: SharpNeat.Evaluation.FitnessInfo.FitnessInfo(double, double[])
  fullName.vb: SharpNeat.Evaluation.FitnessInfo.New(Double, Double())
  nameWithType: FitnessInfo.FitnessInfo(double, double[])
  nameWithType.vb: FitnessInfo.New(Double, Double())
- uid: SharpNeat.Evaluation.FitnessInfo.#ctor(System.Double)
  name: FitnessInfo(double)
  href: api/SharpNeat.Evaluation.FitnessInfo.html#SharpNeat_Evaluation_FitnessInfo__ctor_System_Double_
  commentId: M:SharpNeat.Evaluation.FitnessInfo.#ctor(System.Double)
  name.vb: New(Double)
  fullName: SharpNeat.Evaluation.FitnessInfo.FitnessInfo(double)
  fullName.vb: SharpNeat.Evaluation.FitnessInfo.New(Double)
  nameWithType: FitnessInfo.FitnessInfo(double)
  nameWithType.vb: FitnessInfo.New(Double)
- uid: SharpNeat.Evaluation.FitnessInfo.#ctor*
  name: FitnessInfo
  href: api/SharpNeat.Evaluation.FitnessInfo.html#SharpNeat_Evaluation_FitnessInfo__ctor_
  commentId: Overload:SharpNeat.Evaluation.FitnessInfo.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Evaluation.FitnessInfo.FitnessInfo
  fullName.vb: SharpNeat.Evaluation.FitnessInfo.New
  nameWithType: FitnessInfo.FitnessInfo
  nameWithType.vb: FitnessInfo.New
- uid: SharpNeat.Evaluation.FitnessInfo.AuxFitnessScores
  name: AuxFitnessScores
  href: api/SharpNeat.Evaluation.FitnessInfo.html#SharpNeat_Evaluation_FitnessInfo_AuxFitnessScores
  commentId: P:SharpNeat.Evaluation.FitnessInfo.AuxFitnessScores
  fullName: SharpNeat.Evaluation.FitnessInfo.AuxFitnessScores
  nameWithType: FitnessInfo.AuxFitnessScores
- uid: SharpNeat.Evaluation.FitnessInfo.AuxFitnessScores*
  name: AuxFitnessScores
  href: api/SharpNeat.Evaluation.FitnessInfo.html#SharpNeat_Evaluation_FitnessInfo_AuxFitnessScores_
  commentId: Overload:SharpNeat.Evaluation.FitnessInfo.AuxFitnessScores
  isSpec: "True"
  fullName: SharpNeat.Evaluation.FitnessInfo.AuxFitnessScores
  nameWithType: FitnessInfo.AuxFitnessScores
- uid: SharpNeat.Evaluation.FitnessInfo.DefaultFitnessInfo
  name: DefaultFitnessInfo
  href: api/SharpNeat.Evaluation.FitnessInfo.html#SharpNeat_Evaluation_FitnessInfo_DefaultFitnessInfo
  commentId: F:SharpNeat.Evaluation.FitnessInfo.DefaultFitnessInfo
  fullName: SharpNeat.Evaluation.FitnessInfo.DefaultFitnessInfo
  nameWithType: FitnessInfo.DefaultFitnessInfo
- uid: SharpNeat.Evaluation.FitnessInfo.PrimaryFitness
  name: PrimaryFitness
  href: api/SharpNeat.Evaluation.FitnessInfo.html#SharpNeat_Evaluation_FitnessInfo_PrimaryFitness
  commentId: P:SharpNeat.Evaluation.FitnessInfo.PrimaryFitness
  fullName: SharpNeat.Evaluation.FitnessInfo.PrimaryFitness
  nameWithType: FitnessInfo.PrimaryFitness
- uid: SharpNeat.Evaluation.FitnessInfo.PrimaryFitness*
  name: PrimaryFitness
  href: api/SharpNeat.Evaluation.FitnessInfo.html#SharpNeat_Evaluation_FitnessInfo_PrimaryFitness_
  commentId: Overload:SharpNeat.Evaluation.FitnessInfo.PrimaryFitness
  isSpec: "True"
  fullName: SharpNeat.Evaluation.FitnessInfo.PrimaryFitness
  nameWithType: FitnessInfo.PrimaryFitness
- uid: SharpNeat.Evaluation.GenomeListEvaluatorFactory
  name: GenomeListEvaluatorFactory
  href: api/SharpNeat.Evaluation.GenomeListEvaluatorFactory.html
  commentId: T:SharpNeat.Evaluation.GenomeListEvaluatorFactory
  fullName: SharpNeat.Evaluation.GenomeListEvaluatorFactory
  nameWithType: GenomeListEvaluatorFactory
- uid: SharpNeat.Evaluation.GenomeListEvaluatorFactory.CreateEvaluator*
  name: CreateEvaluator
  href: api/SharpNeat.Evaluation.GenomeListEvaluatorFactory.html#SharpNeat_Evaluation_GenomeListEvaluatorFactory_CreateEvaluator_
  commentId: Overload:SharpNeat.Evaluation.GenomeListEvaluatorFactory.CreateEvaluator
  isSpec: "True"
  fullName: SharpNeat.Evaluation.GenomeListEvaluatorFactory.CreateEvaluator
  nameWithType: GenomeListEvaluatorFactory.CreateEvaluator
- uid: SharpNeat.Evaluation.GenomeListEvaluatorFactory.CreateEvaluator``2(SharpNeat.Evaluation.IGenomeDecoder{``0,``1},SharpNeat.Evaluation.IPhenomeEvaluationScheme{``1},System.Int32)
  name: CreateEvaluator<TGenome, TPhenome>(IGenomeDecoder<TGenome, TPhenome>, IPhenomeEvaluationScheme<TPhenome>, int)
  href: api/SharpNeat.Evaluation.GenomeListEvaluatorFactory.html#SharpNeat_Evaluation_GenomeListEvaluatorFactory_CreateEvaluator__2_SharpNeat_Evaluation_IGenomeDecoder___0___1__SharpNeat_Evaluation_IPhenomeEvaluationScheme___1__System_Int32_
  commentId: M:SharpNeat.Evaluation.GenomeListEvaluatorFactory.CreateEvaluator``2(SharpNeat.Evaluation.IGenomeDecoder{``0,``1},SharpNeat.Evaluation.IPhenomeEvaluationScheme{``1},System.Int32)
  name.vb: CreateEvaluator(Of TGenome, TPhenome)(IGenomeDecoder(Of TGenome, TPhenome), IPhenomeEvaluationScheme(Of TPhenome), Integer)
  fullName: SharpNeat.Evaluation.GenomeListEvaluatorFactory.CreateEvaluator<TGenome, TPhenome>(SharpNeat.Evaluation.IGenomeDecoder<TGenome, TPhenome>, SharpNeat.Evaluation.IPhenomeEvaluationScheme<TPhenome>, int)
  fullName.vb: SharpNeat.Evaluation.GenomeListEvaluatorFactory.CreateEvaluator(Of TGenome, TPhenome)(SharpNeat.Evaluation.IGenomeDecoder(Of TGenome, TPhenome), SharpNeat.Evaluation.IPhenomeEvaluationScheme(Of TPhenome), Integer)
  nameWithType: GenomeListEvaluatorFactory.CreateEvaluator<TGenome, TPhenome>(IGenomeDecoder<TGenome, TPhenome>, IPhenomeEvaluationScheme<TPhenome>, int)
  nameWithType.vb: GenomeListEvaluatorFactory.CreateEvaluator(Of TGenome, TPhenome)(IGenomeDecoder(Of TGenome, TPhenome), IPhenomeEvaluationScheme(Of TPhenome), Integer)
- uid: SharpNeat.Evaluation.IBlackBoxEvaluationScheme`1
  name: IBlackBoxEvaluationScheme<T>
  href: api/SharpNeat.Evaluation.IBlackBoxEvaluationScheme-1.html
  commentId: T:SharpNeat.Evaluation.IBlackBoxEvaluationScheme`1
  name.vb: IBlackBoxEvaluationScheme(Of T)
  fullName: SharpNeat.Evaluation.IBlackBoxEvaluationScheme<T>
  fullName.vb: SharpNeat.Evaluation.IBlackBoxEvaluationScheme(Of T)
  nameWithType: IBlackBoxEvaluationScheme<T>
  nameWithType.vb: IBlackBoxEvaluationScheme(Of T)
- uid: SharpNeat.Evaluation.IBlackBoxEvaluationScheme`1.InputCount
  name: InputCount
  href: api/SharpNeat.Evaluation.IBlackBoxEvaluationScheme-1.html#SharpNeat_Evaluation_IBlackBoxEvaluationScheme_1_InputCount
  commentId: P:SharpNeat.Evaluation.IBlackBoxEvaluationScheme`1.InputCount
  fullName: SharpNeat.Evaluation.IBlackBoxEvaluationScheme<T>.InputCount
  fullName.vb: SharpNeat.Evaluation.IBlackBoxEvaluationScheme(Of T).InputCount
  nameWithType: IBlackBoxEvaluationScheme<T>.InputCount
  nameWithType.vb: IBlackBoxEvaluationScheme(Of T).InputCount
- uid: SharpNeat.Evaluation.IBlackBoxEvaluationScheme`1.InputCount*
  name: InputCount
  href: api/SharpNeat.Evaluation.IBlackBoxEvaluationScheme-1.html#SharpNeat_Evaluation_IBlackBoxEvaluationScheme_1_InputCount_
  commentId: Overload:SharpNeat.Evaluation.IBlackBoxEvaluationScheme`1.InputCount
  isSpec: "True"
  fullName: SharpNeat.Evaluation.IBlackBoxEvaluationScheme<T>.InputCount
  fullName.vb: SharpNeat.Evaluation.IBlackBoxEvaluationScheme(Of T).InputCount
  nameWithType: IBlackBoxEvaluationScheme<T>.InputCount
  nameWithType.vb: IBlackBoxEvaluationScheme(Of T).InputCount
- uid: SharpNeat.Evaluation.IBlackBoxEvaluationScheme`1.OutputCount
  name: OutputCount
  href: api/SharpNeat.Evaluation.IBlackBoxEvaluationScheme-1.html#SharpNeat_Evaluation_IBlackBoxEvaluationScheme_1_OutputCount
  commentId: P:SharpNeat.Evaluation.IBlackBoxEvaluationScheme`1.OutputCount
  fullName: SharpNeat.Evaluation.IBlackBoxEvaluationScheme<T>.OutputCount
  fullName.vb: SharpNeat.Evaluation.IBlackBoxEvaluationScheme(Of T).OutputCount
  nameWithType: IBlackBoxEvaluationScheme<T>.OutputCount
  nameWithType.vb: IBlackBoxEvaluationScheme(Of T).OutputCount
- uid: SharpNeat.Evaluation.IBlackBoxEvaluationScheme`1.OutputCount*
  name: OutputCount
  href: api/SharpNeat.Evaluation.IBlackBoxEvaluationScheme-1.html#SharpNeat_Evaluation_IBlackBoxEvaluationScheme_1_OutputCount_
  commentId: Overload:SharpNeat.Evaluation.IBlackBoxEvaluationScheme`1.OutputCount
  isSpec: "True"
  fullName: SharpNeat.Evaluation.IBlackBoxEvaluationScheme<T>.OutputCount
  fullName.vb: SharpNeat.Evaluation.IBlackBoxEvaluationScheme(Of T).OutputCount
  nameWithType: IBlackBoxEvaluationScheme<T>.OutputCount
  nameWithType.vb: IBlackBoxEvaluationScheme(Of T).OutputCount
- uid: SharpNeat.Evaluation.IGenomeDecoder`2
  name: IGenomeDecoder<TGenome, TPhenome>
  href: api/SharpNeat.Evaluation.IGenomeDecoder-2.html
  commentId: T:SharpNeat.Evaluation.IGenomeDecoder`2
  name.vb: IGenomeDecoder(Of TGenome, TPhenome)
  fullName: SharpNeat.Evaluation.IGenomeDecoder<TGenome, TPhenome>
  fullName.vb: SharpNeat.Evaluation.IGenomeDecoder(Of TGenome, TPhenome)
  nameWithType: IGenomeDecoder<TGenome, TPhenome>
  nameWithType.vb: IGenomeDecoder(Of TGenome, TPhenome)
- uid: SharpNeat.Evaluation.IGenomeDecoder`2.Decode(`0)
  name: Decode(TGenome)
  href: api/SharpNeat.Evaluation.IGenomeDecoder-2.html#SharpNeat_Evaluation_IGenomeDecoder_2_Decode__0_
  commentId: M:SharpNeat.Evaluation.IGenomeDecoder`2.Decode(`0)
  fullName: SharpNeat.Evaluation.IGenomeDecoder<TGenome, TPhenome>.Decode(TGenome)
  fullName.vb: SharpNeat.Evaluation.IGenomeDecoder(Of TGenome, TPhenome).Decode(TGenome)
  nameWithType: IGenomeDecoder<TGenome, TPhenome>.Decode(TGenome)
  nameWithType.vb: IGenomeDecoder(Of TGenome, TPhenome).Decode(TGenome)
- uid: SharpNeat.Evaluation.IGenomeDecoder`2.Decode*
  name: Decode
  href: api/SharpNeat.Evaluation.IGenomeDecoder-2.html#SharpNeat_Evaluation_IGenomeDecoder_2_Decode_
  commentId: Overload:SharpNeat.Evaluation.IGenomeDecoder`2.Decode
  isSpec: "True"
  fullName: SharpNeat.Evaluation.IGenomeDecoder<TGenome, TPhenome>.Decode
  fullName.vb: SharpNeat.Evaluation.IGenomeDecoder(Of TGenome, TPhenome).Decode
  nameWithType: IGenomeDecoder<TGenome, TPhenome>.Decode
  nameWithType.vb: IGenomeDecoder(Of TGenome, TPhenome).Decode
- uid: SharpNeat.Evaluation.IGenomeListEvaluator`1
  name: IGenomeListEvaluator<TGenome>
  href: api/SharpNeat.Evaluation.IGenomeListEvaluator-1.html
  commentId: T:SharpNeat.Evaluation.IGenomeListEvaluator`1
  name.vb: IGenomeListEvaluator(Of TGenome)
  fullName: SharpNeat.Evaluation.IGenomeListEvaluator<TGenome>
  fullName.vb: SharpNeat.Evaluation.IGenomeListEvaluator(Of TGenome)
  nameWithType: IGenomeListEvaluator<TGenome>
  nameWithType.vb: IGenomeListEvaluator(Of TGenome)
- uid: SharpNeat.Evaluation.IGenomeListEvaluator`1.Evaluate(System.Collections.Generic.IList{`0})
  name: Evaluate(IList<TGenome>)
  href: api/SharpNeat.Evaluation.IGenomeListEvaluator-1.html#SharpNeat_Evaluation_IGenomeListEvaluator_1_Evaluate_System_Collections_Generic_IList__0__
  commentId: M:SharpNeat.Evaluation.IGenomeListEvaluator`1.Evaluate(System.Collections.Generic.IList{`0})
  name.vb: Evaluate(IList(Of TGenome))
  fullName: SharpNeat.Evaluation.IGenomeListEvaluator<TGenome>.Evaluate(System.Collections.Generic.IList<TGenome>)
  fullName.vb: SharpNeat.Evaluation.IGenomeListEvaluator(Of TGenome).Evaluate(System.Collections.Generic.IList(Of TGenome))
  nameWithType: IGenomeListEvaluator<TGenome>.Evaluate(IList<TGenome>)
  nameWithType.vb: IGenomeListEvaluator(Of TGenome).Evaluate(IList(Of TGenome))
- uid: SharpNeat.Evaluation.IGenomeListEvaluator`1.Evaluate*
  name: Evaluate
  href: api/SharpNeat.Evaluation.IGenomeListEvaluator-1.html#SharpNeat_Evaluation_IGenomeListEvaluator_1_Evaluate_
  commentId: Overload:SharpNeat.Evaluation.IGenomeListEvaluator`1.Evaluate
  isSpec: "True"
  fullName: SharpNeat.Evaluation.IGenomeListEvaluator<TGenome>.Evaluate
  fullName.vb: SharpNeat.Evaluation.IGenomeListEvaluator(Of TGenome).Evaluate
  nameWithType: IGenomeListEvaluator<TGenome>.Evaluate
  nameWithType.vb: IGenomeListEvaluator(Of TGenome).Evaluate
- uid: SharpNeat.Evaluation.IGenomeListEvaluator`1.FitnessComparer
  name: FitnessComparer
  href: api/SharpNeat.Evaluation.IGenomeListEvaluator-1.html#SharpNeat_Evaluation_IGenomeListEvaluator_1_FitnessComparer
  commentId: P:SharpNeat.Evaluation.IGenomeListEvaluator`1.FitnessComparer
  fullName: SharpNeat.Evaluation.IGenomeListEvaluator<TGenome>.FitnessComparer
  fullName.vb: SharpNeat.Evaluation.IGenomeListEvaluator(Of TGenome).FitnessComparer
  nameWithType: IGenomeListEvaluator<TGenome>.FitnessComparer
  nameWithType.vb: IGenomeListEvaluator(Of TGenome).FitnessComparer
- uid: SharpNeat.Evaluation.IGenomeListEvaluator`1.FitnessComparer*
  name: FitnessComparer
  href: api/SharpNeat.Evaluation.IGenomeListEvaluator-1.html#SharpNeat_Evaluation_IGenomeListEvaluator_1_FitnessComparer_
  commentId: Overload:SharpNeat.Evaluation.IGenomeListEvaluator`1.FitnessComparer
  isSpec: "True"
  fullName: SharpNeat.Evaluation.IGenomeListEvaluator<TGenome>.FitnessComparer
  fullName.vb: SharpNeat.Evaluation.IGenomeListEvaluator(Of TGenome).FitnessComparer
  nameWithType: IGenomeListEvaluator<TGenome>.FitnessComparer
  nameWithType.vb: IGenomeListEvaluator(Of TGenome).FitnessComparer
- uid: SharpNeat.Evaluation.IGenomeListEvaluator`1.IsDeterministic
  name: IsDeterministic
  href: api/SharpNeat.Evaluation.IGenomeListEvaluator-1.html#SharpNeat_Evaluation_IGenomeListEvaluator_1_IsDeterministic
  commentId: P:SharpNeat.Evaluation.IGenomeListEvaluator`1.IsDeterministic
  fullName: SharpNeat.Evaluation.IGenomeListEvaluator<TGenome>.IsDeterministic
  fullName.vb: SharpNeat.Evaluation.IGenomeListEvaluator(Of TGenome).IsDeterministic
  nameWithType: IGenomeListEvaluator<TGenome>.IsDeterministic
  nameWithType.vb: IGenomeListEvaluator(Of TGenome).IsDeterministic
- uid: SharpNeat.Evaluation.IGenomeListEvaluator`1.IsDeterministic*
  name: IsDeterministic
  href: api/SharpNeat.Evaluation.IGenomeListEvaluator-1.html#SharpNeat_Evaluation_IGenomeListEvaluator_1_IsDeterministic_
  commentId: Overload:SharpNeat.Evaluation.IGenomeListEvaluator`1.IsDeterministic
  isSpec: "True"
  fullName: SharpNeat.Evaluation.IGenomeListEvaluator<TGenome>.IsDeterministic
  fullName.vb: SharpNeat.Evaluation.IGenomeListEvaluator(Of TGenome).IsDeterministic
  nameWithType: IGenomeListEvaluator<TGenome>.IsDeterministic
  nameWithType.vb: IGenomeListEvaluator(Of TGenome).IsDeterministic
- uid: SharpNeat.Evaluation.IGenomeListEvaluator`1.TestForStopCondition(SharpNeat.Evaluation.FitnessInfo)
  name: TestForStopCondition(FitnessInfo)
  href: api/SharpNeat.Evaluation.IGenomeListEvaluator-1.html#SharpNeat_Evaluation_IGenomeListEvaluator_1_TestForStopCondition_SharpNeat_Evaluation_FitnessInfo_
  commentId: M:SharpNeat.Evaluation.IGenomeListEvaluator`1.TestForStopCondition(SharpNeat.Evaluation.FitnessInfo)
  fullName: SharpNeat.Evaluation.IGenomeListEvaluator<TGenome>.TestForStopCondition(SharpNeat.Evaluation.FitnessInfo)
  fullName.vb: SharpNeat.Evaluation.IGenomeListEvaluator(Of TGenome).TestForStopCondition(SharpNeat.Evaluation.FitnessInfo)
  nameWithType: IGenomeListEvaluator<TGenome>.TestForStopCondition(FitnessInfo)
  nameWithType.vb: IGenomeListEvaluator(Of TGenome).TestForStopCondition(FitnessInfo)
- uid: SharpNeat.Evaluation.IGenomeListEvaluator`1.TestForStopCondition*
  name: TestForStopCondition
  href: api/SharpNeat.Evaluation.IGenomeListEvaluator-1.html#SharpNeat_Evaluation_IGenomeListEvaluator_1_TestForStopCondition_
  commentId: Overload:SharpNeat.Evaluation.IGenomeListEvaluator`1.TestForStopCondition
  isSpec: "True"
  fullName: SharpNeat.Evaluation.IGenomeListEvaluator<TGenome>.TestForStopCondition
  fullName.vb: SharpNeat.Evaluation.IGenomeListEvaluator(Of TGenome).TestForStopCondition
  nameWithType: IGenomeListEvaluator<TGenome>.TestForStopCondition
  nameWithType.vb: IGenomeListEvaluator(Of TGenome).TestForStopCondition
- uid: SharpNeat.Evaluation.IPhenomeEvaluationScheme`1
  name: IPhenomeEvaluationScheme<TPhenome>
  href: api/SharpNeat.Evaluation.IPhenomeEvaluationScheme-1.html
  commentId: T:SharpNeat.Evaluation.IPhenomeEvaluationScheme`1
  name.vb: IPhenomeEvaluationScheme(Of TPhenome)
  fullName: SharpNeat.Evaluation.IPhenomeEvaluationScheme<TPhenome>
  fullName.vb: SharpNeat.Evaluation.IPhenomeEvaluationScheme(Of TPhenome)
  nameWithType: IPhenomeEvaluationScheme<TPhenome>
  nameWithType.vb: IPhenomeEvaluationScheme(Of TPhenome)
- uid: SharpNeat.Evaluation.IPhenomeEvaluationScheme`1.CreateEvaluator
  name: CreateEvaluator()
  href: api/SharpNeat.Evaluation.IPhenomeEvaluationScheme-1.html#SharpNeat_Evaluation_IPhenomeEvaluationScheme_1_CreateEvaluator
  commentId: M:SharpNeat.Evaluation.IPhenomeEvaluationScheme`1.CreateEvaluator
  fullName: SharpNeat.Evaluation.IPhenomeEvaluationScheme<TPhenome>.CreateEvaluator()
  fullName.vb: SharpNeat.Evaluation.IPhenomeEvaluationScheme(Of TPhenome).CreateEvaluator()
  nameWithType: IPhenomeEvaluationScheme<TPhenome>.CreateEvaluator()
  nameWithType.vb: IPhenomeEvaluationScheme(Of TPhenome).CreateEvaluator()
- uid: SharpNeat.Evaluation.IPhenomeEvaluationScheme`1.CreateEvaluator*
  name: CreateEvaluator
  href: api/SharpNeat.Evaluation.IPhenomeEvaluationScheme-1.html#SharpNeat_Evaluation_IPhenomeEvaluationScheme_1_CreateEvaluator_
  commentId: Overload:SharpNeat.Evaluation.IPhenomeEvaluationScheme`1.CreateEvaluator
  isSpec: "True"
  fullName: SharpNeat.Evaluation.IPhenomeEvaluationScheme<TPhenome>.CreateEvaluator
  fullName.vb: SharpNeat.Evaluation.IPhenomeEvaluationScheme(Of TPhenome).CreateEvaluator
  nameWithType: IPhenomeEvaluationScheme<TPhenome>.CreateEvaluator
  nameWithType.vb: IPhenomeEvaluationScheme(Of TPhenome).CreateEvaluator
- uid: SharpNeat.Evaluation.IPhenomeEvaluationScheme`1.EvaluatorsHaveState
  name: EvaluatorsHaveState
  href: api/SharpNeat.Evaluation.IPhenomeEvaluationScheme-1.html#SharpNeat_Evaluation_IPhenomeEvaluationScheme_1_EvaluatorsHaveState
  commentId: P:SharpNeat.Evaluation.IPhenomeEvaluationScheme`1.EvaluatorsHaveState
  fullName: SharpNeat.Evaluation.IPhenomeEvaluationScheme<TPhenome>.EvaluatorsHaveState
  fullName.vb: SharpNeat.Evaluation.IPhenomeEvaluationScheme(Of TPhenome).EvaluatorsHaveState
  nameWithType: IPhenomeEvaluationScheme<TPhenome>.EvaluatorsHaveState
  nameWithType.vb: IPhenomeEvaluationScheme(Of TPhenome).EvaluatorsHaveState
- uid: SharpNeat.Evaluation.IPhenomeEvaluationScheme`1.EvaluatorsHaveState*
  name: EvaluatorsHaveState
  href: api/SharpNeat.Evaluation.IPhenomeEvaluationScheme-1.html#SharpNeat_Evaluation_IPhenomeEvaluationScheme_1_EvaluatorsHaveState_
  commentId: Overload:SharpNeat.Evaluation.IPhenomeEvaluationScheme`1.EvaluatorsHaveState
  isSpec: "True"
  fullName: SharpNeat.Evaluation.IPhenomeEvaluationScheme<TPhenome>.EvaluatorsHaveState
  fullName.vb: SharpNeat.Evaluation.IPhenomeEvaluationScheme(Of TPhenome).EvaluatorsHaveState
  nameWithType: IPhenomeEvaluationScheme<TPhenome>.EvaluatorsHaveState
  nameWithType.vb: IPhenomeEvaluationScheme(Of TPhenome).EvaluatorsHaveState
- uid: SharpNeat.Evaluation.IPhenomeEvaluationScheme`1.FitnessComparer
  name: FitnessComparer
  href: api/SharpNeat.Evaluation.IPhenomeEvaluationScheme-1.html#SharpNeat_Evaluation_IPhenomeEvaluationScheme_1_FitnessComparer
  commentId: P:SharpNeat.Evaluation.IPhenomeEvaluationScheme`1.FitnessComparer
  fullName: SharpNeat.Evaluation.IPhenomeEvaluationScheme<TPhenome>.FitnessComparer
  fullName.vb: SharpNeat.Evaluation.IPhenomeEvaluationScheme(Of TPhenome).FitnessComparer
  nameWithType: IPhenomeEvaluationScheme<TPhenome>.FitnessComparer
  nameWithType.vb: IPhenomeEvaluationScheme(Of TPhenome).FitnessComparer
- uid: SharpNeat.Evaluation.IPhenomeEvaluationScheme`1.FitnessComparer*
  name: FitnessComparer
  href: api/SharpNeat.Evaluation.IPhenomeEvaluationScheme-1.html#SharpNeat_Evaluation_IPhenomeEvaluationScheme_1_FitnessComparer_
  commentId: Overload:SharpNeat.Evaluation.IPhenomeEvaluationScheme`1.FitnessComparer
  isSpec: "True"
  fullName: SharpNeat.Evaluation.IPhenomeEvaluationScheme<TPhenome>.FitnessComparer
  fullName.vb: SharpNeat.Evaluation.IPhenomeEvaluationScheme(Of TPhenome).FitnessComparer
  nameWithType: IPhenomeEvaluationScheme<TPhenome>.FitnessComparer
  nameWithType.vb: IPhenomeEvaluationScheme(Of TPhenome).FitnessComparer
- uid: SharpNeat.Evaluation.IPhenomeEvaluationScheme`1.IsDeterministic
  name: IsDeterministic
  href: api/SharpNeat.Evaluation.IPhenomeEvaluationScheme-1.html#SharpNeat_Evaluation_IPhenomeEvaluationScheme_1_IsDeterministic
  commentId: P:SharpNeat.Evaluation.IPhenomeEvaluationScheme`1.IsDeterministic
  fullName: SharpNeat.Evaluation.IPhenomeEvaluationScheme<TPhenome>.IsDeterministic
  fullName.vb: SharpNeat.Evaluation.IPhenomeEvaluationScheme(Of TPhenome).IsDeterministic
  nameWithType: IPhenomeEvaluationScheme<TPhenome>.IsDeterministic
  nameWithType.vb: IPhenomeEvaluationScheme(Of TPhenome).IsDeterministic
- uid: SharpNeat.Evaluation.IPhenomeEvaluationScheme`1.IsDeterministic*
  name: IsDeterministic
  href: api/SharpNeat.Evaluation.IPhenomeEvaluationScheme-1.html#SharpNeat_Evaluation_IPhenomeEvaluationScheme_1_IsDeterministic_
  commentId: Overload:SharpNeat.Evaluation.IPhenomeEvaluationScheme`1.IsDeterministic
  isSpec: "True"
  fullName: SharpNeat.Evaluation.IPhenomeEvaluationScheme<TPhenome>.IsDeterministic
  fullName.vb: SharpNeat.Evaluation.IPhenomeEvaluationScheme(Of TPhenome).IsDeterministic
  nameWithType: IPhenomeEvaluationScheme<TPhenome>.IsDeterministic
  nameWithType.vb: IPhenomeEvaluationScheme(Of TPhenome).IsDeterministic
- uid: SharpNeat.Evaluation.IPhenomeEvaluationScheme`1.NullFitness
  name: NullFitness
  href: api/SharpNeat.Evaluation.IPhenomeEvaluationScheme-1.html#SharpNeat_Evaluation_IPhenomeEvaluationScheme_1_NullFitness
  commentId: P:SharpNeat.Evaluation.IPhenomeEvaluationScheme`1.NullFitness
  fullName: SharpNeat.Evaluation.IPhenomeEvaluationScheme<TPhenome>.NullFitness
  fullName.vb: SharpNeat.Evaluation.IPhenomeEvaluationScheme(Of TPhenome).NullFitness
  nameWithType: IPhenomeEvaluationScheme<TPhenome>.NullFitness
  nameWithType.vb: IPhenomeEvaluationScheme(Of TPhenome).NullFitness
- uid: SharpNeat.Evaluation.IPhenomeEvaluationScheme`1.NullFitness*
  name: NullFitness
  href: api/SharpNeat.Evaluation.IPhenomeEvaluationScheme-1.html#SharpNeat_Evaluation_IPhenomeEvaluationScheme_1_NullFitness_
  commentId: Overload:SharpNeat.Evaluation.IPhenomeEvaluationScheme`1.NullFitness
  isSpec: "True"
  fullName: SharpNeat.Evaluation.IPhenomeEvaluationScheme<TPhenome>.NullFitness
  fullName.vb: SharpNeat.Evaluation.IPhenomeEvaluationScheme(Of TPhenome).NullFitness
  nameWithType: IPhenomeEvaluationScheme<TPhenome>.NullFitness
  nameWithType.vb: IPhenomeEvaluationScheme(Of TPhenome).NullFitness
- uid: SharpNeat.Evaluation.IPhenomeEvaluationScheme`1.TestForStopCondition(SharpNeat.Evaluation.FitnessInfo)
  name: TestForStopCondition(FitnessInfo)
  href: api/SharpNeat.Evaluation.IPhenomeEvaluationScheme-1.html#SharpNeat_Evaluation_IPhenomeEvaluationScheme_1_TestForStopCondition_SharpNeat_Evaluation_FitnessInfo_
  commentId: M:SharpNeat.Evaluation.IPhenomeEvaluationScheme`1.TestForStopCondition(SharpNeat.Evaluation.FitnessInfo)
  fullName: SharpNeat.Evaluation.IPhenomeEvaluationScheme<TPhenome>.TestForStopCondition(SharpNeat.Evaluation.FitnessInfo)
  fullName.vb: SharpNeat.Evaluation.IPhenomeEvaluationScheme(Of TPhenome).TestForStopCondition(SharpNeat.Evaluation.FitnessInfo)
  nameWithType: IPhenomeEvaluationScheme<TPhenome>.TestForStopCondition(FitnessInfo)
  nameWithType.vb: IPhenomeEvaluationScheme(Of TPhenome).TestForStopCondition(FitnessInfo)
- uid: SharpNeat.Evaluation.IPhenomeEvaluationScheme`1.TestForStopCondition*
  name: TestForStopCondition
  href: api/SharpNeat.Evaluation.IPhenomeEvaluationScheme-1.html#SharpNeat_Evaluation_IPhenomeEvaluationScheme_1_TestForStopCondition_
  commentId: Overload:SharpNeat.Evaluation.IPhenomeEvaluationScheme`1.TestForStopCondition
  isSpec: "True"
  fullName: SharpNeat.Evaluation.IPhenomeEvaluationScheme<TPhenome>.TestForStopCondition
  fullName.vb: SharpNeat.Evaluation.IPhenomeEvaluationScheme(Of TPhenome).TestForStopCondition
  nameWithType: IPhenomeEvaluationScheme<TPhenome>.TestForStopCondition
  nameWithType.vb: IPhenomeEvaluationScheme(Of TPhenome).TestForStopCondition
- uid: SharpNeat.Evaluation.IPhenomeEvaluator`1
  name: IPhenomeEvaluator<TPhenome>
  href: api/SharpNeat.Evaluation.IPhenomeEvaluator-1.html
  commentId: T:SharpNeat.Evaluation.IPhenomeEvaluator`1
  name.vb: IPhenomeEvaluator(Of TPhenome)
  fullName: SharpNeat.Evaluation.IPhenomeEvaluator<TPhenome>
  fullName.vb: SharpNeat.Evaluation.IPhenomeEvaluator(Of TPhenome)
  nameWithType: IPhenomeEvaluator<TPhenome>
  nameWithType.vb: IPhenomeEvaluator(Of TPhenome)
- uid: SharpNeat.Evaluation.IPhenomeEvaluator`1.Evaluate(`0)
  name: Evaluate(TPhenome)
  href: api/SharpNeat.Evaluation.IPhenomeEvaluator-1.html#SharpNeat_Evaluation_IPhenomeEvaluator_1_Evaluate__0_
  commentId: M:SharpNeat.Evaluation.IPhenomeEvaluator`1.Evaluate(`0)
  fullName: SharpNeat.Evaluation.IPhenomeEvaluator<TPhenome>.Evaluate(TPhenome)
  fullName.vb: SharpNeat.Evaluation.IPhenomeEvaluator(Of TPhenome).Evaluate(TPhenome)
  nameWithType: IPhenomeEvaluator<TPhenome>.Evaluate(TPhenome)
  nameWithType.vb: IPhenomeEvaluator(Of TPhenome).Evaluate(TPhenome)
- uid: SharpNeat.Evaluation.IPhenomeEvaluator`1.Evaluate*
  name: Evaluate
  href: api/SharpNeat.Evaluation.IPhenomeEvaluator-1.html#SharpNeat_Evaluation_IPhenomeEvaluator_1_Evaluate_
  commentId: Overload:SharpNeat.Evaluation.IPhenomeEvaluator`1.Evaluate
  isSpec: "True"
  fullName: SharpNeat.Evaluation.IPhenomeEvaluator<TPhenome>.Evaluate
  fullName.vb: SharpNeat.Evaluation.IPhenomeEvaluator(Of TPhenome).Evaluate
  nameWithType: IPhenomeEvaluator<TPhenome>.Evaluate
  nameWithType.vb: IPhenomeEvaluator(Of TPhenome).Evaluate
- uid: SharpNeat.Evaluation.IPhenomeEvaluatorPool`1
  name: IPhenomeEvaluatorPool<TPhenome>
  href: api/SharpNeat.Evaluation.IPhenomeEvaluatorPool-1.html
  commentId: T:SharpNeat.Evaluation.IPhenomeEvaluatorPool`1
  name.vb: IPhenomeEvaluatorPool(Of TPhenome)
  fullName: SharpNeat.Evaluation.IPhenomeEvaluatorPool<TPhenome>
  fullName.vb: SharpNeat.Evaluation.IPhenomeEvaluatorPool(Of TPhenome)
  nameWithType: IPhenomeEvaluatorPool<TPhenome>
  nameWithType.vb: IPhenomeEvaluatorPool(Of TPhenome)
- uid: SharpNeat.Evaluation.IPhenomeEvaluatorPool`1.GetEvaluator
  name: GetEvaluator()
  href: api/SharpNeat.Evaluation.IPhenomeEvaluatorPool-1.html#SharpNeat_Evaluation_IPhenomeEvaluatorPool_1_GetEvaluator
  commentId: M:SharpNeat.Evaluation.IPhenomeEvaluatorPool`1.GetEvaluator
  fullName: SharpNeat.Evaluation.IPhenomeEvaluatorPool<TPhenome>.GetEvaluator()
  fullName.vb: SharpNeat.Evaluation.IPhenomeEvaluatorPool(Of TPhenome).GetEvaluator()
  nameWithType: IPhenomeEvaluatorPool<TPhenome>.GetEvaluator()
  nameWithType.vb: IPhenomeEvaluatorPool(Of TPhenome).GetEvaluator()
- uid: SharpNeat.Evaluation.IPhenomeEvaluatorPool`1.GetEvaluator*
  name: GetEvaluator
  href: api/SharpNeat.Evaluation.IPhenomeEvaluatorPool-1.html#SharpNeat_Evaluation_IPhenomeEvaluatorPool_1_GetEvaluator_
  commentId: Overload:SharpNeat.Evaluation.IPhenomeEvaluatorPool`1.GetEvaluator
  isSpec: "True"
  fullName: SharpNeat.Evaluation.IPhenomeEvaluatorPool<TPhenome>.GetEvaluator
  fullName.vb: SharpNeat.Evaluation.IPhenomeEvaluatorPool(Of TPhenome).GetEvaluator
  nameWithType: IPhenomeEvaluatorPool<TPhenome>.GetEvaluator
  nameWithType.vb: IPhenomeEvaluatorPool(Of TPhenome).GetEvaluator
- uid: SharpNeat.Evaluation.IPhenomeEvaluatorPool`1.ReleaseEvaluator(SharpNeat.Evaluation.IPhenomeEvaluator{`0})
  name: ReleaseEvaluator(IPhenomeEvaluator<TPhenome>)
  href: api/SharpNeat.Evaluation.IPhenomeEvaluatorPool-1.html#SharpNeat_Evaluation_IPhenomeEvaluatorPool_1_ReleaseEvaluator_SharpNeat_Evaluation_IPhenomeEvaluator__0__
  commentId: M:SharpNeat.Evaluation.IPhenomeEvaluatorPool`1.ReleaseEvaluator(SharpNeat.Evaluation.IPhenomeEvaluator{`0})
  name.vb: ReleaseEvaluator(IPhenomeEvaluator(Of TPhenome))
  fullName: SharpNeat.Evaluation.IPhenomeEvaluatorPool<TPhenome>.ReleaseEvaluator(SharpNeat.Evaluation.IPhenomeEvaluator<TPhenome>)
  fullName.vb: SharpNeat.Evaluation.IPhenomeEvaluatorPool(Of TPhenome).ReleaseEvaluator(SharpNeat.Evaluation.IPhenomeEvaluator(Of TPhenome))
  nameWithType: IPhenomeEvaluatorPool<TPhenome>.ReleaseEvaluator(IPhenomeEvaluator<TPhenome>)
  nameWithType.vb: IPhenomeEvaluatorPool(Of TPhenome).ReleaseEvaluator(IPhenomeEvaluator(Of TPhenome))
- uid: SharpNeat.Evaluation.IPhenomeEvaluatorPool`1.ReleaseEvaluator*
  name: ReleaseEvaluator
  href: api/SharpNeat.Evaluation.IPhenomeEvaluatorPool-1.html#SharpNeat_Evaluation_IPhenomeEvaluatorPool_1_ReleaseEvaluator_
  commentId: Overload:SharpNeat.Evaluation.IPhenomeEvaluatorPool`1.ReleaseEvaluator
  isSpec: "True"
  fullName: SharpNeat.Evaluation.IPhenomeEvaluatorPool<TPhenome>.ReleaseEvaluator
  fullName.vb: SharpNeat.Evaluation.IPhenomeEvaluatorPool(Of TPhenome).ReleaseEvaluator
  nameWithType: IPhenomeEvaluatorPool<TPhenome>.ReleaseEvaluator
  nameWithType.vb: IPhenomeEvaluatorPool(Of TPhenome).ReleaseEvaluator
- uid: SharpNeat.Evaluation.ParallelGenomeListEvaluator`2
  name: ParallelGenomeListEvaluator<TGenome, TPhenome>
  href: api/SharpNeat.Evaluation.ParallelGenomeListEvaluator-2.html
  commentId: T:SharpNeat.Evaluation.ParallelGenomeListEvaluator`2
  name.vb: ParallelGenomeListEvaluator(Of TGenome, TPhenome)
  fullName: SharpNeat.Evaluation.ParallelGenomeListEvaluator<TGenome, TPhenome>
  fullName.vb: SharpNeat.Evaluation.ParallelGenomeListEvaluator(Of TGenome, TPhenome)
  nameWithType: ParallelGenomeListEvaluator<TGenome, TPhenome>
  nameWithType.vb: ParallelGenomeListEvaluator(Of TGenome, TPhenome)
- uid: SharpNeat.Evaluation.ParallelGenomeListEvaluator`2.#ctor(SharpNeat.Evaluation.IGenomeDecoder{`0,`1},SharpNeat.Evaluation.IPhenomeEvaluationScheme{`1},System.Int32)
  name: ParallelGenomeListEvaluator(IGenomeDecoder<TGenome, TPhenome>, IPhenomeEvaluationScheme<TPhenome>, int)
  href: api/SharpNeat.Evaluation.ParallelGenomeListEvaluator-2.html#SharpNeat_Evaluation_ParallelGenomeListEvaluator_2__ctor_SharpNeat_Evaluation_IGenomeDecoder__0__1__SharpNeat_Evaluation_IPhenomeEvaluationScheme__1__System_Int32_
  commentId: M:SharpNeat.Evaluation.ParallelGenomeListEvaluator`2.#ctor(SharpNeat.Evaluation.IGenomeDecoder{`0,`1},SharpNeat.Evaluation.IPhenomeEvaluationScheme{`1},System.Int32)
  name.vb: New(IGenomeDecoder(Of TGenome, TPhenome), IPhenomeEvaluationScheme(Of TPhenome), Integer)
  fullName: SharpNeat.Evaluation.ParallelGenomeListEvaluator<TGenome, TPhenome>.ParallelGenomeListEvaluator(SharpNeat.Evaluation.IGenomeDecoder<TGenome, TPhenome>, SharpNeat.Evaluation.IPhenomeEvaluationScheme<TPhenome>, int)
  fullName.vb: SharpNeat.Evaluation.ParallelGenomeListEvaluator(Of TGenome, TPhenome).New(SharpNeat.Evaluation.IGenomeDecoder(Of TGenome, TPhenome), SharpNeat.Evaluation.IPhenomeEvaluationScheme(Of TPhenome), Integer)
  nameWithType: ParallelGenomeListEvaluator<TGenome, TPhenome>.ParallelGenomeListEvaluator(IGenomeDecoder<TGenome, TPhenome>, IPhenomeEvaluationScheme<TPhenome>, int)
  nameWithType.vb: ParallelGenomeListEvaluator(Of TGenome, TPhenome).New(IGenomeDecoder(Of TGenome, TPhenome), IPhenomeEvaluationScheme(Of TPhenome), Integer)
- uid: SharpNeat.Evaluation.ParallelGenomeListEvaluator`2.#ctor*
  name: ParallelGenomeListEvaluator
  href: api/SharpNeat.Evaluation.ParallelGenomeListEvaluator-2.html#SharpNeat_Evaluation_ParallelGenomeListEvaluator_2__ctor_
  commentId: Overload:SharpNeat.Evaluation.ParallelGenomeListEvaluator`2.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Evaluation.ParallelGenomeListEvaluator<TGenome, TPhenome>.ParallelGenomeListEvaluator
  fullName.vb: SharpNeat.Evaluation.ParallelGenomeListEvaluator(Of TGenome, TPhenome).New
  nameWithType: ParallelGenomeListEvaluator<TGenome, TPhenome>.ParallelGenomeListEvaluator
  nameWithType.vb: ParallelGenomeListEvaluator(Of TGenome, TPhenome).New
- uid: SharpNeat.Evaluation.ParallelGenomeListEvaluator`2.Evaluate(System.Collections.Generic.IList{`0})
  name: Evaluate(IList<TGenome>)
  href: api/SharpNeat.Evaluation.ParallelGenomeListEvaluator-2.html#SharpNeat_Evaluation_ParallelGenomeListEvaluator_2_Evaluate_System_Collections_Generic_IList__0__
  commentId: M:SharpNeat.Evaluation.ParallelGenomeListEvaluator`2.Evaluate(System.Collections.Generic.IList{`0})
  name.vb: Evaluate(IList(Of TGenome))
  fullName: SharpNeat.Evaluation.ParallelGenomeListEvaluator<TGenome, TPhenome>.Evaluate(System.Collections.Generic.IList<TGenome>)
  fullName.vb: SharpNeat.Evaluation.ParallelGenomeListEvaluator(Of TGenome, TPhenome).Evaluate(System.Collections.Generic.IList(Of TGenome))
  nameWithType: ParallelGenomeListEvaluator<TGenome, TPhenome>.Evaluate(IList<TGenome>)
  nameWithType.vb: ParallelGenomeListEvaluator(Of TGenome, TPhenome).Evaluate(IList(Of TGenome))
- uid: SharpNeat.Evaluation.ParallelGenomeListEvaluator`2.Evaluate*
  name: Evaluate
  href: api/SharpNeat.Evaluation.ParallelGenomeListEvaluator-2.html#SharpNeat_Evaluation_ParallelGenomeListEvaluator_2_Evaluate_
  commentId: Overload:SharpNeat.Evaluation.ParallelGenomeListEvaluator`2.Evaluate
  isSpec: "True"
  fullName: SharpNeat.Evaluation.ParallelGenomeListEvaluator<TGenome, TPhenome>.Evaluate
  fullName.vb: SharpNeat.Evaluation.ParallelGenomeListEvaluator(Of TGenome, TPhenome).Evaluate
  nameWithType: ParallelGenomeListEvaluator<TGenome, TPhenome>.Evaluate
  nameWithType.vb: ParallelGenomeListEvaluator(Of TGenome, TPhenome).Evaluate
- uid: SharpNeat.Evaluation.ParallelGenomeListEvaluator`2.FitnessComparer
  name: FitnessComparer
  href: api/SharpNeat.Evaluation.ParallelGenomeListEvaluator-2.html#SharpNeat_Evaluation_ParallelGenomeListEvaluator_2_FitnessComparer
  commentId: P:SharpNeat.Evaluation.ParallelGenomeListEvaluator`2.FitnessComparer
  fullName: SharpNeat.Evaluation.ParallelGenomeListEvaluator<TGenome, TPhenome>.FitnessComparer
  fullName.vb: SharpNeat.Evaluation.ParallelGenomeListEvaluator(Of TGenome, TPhenome).FitnessComparer
  nameWithType: ParallelGenomeListEvaluator<TGenome, TPhenome>.FitnessComparer
  nameWithType.vb: ParallelGenomeListEvaluator(Of TGenome, TPhenome).FitnessComparer
- uid: SharpNeat.Evaluation.ParallelGenomeListEvaluator`2.FitnessComparer*
  name: FitnessComparer
  href: api/SharpNeat.Evaluation.ParallelGenomeListEvaluator-2.html#SharpNeat_Evaluation_ParallelGenomeListEvaluator_2_FitnessComparer_
  commentId: Overload:SharpNeat.Evaluation.ParallelGenomeListEvaluator`2.FitnessComparer
  isSpec: "True"
  fullName: SharpNeat.Evaluation.ParallelGenomeListEvaluator<TGenome, TPhenome>.FitnessComparer
  fullName.vb: SharpNeat.Evaluation.ParallelGenomeListEvaluator(Of TGenome, TPhenome).FitnessComparer
  nameWithType: ParallelGenomeListEvaluator<TGenome, TPhenome>.FitnessComparer
  nameWithType.vb: ParallelGenomeListEvaluator(Of TGenome, TPhenome).FitnessComparer
- uid: SharpNeat.Evaluation.ParallelGenomeListEvaluator`2.IsDeterministic
  name: IsDeterministic
  href: api/SharpNeat.Evaluation.ParallelGenomeListEvaluator-2.html#SharpNeat_Evaluation_ParallelGenomeListEvaluator_2_IsDeterministic
  commentId: P:SharpNeat.Evaluation.ParallelGenomeListEvaluator`2.IsDeterministic
  fullName: SharpNeat.Evaluation.ParallelGenomeListEvaluator<TGenome, TPhenome>.IsDeterministic
  fullName.vb: SharpNeat.Evaluation.ParallelGenomeListEvaluator(Of TGenome, TPhenome).IsDeterministic
  nameWithType: ParallelGenomeListEvaluator<TGenome, TPhenome>.IsDeterministic
  nameWithType.vb: ParallelGenomeListEvaluator(Of TGenome, TPhenome).IsDeterministic
- uid: SharpNeat.Evaluation.ParallelGenomeListEvaluator`2.IsDeterministic*
  name: IsDeterministic
  href: api/SharpNeat.Evaluation.ParallelGenomeListEvaluator-2.html#SharpNeat_Evaluation_ParallelGenomeListEvaluator_2_IsDeterministic_
  commentId: Overload:SharpNeat.Evaluation.ParallelGenomeListEvaluator`2.IsDeterministic
  isSpec: "True"
  fullName: SharpNeat.Evaluation.ParallelGenomeListEvaluator<TGenome, TPhenome>.IsDeterministic
  fullName.vb: SharpNeat.Evaluation.ParallelGenomeListEvaluator(Of TGenome, TPhenome).IsDeterministic
  nameWithType: ParallelGenomeListEvaluator<TGenome, TPhenome>.IsDeterministic
  nameWithType.vb: ParallelGenomeListEvaluator(Of TGenome, TPhenome).IsDeterministic
- uid: SharpNeat.Evaluation.ParallelGenomeListEvaluator`2.TestForStopCondition(SharpNeat.Evaluation.FitnessInfo)
  name: TestForStopCondition(FitnessInfo)
  href: api/SharpNeat.Evaluation.ParallelGenomeListEvaluator-2.html#SharpNeat_Evaluation_ParallelGenomeListEvaluator_2_TestForStopCondition_SharpNeat_Evaluation_FitnessInfo_
  commentId: M:SharpNeat.Evaluation.ParallelGenomeListEvaluator`2.TestForStopCondition(SharpNeat.Evaluation.FitnessInfo)
  fullName: SharpNeat.Evaluation.ParallelGenomeListEvaluator<TGenome, TPhenome>.TestForStopCondition(SharpNeat.Evaluation.FitnessInfo)
  fullName.vb: SharpNeat.Evaluation.ParallelGenomeListEvaluator(Of TGenome, TPhenome).TestForStopCondition(SharpNeat.Evaluation.FitnessInfo)
  nameWithType: ParallelGenomeListEvaluator<TGenome, TPhenome>.TestForStopCondition(FitnessInfo)
  nameWithType.vb: ParallelGenomeListEvaluator(Of TGenome, TPhenome).TestForStopCondition(FitnessInfo)
- uid: SharpNeat.Evaluation.ParallelGenomeListEvaluator`2.TestForStopCondition*
  name: TestForStopCondition
  href: api/SharpNeat.Evaluation.ParallelGenomeListEvaluator-2.html#SharpNeat_Evaluation_ParallelGenomeListEvaluator_2_TestForStopCondition_
  commentId: Overload:SharpNeat.Evaluation.ParallelGenomeListEvaluator`2.TestForStopCondition
  isSpec: "True"
  fullName: SharpNeat.Evaluation.ParallelGenomeListEvaluator<TGenome, TPhenome>.TestForStopCondition
  fullName.vb: SharpNeat.Evaluation.ParallelGenomeListEvaluator(Of TGenome, TPhenome).TestForStopCondition
  nameWithType: ParallelGenomeListEvaluator<TGenome, TPhenome>.TestForStopCondition
  nameWithType.vb: ParallelGenomeListEvaluator(Of TGenome, TPhenome).TestForStopCondition
- uid: SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless`2
  name: ParallelGenomeListEvaluatorStateless<TGenome, TPhenome>
  href: api/SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless-2.html
  commentId: T:SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless`2
  name.vb: ParallelGenomeListEvaluatorStateless(Of TGenome, TPhenome)
  fullName: SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless<TGenome, TPhenome>
  fullName.vb: SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless(Of TGenome, TPhenome)
  nameWithType: ParallelGenomeListEvaluatorStateless<TGenome, TPhenome>
  nameWithType.vb: ParallelGenomeListEvaluatorStateless(Of TGenome, TPhenome)
- uid: SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless`2.#ctor(SharpNeat.Evaluation.IGenomeDecoder{`0,`1},SharpNeat.Evaluation.IPhenomeEvaluationScheme{`1},System.Int32)
  name: ParallelGenomeListEvaluatorStateless(IGenomeDecoder<TGenome, TPhenome>, IPhenomeEvaluationScheme<TPhenome>, int)
  href: api/SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless-2.html#SharpNeat_Evaluation_ParallelGenomeListEvaluatorStateless_2__ctor_SharpNeat_Evaluation_IGenomeDecoder__0__1__SharpNeat_Evaluation_IPhenomeEvaluationScheme__1__System_Int32_
  commentId: M:SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless`2.#ctor(SharpNeat.Evaluation.IGenomeDecoder{`0,`1},SharpNeat.Evaluation.IPhenomeEvaluationScheme{`1},System.Int32)
  name.vb: New(IGenomeDecoder(Of TGenome, TPhenome), IPhenomeEvaluationScheme(Of TPhenome), Integer)
  fullName: SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless<TGenome, TPhenome>.ParallelGenomeListEvaluatorStateless(SharpNeat.Evaluation.IGenomeDecoder<TGenome, TPhenome>, SharpNeat.Evaluation.IPhenomeEvaluationScheme<TPhenome>, int)
  fullName.vb: SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless(Of TGenome, TPhenome).New(SharpNeat.Evaluation.IGenomeDecoder(Of TGenome, TPhenome), SharpNeat.Evaluation.IPhenomeEvaluationScheme(Of TPhenome), Integer)
  nameWithType: ParallelGenomeListEvaluatorStateless<TGenome, TPhenome>.ParallelGenomeListEvaluatorStateless(IGenomeDecoder<TGenome, TPhenome>, IPhenomeEvaluationScheme<TPhenome>, int)
  nameWithType.vb: ParallelGenomeListEvaluatorStateless(Of TGenome, TPhenome).New(IGenomeDecoder(Of TGenome, TPhenome), IPhenomeEvaluationScheme(Of TPhenome), Integer)
- uid: SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless`2.#ctor*
  name: ParallelGenomeListEvaluatorStateless
  href: api/SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless-2.html#SharpNeat_Evaluation_ParallelGenomeListEvaluatorStateless_2__ctor_
  commentId: Overload:SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless`2.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless<TGenome, TPhenome>.ParallelGenomeListEvaluatorStateless
  fullName.vb: SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless(Of TGenome, TPhenome).New
  nameWithType: ParallelGenomeListEvaluatorStateless<TGenome, TPhenome>.ParallelGenomeListEvaluatorStateless
  nameWithType.vb: ParallelGenomeListEvaluatorStateless(Of TGenome, TPhenome).New
- uid: SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless`2.Evaluate(System.Collections.Generic.IList{`0})
  name: Evaluate(IList<TGenome>)
  href: api/SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless-2.html#SharpNeat_Evaluation_ParallelGenomeListEvaluatorStateless_2_Evaluate_System_Collections_Generic_IList__0__
  commentId: M:SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless`2.Evaluate(System.Collections.Generic.IList{`0})
  name.vb: Evaluate(IList(Of TGenome))
  fullName: SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless<TGenome, TPhenome>.Evaluate(System.Collections.Generic.IList<TGenome>)
  fullName.vb: SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless(Of TGenome, TPhenome).Evaluate(System.Collections.Generic.IList(Of TGenome))
  nameWithType: ParallelGenomeListEvaluatorStateless<TGenome, TPhenome>.Evaluate(IList<TGenome>)
  nameWithType.vb: ParallelGenomeListEvaluatorStateless(Of TGenome, TPhenome).Evaluate(IList(Of TGenome))
- uid: SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless`2.Evaluate*
  name: Evaluate
  href: api/SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless-2.html#SharpNeat_Evaluation_ParallelGenomeListEvaluatorStateless_2_Evaluate_
  commentId: Overload:SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless`2.Evaluate
  isSpec: "True"
  fullName: SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless<TGenome, TPhenome>.Evaluate
  fullName.vb: SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless(Of TGenome, TPhenome).Evaluate
  nameWithType: ParallelGenomeListEvaluatorStateless<TGenome, TPhenome>.Evaluate
  nameWithType.vb: ParallelGenomeListEvaluatorStateless(Of TGenome, TPhenome).Evaluate
- uid: SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless`2.FitnessComparer
  name: FitnessComparer
  href: api/SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless-2.html#SharpNeat_Evaluation_ParallelGenomeListEvaluatorStateless_2_FitnessComparer
  commentId: P:SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless`2.FitnessComparer
  fullName: SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless<TGenome, TPhenome>.FitnessComparer
  fullName.vb: SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless(Of TGenome, TPhenome).FitnessComparer
  nameWithType: ParallelGenomeListEvaluatorStateless<TGenome, TPhenome>.FitnessComparer
  nameWithType.vb: ParallelGenomeListEvaluatorStateless(Of TGenome, TPhenome).FitnessComparer
- uid: SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless`2.FitnessComparer*
  name: FitnessComparer
  href: api/SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless-2.html#SharpNeat_Evaluation_ParallelGenomeListEvaluatorStateless_2_FitnessComparer_
  commentId: Overload:SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless`2.FitnessComparer
  isSpec: "True"
  fullName: SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless<TGenome, TPhenome>.FitnessComparer
  fullName.vb: SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless(Of TGenome, TPhenome).FitnessComparer
  nameWithType: ParallelGenomeListEvaluatorStateless<TGenome, TPhenome>.FitnessComparer
  nameWithType.vb: ParallelGenomeListEvaluatorStateless(Of TGenome, TPhenome).FitnessComparer
- uid: SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless`2.IsDeterministic
  name: IsDeterministic
  href: api/SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless-2.html#SharpNeat_Evaluation_ParallelGenomeListEvaluatorStateless_2_IsDeterministic
  commentId: P:SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless`2.IsDeterministic
  fullName: SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless<TGenome, TPhenome>.IsDeterministic
  fullName.vb: SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless(Of TGenome, TPhenome).IsDeterministic
  nameWithType: ParallelGenomeListEvaluatorStateless<TGenome, TPhenome>.IsDeterministic
  nameWithType.vb: ParallelGenomeListEvaluatorStateless(Of TGenome, TPhenome).IsDeterministic
- uid: SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless`2.IsDeterministic*
  name: IsDeterministic
  href: api/SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless-2.html#SharpNeat_Evaluation_ParallelGenomeListEvaluatorStateless_2_IsDeterministic_
  commentId: Overload:SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless`2.IsDeterministic
  isSpec: "True"
  fullName: SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless<TGenome, TPhenome>.IsDeterministic
  fullName.vb: SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless(Of TGenome, TPhenome).IsDeterministic
  nameWithType: ParallelGenomeListEvaluatorStateless<TGenome, TPhenome>.IsDeterministic
  nameWithType.vb: ParallelGenomeListEvaluatorStateless(Of TGenome, TPhenome).IsDeterministic
- uid: SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless`2.TestForStopCondition(SharpNeat.Evaluation.FitnessInfo)
  name: TestForStopCondition(FitnessInfo)
  href: api/SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless-2.html#SharpNeat_Evaluation_ParallelGenomeListEvaluatorStateless_2_TestForStopCondition_SharpNeat_Evaluation_FitnessInfo_
  commentId: M:SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless`2.TestForStopCondition(SharpNeat.Evaluation.FitnessInfo)
  fullName: SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless<TGenome, TPhenome>.TestForStopCondition(SharpNeat.Evaluation.FitnessInfo)
  fullName.vb: SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless(Of TGenome, TPhenome).TestForStopCondition(SharpNeat.Evaluation.FitnessInfo)
  nameWithType: ParallelGenomeListEvaluatorStateless<TGenome, TPhenome>.TestForStopCondition(FitnessInfo)
  nameWithType.vb: ParallelGenomeListEvaluatorStateless(Of TGenome, TPhenome).TestForStopCondition(FitnessInfo)
- uid: SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless`2.TestForStopCondition*
  name: TestForStopCondition
  href: api/SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless-2.html#SharpNeat_Evaluation_ParallelGenomeListEvaluatorStateless_2_TestForStopCondition_
  commentId: Overload:SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless`2.TestForStopCondition
  isSpec: "True"
  fullName: SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless<TGenome, TPhenome>.TestForStopCondition
  fullName.vb: SharpNeat.Evaluation.ParallelGenomeListEvaluatorStateless(Of TGenome, TPhenome).TestForStopCondition
  nameWithType: ParallelGenomeListEvaluatorStateless<TGenome, TPhenome>.TestForStopCondition
  nameWithType.vb: ParallelGenomeListEvaluatorStateless(Of TGenome, TPhenome).TestForStopCondition
- uid: SharpNeat.Evaluation.PhenomeEvaluatorStackPool`1
  name: PhenomeEvaluatorStackPool<TPhenome>
  href: api/SharpNeat.Evaluation.PhenomeEvaluatorStackPool-1.html
  commentId: T:SharpNeat.Evaluation.PhenomeEvaluatorStackPool`1
  name.vb: PhenomeEvaluatorStackPool(Of TPhenome)
  fullName: SharpNeat.Evaluation.PhenomeEvaluatorStackPool<TPhenome>
  fullName.vb: SharpNeat.Evaluation.PhenomeEvaluatorStackPool(Of TPhenome)
  nameWithType: PhenomeEvaluatorStackPool<TPhenome>
  nameWithType.vb: PhenomeEvaluatorStackPool(Of TPhenome)
- uid: SharpNeat.Evaluation.PhenomeEvaluatorStackPool`1.#ctor(SharpNeat.Evaluation.IPhenomeEvaluationScheme{`0},System.Int32)
  name: PhenomeEvaluatorStackPool(IPhenomeEvaluationScheme<TPhenome>, int)
  href: api/SharpNeat.Evaluation.PhenomeEvaluatorStackPool-1.html#SharpNeat_Evaluation_PhenomeEvaluatorStackPool_1__ctor_SharpNeat_Evaluation_IPhenomeEvaluationScheme__0__System_Int32_
  commentId: M:SharpNeat.Evaluation.PhenomeEvaluatorStackPool`1.#ctor(SharpNeat.Evaluation.IPhenomeEvaluationScheme{`0},System.Int32)
  name.vb: New(IPhenomeEvaluationScheme(Of TPhenome), Integer)
  fullName: SharpNeat.Evaluation.PhenomeEvaluatorStackPool<TPhenome>.PhenomeEvaluatorStackPool(SharpNeat.Evaluation.IPhenomeEvaluationScheme<TPhenome>, int)
  fullName.vb: SharpNeat.Evaluation.PhenomeEvaluatorStackPool(Of TPhenome).New(SharpNeat.Evaluation.IPhenomeEvaluationScheme(Of TPhenome), Integer)
  nameWithType: PhenomeEvaluatorStackPool<TPhenome>.PhenomeEvaluatorStackPool(IPhenomeEvaluationScheme<TPhenome>, int)
  nameWithType.vb: PhenomeEvaluatorStackPool(Of TPhenome).New(IPhenomeEvaluationScheme(Of TPhenome), Integer)
- uid: SharpNeat.Evaluation.PhenomeEvaluatorStackPool`1.#ctor*
  name: PhenomeEvaluatorStackPool
  href: api/SharpNeat.Evaluation.PhenomeEvaluatorStackPool-1.html#SharpNeat_Evaluation_PhenomeEvaluatorStackPool_1__ctor_
  commentId: Overload:SharpNeat.Evaluation.PhenomeEvaluatorStackPool`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Evaluation.PhenomeEvaluatorStackPool<TPhenome>.PhenomeEvaluatorStackPool
  fullName.vb: SharpNeat.Evaluation.PhenomeEvaluatorStackPool(Of TPhenome).New
  nameWithType: PhenomeEvaluatorStackPool<TPhenome>.PhenomeEvaluatorStackPool
  nameWithType.vb: PhenomeEvaluatorStackPool(Of TPhenome).New
- uid: SharpNeat.Evaluation.PhenomeEvaluatorStackPool`1.GetEvaluator
  name: GetEvaluator()
  href: api/SharpNeat.Evaluation.PhenomeEvaluatorStackPool-1.html#SharpNeat_Evaluation_PhenomeEvaluatorStackPool_1_GetEvaluator
  commentId: M:SharpNeat.Evaluation.PhenomeEvaluatorStackPool`1.GetEvaluator
  fullName: SharpNeat.Evaluation.PhenomeEvaluatorStackPool<TPhenome>.GetEvaluator()
  fullName.vb: SharpNeat.Evaluation.PhenomeEvaluatorStackPool(Of TPhenome).GetEvaluator()
  nameWithType: PhenomeEvaluatorStackPool<TPhenome>.GetEvaluator()
  nameWithType.vb: PhenomeEvaluatorStackPool(Of TPhenome).GetEvaluator()
- uid: SharpNeat.Evaluation.PhenomeEvaluatorStackPool`1.GetEvaluator*
  name: GetEvaluator
  href: api/SharpNeat.Evaluation.PhenomeEvaluatorStackPool-1.html#SharpNeat_Evaluation_PhenomeEvaluatorStackPool_1_GetEvaluator_
  commentId: Overload:SharpNeat.Evaluation.PhenomeEvaluatorStackPool`1.GetEvaluator
  isSpec: "True"
  fullName: SharpNeat.Evaluation.PhenomeEvaluatorStackPool<TPhenome>.GetEvaluator
  fullName.vb: SharpNeat.Evaluation.PhenomeEvaluatorStackPool(Of TPhenome).GetEvaluator
  nameWithType: PhenomeEvaluatorStackPool<TPhenome>.GetEvaluator
  nameWithType.vb: PhenomeEvaluatorStackPool(Of TPhenome).GetEvaluator
- uid: SharpNeat.Evaluation.PhenomeEvaluatorStackPool`1.ReleaseEvaluator(SharpNeat.Evaluation.IPhenomeEvaluator{`0})
  name: ReleaseEvaluator(IPhenomeEvaluator<TPhenome>)
  href: api/SharpNeat.Evaluation.PhenomeEvaluatorStackPool-1.html#SharpNeat_Evaluation_PhenomeEvaluatorStackPool_1_ReleaseEvaluator_SharpNeat_Evaluation_IPhenomeEvaluator__0__
  commentId: M:SharpNeat.Evaluation.PhenomeEvaluatorStackPool`1.ReleaseEvaluator(SharpNeat.Evaluation.IPhenomeEvaluator{`0})
  name.vb: ReleaseEvaluator(IPhenomeEvaluator(Of TPhenome))
  fullName: SharpNeat.Evaluation.PhenomeEvaluatorStackPool<TPhenome>.ReleaseEvaluator(SharpNeat.Evaluation.IPhenomeEvaluator<TPhenome>)
  fullName.vb: SharpNeat.Evaluation.PhenomeEvaluatorStackPool(Of TPhenome).ReleaseEvaluator(SharpNeat.Evaluation.IPhenomeEvaluator(Of TPhenome))
  nameWithType: PhenomeEvaluatorStackPool<TPhenome>.ReleaseEvaluator(IPhenomeEvaluator<TPhenome>)
  nameWithType.vb: PhenomeEvaluatorStackPool(Of TPhenome).ReleaseEvaluator(IPhenomeEvaluator(Of TPhenome))
- uid: SharpNeat.Evaluation.PhenomeEvaluatorStackPool`1.ReleaseEvaluator*
  name: ReleaseEvaluator
  href: api/SharpNeat.Evaluation.PhenomeEvaluatorStackPool-1.html#SharpNeat_Evaluation_PhenomeEvaluatorStackPool_1_ReleaseEvaluator_
  commentId: Overload:SharpNeat.Evaluation.PhenomeEvaluatorStackPool`1.ReleaseEvaluator
  isSpec: "True"
  fullName: SharpNeat.Evaluation.PhenomeEvaluatorStackPool<TPhenome>.ReleaseEvaluator
  fullName.vb: SharpNeat.Evaluation.PhenomeEvaluatorStackPool(Of TPhenome).ReleaseEvaluator
  nameWithType: PhenomeEvaluatorStackPool<TPhenome>.ReleaseEvaluator
  nameWithType.vb: PhenomeEvaluatorStackPool(Of TPhenome).ReleaseEvaluator
- uid: SharpNeat.Evaluation.PrimaryFitnessInfoComparer
  name: PrimaryFitnessInfoComparer
  href: api/SharpNeat.Evaluation.PrimaryFitnessInfoComparer.html
  commentId: T:SharpNeat.Evaluation.PrimaryFitnessInfoComparer
  fullName: SharpNeat.Evaluation.PrimaryFitnessInfoComparer
  nameWithType: PrimaryFitnessInfoComparer
- uid: SharpNeat.Evaluation.PrimaryFitnessInfoComparer.Compare(SharpNeat.Evaluation.FitnessInfo,SharpNeat.Evaluation.FitnessInfo)
  name: Compare(FitnessInfo, FitnessInfo)
  href: api/SharpNeat.Evaluation.PrimaryFitnessInfoComparer.html#SharpNeat_Evaluation_PrimaryFitnessInfoComparer_Compare_SharpNeat_Evaluation_FitnessInfo_SharpNeat_Evaluation_FitnessInfo_
  commentId: M:SharpNeat.Evaluation.PrimaryFitnessInfoComparer.Compare(SharpNeat.Evaluation.FitnessInfo,SharpNeat.Evaluation.FitnessInfo)
  fullName: SharpNeat.Evaluation.PrimaryFitnessInfoComparer.Compare(SharpNeat.Evaluation.FitnessInfo, SharpNeat.Evaluation.FitnessInfo)
  nameWithType: PrimaryFitnessInfoComparer.Compare(FitnessInfo, FitnessInfo)
- uid: SharpNeat.Evaluation.PrimaryFitnessInfoComparer.Compare*
  name: Compare
  href: api/SharpNeat.Evaluation.PrimaryFitnessInfoComparer.html#SharpNeat_Evaluation_PrimaryFitnessInfoComparer_Compare_
  commentId: Overload:SharpNeat.Evaluation.PrimaryFitnessInfoComparer.Compare
  isSpec: "True"
  fullName: SharpNeat.Evaluation.PrimaryFitnessInfoComparer.Compare
  nameWithType: PrimaryFitnessInfoComparer.Compare
- uid: SharpNeat.Evaluation.PrimaryFitnessInfoComparer.Singleton
  name: Singleton
  href: api/SharpNeat.Evaluation.PrimaryFitnessInfoComparer.html#SharpNeat_Evaluation_PrimaryFitnessInfoComparer_Singleton
  commentId: F:SharpNeat.Evaluation.PrimaryFitnessInfoComparer.Singleton
  fullName: SharpNeat.Evaluation.PrimaryFitnessInfoComparer.Singleton
  nameWithType: PrimaryFitnessInfoComparer.Singleton
- uid: SharpNeat.Evaluation.SerialGenomeListEvaluator`2
  name: SerialGenomeListEvaluator<TGenome, TPhenome>
  href: api/SharpNeat.Evaluation.SerialGenomeListEvaluator-2.html
  commentId: T:SharpNeat.Evaluation.SerialGenomeListEvaluator`2
  name.vb: SerialGenomeListEvaluator(Of TGenome, TPhenome)
  fullName: SharpNeat.Evaluation.SerialGenomeListEvaluator<TGenome, TPhenome>
  fullName.vb: SharpNeat.Evaluation.SerialGenomeListEvaluator(Of TGenome, TPhenome)
  nameWithType: SerialGenomeListEvaluator<TGenome, TPhenome>
  nameWithType.vb: SerialGenomeListEvaluator(Of TGenome, TPhenome)
- uid: SharpNeat.Evaluation.SerialGenomeListEvaluator`2.#ctor(SharpNeat.Evaluation.IGenomeDecoder{`0,`1},SharpNeat.Evaluation.IPhenomeEvaluationScheme{`1})
  name: SerialGenomeListEvaluator(IGenomeDecoder<TGenome, TPhenome>, IPhenomeEvaluationScheme<TPhenome>)
  href: api/SharpNeat.Evaluation.SerialGenomeListEvaluator-2.html#SharpNeat_Evaluation_SerialGenomeListEvaluator_2__ctor_SharpNeat_Evaluation_IGenomeDecoder__0__1__SharpNeat_Evaluation_IPhenomeEvaluationScheme__1__
  commentId: M:SharpNeat.Evaluation.SerialGenomeListEvaluator`2.#ctor(SharpNeat.Evaluation.IGenomeDecoder{`0,`1},SharpNeat.Evaluation.IPhenomeEvaluationScheme{`1})
  name.vb: New(IGenomeDecoder(Of TGenome, TPhenome), IPhenomeEvaluationScheme(Of TPhenome))
  fullName: SharpNeat.Evaluation.SerialGenomeListEvaluator<TGenome, TPhenome>.SerialGenomeListEvaluator(SharpNeat.Evaluation.IGenomeDecoder<TGenome, TPhenome>, SharpNeat.Evaluation.IPhenomeEvaluationScheme<TPhenome>)
  fullName.vb: SharpNeat.Evaluation.SerialGenomeListEvaluator(Of TGenome, TPhenome).New(SharpNeat.Evaluation.IGenomeDecoder(Of TGenome, TPhenome), SharpNeat.Evaluation.IPhenomeEvaluationScheme(Of TPhenome))
  nameWithType: SerialGenomeListEvaluator<TGenome, TPhenome>.SerialGenomeListEvaluator(IGenomeDecoder<TGenome, TPhenome>, IPhenomeEvaluationScheme<TPhenome>)
  nameWithType.vb: SerialGenomeListEvaluator(Of TGenome, TPhenome).New(IGenomeDecoder(Of TGenome, TPhenome), IPhenomeEvaluationScheme(Of TPhenome))
- uid: SharpNeat.Evaluation.SerialGenomeListEvaluator`2.#ctor*
  name: SerialGenomeListEvaluator
  href: api/SharpNeat.Evaluation.SerialGenomeListEvaluator-2.html#SharpNeat_Evaluation_SerialGenomeListEvaluator_2__ctor_
  commentId: Overload:SharpNeat.Evaluation.SerialGenomeListEvaluator`2.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Evaluation.SerialGenomeListEvaluator<TGenome, TPhenome>.SerialGenomeListEvaluator
  fullName.vb: SharpNeat.Evaluation.SerialGenomeListEvaluator(Of TGenome, TPhenome).New
  nameWithType: SerialGenomeListEvaluator<TGenome, TPhenome>.SerialGenomeListEvaluator
  nameWithType.vb: SerialGenomeListEvaluator(Of TGenome, TPhenome).New
- uid: SharpNeat.Evaluation.SerialGenomeListEvaluator`2.Evaluate(System.Collections.Generic.IList{`0})
  name: Evaluate(IList<TGenome>)
  href: api/SharpNeat.Evaluation.SerialGenomeListEvaluator-2.html#SharpNeat_Evaluation_SerialGenomeListEvaluator_2_Evaluate_System_Collections_Generic_IList__0__
  commentId: M:SharpNeat.Evaluation.SerialGenomeListEvaluator`2.Evaluate(System.Collections.Generic.IList{`0})
  name.vb: Evaluate(IList(Of TGenome))
  fullName: SharpNeat.Evaluation.SerialGenomeListEvaluator<TGenome, TPhenome>.Evaluate(System.Collections.Generic.IList<TGenome>)
  fullName.vb: SharpNeat.Evaluation.SerialGenomeListEvaluator(Of TGenome, TPhenome).Evaluate(System.Collections.Generic.IList(Of TGenome))
  nameWithType: SerialGenomeListEvaluator<TGenome, TPhenome>.Evaluate(IList<TGenome>)
  nameWithType.vb: SerialGenomeListEvaluator(Of TGenome, TPhenome).Evaluate(IList(Of TGenome))
- uid: SharpNeat.Evaluation.SerialGenomeListEvaluator`2.Evaluate*
  name: Evaluate
  href: api/SharpNeat.Evaluation.SerialGenomeListEvaluator-2.html#SharpNeat_Evaluation_SerialGenomeListEvaluator_2_Evaluate_
  commentId: Overload:SharpNeat.Evaluation.SerialGenomeListEvaluator`2.Evaluate
  isSpec: "True"
  fullName: SharpNeat.Evaluation.SerialGenomeListEvaluator<TGenome, TPhenome>.Evaluate
  fullName.vb: SharpNeat.Evaluation.SerialGenomeListEvaluator(Of TGenome, TPhenome).Evaluate
  nameWithType: SerialGenomeListEvaluator<TGenome, TPhenome>.Evaluate
  nameWithType.vb: SerialGenomeListEvaluator(Of TGenome, TPhenome).Evaluate
- uid: SharpNeat.Evaluation.SerialGenomeListEvaluator`2.FitnessComparer
  name: FitnessComparer
  href: api/SharpNeat.Evaluation.SerialGenomeListEvaluator-2.html#SharpNeat_Evaluation_SerialGenomeListEvaluator_2_FitnessComparer
  commentId: P:SharpNeat.Evaluation.SerialGenomeListEvaluator`2.FitnessComparer
  fullName: SharpNeat.Evaluation.SerialGenomeListEvaluator<TGenome, TPhenome>.FitnessComparer
  fullName.vb: SharpNeat.Evaluation.SerialGenomeListEvaluator(Of TGenome, TPhenome).FitnessComparer
  nameWithType: SerialGenomeListEvaluator<TGenome, TPhenome>.FitnessComparer
  nameWithType.vb: SerialGenomeListEvaluator(Of TGenome, TPhenome).FitnessComparer
- uid: SharpNeat.Evaluation.SerialGenomeListEvaluator`2.FitnessComparer*
  name: FitnessComparer
  href: api/SharpNeat.Evaluation.SerialGenomeListEvaluator-2.html#SharpNeat_Evaluation_SerialGenomeListEvaluator_2_FitnessComparer_
  commentId: Overload:SharpNeat.Evaluation.SerialGenomeListEvaluator`2.FitnessComparer
  isSpec: "True"
  fullName: SharpNeat.Evaluation.SerialGenomeListEvaluator<TGenome, TPhenome>.FitnessComparer
  fullName.vb: SharpNeat.Evaluation.SerialGenomeListEvaluator(Of TGenome, TPhenome).FitnessComparer
  nameWithType: SerialGenomeListEvaluator<TGenome, TPhenome>.FitnessComparer
  nameWithType.vb: SerialGenomeListEvaluator(Of TGenome, TPhenome).FitnessComparer
- uid: SharpNeat.Evaluation.SerialGenomeListEvaluator`2.IsDeterministic
  name: IsDeterministic
  href: api/SharpNeat.Evaluation.SerialGenomeListEvaluator-2.html#SharpNeat_Evaluation_SerialGenomeListEvaluator_2_IsDeterministic
  commentId: P:SharpNeat.Evaluation.SerialGenomeListEvaluator`2.IsDeterministic
  fullName: SharpNeat.Evaluation.SerialGenomeListEvaluator<TGenome, TPhenome>.IsDeterministic
  fullName.vb: SharpNeat.Evaluation.SerialGenomeListEvaluator(Of TGenome, TPhenome).IsDeterministic
  nameWithType: SerialGenomeListEvaluator<TGenome, TPhenome>.IsDeterministic
  nameWithType.vb: SerialGenomeListEvaluator(Of TGenome, TPhenome).IsDeterministic
- uid: SharpNeat.Evaluation.SerialGenomeListEvaluator`2.IsDeterministic*
  name: IsDeterministic
  href: api/SharpNeat.Evaluation.SerialGenomeListEvaluator-2.html#SharpNeat_Evaluation_SerialGenomeListEvaluator_2_IsDeterministic_
  commentId: Overload:SharpNeat.Evaluation.SerialGenomeListEvaluator`2.IsDeterministic
  isSpec: "True"
  fullName: SharpNeat.Evaluation.SerialGenomeListEvaluator<TGenome, TPhenome>.IsDeterministic
  fullName.vb: SharpNeat.Evaluation.SerialGenomeListEvaluator(Of TGenome, TPhenome).IsDeterministic
  nameWithType: SerialGenomeListEvaluator<TGenome, TPhenome>.IsDeterministic
  nameWithType.vb: SerialGenomeListEvaluator(Of TGenome, TPhenome).IsDeterministic
- uid: SharpNeat.Evaluation.SerialGenomeListEvaluator`2.TestForStopCondition(SharpNeat.Evaluation.FitnessInfo)
  name: TestForStopCondition(FitnessInfo)
  href: api/SharpNeat.Evaluation.SerialGenomeListEvaluator-2.html#SharpNeat_Evaluation_SerialGenomeListEvaluator_2_TestForStopCondition_SharpNeat_Evaluation_FitnessInfo_
  commentId: M:SharpNeat.Evaluation.SerialGenomeListEvaluator`2.TestForStopCondition(SharpNeat.Evaluation.FitnessInfo)
  fullName: SharpNeat.Evaluation.SerialGenomeListEvaluator<TGenome, TPhenome>.TestForStopCondition(SharpNeat.Evaluation.FitnessInfo)
  fullName.vb: SharpNeat.Evaluation.SerialGenomeListEvaluator(Of TGenome, TPhenome).TestForStopCondition(SharpNeat.Evaluation.FitnessInfo)
  nameWithType: SerialGenomeListEvaluator<TGenome, TPhenome>.TestForStopCondition(FitnessInfo)
  nameWithType.vb: SerialGenomeListEvaluator(Of TGenome, TPhenome).TestForStopCondition(FitnessInfo)
- uid: SharpNeat.Evaluation.SerialGenomeListEvaluator`2.TestForStopCondition*
  name: TestForStopCondition
  href: api/SharpNeat.Evaluation.SerialGenomeListEvaluator-2.html#SharpNeat_Evaluation_SerialGenomeListEvaluator_2_TestForStopCondition_
  commentId: Overload:SharpNeat.Evaluation.SerialGenomeListEvaluator`2.TestForStopCondition
  isSpec: "True"
  fullName: SharpNeat.Evaluation.SerialGenomeListEvaluator<TGenome, TPhenome>.TestForStopCondition
  fullName.vb: SharpNeat.Evaluation.SerialGenomeListEvaluator(Of TGenome, TPhenome).TestForStopCondition
  nameWithType: SerialGenomeListEvaluator<TGenome, TPhenome>.TestForStopCondition
  nameWithType.vb: SerialGenomeListEvaluator(Of TGenome, TPhenome).TestForStopCondition
- uid: SharpNeat.EvolutionAlgorithm
  name: SharpNeat.EvolutionAlgorithm
  href: api/SharpNeat.EvolutionAlgorithm.html
  commentId: N:SharpNeat.EvolutionAlgorithm
  fullName: SharpNeat.EvolutionAlgorithm
  nameWithType: SharpNeat.EvolutionAlgorithm
- uid: SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics
  name: EvolutionAlgorithmStatistics
  href: api/SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics.html
  commentId: T:SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics
  fullName: SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics
  nameWithType: EvolutionAlgorithmStatistics
- uid: SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics.EvaluationsPerSec
  name: EvaluationsPerSec
  href: api/SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics.html#SharpNeat_EvolutionAlgorithm_EvolutionAlgorithmStatistics_EvaluationsPerSec
  commentId: P:SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics.EvaluationsPerSec
  fullName: SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics.EvaluationsPerSec
  nameWithType: EvolutionAlgorithmStatistics.EvaluationsPerSec
- uid: SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics.EvaluationsPerSec*
  name: EvaluationsPerSec
  href: api/SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics.html#SharpNeat_EvolutionAlgorithm_EvolutionAlgorithmStatistics_EvaluationsPerSec_
  commentId: Overload:SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics.EvaluationsPerSec
  isSpec: "True"
  fullName: SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics.EvaluationsPerSec
  nameWithType: EvolutionAlgorithmStatistics.EvaluationsPerSec
- uid: SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics.Generation
  name: Generation
  href: api/SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics.html#SharpNeat_EvolutionAlgorithm_EvolutionAlgorithmStatistics_Generation
  commentId: P:SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics.Generation
  fullName: SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics.Generation
  nameWithType: EvolutionAlgorithmStatistics.Generation
- uid: SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics.Generation*
  name: Generation
  href: api/SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics.html#SharpNeat_EvolutionAlgorithm_EvolutionAlgorithmStatistics_Generation_
  commentId: Overload:SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics.Generation
  isSpec: "True"
  fullName: SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics.Generation
  nameWithType: EvolutionAlgorithmStatistics.Generation
- uid: SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics.SampleTime
  name: SampleTime
  href: api/SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics.html#SharpNeat_EvolutionAlgorithm_EvolutionAlgorithmStatistics_SampleTime
  commentId: P:SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics.SampleTime
  fullName: SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics.SampleTime
  nameWithType: EvolutionAlgorithmStatistics.SampleTime
- uid: SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics.SampleTime*
  name: SampleTime
  href: api/SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics.html#SharpNeat_EvolutionAlgorithm_EvolutionAlgorithmStatistics_SampleTime_
  commentId: Overload:SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics.SampleTime
  isSpec: "True"
  fullName: SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics.SampleTime
  nameWithType: EvolutionAlgorithmStatistics.SampleTime
- uid: SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics.StopConditionSatisfied
  name: StopConditionSatisfied
  href: api/SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics.html#SharpNeat_EvolutionAlgorithm_EvolutionAlgorithmStatistics_StopConditionSatisfied
  commentId: P:SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics.StopConditionSatisfied
  fullName: SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics.StopConditionSatisfied
  nameWithType: EvolutionAlgorithmStatistics.StopConditionSatisfied
- uid: SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics.StopConditionSatisfied*
  name: StopConditionSatisfied
  href: api/SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics.html#SharpNeat_EvolutionAlgorithm_EvolutionAlgorithmStatistics_StopConditionSatisfied_
  commentId: Overload:SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics.StopConditionSatisfied
  isSpec: "True"
  fullName: SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics.StopConditionSatisfied
  nameWithType: EvolutionAlgorithmStatistics.StopConditionSatisfied
- uid: SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics.TotalEvaluationCount
  name: TotalEvaluationCount
  href: api/SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics.html#SharpNeat_EvolutionAlgorithm_EvolutionAlgorithmStatistics_TotalEvaluationCount
  commentId: P:SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics.TotalEvaluationCount
  fullName: SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics.TotalEvaluationCount
  nameWithType: EvolutionAlgorithmStatistics.TotalEvaluationCount
- uid: SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics.TotalEvaluationCount*
  name: TotalEvaluationCount
  href: api/SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics.html#SharpNeat_EvolutionAlgorithm_EvolutionAlgorithmStatistics_TotalEvaluationCount_
  commentId: Overload:SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics.TotalEvaluationCount
  isSpec: "True"
  fullName: SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics.TotalEvaluationCount
  nameWithType: EvolutionAlgorithmStatistics.TotalEvaluationCount
- uid: SharpNeat.EvolutionAlgorithm.IEvolutionAlgorithm
  name: IEvolutionAlgorithm
  href: api/SharpNeat.EvolutionAlgorithm.IEvolutionAlgorithm.html
  commentId: T:SharpNeat.EvolutionAlgorithm.IEvolutionAlgorithm
  fullName: SharpNeat.EvolutionAlgorithm.IEvolutionAlgorithm
  nameWithType: IEvolutionAlgorithm
- uid: SharpNeat.EvolutionAlgorithm.IEvolutionAlgorithm.Initialise
  name: Initialise()
  href: api/SharpNeat.EvolutionAlgorithm.IEvolutionAlgorithm.html#SharpNeat_EvolutionAlgorithm_IEvolutionAlgorithm_Initialise
  commentId: M:SharpNeat.EvolutionAlgorithm.IEvolutionAlgorithm.Initialise
  fullName: SharpNeat.EvolutionAlgorithm.IEvolutionAlgorithm.Initialise()
  nameWithType: IEvolutionAlgorithm.Initialise()
- uid: SharpNeat.EvolutionAlgorithm.IEvolutionAlgorithm.Initialise*
  name: Initialise
  href: api/SharpNeat.EvolutionAlgorithm.IEvolutionAlgorithm.html#SharpNeat_EvolutionAlgorithm_IEvolutionAlgorithm_Initialise_
  commentId: Overload:SharpNeat.EvolutionAlgorithm.IEvolutionAlgorithm.Initialise
  isSpec: "True"
  fullName: SharpNeat.EvolutionAlgorithm.IEvolutionAlgorithm.Initialise
  nameWithType: IEvolutionAlgorithm.Initialise
- uid: SharpNeat.EvolutionAlgorithm.IEvolutionAlgorithm.PerformOneGeneration
  name: PerformOneGeneration()
  href: api/SharpNeat.EvolutionAlgorithm.IEvolutionAlgorithm.html#SharpNeat_EvolutionAlgorithm_IEvolutionAlgorithm_PerformOneGeneration
  commentId: M:SharpNeat.EvolutionAlgorithm.IEvolutionAlgorithm.PerformOneGeneration
  fullName: SharpNeat.EvolutionAlgorithm.IEvolutionAlgorithm.PerformOneGeneration()
  nameWithType: IEvolutionAlgorithm.PerformOneGeneration()
- uid: SharpNeat.EvolutionAlgorithm.IEvolutionAlgorithm.PerformOneGeneration*
  name: PerformOneGeneration
  href: api/SharpNeat.EvolutionAlgorithm.IEvolutionAlgorithm.html#SharpNeat_EvolutionAlgorithm_IEvolutionAlgorithm_PerformOneGeneration_
  commentId: Overload:SharpNeat.EvolutionAlgorithm.IEvolutionAlgorithm.PerformOneGeneration
  isSpec: "True"
  fullName: SharpNeat.EvolutionAlgorithm.IEvolutionAlgorithm.PerformOneGeneration
  nameWithType: IEvolutionAlgorithm.PerformOneGeneration
- uid: SharpNeat.EvolutionAlgorithm.IEvolutionAlgorithm.Stats
  name: Stats
  href: api/SharpNeat.EvolutionAlgorithm.IEvolutionAlgorithm.html#SharpNeat_EvolutionAlgorithm_IEvolutionAlgorithm_Stats
  commentId: P:SharpNeat.EvolutionAlgorithm.IEvolutionAlgorithm.Stats
  fullName: SharpNeat.EvolutionAlgorithm.IEvolutionAlgorithm.Stats
  nameWithType: IEvolutionAlgorithm.Stats
- uid: SharpNeat.EvolutionAlgorithm.IEvolutionAlgorithm.Stats*
  name: Stats
  href: api/SharpNeat.EvolutionAlgorithm.IEvolutionAlgorithm.html#SharpNeat_EvolutionAlgorithm_IEvolutionAlgorithm_Stats_
  commentId: Overload:SharpNeat.EvolutionAlgorithm.IEvolutionAlgorithm.Stats
  isSpec: "True"
  fullName: SharpNeat.EvolutionAlgorithm.IEvolutionAlgorithm.Stats
  nameWithType: IEvolutionAlgorithm.Stats
- uid: SharpNeat.EvolutionAlgorithm.IGenome
  name: IGenome
  href: api/SharpNeat.EvolutionAlgorithm.IGenome.html
  commentId: T:SharpNeat.EvolutionAlgorithm.IGenome
  fullName: SharpNeat.EvolutionAlgorithm.IGenome
  nameWithType: IGenome
- uid: SharpNeat.EvolutionAlgorithm.IGenome.BirthGeneration
  name: BirthGeneration
  href: api/SharpNeat.EvolutionAlgorithm.IGenome.html#SharpNeat_EvolutionAlgorithm_IGenome_BirthGeneration
  commentId: P:SharpNeat.EvolutionAlgorithm.IGenome.BirthGeneration
  fullName: SharpNeat.EvolutionAlgorithm.IGenome.BirthGeneration
  nameWithType: IGenome.BirthGeneration
- uid: SharpNeat.EvolutionAlgorithm.IGenome.BirthGeneration*
  name: BirthGeneration
  href: api/SharpNeat.EvolutionAlgorithm.IGenome.html#SharpNeat_EvolutionAlgorithm_IGenome_BirthGeneration_
  commentId: Overload:SharpNeat.EvolutionAlgorithm.IGenome.BirthGeneration
  isSpec: "True"
  fullName: SharpNeat.EvolutionAlgorithm.IGenome.BirthGeneration
  nameWithType: IGenome.BirthGeneration
- uid: SharpNeat.EvolutionAlgorithm.IGenome.Complexity
  name: Complexity
  href: api/SharpNeat.EvolutionAlgorithm.IGenome.html#SharpNeat_EvolutionAlgorithm_IGenome_Complexity
  commentId: P:SharpNeat.EvolutionAlgorithm.IGenome.Complexity
  fullName: SharpNeat.EvolutionAlgorithm.IGenome.Complexity
  nameWithType: IGenome.Complexity
- uid: SharpNeat.EvolutionAlgorithm.IGenome.Complexity*
  name: Complexity
  href: api/SharpNeat.EvolutionAlgorithm.IGenome.html#SharpNeat_EvolutionAlgorithm_IGenome_Complexity_
  commentId: Overload:SharpNeat.EvolutionAlgorithm.IGenome.Complexity
  isSpec: "True"
  fullName: SharpNeat.EvolutionAlgorithm.IGenome.Complexity
  nameWithType: IGenome.Complexity
- uid: SharpNeat.EvolutionAlgorithm.IGenome.FitnessInfo
  name: FitnessInfo
  href: api/SharpNeat.EvolutionAlgorithm.IGenome.html#SharpNeat_EvolutionAlgorithm_IGenome_FitnessInfo
  commentId: P:SharpNeat.EvolutionAlgorithm.IGenome.FitnessInfo
  fullName: SharpNeat.EvolutionAlgorithm.IGenome.FitnessInfo
  nameWithType: IGenome.FitnessInfo
- uid: SharpNeat.EvolutionAlgorithm.IGenome.FitnessInfo*
  name: FitnessInfo
  href: api/SharpNeat.EvolutionAlgorithm.IGenome.html#SharpNeat_EvolutionAlgorithm_IGenome_FitnessInfo_
  commentId: Overload:SharpNeat.EvolutionAlgorithm.IGenome.FitnessInfo
  isSpec: "True"
  fullName: SharpNeat.EvolutionAlgorithm.IGenome.FitnessInfo
  nameWithType: IGenome.FitnessInfo
- uid: SharpNeat.EvolutionAlgorithm.IGenome.Id
  name: Id
  href: api/SharpNeat.EvolutionAlgorithm.IGenome.html#SharpNeat_EvolutionAlgorithm_IGenome_Id
  commentId: P:SharpNeat.EvolutionAlgorithm.IGenome.Id
  fullName: SharpNeat.EvolutionAlgorithm.IGenome.Id
  nameWithType: IGenome.Id
- uid: SharpNeat.EvolutionAlgorithm.IGenome.Id*
  name: Id
  href: api/SharpNeat.EvolutionAlgorithm.IGenome.html#SharpNeat_EvolutionAlgorithm_IGenome_Id_
  commentId: Overload:SharpNeat.EvolutionAlgorithm.IGenome.Id
  isSpec: "True"
  fullName: SharpNeat.EvolutionAlgorithm.IGenome.Id
  nameWithType: IGenome.Id
- uid: SharpNeat.EvolutionAlgorithm.MockGenome
  name: MockGenome
  href: api/SharpNeat.EvolutionAlgorithm.MockGenome.html
  commentId: T:SharpNeat.EvolutionAlgorithm.MockGenome
  fullName: SharpNeat.EvolutionAlgorithm.MockGenome
  nameWithType: MockGenome
- uid: SharpNeat.EvolutionAlgorithm.MockGenome.BirthGeneration
  name: BirthGeneration
  href: api/SharpNeat.EvolutionAlgorithm.MockGenome.html#SharpNeat_EvolutionAlgorithm_MockGenome_BirthGeneration
  commentId: P:SharpNeat.EvolutionAlgorithm.MockGenome.BirthGeneration
  fullName: SharpNeat.EvolutionAlgorithm.MockGenome.BirthGeneration
  nameWithType: MockGenome.BirthGeneration
- uid: SharpNeat.EvolutionAlgorithm.MockGenome.BirthGeneration*
  name: BirthGeneration
  href: api/SharpNeat.EvolutionAlgorithm.MockGenome.html#SharpNeat_EvolutionAlgorithm_MockGenome_BirthGeneration_
  commentId: Overload:SharpNeat.EvolutionAlgorithm.MockGenome.BirthGeneration
  isSpec: "True"
  fullName: SharpNeat.EvolutionAlgorithm.MockGenome.BirthGeneration
  nameWithType: MockGenome.BirthGeneration
- uid: SharpNeat.EvolutionAlgorithm.MockGenome.Complexity
  name: Complexity
  href: api/SharpNeat.EvolutionAlgorithm.MockGenome.html#SharpNeat_EvolutionAlgorithm_MockGenome_Complexity
  commentId: P:SharpNeat.EvolutionAlgorithm.MockGenome.Complexity
  fullName: SharpNeat.EvolutionAlgorithm.MockGenome.Complexity
  nameWithType: MockGenome.Complexity
- uid: SharpNeat.EvolutionAlgorithm.MockGenome.Complexity*
  name: Complexity
  href: api/SharpNeat.EvolutionAlgorithm.MockGenome.html#SharpNeat_EvolutionAlgorithm_MockGenome_Complexity_
  commentId: Overload:SharpNeat.EvolutionAlgorithm.MockGenome.Complexity
  isSpec: "True"
  fullName: SharpNeat.EvolutionAlgorithm.MockGenome.Complexity
  nameWithType: MockGenome.Complexity
- uid: SharpNeat.EvolutionAlgorithm.MockGenome.FitnessInfo
  name: FitnessInfo
  href: api/SharpNeat.EvolutionAlgorithm.MockGenome.html#SharpNeat_EvolutionAlgorithm_MockGenome_FitnessInfo
  commentId: P:SharpNeat.EvolutionAlgorithm.MockGenome.FitnessInfo
  fullName: SharpNeat.EvolutionAlgorithm.MockGenome.FitnessInfo
  nameWithType: MockGenome.FitnessInfo
- uid: SharpNeat.EvolutionAlgorithm.MockGenome.FitnessInfo*
  name: FitnessInfo
  href: api/SharpNeat.EvolutionAlgorithm.MockGenome.html#SharpNeat_EvolutionAlgorithm_MockGenome_FitnessInfo_
  commentId: Overload:SharpNeat.EvolutionAlgorithm.MockGenome.FitnessInfo
  isSpec: "True"
  fullName: SharpNeat.EvolutionAlgorithm.MockGenome.FitnessInfo
  nameWithType: MockGenome.FitnessInfo
- uid: SharpNeat.EvolutionAlgorithm.MockGenome.Id
  name: Id
  href: api/SharpNeat.EvolutionAlgorithm.MockGenome.html#SharpNeat_EvolutionAlgorithm_MockGenome_Id
  commentId: P:SharpNeat.EvolutionAlgorithm.MockGenome.Id
  fullName: SharpNeat.EvolutionAlgorithm.MockGenome.Id
  nameWithType: MockGenome.Id
- uid: SharpNeat.EvolutionAlgorithm.MockGenome.Id*
  name: Id
  href: api/SharpNeat.EvolutionAlgorithm.MockGenome.html#SharpNeat_EvolutionAlgorithm_MockGenome_Id_
  commentId: Overload:SharpNeat.EvolutionAlgorithm.MockGenome.Id
  isSpec: "True"
  fullName: SharpNeat.EvolutionAlgorithm.MockGenome.Id
  nameWithType: MockGenome.Id
- uid: SharpNeat.EvolutionAlgorithm.Population`1
  name: Population<TGenome>
  href: api/SharpNeat.EvolutionAlgorithm.Population-1.html
  commentId: T:SharpNeat.EvolutionAlgorithm.Population`1
  name.vb: Population(Of TGenome)
  fullName: SharpNeat.EvolutionAlgorithm.Population<TGenome>
  fullName.vb: SharpNeat.EvolutionAlgorithm.Population(Of TGenome)
  nameWithType: Population<TGenome>
  nameWithType.vb: Population(Of TGenome)
- uid: SharpNeat.EvolutionAlgorithm.Population`1.#ctor(System.Int32,System.Collections.Generic.List{`0})
  name: Population(int, List<TGenome>)
  href: api/SharpNeat.EvolutionAlgorithm.Population-1.html#SharpNeat_EvolutionAlgorithm_Population_1__ctor_System_Int32_System_Collections_Generic_List__0__
  commentId: M:SharpNeat.EvolutionAlgorithm.Population`1.#ctor(System.Int32,System.Collections.Generic.List{`0})
  name.vb: New(Integer, List(Of TGenome))
  fullName: SharpNeat.EvolutionAlgorithm.Population<TGenome>.Population(int, System.Collections.Generic.List<TGenome>)
  fullName.vb: SharpNeat.EvolutionAlgorithm.Population(Of TGenome).New(Integer, System.Collections.Generic.List(Of TGenome))
  nameWithType: Population<TGenome>.Population(int, List<TGenome>)
  nameWithType.vb: Population(Of TGenome).New(Integer, List(Of TGenome))
- uid: SharpNeat.EvolutionAlgorithm.Population`1.#ctor(System.Int32)
  name: Population(int)
  href: api/SharpNeat.EvolutionAlgorithm.Population-1.html#SharpNeat_EvolutionAlgorithm_Population_1__ctor_System_Int32_
  commentId: M:SharpNeat.EvolutionAlgorithm.Population`1.#ctor(System.Int32)
  name.vb: New(Integer)
  fullName: SharpNeat.EvolutionAlgorithm.Population<TGenome>.Population(int)
  fullName.vb: SharpNeat.EvolutionAlgorithm.Population(Of TGenome).New(Integer)
  nameWithType: Population<TGenome>.Population(int)
  nameWithType.vb: Population(Of TGenome).New(Integer)
- uid: SharpNeat.EvolutionAlgorithm.Population`1.#ctor*
  name: Population
  href: api/SharpNeat.EvolutionAlgorithm.Population-1.html#SharpNeat_EvolutionAlgorithm_Population_1__ctor_
  commentId: Overload:SharpNeat.EvolutionAlgorithm.Population`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.EvolutionAlgorithm.Population<TGenome>.Population
  fullName.vb: SharpNeat.EvolutionAlgorithm.Population(Of TGenome).New
  nameWithType: Population<TGenome>.Population
  nameWithType.vb: Population(Of TGenome).New
- uid: SharpNeat.EvolutionAlgorithm.Population`1.BestGenome
  name: BestGenome
  href: api/SharpNeat.EvolutionAlgorithm.Population-1.html#SharpNeat_EvolutionAlgorithm_Population_1_BestGenome
  commentId: P:SharpNeat.EvolutionAlgorithm.Population`1.BestGenome
  fullName: SharpNeat.EvolutionAlgorithm.Population<TGenome>.BestGenome
  fullName.vb: SharpNeat.EvolutionAlgorithm.Population(Of TGenome).BestGenome
  nameWithType: Population<TGenome>.BestGenome
  nameWithType.vb: Population(Of TGenome).BestGenome
- uid: SharpNeat.EvolutionAlgorithm.Population`1.BestGenome*
  name: BestGenome
  href: api/SharpNeat.EvolutionAlgorithm.Population-1.html#SharpNeat_EvolutionAlgorithm_Population_1_BestGenome_
  commentId: Overload:SharpNeat.EvolutionAlgorithm.Population`1.BestGenome
  isSpec: "True"
  fullName: SharpNeat.EvolutionAlgorithm.Population<TGenome>.BestGenome
  fullName.vb: SharpNeat.EvolutionAlgorithm.Population(Of TGenome).BestGenome
  nameWithType: Population<TGenome>.BestGenome
  nameWithType.vb: Population(Of TGenome).BestGenome
- uid: SharpNeat.EvolutionAlgorithm.Population`1.CreatePopulatonStats
  name: CreatePopulatonStats()
  href: api/SharpNeat.EvolutionAlgorithm.Population-1.html#SharpNeat_EvolutionAlgorithm_Population_1_CreatePopulatonStats
  commentId: M:SharpNeat.EvolutionAlgorithm.Population`1.CreatePopulatonStats
  fullName: SharpNeat.EvolutionAlgorithm.Population<TGenome>.CreatePopulatonStats()
  fullName.vb: SharpNeat.EvolutionAlgorithm.Population(Of TGenome).CreatePopulatonStats()
  nameWithType: Population<TGenome>.CreatePopulatonStats()
  nameWithType.vb: Population(Of TGenome).CreatePopulatonStats()
- uid: SharpNeat.EvolutionAlgorithm.Population`1.CreatePopulatonStats*
  name: CreatePopulatonStats
  href: api/SharpNeat.EvolutionAlgorithm.Population-1.html#SharpNeat_EvolutionAlgorithm_Population_1_CreatePopulatonStats_
  commentId: Overload:SharpNeat.EvolutionAlgorithm.Population`1.CreatePopulatonStats
  isSpec: "True"
  fullName: SharpNeat.EvolutionAlgorithm.Population<TGenome>.CreatePopulatonStats
  fullName.vb: SharpNeat.EvolutionAlgorithm.Population(Of TGenome).CreatePopulatonStats
  nameWithType: Population<TGenome>.CreatePopulatonStats
  nameWithType.vb: Population(Of TGenome).CreatePopulatonStats
- uid: SharpNeat.EvolutionAlgorithm.Population`1.GenomeList
  name: GenomeList
  href: api/SharpNeat.EvolutionAlgorithm.Population-1.html#SharpNeat_EvolutionAlgorithm_Population_1_GenomeList
  commentId: P:SharpNeat.EvolutionAlgorithm.Population`1.GenomeList
  fullName: SharpNeat.EvolutionAlgorithm.Population<TGenome>.GenomeList
  fullName.vb: SharpNeat.EvolutionAlgorithm.Population(Of TGenome).GenomeList
  nameWithType: Population<TGenome>.GenomeList
  nameWithType.vb: Population(Of TGenome).GenomeList
- uid: SharpNeat.EvolutionAlgorithm.Population`1.GenomeList*
  name: GenomeList
  href: api/SharpNeat.EvolutionAlgorithm.Population-1.html#SharpNeat_EvolutionAlgorithm_Population_1_GenomeList_
  commentId: Overload:SharpNeat.EvolutionAlgorithm.Population`1.GenomeList
  isSpec: "True"
  fullName: SharpNeat.EvolutionAlgorithm.Population<TGenome>.GenomeList
  fullName.vb: SharpNeat.EvolutionAlgorithm.Population(Of TGenome).GenomeList
  nameWithType: Population<TGenome>.GenomeList
  nameWithType.vb: Population(Of TGenome).GenomeList
- uid: SharpNeat.EvolutionAlgorithm.Population`1.Stats
  name: Stats
  href: api/SharpNeat.EvolutionAlgorithm.Population-1.html#SharpNeat_EvolutionAlgorithm_Population_1_Stats
  commentId: P:SharpNeat.EvolutionAlgorithm.Population`1.Stats
  fullName: SharpNeat.EvolutionAlgorithm.Population<TGenome>.Stats
  fullName.vb: SharpNeat.EvolutionAlgorithm.Population(Of TGenome).Stats
  nameWithType: Population<TGenome>.Stats
  nameWithType.vb: Population(Of TGenome).Stats
- uid: SharpNeat.EvolutionAlgorithm.Population`1.Stats*
  name: Stats
  href: api/SharpNeat.EvolutionAlgorithm.Population-1.html#SharpNeat_EvolutionAlgorithm_Population_1_Stats_
  commentId: Overload:SharpNeat.EvolutionAlgorithm.Population`1.Stats
  isSpec: "True"
  fullName: SharpNeat.EvolutionAlgorithm.Population<TGenome>.Stats
  fullName.vb: SharpNeat.EvolutionAlgorithm.Population(Of TGenome).Stats
  nameWithType: Population<TGenome>.Stats
  nameWithType.vb: Population(Of TGenome).Stats
- uid: SharpNeat.EvolutionAlgorithm.Population`1.TargetSize
  name: TargetSize
  href: api/SharpNeat.EvolutionAlgorithm.Population-1.html#SharpNeat_EvolutionAlgorithm_Population_1_TargetSize
  commentId: P:SharpNeat.EvolutionAlgorithm.Population`1.TargetSize
  fullName: SharpNeat.EvolutionAlgorithm.Population<TGenome>.TargetSize
  fullName.vb: SharpNeat.EvolutionAlgorithm.Population(Of TGenome).TargetSize
  nameWithType: Population<TGenome>.TargetSize
  nameWithType.vb: Population(Of TGenome).TargetSize
- uid: SharpNeat.EvolutionAlgorithm.Population`1.TargetSize*
  name: TargetSize
  href: api/SharpNeat.EvolutionAlgorithm.Population-1.html#SharpNeat_EvolutionAlgorithm_Population_1_TargetSize_
  commentId: Overload:SharpNeat.EvolutionAlgorithm.Population`1.TargetSize
  isSpec: "True"
  fullName: SharpNeat.EvolutionAlgorithm.Population<TGenome>.TargetSize
  fullName.vb: SharpNeat.EvolutionAlgorithm.Population(Of TGenome).TargetSize
  nameWithType: Population<TGenome>.TargetSize
  nameWithType.vb: Population(Of TGenome).TargetSize
- uid: SharpNeat.EvolutionAlgorithm.Population`1.UpdateStats(System.Collections.Generic.IComparer{SharpNeat.Evaluation.FitnessInfo},Redzen.Random.IRandomSource)
  name: UpdateStats(IComparer<FitnessInfo>, IRandomSource)
  href: api/SharpNeat.EvolutionAlgorithm.Population-1.html#SharpNeat_EvolutionAlgorithm_Population_1_UpdateStats_System_Collections_Generic_IComparer_SharpNeat_Evaluation_FitnessInfo__Redzen_Random_IRandomSource_
  commentId: M:SharpNeat.EvolutionAlgorithm.Population`1.UpdateStats(System.Collections.Generic.IComparer{SharpNeat.Evaluation.FitnessInfo},Redzen.Random.IRandomSource)
  name.vb: UpdateStats(IComparer(Of FitnessInfo), IRandomSource)
  fullName: SharpNeat.EvolutionAlgorithm.Population<TGenome>.UpdateStats(System.Collections.Generic.IComparer<SharpNeat.Evaluation.FitnessInfo>, Redzen.Random.IRandomSource)
  fullName.vb: SharpNeat.EvolutionAlgorithm.Population(Of TGenome).UpdateStats(System.Collections.Generic.IComparer(Of SharpNeat.Evaluation.FitnessInfo), Redzen.Random.IRandomSource)
  nameWithType: Population<TGenome>.UpdateStats(IComparer<FitnessInfo>, IRandomSource)
  nameWithType.vb: Population(Of TGenome).UpdateStats(IComparer(Of FitnessInfo), IRandomSource)
- uid: SharpNeat.EvolutionAlgorithm.Population`1.UpdateStats*
  name: UpdateStats
  href: api/SharpNeat.EvolutionAlgorithm.Population-1.html#SharpNeat_EvolutionAlgorithm_Population_1_UpdateStats_
  commentId: Overload:SharpNeat.EvolutionAlgorithm.Population`1.UpdateStats
  isSpec: "True"
  fullName: SharpNeat.EvolutionAlgorithm.Population<TGenome>.UpdateStats
  fullName.vb: SharpNeat.EvolutionAlgorithm.Population(Of TGenome).UpdateStats
  nameWithType: Population<TGenome>.UpdateStats
  nameWithType.vb: Population(Of TGenome).UpdateStats
- uid: SharpNeat.EvolutionAlgorithm.PopulationStatistics
  name: PopulationStatistics
  href: api/SharpNeat.EvolutionAlgorithm.PopulationStatistics.html
  commentId: T:SharpNeat.EvolutionAlgorithm.PopulationStatistics
  fullName: SharpNeat.EvolutionAlgorithm.PopulationStatistics
  nameWithType: PopulationStatistics
- uid: SharpNeat.EvolutionAlgorithm.PopulationStatistics.BestComplexity
  name: BestComplexity
  href: api/SharpNeat.EvolutionAlgorithm.PopulationStatistics.html#SharpNeat_EvolutionAlgorithm_PopulationStatistics_BestComplexity
  commentId: P:SharpNeat.EvolutionAlgorithm.PopulationStatistics.BestComplexity
  fullName: SharpNeat.EvolutionAlgorithm.PopulationStatistics.BestComplexity
  nameWithType: PopulationStatistics.BestComplexity
- uid: SharpNeat.EvolutionAlgorithm.PopulationStatistics.BestComplexity*
  name: BestComplexity
  href: api/SharpNeat.EvolutionAlgorithm.PopulationStatistics.html#SharpNeat_EvolutionAlgorithm_PopulationStatistics_BestComplexity_
  commentId: Overload:SharpNeat.EvolutionAlgorithm.PopulationStatistics.BestComplexity
  isSpec: "True"
  fullName: SharpNeat.EvolutionAlgorithm.PopulationStatistics.BestComplexity
  nameWithType: PopulationStatistics.BestComplexity
- uid: SharpNeat.EvolutionAlgorithm.PopulationStatistics.BestFitness
  name: BestFitness
  href: api/SharpNeat.EvolutionAlgorithm.PopulationStatistics.html#SharpNeat_EvolutionAlgorithm_PopulationStatistics_BestFitness
  commentId: P:SharpNeat.EvolutionAlgorithm.PopulationStatistics.BestFitness
  fullName: SharpNeat.EvolutionAlgorithm.PopulationStatistics.BestFitness
  nameWithType: PopulationStatistics.BestFitness
- uid: SharpNeat.EvolutionAlgorithm.PopulationStatistics.BestFitness*
  name: BestFitness
  href: api/SharpNeat.EvolutionAlgorithm.PopulationStatistics.html#SharpNeat_EvolutionAlgorithm_PopulationStatistics_BestFitness_
  commentId: Overload:SharpNeat.EvolutionAlgorithm.PopulationStatistics.BestFitness
  isSpec: "True"
  fullName: SharpNeat.EvolutionAlgorithm.PopulationStatistics.BestFitness
  nameWithType: PopulationStatistics.BestFitness
- uid: SharpNeat.EvolutionAlgorithm.PopulationStatistics.BestFitnessHistory
  name: BestFitnessHistory
  href: api/SharpNeat.EvolutionAlgorithm.PopulationStatistics.html#SharpNeat_EvolutionAlgorithm_PopulationStatistics_BestFitnessHistory
  commentId: P:SharpNeat.EvolutionAlgorithm.PopulationStatistics.BestFitnessHistory
  fullName: SharpNeat.EvolutionAlgorithm.PopulationStatistics.BestFitnessHistory
  nameWithType: PopulationStatistics.BestFitnessHistory
- uid: SharpNeat.EvolutionAlgorithm.PopulationStatistics.BestFitnessHistory*
  name: BestFitnessHistory
  href: api/SharpNeat.EvolutionAlgorithm.PopulationStatistics.html#SharpNeat_EvolutionAlgorithm_PopulationStatistics_BestFitnessHistory_
  commentId: Overload:SharpNeat.EvolutionAlgorithm.PopulationStatistics.BestFitnessHistory
  isSpec: "True"
  fullName: SharpNeat.EvolutionAlgorithm.PopulationStatistics.BestFitnessHistory
  nameWithType: PopulationStatistics.BestFitnessHistory
- uid: SharpNeat.EvolutionAlgorithm.PopulationStatistics.BestGenomeIndex
  name: BestGenomeIndex
  href: api/SharpNeat.EvolutionAlgorithm.PopulationStatistics.html#SharpNeat_EvolutionAlgorithm_PopulationStatistics_BestGenomeIndex
  commentId: P:SharpNeat.EvolutionAlgorithm.PopulationStatistics.BestGenomeIndex
  fullName: SharpNeat.EvolutionAlgorithm.PopulationStatistics.BestGenomeIndex
  nameWithType: PopulationStatistics.BestGenomeIndex
- uid: SharpNeat.EvolutionAlgorithm.PopulationStatistics.BestGenomeIndex*
  name: BestGenomeIndex
  href: api/SharpNeat.EvolutionAlgorithm.PopulationStatistics.html#SharpNeat_EvolutionAlgorithm_PopulationStatistics_BestGenomeIndex_
  commentId: Overload:SharpNeat.EvolutionAlgorithm.PopulationStatistics.BestGenomeIndex
  isSpec: "True"
  fullName: SharpNeat.EvolutionAlgorithm.PopulationStatistics.BestGenomeIndex
  nameWithType: PopulationStatistics.BestGenomeIndex
- uid: SharpNeat.EvolutionAlgorithm.PopulationStatistics.MaxComplexity
  name: MaxComplexity
  href: api/SharpNeat.EvolutionAlgorithm.PopulationStatistics.html#SharpNeat_EvolutionAlgorithm_PopulationStatistics_MaxComplexity
  commentId: P:SharpNeat.EvolutionAlgorithm.PopulationStatistics.MaxComplexity
  fullName: SharpNeat.EvolutionAlgorithm.PopulationStatistics.MaxComplexity
  nameWithType: PopulationStatistics.MaxComplexity
- uid: SharpNeat.EvolutionAlgorithm.PopulationStatistics.MaxComplexity*
  name: MaxComplexity
  href: api/SharpNeat.EvolutionAlgorithm.PopulationStatistics.html#SharpNeat_EvolutionAlgorithm_PopulationStatistics_MaxComplexity_
  commentId: Overload:SharpNeat.EvolutionAlgorithm.PopulationStatistics.MaxComplexity
  isSpec: "True"
  fullName: SharpNeat.EvolutionAlgorithm.PopulationStatistics.MaxComplexity
  nameWithType: PopulationStatistics.MaxComplexity
- uid: SharpNeat.EvolutionAlgorithm.PopulationStatistics.MeanComplexity
  name: MeanComplexity
  href: api/SharpNeat.EvolutionAlgorithm.PopulationStatistics.html#SharpNeat_EvolutionAlgorithm_PopulationStatistics_MeanComplexity
  commentId: P:SharpNeat.EvolutionAlgorithm.PopulationStatistics.MeanComplexity
  fullName: SharpNeat.EvolutionAlgorithm.PopulationStatistics.MeanComplexity
  nameWithType: PopulationStatistics.MeanComplexity
- uid: SharpNeat.EvolutionAlgorithm.PopulationStatistics.MeanComplexity*
  name: MeanComplexity
  href: api/SharpNeat.EvolutionAlgorithm.PopulationStatistics.html#SharpNeat_EvolutionAlgorithm_PopulationStatistics_MeanComplexity_
  commentId: Overload:SharpNeat.EvolutionAlgorithm.PopulationStatistics.MeanComplexity
  isSpec: "True"
  fullName: SharpNeat.EvolutionAlgorithm.PopulationStatistics.MeanComplexity
  nameWithType: PopulationStatistics.MeanComplexity
- uid: SharpNeat.EvolutionAlgorithm.PopulationStatistics.MeanComplexityHistory
  name: MeanComplexityHistory
  href: api/SharpNeat.EvolutionAlgorithm.PopulationStatistics.html#SharpNeat_EvolutionAlgorithm_PopulationStatistics_MeanComplexityHistory
  commentId: P:SharpNeat.EvolutionAlgorithm.PopulationStatistics.MeanComplexityHistory
  fullName: SharpNeat.EvolutionAlgorithm.PopulationStatistics.MeanComplexityHistory
  nameWithType: PopulationStatistics.MeanComplexityHistory
- uid: SharpNeat.EvolutionAlgorithm.PopulationStatistics.MeanComplexityHistory*
  name: MeanComplexityHistory
  href: api/SharpNeat.EvolutionAlgorithm.PopulationStatistics.html#SharpNeat_EvolutionAlgorithm_PopulationStatistics_MeanComplexityHistory_
  commentId: Overload:SharpNeat.EvolutionAlgorithm.PopulationStatistics.MeanComplexityHistory
  isSpec: "True"
  fullName: SharpNeat.EvolutionAlgorithm.PopulationStatistics.MeanComplexityHistory
  nameWithType: PopulationStatistics.MeanComplexityHistory
- uid: SharpNeat.EvolutionAlgorithm.PopulationStatistics.MeanFitness
  name: MeanFitness
  href: api/SharpNeat.EvolutionAlgorithm.PopulationStatistics.html#SharpNeat_EvolutionAlgorithm_PopulationStatistics_MeanFitness
  commentId: P:SharpNeat.EvolutionAlgorithm.PopulationStatistics.MeanFitness
  fullName: SharpNeat.EvolutionAlgorithm.PopulationStatistics.MeanFitness
  nameWithType: PopulationStatistics.MeanFitness
- uid: SharpNeat.EvolutionAlgorithm.PopulationStatistics.MeanFitness*
  name: MeanFitness
  href: api/SharpNeat.EvolutionAlgorithm.PopulationStatistics.html#SharpNeat_EvolutionAlgorithm_PopulationStatistics_MeanFitness_
  commentId: Overload:SharpNeat.EvolutionAlgorithm.PopulationStatistics.MeanFitness
  isSpec: "True"
  fullName: SharpNeat.EvolutionAlgorithm.PopulationStatistics.MeanFitness
  nameWithType: PopulationStatistics.MeanFitness
- uid: SharpNeat.EvolutionAlgorithm.Runner
  name: SharpNeat.EvolutionAlgorithm.Runner
  href: api/SharpNeat.EvolutionAlgorithm.Runner.html
  commentId: N:SharpNeat.EvolutionAlgorithm.Runner
  fullName: SharpNeat.EvolutionAlgorithm.Runner
  nameWithType: SharpNeat.EvolutionAlgorithm.Runner
- uid: SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner
  name: EvolutionAlgorithmRunner
  href: api/SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.html
  commentId: T:SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner
  fullName: SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner
  nameWithType: EvolutionAlgorithmRunner
- uid: SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.#ctor(SharpNeat.EvolutionAlgorithm.IEvolutionAlgorithm,SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme)
  name: EvolutionAlgorithmRunner(IEvolutionAlgorithm, UpdateScheme)
  href: api/SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.html#SharpNeat_EvolutionAlgorithm_Runner_EvolutionAlgorithmRunner__ctor_SharpNeat_EvolutionAlgorithm_IEvolutionAlgorithm_SharpNeat_EvolutionAlgorithm_Runner_UpdateScheme_
  commentId: M:SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.#ctor(SharpNeat.EvolutionAlgorithm.IEvolutionAlgorithm,SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme)
  name.vb: New(IEvolutionAlgorithm, UpdateScheme)
  fullName: SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.EvolutionAlgorithmRunner(SharpNeat.EvolutionAlgorithm.IEvolutionAlgorithm, SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme)
  fullName.vb: SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.New(SharpNeat.EvolutionAlgorithm.IEvolutionAlgorithm, SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme)
  nameWithType: EvolutionAlgorithmRunner.EvolutionAlgorithmRunner(IEvolutionAlgorithm, UpdateScheme)
  nameWithType.vb: EvolutionAlgorithmRunner.New(IEvolutionAlgorithm, UpdateScheme)
- uid: SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.#ctor*
  name: EvolutionAlgorithmRunner
  href: api/SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.html#SharpNeat_EvolutionAlgorithm_Runner_EvolutionAlgorithmRunner__ctor_
  commentId: Overload:SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.EvolutionAlgorithmRunner
  fullName.vb: SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.New
  nameWithType: EvolutionAlgorithmRunner.EvolutionAlgorithmRunner
  nameWithType.vb: EvolutionAlgorithmRunner.New
- uid: SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.Dispose
  name: Dispose()
  href: api/SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.html#SharpNeat_EvolutionAlgorithm_Runner_EvolutionAlgorithmRunner_Dispose
  commentId: M:SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.Dispose
  fullName: SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.Dispose()
  nameWithType: EvolutionAlgorithmRunner.Dispose()
- uid: SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.Dispose*
  name: Dispose
  href: api/SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.html#SharpNeat_EvolutionAlgorithm_Runner_EvolutionAlgorithmRunner_Dispose_
  commentId: Overload:SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.Dispose
  isSpec: "True"
  fullName: SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.Dispose
  nameWithType: EvolutionAlgorithmRunner.Dispose
- uid: SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.EA
  name: EA
  href: api/SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.html#SharpNeat_EvolutionAlgorithm_Runner_EvolutionAlgorithmRunner_EA
  commentId: P:SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.EA
  fullName: SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.EA
  nameWithType: EvolutionAlgorithmRunner.EA
- uid: SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.EA*
  name: EA
  href: api/SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.html#SharpNeat_EvolutionAlgorithm_Runner_EvolutionAlgorithmRunner_EA_
  commentId: Overload:SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.EA
  isSpec: "True"
  fullName: SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.EA
  nameWithType: EvolutionAlgorithmRunner.EA
- uid: SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.RequestPause
  name: RequestPause()
  href: api/SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.html#SharpNeat_EvolutionAlgorithm_Runner_EvolutionAlgorithmRunner_RequestPause
  commentId: M:SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.RequestPause
  fullName: SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.RequestPause()
  nameWithType: EvolutionAlgorithmRunner.RequestPause()
- uid: SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.RequestPause*
  name: RequestPause
  href: api/SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.html#SharpNeat_EvolutionAlgorithm_Runner_EvolutionAlgorithmRunner_RequestPause_
  commentId: Overload:SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.RequestPause
  isSpec: "True"
  fullName: SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.RequestPause
  nameWithType: EvolutionAlgorithmRunner.RequestPause
- uid: SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.RequestPauseAndWait
  name: RequestPauseAndWait()
  href: api/SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.html#SharpNeat_EvolutionAlgorithm_Runner_EvolutionAlgorithmRunner_RequestPauseAndWait
  commentId: M:SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.RequestPauseAndWait
  fullName: SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.RequestPauseAndWait()
  nameWithType: EvolutionAlgorithmRunner.RequestPauseAndWait()
- uid: SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.RequestPauseAndWait*
  name: RequestPauseAndWait
  href: api/SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.html#SharpNeat_EvolutionAlgorithm_Runner_EvolutionAlgorithmRunner_RequestPauseAndWait_
  commentId: Overload:SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.RequestPauseAndWait
  isSpec: "True"
  fullName: SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.RequestPauseAndWait
  nameWithType: EvolutionAlgorithmRunner.RequestPauseAndWait
- uid: SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.RequestTerminateAndWait
  name: RequestTerminateAndWait()
  href: api/SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.html#SharpNeat_EvolutionAlgorithm_Runner_EvolutionAlgorithmRunner_RequestTerminateAndWait
  commentId: M:SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.RequestTerminateAndWait
  fullName: SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.RequestTerminateAndWait()
  nameWithType: EvolutionAlgorithmRunner.RequestTerminateAndWait()
- uid: SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.RequestTerminateAndWait*
  name: RequestTerminateAndWait
  href: api/SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.html#SharpNeat_EvolutionAlgorithm_Runner_EvolutionAlgorithmRunner_RequestTerminateAndWait_
  commentId: Overload:SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.RequestTerminateAndWait
  isSpec: "True"
  fullName: SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.RequestTerminateAndWait
  nameWithType: EvolutionAlgorithmRunner.RequestTerminateAndWait
- uid: SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.RunState
  name: RunState
  href: api/SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.html#SharpNeat_EvolutionAlgorithm_Runner_EvolutionAlgorithmRunner_RunState
  commentId: P:SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.RunState
  fullName: SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.RunState
  nameWithType: EvolutionAlgorithmRunner.RunState
- uid: SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.RunState*
  name: RunState
  href: api/SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.html#SharpNeat_EvolutionAlgorithm_Runner_EvolutionAlgorithmRunner_RunState_
  commentId: Overload:SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.RunState
  isSpec: "True"
  fullName: SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.RunState
  nameWithType: EvolutionAlgorithmRunner.RunState
- uid: SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.StartOrResume
  name: StartOrResume()
  href: api/SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.html#SharpNeat_EvolutionAlgorithm_Runner_EvolutionAlgorithmRunner_StartOrResume
  commentId: M:SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.StartOrResume
  fullName: SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.StartOrResume()
  nameWithType: EvolutionAlgorithmRunner.StartOrResume()
- uid: SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.StartOrResume*
  name: StartOrResume
  href: api/SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.html#SharpNeat_EvolutionAlgorithm_Runner_EvolutionAlgorithmRunner_StartOrResume_
  commentId: Overload:SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.StartOrResume
  isSpec: "True"
  fullName: SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.StartOrResume
  nameWithType: EvolutionAlgorithmRunner.StartOrResume
- uid: SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.UpdateEvent
  name: UpdateEvent
  href: api/SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.html#SharpNeat_EvolutionAlgorithm_Runner_EvolutionAlgorithmRunner_UpdateEvent
  commentId: E:SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.UpdateEvent
  fullName: SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.UpdateEvent
  nameWithType: EvolutionAlgorithmRunner.UpdateEvent
- uid: SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.UpdateScheme
  name: UpdateScheme
  href: api/SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.html#SharpNeat_EvolutionAlgorithm_Runner_EvolutionAlgorithmRunner_UpdateScheme
  commentId: P:SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.UpdateScheme
  fullName: SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.UpdateScheme
  nameWithType: EvolutionAlgorithmRunner.UpdateScheme
- uid: SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.UpdateScheme*
  name: UpdateScheme
  href: api/SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.html#SharpNeat_EvolutionAlgorithm_Runner_EvolutionAlgorithmRunner_UpdateScheme_
  commentId: Overload:SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.UpdateScheme
  isSpec: "True"
  fullName: SharpNeat.EvolutionAlgorithm.Runner.EvolutionAlgorithmRunner.UpdateScheme
  nameWithType: EvolutionAlgorithmRunner.UpdateScheme
- uid: SharpNeat.EvolutionAlgorithm.Runner.RunState
  name: RunState
  href: api/SharpNeat.EvolutionAlgorithm.Runner.RunState.html
  commentId: T:SharpNeat.EvolutionAlgorithm.Runner.RunState
  fullName: SharpNeat.EvolutionAlgorithm.Runner.RunState
  nameWithType: RunState
- uid: SharpNeat.EvolutionAlgorithm.Runner.RunState.Paused
  name: Paused
  href: api/SharpNeat.EvolutionAlgorithm.Runner.RunState.html#SharpNeat_EvolutionAlgorithm_Runner_RunState_Paused
  commentId: F:SharpNeat.EvolutionAlgorithm.Runner.RunState.Paused
  fullName: SharpNeat.EvolutionAlgorithm.Runner.RunState.Paused
  nameWithType: RunState.Paused
- uid: SharpNeat.EvolutionAlgorithm.Runner.RunState.Ready
  name: Ready
  href: api/SharpNeat.EvolutionAlgorithm.Runner.RunState.html#SharpNeat_EvolutionAlgorithm_Runner_RunState_Ready
  commentId: F:SharpNeat.EvolutionAlgorithm.Runner.RunState.Ready
  fullName: SharpNeat.EvolutionAlgorithm.Runner.RunState.Ready
  nameWithType: RunState.Ready
- uid: SharpNeat.EvolutionAlgorithm.Runner.RunState.Running
  name: Running
  href: api/SharpNeat.EvolutionAlgorithm.Runner.RunState.html#SharpNeat_EvolutionAlgorithm_Runner_RunState_Running
  commentId: F:SharpNeat.EvolutionAlgorithm.Runner.RunState.Running
  fullName: SharpNeat.EvolutionAlgorithm.Runner.RunState.Running
  nameWithType: RunState.Running
- uid: SharpNeat.EvolutionAlgorithm.Runner.RunState.Terminated
  name: Terminated
  href: api/SharpNeat.EvolutionAlgorithm.Runner.RunState.html#SharpNeat_EvolutionAlgorithm_Runner_RunState_Terminated
  commentId: F:SharpNeat.EvolutionAlgorithm.Runner.RunState.Terminated
  fullName: SharpNeat.EvolutionAlgorithm.Runner.RunState.Terminated
  nameWithType: RunState.Terminated
- uid: SharpNeat.EvolutionAlgorithm.Runner.UpdateMode
  name: UpdateMode
  href: api/SharpNeat.EvolutionAlgorithm.Runner.UpdateMode.html
  commentId: T:SharpNeat.EvolutionAlgorithm.Runner.UpdateMode
  fullName: SharpNeat.EvolutionAlgorithm.Runner.UpdateMode
  nameWithType: UpdateMode
- uid: SharpNeat.EvolutionAlgorithm.Runner.UpdateMode.Generational
  name: Generational
  href: api/SharpNeat.EvolutionAlgorithm.Runner.UpdateMode.html#SharpNeat_EvolutionAlgorithm_Runner_UpdateMode_Generational
  commentId: F:SharpNeat.EvolutionAlgorithm.Runner.UpdateMode.Generational
  fullName: SharpNeat.EvolutionAlgorithm.Runner.UpdateMode.Generational
  nameWithType: UpdateMode.Generational
- uid: SharpNeat.EvolutionAlgorithm.Runner.UpdateMode.None
  name: None
  href: api/SharpNeat.EvolutionAlgorithm.Runner.UpdateMode.html#SharpNeat_EvolutionAlgorithm_Runner_UpdateMode_None
  commentId: F:SharpNeat.EvolutionAlgorithm.Runner.UpdateMode.None
  fullName: SharpNeat.EvolutionAlgorithm.Runner.UpdateMode.None
  nameWithType: UpdateMode.None
- uid: SharpNeat.EvolutionAlgorithm.Runner.UpdateMode.Timespan
  name: Timespan
  href: api/SharpNeat.EvolutionAlgorithm.Runner.UpdateMode.html#SharpNeat_EvolutionAlgorithm_Runner_UpdateMode_Timespan
  commentId: F:SharpNeat.EvolutionAlgorithm.Runner.UpdateMode.Timespan
  fullName: SharpNeat.EvolutionAlgorithm.Runner.UpdateMode.Timespan
  nameWithType: UpdateMode.Timespan
- uid: SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme
  name: UpdateScheme
  href: api/SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.html
  commentId: T:SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme
  fullName: SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme
  nameWithType: UpdateScheme
- uid: SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.CreateGenerationalUpdateScheme(System.UInt32)
  name: CreateGenerationalUpdateScheme(uint)
  href: api/SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.html#SharpNeat_EvolutionAlgorithm_Runner_UpdateScheme_CreateGenerationalUpdateScheme_System_UInt32_
  commentId: M:SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.CreateGenerationalUpdateScheme(System.UInt32)
  name.vb: CreateGenerationalUpdateScheme(UInteger)
  fullName: SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.CreateGenerationalUpdateScheme(uint)
  fullName.vb: SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.CreateGenerationalUpdateScheme(UInteger)
  nameWithType: UpdateScheme.CreateGenerationalUpdateScheme(uint)
  nameWithType.vb: UpdateScheme.CreateGenerationalUpdateScheme(UInteger)
- uid: SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.CreateGenerationalUpdateScheme*
  name: CreateGenerationalUpdateScheme
  href: api/SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.html#SharpNeat_EvolutionAlgorithm_Runner_UpdateScheme_CreateGenerationalUpdateScheme_
  commentId: Overload:SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.CreateGenerationalUpdateScheme
  isSpec: "True"
  fullName: SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.CreateGenerationalUpdateScheme
  nameWithType: UpdateScheme.CreateGenerationalUpdateScheme
- uid: SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.CreateNoUpdateScheme
  name: CreateNoUpdateScheme()
  href: api/SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.html#SharpNeat_EvolutionAlgorithm_Runner_UpdateScheme_CreateNoUpdateScheme
  commentId: M:SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.CreateNoUpdateScheme
  fullName: SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.CreateNoUpdateScheme()
  nameWithType: UpdateScheme.CreateNoUpdateScheme()
- uid: SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.CreateNoUpdateScheme*
  name: CreateNoUpdateScheme
  href: api/SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.html#SharpNeat_EvolutionAlgorithm_Runner_UpdateScheme_CreateNoUpdateScheme_
  commentId: Overload:SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.CreateNoUpdateScheme
  isSpec: "True"
  fullName: SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.CreateNoUpdateScheme
  nameWithType: UpdateScheme.CreateNoUpdateScheme
- uid: SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.CreateTimeSpanUpdateScheme(System.TimeSpan)
  name: CreateTimeSpanUpdateScheme(TimeSpan)
  href: api/SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.html#SharpNeat_EvolutionAlgorithm_Runner_UpdateScheme_CreateTimeSpanUpdateScheme_System_TimeSpan_
  commentId: M:SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.CreateTimeSpanUpdateScheme(System.TimeSpan)
  fullName: SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.CreateTimeSpanUpdateScheme(System.TimeSpan)
  nameWithType: UpdateScheme.CreateTimeSpanUpdateScheme(TimeSpan)
- uid: SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.CreateTimeSpanUpdateScheme*
  name: CreateTimeSpanUpdateScheme
  href: api/SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.html#SharpNeat_EvolutionAlgorithm_Runner_UpdateScheme_CreateTimeSpanUpdateScheme_
  commentId: Overload:SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.CreateTimeSpanUpdateScheme
  isSpec: "True"
  fullName: SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.CreateTimeSpanUpdateScheme
  nameWithType: UpdateScheme.CreateTimeSpanUpdateScheme
- uid: SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.Generations
  name: Generations
  href: api/SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.html#SharpNeat_EvolutionAlgorithm_Runner_UpdateScheme_Generations
  commentId: P:SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.Generations
  fullName: SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.Generations
  nameWithType: UpdateScheme.Generations
- uid: SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.Generations*
  name: Generations
  href: api/SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.html#SharpNeat_EvolutionAlgorithm_Runner_UpdateScheme_Generations_
  commentId: Overload:SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.Generations
  isSpec: "True"
  fullName: SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.Generations
  nameWithType: UpdateScheme.Generations
- uid: SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.TimeSpan
  name: TimeSpan
  href: api/SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.html#SharpNeat_EvolutionAlgorithm_Runner_UpdateScheme_TimeSpan
  commentId: P:SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.TimeSpan
  fullName: SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.TimeSpan
  nameWithType: UpdateScheme.TimeSpan
- uid: SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.TimeSpan*
  name: TimeSpan
  href: api/SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.html#SharpNeat_EvolutionAlgorithm_Runner_UpdateScheme_TimeSpan_
  commentId: Overload:SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.TimeSpan
  isSpec: "True"
  fullName: SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.TimeSpan
  nameWithType: UpdateScheme.TimeSpan
- uid: SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.UpdateMode
  name: UpdateMode
  href: api/SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.html#SharpNeat_EvolutionAlgorithm_Runner_UpdateScheme_UpdateMode
  commentId: P:SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.UpdateMode
  fullName: SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.UpdateMode
  nameWithType: UpdateScheme.UpdateMode
- uid: SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.UpdateMode*
  name: UpdateMode
  href: api/SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.html#SharpNeat_EvolutionAlgorithm_Runner_UpdateScheme_UpdateMode_
  commentId: Overload:SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.UpdateMode
  isSpec: "True"
  fullName: SharpNeat.EvolutionAlgorithm.Runner.UpdateScheme.UpdateMode
  nameWithType: UpdateScheme.UpdateMode
- uid: SharpNeat.Experiments
  name: SharpNeat.Experiments
  href: api/SharpNeat.Experiments.html
  commentId: N:SharpNeat.Experiments
  fullName: SharpNeat.Experiments
  nameWithType: SharpNeat.Experiments
- uid: SharpNeat.Experiments.ConfigModels
  name: SharpNeat.Experiments.ConfigModels
  href: api/SharpNeat.Experiments.ConfigModels.html
  commentId: N:SharpNeat.Experiments.ConfigModels
  fullName: SharpNeat.Experiments.ConfigModels
  nameWithType: SharpNeat.Experiments.ConfigModels
- uid: SharpNeat.Experiments.ConfigModels.ComplexityRegulationStrategyConfig
  name: ComplexityRegulationStrategyConfig
  href: api/SharpNeat.Experiments.ConfigModels.ComplexityRegulationStrategyConfig.html
  commentId: T:SharpNeat.Experiments.ConfigModels.ComplexityRegulationStrategyConfig
  fullName: SharpNeat.Experiments.ConfigModels.ComplexityRegulationStrategyConfig
  nameWithType: ComplexityRegulationStrategyConfig
- uid: SharpNeat.Experiments.ConfigModels.ComplexityRegulationStrategyConfig.ComplexityCeiling
  name: ComplexityCeiling
  href: api/SharpNeat.Experiments.ConfigModels.ComplexityRegulationStrategyConfig.html#SharpNeat_Experiments_ConfigModels_ComplexityRegulationStrategyConfig_ComplexityCeiling
  commentId: P:SharpNeat.Experiments.ConfigModels.ComplexityRegulationStrategyConfig.ComplexityCeiling
  fullName: SharpNeat.Experiments.ConfigModels.ComplexityRegulationStrategyConfig.ComplexityCeiling
  nameWithType: ComplexityRegulationStrategyConfig.ComplexityCeiling
- uid: SharpNeat.Experiments.ConfigModels.ComplexityRegulationStrategyConfig.ComplexityCeiling*
  name: ComplexityCeiling
  href: api/SharpNeat.Experiments.ConfigModels.ComplexityRegulationStrategyConfig.html#SharpNeat_Experiments_ConfigModels_ComplexityRegulationStrategyConfig_ComplexityCeiling_
  commentId: Overload:SharpNeat.Experiments.ConfigModels.ComplexityRegulationStrategyConfig.ComplexityCeiling
  isSpec: "True"
  fullName: SharpNeat.Experiments.ConfigModels.ComplexityRegulationStrategyConfig.ComplexityCeiling
  nameWithType: ComplexityRegulationStrategyConfig.ComplexityCeiling
- uid: SharpNeat.Experiments.ConfigModels.ComplexityRegulationStrategyConfig.MinSimplifcationGenerations
  name: MinSimplifcationGenerations
  href: api/SharpNeat.Experiments.ConfigModels.ComplexityRegulationStrategyConfig.html#SharpNeat_Experiments_ConfigModels_ComplexityRegulationStrategyConfig_MinSimplifcationGenerations
  commentId: P:SharpNeat.Experiments.ConfigModels.ComplexityRegulationStrategyConfig.MinSimplifcationGenerations
  fullName: SharpNeat.Experiments.ConfigModels.ComplexityRegulationStrategyConfig.MinSimplifcationGenerations
  nameWithType: ComplexityRegulationStrategyConfig.MinSimplifcationGenerations
- uid: SharpNeat.Experiments.ConfigModels.ComplexityRegulationStrategyConfig.MinSimplifcationGenerations*
  name: MinSimplifcationGenerations
  href: api/SharpNeat.Experiments.ConfigModels.ComplexityRegulationStrategyConfig.html#SharpNeat_Experiments_ConfigModels_ComplexityRegulationStrategyConfig_MinSimplifcationGenerations_
  commentId: Overload:SharpNeat.Experiments.ConfigModels.ComplexityRegulationStrategyConfig.MinSimplifcationGenerations
  isSpec: "True"
  fullName: SharpNeat.Experiments.ConfigModels.ComplexityRegulationStrategyConfig.MinSimplifcationGenerations
  nameWithType: ComplexityRegulationStrategyConfig.MinSimplifcationGenerations
- uid: SharpNeat.Experiments.ConfigModels.ComplexityRegulationStrategyConfig.RelativeComplexityCeiling
  name: RelativeComplexityCeiling
  href: api/SharpNeat.Experiments.ConfigModels.ComplexityRegulationStrategyConfig.html#SharpNeat_Experiments_ConfigModels_ComplexityRegulationStrategyConfig_RelativeComplexityCeiling
  commentId: P:SharpNeat.Experiments.ConfigModels.ComplexityRegulationStrategyConfig.RelativeComplexityCeiling
  fullName: SharpNeat.Experiments.ConfigModels.ComplexityRegulationStrategyConfig.RelativeComplexityCeiling
  nameWithType: ComplexityRegulationStrategyConfig.RelativeComplexityCeiling
- uid: SharpNeat.Experiments.ConfigModels.ComplexityRegulationStrategyConfig.RelativeComplexityCeiling*
  name: RelativeComplexityCeiling
  href: api/SharpNeat.Experiments.ConfigModels.ComplexityRegulationStrategyConfig.html#SharpNeat_Experiments_ConfigModels_ComplexityRegulationStrategyConfig_RelativeComplexityCeiling_
  commentId: Overload:SharpNeat.Experiments.ConfigModels.ComplexityRegulationStrategyConfig.RelativeComplexityCeiling
  isSpec: "True"
  fullName: SharpNeat.Experiments.ConfigModels.ComplexityRegulationStrategyConfig.RelativeComplexityCeiling
  nameWithType: ComplexityRegulationStrategyConfig.RelativeComplexityCeiling
- uid: SharpNeat.Experiments.ConfigModels.ComplexityRegulationStrategyConfig.StrategyName
  name: StrategyName
  href: api/SharpNeat.Experiments.ConfigModels.ComplexityRegulationStrategyConfig.html#SharpNeat_Experiments_ConfigModels_ComplexityRegulationStrategyConfig_StrategyName
  commentId: P:SharpNeat.Experiments.ConfigModels.ComplexityRegulationStrategyConfig.StrategyName
  fullName: SharpNeat.Experiments.ConfigModels.ComplexityRegulationStrategyConfig.StrategyName
  nameWithType: ComplexityRegulationStrategyConfig.StrategyName
- uid: SharpNeat.Experiments.ConfigModels.ComplexityRegulationStrategyConfig.StrategyName*
  name: StrategyName
  href: api/SharpNeat.Experiments.ConfigModels.ComplexityRegulationStrategyConfig.html#SharpNeat_Experiments_ConfigModels_ComplexityRegulationStrategyConfig_StrategyName_
  commentId: Overload:SharpNeat.Experiments.ConfigModels.ComplexityRegulationStrategyConfig.StrategyName
  isSpec: "True"
  fullName: SharpNeat.Experiments.ConfigModels.ComplexityRegulationStrategyConfig.StrategyName
  nameWithType: ComplexityRegulationStrategyConfig.StrategyName
- uid: SharpNeat.Experiments.ConfigModels.ExperimentConfig
  name: ExperimentConfig
  href: api/SharpNeat.Experiments.ConfigModels.ExperimentConfig.html
  commentId: T:SharpNeat.Experiments.ConfigModels.ExperimentConfig
  fullName: SharpNeat.Experiments.ConfigModels.ExperimentConfig
  nameWithType: ExperimentConfig
- uid: SharpNeat.Experiments.ConfigModels.ExperimentConfig.ActivationFnName
  name: ActivationFnName
  href: api/SharpNeat.Experiments.ConfigModels.ExperimentConfig.html#SharpNeat_Experiments_ConfigModels_ExperimentConfig_ActivationFnName
  commentId: P:SharpNeat.Experiments.ConfigModels.ExperimentConfig.ActivationFnName
  fullName: SharpNeat.Experiments.ConfigModels.ExperimentConfig.ActivationFnName
  nameWithType: ExperimentConfig.ActivationFnName
- uid: SharpNeat.Experiments.ConfigModels.ExperimentConfig.ActivationFnName*
  name: ActivationFnName
  href: api/SharpNeat.Experiments.ConfigModels.ExperimentConfig.html#SharpNeat_Experiments_ConfigModels_ExperimentConfig_ActivationFnName_
  commentId: Overload:SharpNeat.Experiments.ConfigModels.ExperimentConfig.ActivationFnName
  isSpec: "True"
  fullName: SharpNeat.Experiments.ConfigModels.ExperimentConfig.ActivationFnName
  nameWithType: ExperimentConfig.ActivationFnName
- uid: SharpNeat.Experiments.ConfigModels.ExperimentConfig.ComplexityRegulationStrategy
  name: ComplexityRegulationStrategy
  href: api/SharpNeat.Experiments.ConfigModels.ExperimentConfig.html#SharpNeat_Experiments_ConfigModels_ExperimentConfig_ComplexityRegulationStrategy
  commentId: P:SharpNeat.Experiments.ConfigModels.ExperimentConfig.ComplexityRegulationStrategy
  fullName: SharpNeat.Experiments.ConfigModels.ExperimentConfig.ComplexityRegulationStrategy
  nameWithType: ExperimentConfig.ComplexityRegulationStrategy
- uid: SharpNeat.Experiments.ConfigModels.ExperimentConfig.ComplexityRegulationStrategy*
  name: ComplexityRegulationStrategy
  href: api/SharpNeat.Experiments.ConfigModels.ExperimentConfig.html#SharpNeat_Experiments_ConfigModels_ExperimentConfig_ComplexityRegulationStrategy_
  commentId: Overload:SharpNeat.Experiments.ConfigModels.ExperimentConfig.ComplexityRegulationStrategy
  isSpec: "True"
  fullName: SharpNeat.Experiments.ConfigModels.ExperimentConfig.ComplexityRegulationStrategy
  nameWithType: ExperimentConfig.ComplexityRegulationStrategy
- uid: SharpNeat.Experiments.ConfigModels.ExperimentConfig.ConnectionWeightScale
  name: ConnectionWeightScale
  href: api/SharpNeat.Experiments.ConfigModels.ExperimentConfig.html#SharpNeat_Experiments_ConfigModels_ExperimentConfig_ConnectionWeightScale
  commentId: P:SharpNeat.Experiments.ConfigModels.ExperimentConfig.ConnectionWeightScale
  fullName: SharpNeat.Experiments.ConfigModels.ExperimentConfig.ConnectionWeightScale
  nameWithType: ExperimentConfig.ConnectionWeightScale
- uid: SharpNeat.Experiments.ConfigModels.ExperimentConfig.ConnectionWeightScale*
  name: ConnectionWeightScale
  href: api/SharpNeat.Experiments.ConfigModels.ExperimentConfig.html#SharpNeat_Experiments_ConfigModels_ExperimentConfig_ConnectionWeightScale_
  commentId: Overload:SharpNeat.Experiments.ConfigModels.ExperimentConfig.ConnectionWeightScale
  isSpec: "True"
  fullName: SharpNeat.Experiments.ConfigModels.ExperimentConfig.ConnectionWeightScale
  nameWithType: ExperimentConfig.ConnectionWeightScale
- uid: SharpNeat.Experiments.ConfigModels.ExperimentConfig.CyclesPerActivation
  name: CyclesPerActivation
  href: api/SharpNeat.Experiments.ConfigModels.ExperimentConfig.html#SharpNeat_Experiments_ConfigModels_ExperimentConfig_CyclesPerActivation
  commentId: P:SharpNeat.Experiments.ConfigModels.ExperimentConfig.CyclesPerActivation
  fullName: SharpNeat.Experiments.ConfigModels.ExperimentConfig.CyclesPerActivation
  nameWithType: ExperimentConfig.CyclesPerActivation
- uid: SharpNeat.Experiments.ConfigModels.ExperimentConfig.CyclesPerActivation*
  name: CyclesPerActivation
  href: api/SharpNeat.Experiments.ConfigModels.ExperimentConfig.html#SharpNeat_Experiments_ConfigModels_ExperimentConfig_CyclesPerActivation_
  commentId: Overload:SharpNeat.Experiments.ConfigModels.ExperimentConfig.CyclesPerActivation
  isSpec: "True"
  fullName: SharpNeat.Experiments.ConfigModels.ExperimentConfig.CyclesPerActivation
  nameWithType: ExperimentConfig.CyclesPerActivation
- uid: SharpNeat.Experiments.ConfigModels.ExperimentConfig.DegreeOfParallelism
  name: DegreeOfParallelism
  href: api/SharpNeat.Experiments.ConfigModels.ExperimentConfig.html#SharpNeat_Experiments_ConfigModels_ExperimentConfig_DegreeOfParallelism
  commentId: P:SharpNeat.Experiments.ConfigModels.ExperimentConfig.DegreeOfParallelism
  fullName: SharpNeat.Experiments.ConfigModels.ExperimentConfig.DegreeOfParallelism
  nameWithType: ExperimentConfig.DegreeOfParallelism
- uid: SharpNeat.Experiments.ConfigModels.ExperimentConfig.DegreeOfParallelism*
  name: DegreeOfParallelism
  href: api/SharpNeat.Experiments.ConfigModels.ExperimentConfig.html#SharpNeat_Experiments_ConfigModels_ExperimentConfig_DegreeOfParallelism_
  commentId: Overload:SharpNeat.Experiments.ConfigModels.ExperimentConfig.DegreeOfParallelism
  isSpec: "True"
  fullName: SharpNeat.Experiments.ConfigModels.ExperimentConfig.DegreeOfParallelism
  nameWithType: ExperimentConfig.DegreeOfParallelism
- uid: SharpNeat.Experiments.ConfigModels.ExperimentConfig.Description
  name: Description
  href: api/SharpNeat.Experiments.ConfigModels.ExperimentConfig.html#SharpNeat_Experiments_ConfigModels_ExperimentConfig_Description
  commentId: P:SharpNeat.Experiments.ConfigModels.ExperimentConfig.Description
  fullName: SharpNeat.Experiments.ConfigModels.ExperimentConfig.Description
  nameWithType: ExperimentConfig.Description
- uid: SharpNeat.Experiments.ConfigModels.ExperimentConfig.Description*
  name: Description
  href: api/SharpNeat.Experiments.ConfigModels.ExperimentConfig.html#SharpNeat_Experiments_ConfigModels_ExperimentConfig_Description_
  commentId: Overload:SharpNeat.Experiments.ConfigModels.ExperimentConfig.Description
  isSpec: "True"
  fullName: SharpNeat.Experiments.ConfigModels.ExperimentConfig.Description
  nameWithType: ExperimentConfig.Description
- uid: SharpNeat.Experiments.ConfigModels.ExperimentConfig.EnableHardwareAcceleratedActivationFunctions
  name: EnableHardwareAcceleratedActivationFunctions
  href: api/SharpNeat.Experiments.ConfigModels.ExperimentConfig.html#SharpNeat_Experiments_ConfigModels_ExperimentConfig_EnableHardwareAcceleratedActivationFunctions
  commentId: P:SharpNeat.Experiments.ConfigModels.ExperimentConfig.EnableHardwareAcceleratedActivationFunctions
  fullName: SharpNeat.Experiments.ConfigModels.ExperimentConfig.EnableHardwareAcceleratedActivationFunctions
  nameWithType: ExperimentConfig.EnableHardwareAcceleratedActivationFunctions
- uid: SharpNeat.Experiments.ConfigModels.ExperimentConfig.EnableHardwareAcceleratedActivationFunctions*
  name: EnableHardwareAcceleratedActivationFunctions
  href: api/SharpNeat.Experiments.ConfigModels.ExperimentConfig.html#SharpNeat_Experiments_ConfigModels_ExperimentConfig_EnableHardwareAcceleratedActivationFunctions_
  commentId: Overload:SharpNeat.Experiments.ConfigModels.ExperimentConfig.EnableHardwareAcceleratedActivationFunctions
  isSpec: "True"
  fullName: SharpNeat.Experiments.ConfigModels.ExperimentConfig.EnableHardwareAcceleratedActivationFunctions
  nameWithType: ExperimentConfig.EnableHardwareAcceleratedActivationFunctions
- uid: SharpNeat.Experiments.ConfigModels.ExperimentConfig.EnableHardwareAcceleratedNeuralNets
  name: EnableHardwareAcceleratedNeuralNets
  href: api/SharpNeat.Experiments.ConfigModels.ExperimentConfig.html#SharpNeat_Experiments_ConfigModels_ExperimentConfig_EnableHardwareAcceleratedNeuralNets
  commentId: P:SharpNeat.Experiments.ConfigModels.ExperimentConfig.EnableHardwareAcceleratedNeuralNets
  fullName: SharpNeat.Experiments.ConfigModels.ExperimentConfig.EnableHardwareAcceleratedNeuralNets
  nameWithType: ExperimentConfig.EnableHardwareAcceleratedNeuralNets
- uid: SharpNeat.Experiments.ConfigModels.ExperimentConfig.EnableHardwareAcceleratedNeuralNets*
  name: EnableHardwareAcceleratedNeuralNets
  href: api/SharpNeat.Experiments.ConfigModels.ExperimentConfig.html#SharpNeat_Experiments_ConfigModels_ExperimentConfig_EnableHardwareAcceleratedNeuralNets_
  commentId: Overload:SharpNeat.Experiments.ConfigModels.ExperimentConfig.EnableHardwareAcceleratedNeuralNets
  isSpec: "True"
  fullName: SharpNeat.Experiments.ConfigModels.ExperimentConfig.EnableHardwareAcceleratedNeuralNets
  nameWithType: ExperimentConfig.EnableHardwareAcceleratedNeuralNets
- uid: SharpNeat.Experiments.ConfigModels.ExperimentConfig.EvolutionAlgorithm
  name: EvolutionAlgorithm
  href: api/SharpNeat.Experiments.ConfigModels.ExperimentConfig.html#SharpNeat_Experiments_ConfigModels_ExperimentConfig_EvolutionAlgorithm
  commentId: P:SharpNeat.Experiments.ConfigModels.ExperimentConfig.EvolutionAlgorithm
  fullName: SharpNeat.Experiments.ConfigModels.ExperimentConfig.EvolutionAlgorithm
  nameWithType: ExperimentConfig.EvolutionAlgorithm
- uid: SharpNeat.Experiments.ConfigModels.ExperimentConfig.EvolutionAlgorithm*
  name: EvolutionAlgorithm
  href: api/SharpNeat.Experiments.ConfigModels.ExperimentConfig.html#SharpNeat_Experiments_ConfigModels_ExperimentConfig_EvolutionAlgorithm_
  commentId: Overload:SharpNeat.Experiments.ConfigModels.ExperimentConfig.EvolutionAlgorithm
  isSpec: "True"
  fullName: SharpNeat.Experiments.ConfigModels.ExperimentConfig.EvolutionAlgorithm
  nameWithType: ExperimentConfig.EvolutionAlgorithm
- uid: SharpNeat.Experiments.ConfigModels.ExperimentConfig.Id
  name: Id
  href: api/SharpNeat.Experiments.ConfigModels.ExperimentConfig.html#SharpNeat_Experiments_ConfigModels_ExperimentConfig_Id
  commentId: P:SharpNeat.Experiments.ConfigModels.ExperimentConfig.Id
  fullName: SharpNeat.Experiments.ConfigModels.ExperimentConfig.Id
  nameWithType: ExperimentConfig.Id
- uid: SharpNeat.Experiments.ConfigModels.ExperimentConfig.Id*
  name: Id
  href: api/SharpNeat.Experiments.ConfigModels.ExperimentConfig.html#SharpNeat_Experiments_ConfigModels_ExperimentConfig_Id_
  commentId: Overload:SharpNeat.Experiments.ConfigModels.ExperimentConfig.Id
  isSpec: "True"
  fullName: SharpNeat.Experiments.ConfigModels.ExperimentConfig.Id
  nameWithType: ExperimentConfig.Id
- uid: SharpNeat.Experiments.ConfigModels.ExperimentConfig.InitialInterconnectionsProportion
  name: InitialInterconnectionsProportion
  href: api/SharpNeat.Experiments.ConfigModels.ExperimentConfig.html#SharpNeat_Experiments_ConfigModels_ExperimentConfig_InitialInterconnectionsProportion
  commentId: P:SharpNeat.Experiments.ConfigModels.ExperimentConfig.InitialInterconnectionsProportion
  fullName: SharpNeat.Experiments.ConfigModels.ExperimentConfig.InitialInterconnectionsProportion
  nameWithType: ExperimentConfig.InitialInterconnectionsProportion
- uid: SharpNeat.Experiments.ConfigModels.ExperimentConfig.InitialInterconnectionsProportion*
  name: InitialInterconnectionsProportion
  href: api/SharpNeat.Experiments.ConfigModels.ExperimentConfig.html#SharpNeat_Experiments_ConfigModels_ExperimentConfig_InitialInterconnectionsProportion_
  commentId: Overload:SharpNeat.Experiments.ConfigModels.ExperimentConfig.InitialInterconnectionsProportion
  isSpec: "True"
  fullName: SharpNeat.Experiments.ConfigModels.ExperimentConfig.InitialInterconnectionsProportion
  nameWithType: ExperimentConfig.InitialInterconnectionsProportion
- uid: SharpNeat.Experiments.ConfigModels.ExperimentConfig.IsAcyclic
  name: IsAcyclic
  href: api/SharpNeat.Experiments.ConfigModels.ExperimentConfig.html#SharpNeat_Experiments_ConfigModels_ExperimentConfig_IsAcyclic
  commentId: P:SharpNeat.Experiments.ConfigModels.ExperimentConfig.IsAcyclic
  fullName: SharpNeat.Experiments.ConfigModels.ExperimentConfig.IsAcyclic
  nameWithType: ExperimentConfig.IsAcyclic
- uid: SharpNeat.Experiments.ConfigModels.ExperimentConfig.IsAcyclic*
  name: IsAcyclic
  href: api/SharpNeat.Experiments.ConfigModels.ExperimentConfig.html#SharpNeat_Experiments_ConfigModels_ExperimentConfig_IsAcyclic_
  commentId: Overload:SharpNeat.Experiments.ConfigModels.ExperimentConfig.IsAcyclic
  isSpec: "True"
  fullName: SharpNeat.Experiments.ConfigModels.ExperimentConfig.IsAcyclic
  nameWithType: ExperimentConfig.IsAcyclic
- uid: SharpNeat.Experiments.ConfigModels.ExperimentConfig.Name
  name: Name
  href: api/SharpNeat.Experiments.ConfigModels.ExperimentConfig.html#SharpNeat_Experiments_ConfigModels_ExperimentConfig_Name
  commentId: P:SharpNeat.Experiments.ConfigModels.ExperimentConfig.Name
  fullName: SharpNeat.Experiments.ConfigModels.ExperimentConfig.Name
  nameWithType: ExperimentConfig.Name
- uid: SharpNeat.Experiments.ConfigModels.ExperimentConfig.Name*
  name: Name
  href: api/SharpNeat.Experiments.ConfigModels.ExperimentConfig.html#SharpNeat_Experiments_ConfigModels_ExperimentConfig_Name_
  commentId: Overload:SharpNeat.Experiments.ConfigModels.ExperimentConfig.Name
  isSpec: "True"
  fullName: SharpNeat.Experiments.ConfigModels.ExperimentConfig.Name
  nameWithType: ExperimentConfig.Name
- uid: SharpNeat.Experiments.ConfigModels.ExperimentConfig.PopulationSize
  name: PopulationSize
  href: api/SharpNeat.Experiments.ConfigModels.ExperimentConfig.html#SharpNeat_Experiments_ConfigModels_ExperimentConfig_PopulationSize
  commentId: P:SharpNeat.Experiments.ConfigModels.ExperimentConfig.PopulationSize
  fullName: SharpNeat.Experiments.ConfigModels.ExperimentConfig.PopulationSize
  nameWithType: ExperimentConfig.PopulationSize
- uid: SharpNeat.Experiments.ConfigModels.ExperimentConfig.PopulationSize*
  name: PopulationSize
  href: api/SharpNeat.Experiments.ConfigModels.ExperimentConfig.html#SharpNeat_Experiments_ConfigModels_ExperimentConfig_PopulationSize_
  commentId: Overload:SharpNeat.Experiments.ConfigModels.ExperimentConfig.PopulationSize
  isSpec: "True"
  fullName: SharpNeat.Experiments.ConfigModels.ExperimentConfig.PopulationSize
  nameWithType: ExperimentConfig.PopulationSize
- uid: SharpNeat.Experiments.ConfigModels.ExperimentConfig.ReproductionAsexual
  name: ReproductionAsexual
  href: api/SharpNeat.Experiments.ConfigModels.ExperimentConfig.html#SharpNeat_Experiments_ConfigModels_ExperimentConfig_ReproductionAsexual
  commentId: P:SharpNeat.Experiments.ConfigModels.ExperimentConfig.ReproductionAsexual
  fullName: SharpNeat.Experiments.ConfigModels.ExperimentConfig.ReproductionAsexual
  nameWithType: ExperimentConfig.ReproductionAsexual
- uid: SharpNeat.Experiments.ConfigModels.ExperimentConfig.ReproductionAsexual*
  name: ReproductionAsexual
  href: api/SharpNeat.Experiments.ConfigModels.ExperimentConfig.html#SharpNeat_Experiments_ConfigModels_ExperimentConfig_ReproductionAsexual_
  commentId: Overload:SharpNeat.Experiments.ConfigModels.ExperimentConfig.ReproductionAsexual
  isSpec: "True"
  fullName: SharpNeat.Experiments.ConfigModels.ExperimentConfig.ReproductionAsexual
  nameWithType: ExperimentConfig.ReproductionAsexual
- uid: SharpNeat.Experiments.ConfigModels.ExperimentConfig.ReproductionSexual
  name: ReproductionSexual
  href: api/SharpNeat.Experiments.ConfigModels.ExperimentConfig.html#SharpNeat_Experiments_ConfigModels_ExperimentConfig_ReproductionSexual
  commentId: P:SharpNeat.Experiments.ConfigModels.ExperimentConfig.ReproductionSexual
  fullName: SharpNeat.Experiments.ConfigModels.ExperimentConfig.ReproductionSexual
  nameWithType: ExperimentConfig.ReproductionSexual
- uid: SharpNeat.Experiments.ConfigModels.ExperimentConfig.ReproductionSexual*
  name: ReproductionSexual
  href: api/SharpNeat.Experiments.ConfigModels.ExperimentConfig.html#SharpNeat_Experiments_ConfigModels_ExperimentConfig_ReproductionSexual_
  commentId: Overload:SharpNeat.Experiments.ConfigModels.ExperimentConfig.ReproductionSexual
  isSpec: "True"
  fullName: SharpNeat.Experiments.ConfigModels.ExperimentConfig.ReproductionSexual
  nameWithType: ExperimentConfig.ReproductionSexual
- uid: SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig
  name: NeatEvolutionAlgorithmConfig
  href: api/SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.html
  commentId: T:SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig
  fullName: SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig
  nameWithType: NeatEvolutionAlgorithmConfig
- uid: SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.ElitismProportion
  name: ElitismProportion
  href: api/SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.html#SharpNeat_Experiments_ConfigModels_NeatEvolutionAlgorithmConfig_ElitismProportion
  commentId: P:SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.ElitismProportion
  fullName: SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.ElitismProportion
  nameWithType: NeatEvolutionAlgorithmConfig.ElitismProportion
- uid: SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.ElitismProportion*
  name: ElitismProportion
  href: api/SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.html#SharpNeat_Experiments_ConfigModels_NeatEvolutionAlgorithmConfig_ElitismProportion_
  commentId: Overload:SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.ElitismProportion
  isSpec: "True"
  fullName: SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.ElitismProportion
  nameWithType: NeatEvolutionAlgorithmConfig.ElitismProportion
- uid: SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.InterspeciesMatingProportion
  name: InterspeciesMatingProportion
  href: api/SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.html#SharpNeat_Experiments_ConfigModels_NeatEvolutionAlgorithmConfig_InterspeciesMatingProportion
  commentId: P:SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.InterspeciesMatingProportion
  fullName: SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.InterspeciesMatingProportion
  nameWithType: NeatEvolutionAlgorithmConfig.InterspeciesMatingProportion
- uid: SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.InterspeciesMatingProportion*
  name: InterspeciesMatingProportion
  href: api/SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.html#SharpNeat_Experiments_ConfigModels_NeatEvolutionAlgorithmConfig_InterspeciesMatingProportion_
  commentId: Overload:SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.InterspeciesMatingProportion
  isSpec: "True"
  fullName: SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.InterspeciesMatingProportion
  nameWithType: NeatEvolutionAlgorithmConfig.InterspeciesMatingProportion
- uid: SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.OffspringAsexualProportion
  name: OffspringAsexualProportion
  href: api/SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.html#SharpNeat_Experiments_ConfigModels_NeatEvolutionAlgorithmConfig_OffspringAsexualProportion
  commentId: P:SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.OffspringAsexualProportion
  fullName: SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.OffspringAsexualProportion
  nameWithType: NeatEvolutionAlgorithmConfig.OffspringAsexualProportion
- uid: SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.OffspringAsexualProportion*
  name: OffspringAsexualProportion
  href: api/SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.html#SharpNeat_Experiments_ConfigModels_NeatEvolutionAlgorithmConfig_OffspringAsexualProportion_
  commentId: Overload:SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.OffspringAsexualProportion
  isSpec: "True"
  fullName: SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.OffspringAsexualProportion
  nameWithType: NeatEvolutionAlgorithmConfig.OffspringAsexualProportion
- uid: SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.OffspringSexualProportion
  name: OffspringSexualProportion
  href: api/SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.html#SharpNeat_Experiments_ConfigModels_NeatEvolutionAlgorithmConfig_OffspringSexualProportion
  commentId: P:SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.OffspringSexualProportion
  fullName: SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.OffspringSexualProportion
  nameWithType: NeatEvolutionAlgorithmConfig.OffspringSexualProportion
- uid: SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.OffspringSexualProportion*
  name: OffspringSexualProportion
  href: api/SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.html#SharpNeat_Experiments_ConfigModels_NeatEvolutionAlgorithmConfig_OffspringSexualProportion_
  commentId: Overload:SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.OffspringSexualProportion
  isSpec: "True"
  fullName: SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.OffspringSexualProportion
  nameWithType: NeatEvolutionAlgorithmConfig.OffspringSexualProportion
- uid: SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.SelectionProportion
  name: SelectionProportion
  href: api/SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.html#SharpNeat_Experiments_ConfigModels_NeatEvolutionAlgorithmConfig_SelectionProportion
  commentId: P:SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.SelectionProportion
  fullName: SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.SelectionProportion
  nameWithType: NeatEvolutionAlgorithmConfig.SelectionProportion
- uid: SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.SelectionProportion*
  name: SelectionProportion
  href: api/SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.html#SharpNeat_Experiments_ConfigModels_NeatEvolutionAlgorithmConfig_SelectionProportion_
  commentId: Overload:SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.SelectionProportion
  isSpec: "True"
  fullName: SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.SelectionProportion
  nameWithType: NeatEvolutionAlgorithmConfig.SelectionProportion
- uid: SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.SpeciesCount
  name: SpeciesCount
  href: api/SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.html#SharpNeat_Experiments_ConfigModels_NeatEvolutionAlgorithmConfig_SpeciesCount
  commentId: P:SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.SpeciesCount
  fullName: SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.SpeciesCount
  nameWithType: NeatEvolutionAlgorithmConfig.SpeciesCount
- uid: SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.SpeciesCount*
  name: SpeciesCount
  href: api/SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.html#SharpNeat_Experiments_ConfigModels_NeatEvolutionAlgorithmConfig_SpeciesCount_
  commentId: Overload:SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.SpeciesCount
  isSpec: "True"
  fullName: SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.SpeciesCount
  nameWithType: NeatEvolutionAlgorithmConfig.SpeciesCount
- uid: SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.StatisticsMovingAverageHistoryLength
  name: StatisticsMovingAverageHistoryLength
  href: api/SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.html#SharpNeat_Experiments_ConfigModels_NeatEvolutionAlgorithmConfig_StatisticsMovingAverageHistoryLength
  commentId: P:SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.StatisticsMovingAverageHistoryLength
  fullName: SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.StatisticsMovingAverageHistoryLength
  nameWithType: NeatEvolutionAlgorithmConfig.StatisticsMovingAverageHistoryLength
- uid: SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.StatisticsMovingAverageHistoryLength*
  name: StatisticsMovingAverageHistoryLength
  href: api/SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.html#SharpNeat_Experiments_ConfigModels_NeatEvolutionAlgorithmConfig_StatisticsMovingAverageHistoryLength_
  commentId: Overload:SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.StatisticsMovingAverageHistoryLength
  isSpec: "True"
  fullName: SharpNeat.Experiments.ConfigModels.NeatEvolutionAlgorithmConfig.StatisticsMovingAverageHistoryLength
  nameWithType: NeatEvolutionAlgorithmConfig.StatisticsMovingAverageHistoryLength
- uid: SharpNeat.Experiments.ConfigModels.NeatReproductionAsexualConfig
  name: NeatReproductionAsexualConfig
  href: api/SharpNeat.Experiments.ConfigModels.NeatReproductionAsexualConfig.html
  commentId: T:SharpNeat.Experiments.ConfigModels.NeatReproductionAsexualConfig
  fullName: SharpNeat.Experiments.ConfigModels.NeatReproductionAsexualConfig
  nameWithType: NeatReproductionAsexualConfig
- uid: SharpNeat.Experiments.ConfigModels.NeatReproductionAsexualConfig.AddConnectionMutationProbability
  name: AddConnectionMutationProbability
  href: api/SharpNeat.Experiments.ConfigModels.NeatReproductionAsexualConfig.html#SharpNeat_Experiments_ConfigModels_NeatReproductionAsexualConfig_AddConnectionMutationProbability
  commentId: P:SharpNeat.Experiments.ConfigModels.NeatReproductionAsexualConfig.AddConnectionMutationProbability
  fullName: SharpNeat.Experiments.ConfigModels.NeatReproductionAsexualConfig.AddConnectionMutationProbability
  nameWithType: NeatReproductionAsexualConfig.AddConnectionMutationProbability
- uid: SharpNeat.Experiments.ConfigModels.NeatReproductionAsexualConfig.AddConnectionMutationProbability*
  name: AddConnectionMutationProbability
  href: api/SharpNeat.Experiments.ConfigModels.NeatReproductionAsexualConfig.html#SharpNeat_Experiments_ConfigModels_NeatReproductionAsexualConfig_AddConnectionMutationProbability_
  commentId: Overload:SharpNeat.Experiments.ConfigModels.NeatReproductionAsexualConfig.AddConnectionMutationProbability
  isSpec: "True"
  fullName: SharpNeat.Experiments.ConfigModels.NeatReproductionAsexualConfig.AddConnectionMutationProbability
  nameWithType: NeatReproductionAsexualConfig.AddConnectionMutationProbability
- uid: SharpNeat.Experiments.ConfigModels.NeatReproductionAsexualConfig.AddNodeMutationProbability
  name: AddNodeMutationProbability
  href: api/SharpNeat.Experiments.ConfigModels.NeatReproductionAsexualConfig.html#SharpNeat_Experiments_ConfigModels_NeatReproductionAsexualConfig_AddNodeMutationProbability
  commentId: P:SharpNeat.Experiments.ConfigModels.NeatReproductionAsexualConfig.AddNodeMutationProbability
  fullName: SharpNeat.Experiments.ConfigModels.NeatReproductionAsexualConfig.AddNodeMutationProbability
  nameWithType: NeatReproductionAsexualConfig.AddNodeMutationProbability
- uid: SharpNeat.Experiments.ConfigModels.NeatReproductionAsexualConfig.AddNodeMutationProbability*
  name: AddNodeMutationProbability
  href: api/SharpNeat.Experiments.ConfigModels.NeatReproductionAsexualConfig.html#SharpNeat_Experiments_ConfigModels_NeatReproductionAsexualConfig_AddNodeMutationProbability_
  commentId: Overload:SharpNeat.Experiments.ConfigModels.NeatReproductionAsexualConfig.AddNodeMutationProbability
  isSpec: "True"
  fullName: SharpNeat.Experiments.ConfigModels.NeatReproductionAsexualConfig.AddNodeMutationProbability
  nameWithType: NeatReproductionAsexualConfig.AddNodeMutationProbability
- uid: SharpNeat.Experiments.ConfigModels.NeatReproductionAsexualConfig.ConnectionWeightMutationProbability
  name: ConnectionWeightMutationProbability
  href: api/SharpNeat.Experiments.ConfigModels.NeatReproductionAsexualConfig.html#SharpNeat_Experiments_ConfigModels_NeatReproductionAsexualConfig_ConnectionWeightMutationProbability
  commentId: P:SharpNeat.Experiments.ConfigModels.NeatReproductionAsexualConfig.ConnectionWeightMutationProbability
  fullName: SharpNeat.Experiments.ConfigModels.NeatReproductionAsexualConfig.ConnectionWeightMutationProbability
  nameWithType: NeatReproductionAsexualConfig.ConnectionWeightMutationProbability
- uid: SharpNeat.Experiments.ConfigModels.NeatReproductionAsexualConfig.ConnectionWeightMutationProbability*
  name: ConnectionWeightMutationProbability
  href: api/SharpNeat.Experiments.ConfigModels.NeatReproductionAsexualConfig.html#SharpNeat_Experiments_ConfigModels_NeatReproductionAsexualConfig_ConnectionWeightMutationProbability_
  commentId: Overload:SharpNeat.Experiments.ConfigModels.NeatReproductionAsexualConfig.ConnectionWeightMutationProbability
  isSpec: "True"
  fullName: SharpNeat.Experiments.ConfigModels.NeatReproductionAsexualConfig.ConnectionWeightMutationProbability
  nameWithType: NeatReproductionAsexualConfig.ConnectionWeightMutationProbability
- uid: SharpNeat.Experiments.ConfigModels.NeatReproductionAsexualConfig.DeleteConnectionMutationProbability
  name: DeleteConnectionMutationProbability
  href: api/SharpNeat.Experiments.ConfigModels.NeatReproductionAsexualConfig.html#SharpNeat_Experiments_ConfigModels_NeatReproductionAsexualConfig_DeleteConnectionMutationProbability
  commentId: P:SharpNeat.Experiments.ConfigModels.NeatReproductionAsexualConfig.DeleteConnectionMutationProbability
  fullName: SharpNeat.Experiments.ConfigModels.NeatReproductionAsexualConfig.DeleteConnectionMutationProbability
  nameWithType: NeatReproductionAsexualConfig.DeleteConnectionMutationProbability
- uid: SharpNeat.Experiments.ConfigModels.NeatReproductionAsexualConfig.DeleteConnectionMutationProbability*
  name: DeleteConnectionMutationProbability
  href: api/SharpNeat.Experiments.ConfigModels.NeatReproductionAsexualConfig.html#SharpNeat_Experiments_ConfigModels_NeatReproductionAsexualConfig_DeleteConnectionMutationProbability_
  commentId: Overload:SharpNeat.Experiments.ConfigModels.NeatReproductionAsexualConfig.DeleteConnectionMutationProbability
  isSpec: "True"
  fullName: SharpNeat.Experiments.ConfigModels.NeatReproductionAsexualConfig.DeleteConnectionMutationProbability
  nameWithType: NeatReproductionAsexualConfig.DeleteConnectionMutationProbability
- uid: SharpNeat.Experiments.ConfigModels.NeatReproductionSexualConfig
  name: NeatReproductionSexualConfig
  href: api/SharpNeat.Experiments.ConfigModels.NeatReproductionSexualConfig.html
  commentId: T:SharpNeat.Experiments.ConfigModels.NeatReproductionSexualConfig
  fullName: SharpNeat.Experiments.ConfigModels.NeatReproductionSexualConfig
  nameWithType: NeatReproductionSexualConfig
- uid: SharpNeat.Experiments.ConfigModels.NeatReproductionSexualConfig.SecondaryParentGeneProbability
  name: SecondaryParentGeneProbability
  href: api/SharpNeat.Experiments.ConfigModels.NeatReproductionSexualConfig.html#SharpNeat_Experiments_ConfigModels_NeatReproductionSexualConfig_SecondaryParentGeneProbability
  commentId: P:SharpNeat.Experiments.ConfigModels.NeatReproductionSexualConfig.SecondaryParentGeneProbability
  fullName: SharpNeat.Experiments.ConfigModels.NeatReproductionSexualConfig.SecondaryParentGeneProbability
  nameWithType: NeatReproductionSexualConfig.SecondaryParentGeneProbability
- uid: SharpNeat.Experiments.ConfigModels.NeatReproductionSexualConfig.SecondaryParentGeneProbability*
  name: SecondaryParentGeneProbability
  href: api/SharpNeat.Experiments.ConfigModels.NeatReproductionSexualConfig.html#SharpNeat_Experiments_ConfigModels_NeatReproductionSexualConfig_SecondaryParentGeneProbability_
  commentId: Overload:SharpNeat.Experiments.ConfigModels.NeatReproductionSexualConfig.SecondaryParentGeneProbability
  isSpec: "True"
  fullName: SharpNeat.Experiments.ConfigModels.NeatReproductionSexualConfig.SecondaryParentGeneProbability
  nameWithType: NeatReproductionSexualConfig.SecondaryParentGeneProbability
- uid: SharpNeat.Experiments.INeatExperiment`1
  name: INeatExperiment<T>
  href: api/SharpNeat.Experiments.INeatExperiment-1.html
  commentId: T:SharpNeat.Experiments.INeatExperiment`1
  name.vb: INeatExperiment(Of T)
  fullName: SharpNeat.Experiments.INeatExperiment<T>
  fullName.vb: SharpNeat.Experiments.INeatExperiment(Of T)
  nameWithType: INeatExperiment<T>
  nameWithType.vb: INeatExperiment(Of T)
- uid: SharpNeat.Experiments.INeatExperiment`1.ActivationFnName
  name: ActivationFnName
  href: api/SharpNeat.Experiments.INeatExperiment-1.html#SharpNeat_Experiments_INeatExperiment_1_ActivationFnName
  commentId: P:SharpNeat.Experiments.INeatExperiment`1.ActivationFnName
  fullName: SharpNeat.Experiments.INeatExperiment<T>.ActivationFnName
  fullName.vb: SharpNeat.Experiments.INeatExperiment(Of T).ActivationFnName
  nameWithType: INeatExperiment<T>.ActivationFnName
  nameWithType.vb: INeatExperiment(Of T).ActivationFnName
- uid: SharpNeat.Experiments.INeatExperiment`1.ActivationFnName*
  name: ActivationFnName
  href: api/SharpNeat.Experiments.INeatExperiment-1.html#SharpNeat_Experiments_INeatExperiment_1_ActivationFnName_
  commentId: Overload:SharpNeat.Experiments.INeatExperiment`1.ActivationFnName
  isSpec: "True"
  fullName: SharpNeat.Experiments.INeatExperiment<T>.ActivationFnName
  fullName.vb: SharpNeat.Experiments.INeatExperiment(Of T).ActivationFnName
  nameWithType: INeatExperiment<T>.ActivationFnName
  nameWithType.vb: INeatExperiment(Of T).ActivationFnName
- uid: SharpNeat.Experiments.INeatExperiment`1.ComplexityRegulationStrategy
  name: ComplexityRegulationStrategy
  href: api/SharpNeat.Experiments.INeatExperiment-1.html#SharpNeat_Experiments_INeatExperiment_1_ComplexityRegulationStrategy
  commentId: P:SharpNeat.Experiments.INeatExperiment`1.ComplexityRegulationStrategy
  fullName: SharpNeat.Experiments.INeatExperiment<T>.ComplexityRegulationStrategy
  fullName.vb: SharpNeat.Experiments.INeatExperiment(Of T).ComplexityRegulationStrategy
  nameWithType: INeatExperiment<T>.ComplexityRegulationStrategy
  nameWithType.vb: INeatExperiment(Of T).ComplexityRegulationStrategy
- uid: SharpNeat.Experiments.INeatExperiment`1.ComplexityRegulationStrategy*
  name: ComplexityRegulationStrategy
  href: api/SharpNeat.Experiments.INeatExperiment-1.html#SharpNeat_Experiments_INeatExperiment_1_ComplexityRegulationStrategy_
  commentId: Overload:SharpNeat.Experiments.INeatExperiment`1.ComplexityRegulationStrategy
  isSpec: "True"
  fullName: SharpNeat.Experiments.INeatExperiment<T>.ComplexityRegulationStrategy
  fullName.vb: SharpNeat.Experiments.INeatExperiment(Of T).ComplexityRegulationStrategy
  nameWithType: INeatExperiment<T>.ComplexityRegulationStrategy
  nameWithType.vb: INeatExperiment(Of T).ComplexityRegulationStrategy
- uid: SharpNeat.Experiments.INeatExperiment`1.ConnectionWeightScale
  name: ConnectionWeightScale
  href: api/SharpNeat.Experiments.INeatExperiment-1.html#SharpNeat_Experiments_INeatExperiment_1_ConnectionWeightScale
  commentId: P:SharpNeat.Experiments.INeatExperiment`1.ConnectionWeightScale
  fullName: SharpNeat.Experiments.INeatExperiment<T>.ConnectionWeightScale
  fullName.vb: SharpNeat.Experiments.INeatExperiment(Of T).ConnectionWeightScale
  nameWithType: INeatExperiment<T>.ConnectionWeightScale
  nameWithType.vb: INeatExperiment(Of T).ConnectionWeightScale
- uid: SharpNeat.Experiments.INeatExperiment`1.ConnectionWeightScale*
  name: ConnectionWeightScale
  href: api/SharpNeat.Experiments.INeatExperiment-1.html#SharpNeat_Experiments_INeatExperiment_1_ConnectionWeightScale_
  commentId: Overload:SharpNeat.Experiments.INeatExperiment`1.ConnectionWeightScale
  isSpec: "True"
  fullName: SharpNeat.Experiments.INeatExperiment<T>.ConnectionWeightScale
  fullName.vb: SharpNeat.Experiments.INeatExperiment(Of T).ConnectionWeightScale
  nameWithType: INeatExperiment<T>.ConnectionWeightScale
  nameWithType.vb: INeatExperiment(Of T).ConnectionWeightScale
- uid: SharpNeat.Experiments.INeatExperiment`1.CyclesPerActivation
  name: CyclesPerActivation
  href: api/SharpNeat.Experiments.INeatExperiment-1.html#SharpNeat_Experiments_INeatExperiment_1_CyclesPerActivation
  commentId: P:SharpNeat.Experiments.INeatExperiment`1.CyclesPerActivation
  fullName: SharpNeat.Experiments.INeatExperiment<T>.CyclesPerActivation
  fullName.vb: SharpNeat.Experiments.INeatExperiment(Of T).CyclesPerActivation
  nameWithType: INeatExperiment<T>.CyclesPerActivation
  nameWithType.vb: INeatExperiment(Of T).CyclesPerActivation
- uid: SharpNeat.Experiments.INeatExperiment`1.CyclesPerActivation*
  name: CyclesPerActivation
  href: api/SharpNeat.Experiments.INeatExperiment-1.html#SharpNeat_Experiments_INeatExperiment_1_CyclesPerActivation_
  commentId: Overload:SharpNeat.Experiments.INeatExperiment`1.CyclesPerActivation
  isSpec: "True"
  fullName: SharpNeat.Experiments.INeatExperiment<T>.CyclesPerActivation
  fullName.vb: SharpNeat.Experiments.INeatExperiment(Of T).CyclesPerActivation
  nameWithType: INeatExperiment<T>.CyclesPerActivation
  nameWithType.vb: INeatExperiment(Of T).CyclesPerActivation
- uid: SharpNeat.Experiments.INeatExperiment`1.DegreeOfParallelism
  name: DegreeOfParallelism
  href: api/SharpNeat.Experiments.INeatExperiment-1.html#SharpNeat_Experiments_INeatExperiment_1_DegreeOfParallelism
  commentId: P:SharpNeat.Experiments.INeatExperiment`1.DegreeOfParallelism
  fullName: SharpNeat.Experiments.INeatExperiment<T>.DegreeOfParallelism
  fullName.vb: SharpNeat.Experiments.INeatExperiment(Of T).DegreeOfParallelism
  nameWithType: INeatExperiment<T>.DegreeOfParallelism
  nameWithType.vb: INeatExperiment(Of T).DegreeOfParallelism
- uid: SharpNeat.Experiments.INeatExperiment`1.DegreeOfParallelism*
  name: DegreeOfParallelism
  href: api/SharpNeat.Experiments.INeatExperiment-1.html#SharpNeat_Experiments_INeatExperiment_1_DegreeOfParallelism_
  commentId: Overload:SharpNeat.Experiments.INeatExperiment`1.DegreeOfParallelism
  isSpec: "True"
  fullName: SharpNeat.Experiments.INeatExperiment<T>.DegreeOfParallelism
  fullName.vb: SharpNeat.Experiments.INeatExperiment(Of T).DegreeOfParallelism
  nameWithType: INeatExperiment<T>.DegreeOfParallelism
  nameWithType.vb: INeatExperiment(Of T).DegreeOfParallelism
- uid: SharpNeat.Experiments.INeatExperiment`1.Description
  name: Description
  href: api/SharpNeat.Experiments.INeatExperiment-1.html#SharpNeat_Experiments_INeatExperiment_1_Description
  commentId: P:SharpNeat.Experiments.INeatExperiment`1.Description
  fullName: SharpNeat.Experiments.INeatExperiment<T>.Description
  fullName.vb: SharpNeat.Experiments.INeatExperiment(Of T).Description
  nameWithType: INeatExperiment<T>.Description
  nameWithType.vb: INeatExperiment(Of T).Description
- uid: SharpNeat.Experiments.INeatExperiment`1.Description*
  name: Description
  href: api/SharpNeat.Experiments.INeatExperiment-1.html#SharpNeat_Experiments_INeatExperiment_1_Description_
  commentId: Overload:SharpNeat.Experiments.INeatExperiment`1.Description
  isSpec: "True"
  fullName: SharpNeat.Experiments.INeatExperiment<T>.Description
  fullName.vb: SharpNeat.Experiments.INeatExperiment(Of T).Description
  nameWithType: INeatExperiment<T>.Description
  nameWithType.vb: INeatExperiment(Of T).Description
- uid: SharpNeat.Experiments.INeatExperiment`1.EnableHardwareAcceleratedActivationFunctions
  name: EnableHardwareAcceleratedActivationFunctions
  href: api/SharpNeat.Experiments.INeatExperiment-1.html#SharpNeat_Experiments_INeatExperiment_1_EnableHardwareAcceleratedActivationFunctions
  commentId: P:SharpNeat.Experiments.INeatExperiment`1.EnableHardwareAcceleratedActivationFunctions
  fullName: SharpNeat.Experiments.INeatExperiment<T>.EnableHardwareAcceleratedActivationFunctions
  fullName.vb: SharpNeat.Experiments.INeatExperiment(Of T).EnableHardwareAcceleratedActivationFunctions
  nameWithType: INeatExperiment<T>.EnableHardwareAcceleratedActivationFunctions
  nameWithType.vb: INeatExperiment(Of T).EnableHardwareAcceleratedActivationFunctions
- uid: SharpNeat.Experiments.INeatExperiment`1.EnableHardwareAcceleratedActivationFunctions*
  name: EnableHardwareAcceleratedActivationFunctions
  href: api/SharpNeat.Experiments.INeatExperiment-1.html#SharpNeat_Experiments_INeatExperiment_1_EnableHardwareAcceleratedActivationFunctions_
  commentId: Overload:SharpNeat.Experiments.INeatExperiment`1.EnableHardwareAcceleratedActivationFunctions
  isSpec: "True"
  fullName: SharpNeat.Experiments.INeatExperiment<T>.EnableHardwareAcceleratedActivationFunctions
  fullName.vb: SharpNeat.Experiments.INeatExperiment(Of T).EnableHardwareAcceleratedActivationFunctions
  nameWithType: INeatExperiment<T>.EnableHardwareAcceleratedActivationFunctions
  nameWithType.vb: INeatExperiment(Of T).EnableHardwareAcceleratedActivationFunctions
- uid: SharpNeat.Experiments.INeatExperiment`1.EnableHardwareAcceleratedNeuralNets
  name: EnableHardwareAcceleratedNeuralNets
  href: api/SharpNeat.Experiments.INeatExperiment-1.html#SharpNeat_Experiments_INeatExperiment_1_EnableHardwareAcceleratedNeuralNets
  commentId: P:SharpNeat.Experiments.INeatExperiment`1.EnableHardwareAcceleratedNeuralNets
  fullName: SharpNeat.Experiments.INeatExperiment<T>.EnableHardwareAcceleratedNeuralNets
  fullName.vb: SharpNeat.Experiments.INeatExperiment(Of T).EnableHardwareAcceleratedNeuralNets
  nameWithType: INeatExperiment<T>.EnableHardwareAcceleratedNeuralNets
  nameWithType.vb: INeatExperiment(Of T).EnableHardwareAcceleratedNeuralNets
- uid: SharpNeat.Experiments.INeatExperiment`1.EnableHardwareAcceleratedNeuralNets*
  name: EnableHardwareAcceleratedNeuralNets
  href: api/SharpNeat.Experiments.INeatExperiment-1.html#SharpNeat_Experiments_INeatExperiment_1_EnableHardwareAcceleratedNeuralNets_
  commentId: Overload:SharpNeat.Experiments.INeatExperiment`1.EnableHardwareAcceleratedNeuralNets
  isSpec: "True"
  fullName: SharpNeat.Experiments.INeatExperiment<T>.EnableHardwareAcceleratedNeuralNets
  fullName.vb: SharpNeat.Experiments.INeatExperiment(Of T).EnableHardwareAcceleratedNeuralNets
  nameWithType: INeatExperiment<T>.EnableHardwareAcceleratedNeuralNets
  nameWithType.vb: INeatExperiment(Of T).EnableHardwareAcceleratedNeuralNets
- uid: SharpNeat.Experiments.INeatExperiment`1.EvaluationScheme
  name: EvaluationScheme
  href: api/SharpNeat.Experiments.INeatExperiment-1.html#SharpNeat_Experiments_INeatExperiment_1_EvaluationScheme
  commentId: P:SharpNeat.Experiments.INeatExperiment`1.EvaluationScheme
  fullName: SharpNeat.Experiments.INeatExperiment<T>.EvaluationScheme
  fullName.vb: SharpNeat.Experiments.INeatExperiment(Of T).EvaluationScheme
  nameWithType: INeatExperiment<T>.EvaluationScheme
  nameWithType.vb: INeatExperiment(Of T).EvaluationScheme
- uid: SharpNeat.Experiments.INeatExperiment`1.EvaluationScheme*
  name: EvaluationScheme
  href: api/SharpNeat.Experiments.INeatExperiment-1.html#SharpNeat_Experiments_INeatExperiment_1_EvaluationScheme_
  commentId: Overload:SharpNeat.Experiments.INeatExperiment`1.EvaluationScheme
  isSpec: "True"
  fullName: SharpNeat.Experiments.INeatExperiment<T>.EvaluationScheme
  fullName.vb: SharpNeat.Experiments.INeatExperiment(Of T).EvaluationScheme
  nameWithType: INeatExperiment<T>.EvaluationScheme
  nameWithType.vb: INeatExperiment(Of T).EvaluationScheme
- uid: SharpNeat.Experiments.INeatExperiment`1.EvolutionAlgorithmSettings
  name: EvolutionAlgorithmSettings
  href: api/SharpNeat.Experiments.INeatExperiment-1.html#SharpNeat_Experiments_INeatExperiment_1_EvolutionAlgorithmSettings
  commentId: P:SharpNeat.Experiments.INeatExperiment`1.EvolutionAlgorithmSettings
  fullName: SharpNeat.Experiments.INeatExperiment<T>.EvolutionAlgorithmSettings
  fullName.vb: SharpNeat.Experiments.INeatExperiment(Of T).EvolutionAlgorithmSettings
  nameWithType: INeatExperiment<T>.EvolutionAlgorithmSettings
  nameWithType.vb: INeatExperiment(Of T).EvolutionAlgorithmSettings
- uid: SharpNeat.Experiments.INeatExperiment`1.EvolutionAlgorithmSettings*
  name: EvolutionAlgorithmSettings
  href: api/SharpNeat.Experiments.INeatExperiment-1.html#SharpNeat_Experiments_INeatExperiment_1_EvolutionAlgorithmSettings_
  commentId: Overload:SharpNeat.Experiments.INeatExperiment`1.EvolutionAlgorithmSettings
  isSpec: "True"
  fullName: SharpNeat.Experiments.INeatExperiment<T>.EvolutionAlgorithmSettings
  fullName.vb: SharpNeat.Experiments.INeatExperiment(Of T).EvolutionAlgorithmSettings
  nameWithType: INeatExperiment<T>.EvolutionAlgorithmSettings
  nameWithType.vb: INeatExperiment(Of T).EvolutionAlgorithmSettings
- uid: SharpNeat.Experiments.INeatExperiment`1.FactoryId
  name: FactoryId
  href: api/SharpNeat.Experiments.INeatExperiment-1.html#SharpNeat_Experiments_INeatExperiment_1_FactoryId
  commentId: P:SharpNeat.Experiments.INeatExperiment`1.FactoryId
  fullName: SharpNeat.Experiments.INeatExperiment<T>.FactoryId
  fullName.vb: SharpNeat.Experiments.INeatExperiment(Of T).FactoryId
  nameWithType: INeatExperiment<T>.FactoryId
  nameWithType.vb: INeatExperiment(Of T).FactoryId
- uid: SharpNeat.Experiments.INeatExperiment`1.FactoryId*
  name: FactoryId
  href: api/SharpNeat.Experiments.INeatExperiment-1.html#SharpNeat_Experiments_INeatExperiment_1_FactoryId_
  commentId: Overload:SharpNeat.Experiments.INeatExperiment`1.FactoryId
  isSpec: "True"
  fullName: SharpNeat.Experiments.INeatExperiment<T>.FactoryId
  fullName.vb: SharpNeat.Experiments.INeatExperiment(Of T).FactoryId
  nameWithType: INeatExperiment<T>.FactoryId
  nameWithType.vb: INeatExperiment(Of T).FactoryId
- uid: SharpNeat.Experiments.INeatExperiment`1.Id
  name: Id
  href: api/SharpNeat.Experiments.INeatExperiment-1.html#SharpNeat_Experiments_INeatExperiment_1_Id
  commentId: P:SharpNeat.Experiments.INeatExperiment`1.Id
  fullName: SharpNeat.Experiments.INeatExperiment<T>.Id
  fullName.vb: SharpNeat.Experiments.INeatExperiment(Of T).Id
  nameWithType: INeatExperiment<T>.Id
  nameWithType.vb: INeatExperiment(Of T).Id
- uid: SharpNeat.Experiments.INeatExperiment`1.Id*
  name: Id
  href: api/SharpNeat.Experiments.INeatExperiment-1.html#SharpNeat_Experiments_INeatExperiment_1_Id_
  commentId: Overload:SharpNeat.Experiments.INeatExperiment`1.Id
  isSpec: "True"
  fullName: SharpNeat.Experiments.INeatExperiment<T>.Id
  fullName.vb: SharpNeat.Experiments.INeatExperiment(Of T).Id
  nameWithType: INeatExperiment<T>.Id
  nameWithType.vb: INeatExperiment(Of T).Id
- uid: SharpNeat.Experiments.INeatExperiment`1.InitialInterconnectionsProportion
  name: InitialInterconnectionsProportion
  href: api/SharpNeat.Experiments.INeatExperiment-1.html#SharpNeat_Experiments_INeatExperiment_1_InitialInterconnectionsProportion
  commentId: P:SharpNeat.Experiments.INeatExperiment`1.InitialInterconnectionsProportion
  fullName: SharpNeat.Experiments.INeatExperiment<T>.InitialInterconnectionsProportion
  fullName.vb: SharpNeat.Experiments.INeatExperiment(Of T).InitialInterconnectionsProportion
  nameWithType: INeatExperiment<T>.InitialInterconnectionsProportion
  nameWithType.vb: INeatExperiment(Of T).InitialInterconnectionsProportion
- uid: SharpNeat.Experiments.INeatExperiment`1.InitialInterconnectionsProportion*
  name: InitialInterconnectionsProportion
  href: api/SharpNeat.Experiments.INeatExperiment-1.html#SharpNeat_Experiments_INeatExperiment_1_InitialInterconnectionsProportion_
  commentId: Overload:SharpNeat.Experiments.INeatExperiment`1.InitialInterconnectionsProportion
  isSpec: "True"
  fullName: SharpNeat.Experiments.INeatExperiment<T>.InitialInterconnectionsProportion
  fullName.vb: SharpNeat.Experiments.INeatExperiment(Of T).InitialInterconnectionsProportion
  nameWithType: INeatExperiment<T>.InitialInterconnectionsProportion
  nameWithType.vb: INeatExperiment(Of T).InitialInterconnectionsProportion
- uid: SharpNeat.Experiments.INeatExperiment`1.IsAcyclic
  name: IsAcyclic
  href: api/SharpNeat.Experiments.INeatExperiment-1.html#SharpNeat_Experiments_INeatExperiment_1_IsAcyclic
  commentId: P:SharpNeat.Experiments.INeatExperiment`1.IsAcyclic
  fullName: SharpNeat.Experiments.INeatExperiment<T>.IsAcyclic
  fullName.vb: SharpNeat.Experiments.INeatExperiment(Of T).IsAcyclic
  nameWithType: INeatExperiment<T>.IsAcyclic
  nameWithType.vb: INeatExperiment(Of T).IsAcyclic
- uid: SharpNeat.Experiments.INeatExperiment`1.IsAcyclic*
  name: IsAcyclic
  href: api/SharpNeat.Experiments.INeatExperiment-1.html#SharpNeat_Experiments_INeatExperiment_1_IsAcyclic_
  commentId: Overload:SharpNeat.Experiments.INeatExperiment`1.IsAcyclic
  isSpec: "True"
  fullName: SharpNeat.Experiments.INeatExperiment<T>.IsAcyclic
  fullName.vb: SharpNeat.Experiments.INeatExperiment(Of T).IsAcyclic
  nameWithType: INeatExperiment<T>.IsAcyclic
  nameWithType.vb: INeatExperiment(Of T).IsAcyclic
- uid: SharpNeat.Experiments.INeatExperiment`1.Name
  name: Name
  href: api/SharpNeat.Experiments.INeatExperiment-1.html#SharpNeat_Experiments_INeatExperiment_1_Name
  commentId: P:SharpNeat.Experiments.INeatExperiment`1.Name
  fullName: SharpNeat.Experiments.INeatExperiment<T>.Name
  fullName.vb: SharpNeat.Experiments.INeatExperiment(Of T).Name
  nameWithType: INeatExperiment<T>.Name
  nameWithType.vb: INeatExperiment(Of T).Name
- uid: SharpNeat.Experiments.INeatExperiment`1.Name*
  name: Name
  href: api/SharpNeat.Experiments.INeatExperiment-1.html#SharpNeat_Experiments_INeatExperiment_1_Name_
  commentId: Overload:SharpNeat.Experiments.INeatExperiment`1.Name
  isSpec: "True"
  fullName: SharpNeat.Experiments.INeatExperiment<T>.Name
  fullName.vb: SharpNeat.Experiments.INeatExperiment(Of T).Name
  nameWithType: INeatExperiment<T>.Name
  nameWithType.vb: INeatExperiment(Of T).Name
- uid: SharpNeat.Experiments.INeatExperiment`1.PopulationSize
  name: PopulationSize
  href: api/SharpNeat.Experiments.INeatExperiment-1.html#SharpNeat_Experiments_INeatExperiment_1_PopulationSize
  commentId: P:SharpNeat.Experiments.INeatExperiment`1.PopulationSize
  fullName: SharpNeat.Experiments.INeatExperiment<T>.PopulationSize
  fullName.vb: SharpNeat.Experiments.INeatExperiment(Of T).PopulationSize
  nameWithType: INeatExperiment<T>.PopulationSize
  nameWithType.vb: INeatExperiment(Of T).PopulationSize
- uid: SharpNeat.Experiments.INeatExperiment`1.PopulationSize*
  name: PopulationSize
  href: api/SharpNeat.Experiments.INeatExperiment-1.html#SharpNeat_Experiments_INeatExperiment_1_PopulationSize_
  commentId: Overload:SharpNeat.Experiments.INeatExperiment`1.PopulationSize
  isSpec: "True"
  fullName: SharpNeat.Experiments.INeatExperiment<T>.PopulationSize
  fullName.vb: SharpNeat.Experiments.INeatExperiment(Of T).PopulationSize
  nameWithType: INeatExperiment<T>.PopulationSize
  nameWithType.vb: INeatExperiment(Of T).PopulationSize
- uid: SharpNeat.Experiments.INeatExperiment`1.ReproductionAsexualSettings
  name: ReproductionAsexualSettings
  href: api/SharpNeat.Experiments.INeatExperiment-1.html#SharpNeat_Experiments_INeatExperiment_1_ReproductionAsexualSettings
  commentId: P:SharpNeat.Experiments.INeatExperiment`1.ReproductionAsexualSettings
  fullName: SharpNeat.Experiments.INeatExperiment<T>.ReproductionAsexualSettings
  fullName.vb: SharpNeat.Experiments.INeatExperiment(Of T).ReproductionAsexualSettings
  nameWithType: INeatExperiment<T>.ReproductionAsexualSettings
  nameWithType.vb: INeatExperiment(Of T).ReproductionAsexualSettings
- uid: SharpNeat.Experiments.INeatExperiment`1.ReproductionAsexualSettings*
  name: ReproductionAsexualSettings
  href: api/SharpNeat.Experiments.INeatExperiment-1.html#SharpNeat_Experiments_INeatExperiment_1_ReproductionAsexualSettings_
  commentId: Overload:SharpNeat.Experiments.INeatExperiment`1.ReproductionAsexualSettings
  isSpec: "True"
  fullName: SharpNeat.Experiments.INeatExperiment<T>.ReproductionAsexualSettings
  fullName.vb: SharpNeat.Experiments.INeatExperiment(Of T).ReproductionAsexualSettings
  nameWithType: INeatExperiment<T>.ReproductionAsexualSettings
  nameWithType.vb: INeatExperiment(Of T).ReproductionAsexualSettings
- uid: SharpNeat.Experiments.INeatExperiment`1.ReproductionSexualSettings
  name: ReproductionSexualSettings
  href: api/SharpNeat.Experiments.INeatExperiment-1.html#SharpNeat_Experiments_INeatExperiment_1_ReproductionSexualSettings
  commentId: P:SharpNeat.Experiments.INeatExperiment`1.ReproductionSexualSettings
  fullName: SharpNeat.Experiments.INeatExperiment<T>.ReproductionSexualSettings
  fullName.vb: SharpNeat.Experiments.INeatExperiment(Of T).ReproductionSexualSettings
  nameWithType: INeatExperiment<T>.ReproductionSexualSettings
  nameWithType.vb: INeatExperiment(Of T).ReproductionSexualSettings
- uid: SharpNeat.Experiments.INeatExperiment`1.ReproductionSexualSettings*
  name: ReproductionSexualSettings
  href: api/SharpNeat.Experiments.INeatExperiment-1.html#SharpNeat_Experiments_INeatExperiment_1_ReproductionSexualSettings_
  commentId: Overload:SharpNeat.Experiments.INeatExperiment`1.ReproductionSexualSettings
  isSpec: "True"
  fullName: SharpNeat.Experiments.INeatExperiment<T>.ReproductionSexualSettings
  fullName.vb: SharpNeat.Experiments.INeatExperiment(Of T).ReproductionSexualSettings
  nameWithType: INeatExperiment<T>.ReproductionSexualSettings
  nameWithType.vb: INeatExperiment(Of T).ReproductionSexualSettings
- uid: SharpNeat.Experiments.INeatExperimentFactory
  name: INeatExperimentFactory
  href: api/SharpNeat.Experiments.INeatExperimentFactory.html
  commentId: T:SharpNeat.Experiments.INeatExperimentFactory
  fullName: SharpNeat.Experiments.INeatExperimentFactory
  nameWithType: INeatExperimentFactory
- uid: SharpNeat.Experiments.INeatExperimentFactory.CreateExperiment(System.IO.Stream)
  name: CreateExperiment(Stream)
  href: api/SharpNeat.Experiments.INeatExperimentFactory.html#SharpNeat_Experiments_INeatExperimentFactory_CreateExperiment_System_IO_Stream_
  commentId: M:SharpNeat.Experiments.INeatExperimentFactory.CreateExperiment(System.IO.Stream)
  fullName: SharpNeat.Experiments.INeatExperimentFactory.CreateExperiment(System.IO.Stream)
  nameWithType: INeatExperimentFactory.CreateExperiment(Stream)
- uid: SharpNeat.Experiments.INeatExperimentFactory.CreateExperiment*
  name: CreateExperiment
  href: api/SharpNeat.Experiments.INeatExperimentFactory.html#SharpNeat_Experiments_INeatExperimentFactory_CreateExperiment_
  commentId: Overload:SharpNeat.Experiments.INeatExperimentFactory.CreateExperiment
  isSpec: "True"
  fullName: SharpNeat.Experiments.INeatExperimentFactory.CreateExperiment
  nameWithType: INeatExperimentFactory.CreateExperiment
- uid: SharpNeat.Experiments.INeatExperimentFactory.CreateExperimentSinglePrecision(System.IO.Stream)
  name: CreateExperimentSinglePrecision(Stream)
  href: api/SharpNeat.Experiments.INeatExperimentFactory.html#SharpNeat_Experiments_INeatExperimentFactory_CreateExperimentSinglePrecision_System_IO_Stream_
  commentId: M:SharpNeat.Experiments.INeatExperimentFactory.CreateExperimentSinglePrecision(System.IO.Stream)
  fullName: SharpNeat.Experiments.INeatExperimentFactory.CreateExperimentSinglePrecision(System.IO.Stream)
  nameWithType: INeatExperimentFactory.CreateExperimentSinglePrecision(Stream)
- uid: SharpNeat.Experiments.INeatExperimentFactory.CreateExperimentSinglePrecision*
  name: CreateExperimentSinglePrecision
  href: api/SharpNeat.Experiments.INeatExperimentFactory.html#SharpNeat_Experiments_INeatExperimentFactory_CreateExperimentSinglePrecision_
  commentId: Overload:SharpNeat.Experiments.INeatExperimentFactory.CreateExperimentSinglePrecision
  isSpec: "True"
  fullName: SharpNeat.Experiments.INeatExperimentFactory.CreateExperimentSinglePrecision
  nameWithType: INeatExperimentFactory.CreateExperimentSinglePrecision
- uid: SharpNeat.Experiments.INeatExperimentFactory.Id
  name: Id
  href: api/SharpNeat.Experiments.INeatExperimentFactory.html#SharpNeat_Experiments_INeatExperimentFactory_Id
  commentId: P:SharpNeat.Experiments.INeatExperimentFactory.Id
  fullName: SharpNeat.Experiments.INeatExperimentFactory.Id
  nameWithType: INeatExperimentFactory.Id
- uid: SharpNeat.Experiments.INeatExperimentFactory.Id*
  name: Id
  href: api/SharpNeat.Experiments.INeatExperimentFactory.html#SharpNeat_Experiments_INeatExperimentFactory_Id_
  commentId: Overload:SharpNeat.Experiments.INeatExperimentFactory.Id
  isSpec: "True"
  fullName: SharpNeat.Experiments.INeatExperimentFactory.Id
  nameWithType: INeatExperimentFactory.Id
- uid: SharpNeat.Experiments.ModelUtils
  name: ModelUtils
  href: api/SharpNeat.Experiments.ModelUtils.html
  commentId: T:SharpNeat.Experiments.ModelUtils
  fullName: SharpNeat.Experiments.ModelUtils
  nameWithType: ModelUtils
- uid: SharpNeat.Experiments.ModelUtils.GetMandatoryProperty*
  name: GetMandatoryProperty
  href: api/SharpNeat.Experiments.ModelUtils.html#SharpNeat_Experiments_ModelUtils_GetMandatoryProperty_
  commentId: Overload:SharpNeat.Experiments.ModelUtils.GetMandatoryProperty
  isSpec: "True"
  fullName: SharpNeat.Experiments.ModelUtils.GetMandatoryProperty
  nameWithType: ModelUtils.GetMandatoryProperty
- uid: SharpNeat.Experiments.ModelUtils.GetMandatoryProperty``2(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{``1}}})
  name: GetMandatoryProperty<TModel, TPropertyValue>(TModel, Expression<Func<TModel, TPropertyValue?>>)
  href: api/SharpNeat.Experiments.ModelUtils.html#SharpNeat_Experiments_ModelUtils_GetMandatoryProperty__2___0_System_Linq_Expressions_Expression_System_Func___0_System_Nullable___1____
  commentId: M:SharpNeat.Experiments.ModelUtils.GetMandatoryProperty``2(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{``1}}})
  name.vb: GetMandatoryProperty(Of TModel, TPropertyValue)(TModel, Expression(Of Func(Of TModel, TPropertyValue?)))
  fullName: SharpNeat.Experiments.ModelUtils.GetMandatoryProperty<TModel, TPropertyValue>(TModel, System.Linq.Expressions.Expression<System.Func<TModel, TPropertyValue?>>)
  fullName.vb: SharpNeat.Experiments.ModelUtils.GetMandatoryProperty(Of TModel, TPropertyValue)(TModel, System.Linq.Expressions.Expression(Of System.Func(Of TModel, TPropertyValue?)))
  nameWithType: ModelUtils.GetMandatoryProperty<TModel, TPropertyValue>(TModel, Expression<Func<TModel, TPropertyValue?>>)
  nameWithType.vb: ModelUtils.GetMandatoryProperty(Of TModel, TPropertyValue)(TModel, Expression(Of Func(Of TModel, TPropertyValue?)))
- uid: SharpNeat.Experiments.NeatExperiment`1
  name: NeatExperiment<T>
  href: api/SharpNeat.Experiments.NeatExperiment-1.html
  commentId: T:SharpNeat.Experiments.NeatExperiment`1
  name.vb: NeatExperiment(Of T)
  fullName: SharpNeat.Experiments.NeatExperiment<T>
  fullName.vb: SharpNeat.Experiments.NeatExperiment(Of T)
  nameWithType: NeatExperiment<T>
  nameWithType.vb: NeatExperiment(Of T)
- uid: SharpNeat.Experiments.NeatExperiment`1.#ctor(SharpNeat.Evaluation.IBlackBoxEvaluationScheme{`0},System.String,System.String)
  name: NeatExperiment(IBlackBoxEvaluationScheme<T>, string, string?)
  href: api/SharpNeat.Experiments.NeatExperiment-1.html#SharpNeat_Experiments_NeatExperiment_1__ctor_SharpNeat_Evaluation_IBlackBoxEvaluationScheme__0__System_String_System_String_
  commentId: M:SharpNeat.Experiments.NeatExperiment`1.#ctor(SharpNeat.Evaluation.IBlackBoxEvaluationScheme{`0},System.String,System.String)
  name.vb: New(IBlackBoxEvaluationScheme(Of T), String, String)
  fullName: SharpNeat.Experiments.NeatExperiment<T>.NeatExperiment(SharpNeat.Evaluation.IBlackBoxEvaluationScheme<T>, string, string?)
  fullName.vb: SharpNeat.Experiments.NeatExperiment(Of T).New(SharpNeat.Evaluation.IBlackBoxEvaluationScheme(Of T), String, String)
  nameWithType: NeatExperiment<T>.NeatExperiment(IBlackBoxEvaluationScheme<T>, string, string?)
  nameWithType.vb: NeatExperiment(Of T).New(IBlackBoxEvaluationScheme(Of T), String, String)
- uid: SharpNeat.Experiments.NeatExperiment`1.#ctor*
  name: NeatExperiment
  href: api/SharpNeat.Experiments.NeatExperiment-1.html#SharpNeat_Experiments_NeatExperiment_1__ctor_
  commentId: Overload:SharpNeat.Experiments.NeatExperiment`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Experiments.NeatExperiment<T>.NeatExperiment
  fullName.vb: SharpNeat.Experiments.NeatExperiment(Of T).New
  nameWithType: NeatExperiment<T>.NeatExperiment
  nameWithType.vb: NeatExperiment(Of T).New
- uid: SharpNeat.Experiments.NeatExperiment`1.ActivationFnName
  name: ActivationFnName
  href: api/SharpNeat.Experiments.NeatExperiment-1.html#SharpNeat_Experiments_NeatExperiment_1_ActivationFnName
  commentId: P:SharpNeat.Experiments.NeatExperiment`1.ActivationFnName
  fullName: SharpNeat.Experiments.NeatExperiment<T>.ActivationFnName
  fullName.vb: SharpNeat.Experiments.NeatExperiment(Of T).ActivationFnName
  nameWithType: NeatExperiment<T>.ActivationFnName
  nameWithType.vb: NeatExperiment(Of T).ActivationFnName
- uid: SharpNeat.Experiments.NeatExperiment`1.ActivationFnName*
  name: ActivationFnName
  href: api/SharpNeat.Experiments.NeatExperiment-1.html#SharpNeat_Experiments_NeatExperiment_1_ActivationFnName_
  commentId: Overload:SharpNeat.Experiments.NeatExperiment`1.ActivationFnName
  isSpec: "True"
  fullName: SharpNeat.Experiments.NeatExperiment<T>.ActivationFnName
  fullName.vb: SharpNeat.Experiments.NeatExperiment(Of T).ActivationFnName
  nameWithType: NeatExperiment<T>.ActivationFnName
  nameWithType.vb: NeatExperiment(Of T).ActivationFnName
- uid: SharpNeat.Experiments.NeatExperiment`1.ComplexityRegulationStrategy
  name: ComplexityRegulationStrategy
  href: api/SharpNeat.Experiments.NeatExperiment-1.html#SharpNeat_Experiments_NeatExperiment_1_ComplexityRegulationStrategy
  commentId: P:SharpNeat.Experiments.NeatExperiment`1.ComplexityRegulationStrategy
  fullName: SharpNeat.Experiments.NeatExperiment<T>.ComplexityRegulationStrategy
  fullName.vb: SharpNeat.Experiments.NeatExperiment(Of T).ComplexityRegulationStrategy
  nameWithType: NeatExperiment<T>.ComplexityRegulationStrategy
  nameWithType.vb: NeatExperiment(Of T).ComplexityRegulationStrategy
- uid: SharpNeat.Experiments.NeatExperiment`1.ComplexityRegulationStrategy*
  name: ComplexityRegulationStrategy
  href: api/SharpNeat.Experiments.NeatExperiment-1.html#SharpNeat_Experiments_NeatExperiment_1_ComplexityRegulationStrategy_
  commentId: Overload:SharpNeat.Experiments.NeatExperiment`1.ComplexityRegulationStrategy
  isSpec: "True"
  fullName: SharpNeat.Experiments.NeatExperiment<T>.ComplexityRegulationStrategy
  fullName.vb: SharpNeat.Experiments.NeatExperiment(Of T).ComplexityRegulationStrategy
  nameWithType: NeatExperiment<T>.ComplexityRegulationStrategy
  nameWithType.vb: NeatExperiment(Of T).ComplexityRegulationStrategy
- uid: SharpNeat.Experiments.NeatExperiment`1.ConnectionWeightScale
  name: ConnectionWeightScale
  href: api/SharpNeat.Experiments.NeatExperiment-1.html#SharpNeat_Experiments_NeatExperiment_1_ConnectionWeightScale
  commentId: P:SharpNeat.Experiments.NeatExperiment`1.ConnectionWeightScale
  fullName: SharpNeat.Experiments.NeatExperiment<T>.ConnectionWeightScale
  fullName.vb: SharpNeat.Experiments.NeatExperiment(Of T).ConnectionWeightScale
  nameWithType: NeatExperiment<T>.ConnectionWeightScale
  nameWithType.vb: NeatExperiment(Of T).ConnectionWeightScale
- uid: SharpNeat.Experiments.NeatExperiment`1.ConnectionWeightScale*
  name: ConnectionWeightScale
  href: api/SharpNeat.Experiments.NeatExperiment-1.html#SharpNeat_Experiments_NeatExperiment_1_ConnectionWeightScale_
  commentId: Overload:SharpNeat.Experiments.NeatExperiment`1.ConnectionWeightScale
  isSpec: "True"
  fullName: SharpNeat.Experiments.NeatExperiment<T>.ConnectionWeightScale
  fullName.vb: SharpNeat.Experiments.NeatExperiment(Of T).ConnectionWeightScale
  nameWithType: NeatExperiment<T>.ConnectionWeightScale
  nameWithType.vb: NeatExperiment(Of T).ConnectionWeightScale
- uid: SharpNeat.Experiments.NeatExperiment`1.CyclesPerActivation
  name: CyclesPerActivation
  href: api/SharpNeat.Experiments.NeatExperiment-1.html#SharpNeat_Experiments_NeatExperiment_1_CyclesPerActivation
  commentId: P:SharpNeat.Experiments.NeatExperiment`1.CyclesPerActivation
  fullName: SharpNeat.Experiments.NeatExperiment<T>.CyclesPerActivation
  fullName.vb: SharpNeat.Experiments.NeatExperiment(Of T).CyclesPerActivation
  nameWithType: NeatExperiment<T>.CyclesPerActivation
  nameWithType.vb: NeatExperiment(Of T).CyclesPerActivation
- uid: SharpNeat.Experiments.NeatExperiment`1.CyclesPerActivation*
  name: CyclesPerActivation
  href: api/SharpNeat.Experiments.NeatExperiment-1.html#SharpNeat_Experiments_NeatExperiment_1_CyclesPerActivation_
  commentId: Overload:SharpNeat.Experiments.NeatExperiment`1.CyclesPerActivation
  isSpec: "True"
  fullName: SharpNeat.Experiments.NeatExperiment<T>.CyclesPerActivation
  fullName.vb: SharpNeat.Experiments.NeatExperiment(Of T).CyclesPerActivation
  nameWithType: NeatExperiment<T>.CyclesPerActivation
  nameWithType.vb: NeatExperiment(Of T).CyclesPerActivation
- uid: SharpNeat.Experiments.NeatExperiment`1.DegreeOfParallelism
  name: DegreeOfParallelism
  href: api/SharpNeat.Experiments.NeatExperiment-1.html#SharpNeat_Experiments_NeatExperiment_1_DegreeOfParallelism
  commentId: P:SharpNeat.Experiments.NeatExperiment`1.DegreeOfParallelism
  fullName: SharpNeat.Experiments.NeatExperiment<T>.DegreeOfParallelism
  fullName.vb: SharpNeat.Experiments.NeatExperiment(Of T).DegreeOfParallelism
  nameWithType: NeatExperiment<T>.DegreeOfParallelism
  nameWithType.vb: NeatExperiment(Of T).DegreeOfParallelism
- uid: SharpNeat.Experiments.NeatExperiment`1.DegreeOfParallelism*
  name: DegreeOfParallelism
  href: api/SharpNeat.Experiments.NeatExperiment-1.html#SharpNeat_Experiments_NeatExperiment_1_DegreeOfParallelism_
  commentId: Overload:SharpNeat.Experiments.NeatExperiment`1.DegreeOfParallelism
  isSpec: "True"
  fullName: SharpNeat.Experiments.NeatExperiment<T>.DegreeOfParallelism
  fullName.vb: SharpNeat.Experiments.NeatExperiment(Of T).DegreeOfParallelism
  nameWithType: NeatExperiment<T>.DegreeOfParallelism
  nameWithType.vb: NeatExperiment(Of T).DegreeOfParallelism
- uid: SharpNeat.Experiments.NeatExperiment`1.Description
  name: Description
  href: api/SharpNeat.Experiments.NeatExperiment-1.html#SharpNeat_Experiments_NeatExperiment_1_Description
  commentId: P:SharpNeat.Experiments.NeatExperiment`1.Description
  fullName: SharpNeat.Experiments.NeatExperiment<T>.Description
  fullName.vb: SharpNeat.Experiments.NeatExperiment(Of T).Description
  nameWithType: NeatExperiment<T>.Description
  nameWithType.vb: NeatExperiment(Of T).Description
- uid: SharpNeat.Experiments.NeatExperiment`1.Description*
  name: Description
  href: api/SharpNeat.Experiments.NeatExperiment-1.html#SharpNeat_Experiments_NeatExperiment_1_Description_
  commentId: Overload:SharpNeat.Experiments.NeatExperiment`1.Description
  isSpec: "True"
  fullName: SharpNeat.Experiments.NeatExperiment<T>.Description
  fullName.vb: SharpNeat.Experiments.NeatExperiment(Of T).Description
  nameWithType: NeatExperiment<T>.Description
  nameWithType.vb: NeatExperiment(Of T).Description
- uid: SharpNeat.Experiments.NeatExperiment`1.EnableHardwareAcceleratedActivationFunctions
  name: EnableHardwareAcceleratedActivationFunctions
  href: api/SharpNeat.Experiments.NeatExperiment-1.html#SharpNeat_Experiments_NeatExperiment_1_EnableHardwareAcceleratedActivationFunctions
  commentId: P:SharpNeat.Experiments.NeatExperiment`1.EnableHardwareAcceleratedActivationFunctions
  fullName: SharpNeat.Experiments.NeatExperiment<T>.EnableHardwareAcceleratedActivationFunctions
  fullName.vb: SharpNeat.Experiments.NeatExperiment(Of T).EnableHardwareAcceleratedActivationFunctions
  nameWithType: NeatExperiment<T>.EnableHardwareAcceleratedActivationFunctions
  nameWithType.vb: NeatExperiment(Of T).EnableHardwareAcceleratedActivationFunctions
- uid: SharpNeat.Experiments.NeatExperiment`1.EnableHardwareAcceleratedActivationFunctions*
  name: EnableHardwareAcceleratedActivationFunctions
  href: api/SharpNeat.Experiments.NeatExperiment-1.html#SharpNeat_Experiments_NeatExperiment_1_EnableHardwareAcceleratedActivationFunctions_
  commentId: Overload:SharpNeat.Experiments.NeatExperiment`1.EnableHardwareAcceleratedActivationFunctions
  isSpec: "True"
  fullName: SharpNeat.Experiments.NeatExperiment<T>.EnableHardwareAcceleratedActivationFunctions
  fullName.vb: SharpNeat.Experiments.NeatExperiment(Of T).EnableHardwareAcceleratedActivationFunctions
  nameWithType: NeatExperiment<T>.EnableHardwareAcceleratedActivationFunctions
  nameWithType.vb: NeatExperiment(Of T).EnableHardwareAcceleratedActivationFunctions
- uid: SharpNeat.Experiments.NeatExperiment`1.EnableHardwareAcceleratedNeuralNets
  name: EnableHardwareAcceleratedNeuralNets
  href: api/SharpNeat.Experiments.NeatExperiment-1.html#SharpNeat_Experiments_NeatExperiment_1_EnableHardwareAcceleratedNeuralNets
  commentId: P:SharpNeat.Experiments.NeatExperiment`1.EnableHardwareAcceleratedNeuralNets
  fullName: SharpNeat.Experiments.NeatExperiment<T>.EnableHardwareAcceleratedNeuralNets
  fullName.vb: SharpNeat.Experiments.NeatExperiment(Of T).EnableHardwareAcceleratedNeuralNets
  nameWithType: NeatExperiment<T>.EnableHardwareAcceleratedNeuralNets
  nameWithType.vb: NeatExperiment(Of T).EnableHardwareAcceleratedNeuralNets
- uid: SharpNeat.Experiments.NeatExperiment`1.EnableHardwareAcceleratedNeuralNets*
  name: EnableHardwareAcceleratedNeuralNets
  href: api/SharpNeat.Experiments.NeatExperiment-1.html#SharpNeat_Experiments_NeatExperiment_1_EnableHardwareAcceleratedNeuralNets_
  commentId: Overload:SharpNeat.Experiments.NeatExperiment`1.EnableHardwareAcceleratedNeuralNets
  isSpec: "True"
  fullName: SharpNeat.Experiments.NeatExperiment<T>.EnableHardwareAcceleratedNeuralNets
  fullName.vb: SharpNeat.Experiments.NeatExperiment(Of T).EnableHardwareAcceleratedNeuralNets
  nameWithType: NeatExperiment<T>.EnableHardwareAcceleratedNeuralNets
  nameWithType.vb: NeatExperiment(Of T).EnableHardwareAcceleratedNeuralNets
- uid: SharpNeat.Experiments.NeatExperiment`1.EvaluationScheme
  name: EvaluationScheme
  href: api/SharpNeat.Experiments.NeatExperiment-1.html#SharpNeat_Experiments_NeatExperiment_1_EvaluationScheme
  commentId: P:SharpNeat.Experiments.NeatExperiment`1.EvaluationScheme
  fullName: SharpNeat.Experiments.NeatExperiment<T>.EvaluationScheme
  fullName.vb: SharpNeat.Experiments.NeatExperiment(Of T).EvaluationScheme
  nameWithType: NeatExperiment<T>.EvaluationScheme
  nameWithType.vb: NeatExperiment(Of T).EvaluationScheme
- uid: SharpNeat.Experiments.NeatExperiment`1.EvaluationScheme*
  name: EvaluationScheme
  href: api/SharpNeat.Experiments.NeatExperiment-1.html#SharpNeat_Experiments_NeatExperiment_1_EvaluationScheme_
  commentId: Overload:SharpNeat.Experiments.NeatExperiment`1.EvaluationScheme
  isSpec: "True"
  fullName: SharpNeat.Experiments.NeatExperiment<T>.EvaluationScheme
  fullName.vb: SharpNeat.Experiments.NeatExperiment(Of T).EvaluationScheme
  nameWithType: NeatExperiment<T>.EvaluationScheme
  nameWithType.vb: NeatExperiment(Of T).EvaluationScheme
- uid: SharpNeat.Experiments.NeatExperiment`1.EvolutionAlgorithmSettings
  name: EvolutionAlgorithmSettings
  href: api/SharpNeat.Experiments.NeatExperiment-1.html#SharpNeat_Experiments_NeatExperiment_1_EvolutionAlgorithmSettings
  commentId: P:SharpNeat.Experiments.NeatExperiment`1.EvolutionAlgorithmSettings
  fullName: SharpNeat.Experiments.NeatExperiment<T>.EvolutionAlgorithmSettings
  fullName.vb: SharpNeat.Experiments.NeatExperiment(Of T).EvolutionAlgorithmSettings
  nameWithType: NeatExperiment<T>.EvolutionAlgorithmSettings
  nameWithType.vb: NeatExperiment(Of T).EvolutionAlgorithmSettings
- uid: SharpNeat.Experiments.NeatExperiment`1.EvolutionAlgorithmSettings*
  name: EvolutionAlgorithmSettings
  href: api/SharpNeat.Experiments.NeatExperiment-1.html#SharpNeat_Experiments_NeatExperiment_1_EvolutionAlgorithmSettings_
  commentId: Overload:SharpNeat.Experiments.NeatExperiment`1.EvolutionAlgorithmSettings
  isSpec: "True"
  fullName: SharpNeat.Experiments.NeatExperiment<T>.EvolutionAlgorithmSettings
  fullName.vb: SharpNeat.Experiments.NeatExperiment(Of T).EvolutionAlgorithmSettings
  nameWithType: NeatExperiment<T>.EvolutionAlgorithmSettings
  nameWithType.vb: NeatExperiment(Of T).EvolutionAlgorithmSettings
- uid: SharpNeat.Experiments.NeatExperiment`1.FactoryId
  name: FactoryId
  href: api/SharpNeat.Experiments.NeatExperiment-1.html#SharpNeat_Experiments_NeatExperiment_1_FactoryId
  commentId: P:SharpNeat.Experiments.NeatExperiment`1.FactoryId
  fullName: SharpNeat.Experiments.NeatExperiment<T>.FactoryId
  fullName.vb: SharpNeat.Experiments.NeatExperiment(Of T).FactoryId
  nameWithType: NeatExperiment<T>.FactoryId
  nameWithType.vb: NeatExperiment(Of T).FactoryId
- uid: SharpNeat.Experiments.NeatExperiment`1.FactoryId*
  name: FactoryId
  href: api/SharpNeat.Experiments.NeatExperiment-1.html#SharpNeat_Experiments_NeatExperiment_1_FactoryId_
  commentId: Overload:SharpNeat.Experiments.NeatExperiment`1.FactoryId
  isSpec: "True"
  fullName: SharpNeat.Experiments.NeatExperiment<T>.FactoryId
  fullName.vb: SharpNeat.Experiments.NeatExperiment(Of T).FactoryId
  nameWithType: NeatExperiment<T>.FactoryId
  nameWithType.vb: NeatExperiment(Of T).FactoryId
- uid: SharpNeat.Experiments.NeatExperiment`1.Id
  name: Id
  href: api/SharpNeat.Experiments.NeatExperiment-1.html#SharpNeat_Experiments_NeatExperiment_1_Id
  commentId: P:SharpNeat.Experiments.NeatExperiment`1.Id
  fullName: SharpNeat.Experiments.NeatExperiment<T>.Id
  fullName.vb: SharpNeat.Experiments.NeatExperiment(Of T).Id
  nameWithType: NeatExperiment<T>.Id
  nameWithType.vb: NeatExperiment(Of T).Id
- uid: SharpNeat.Experiments.NeatExperiment`1.Id*
  name: Id
  href: api/SharpNeat.Experiments.NeatExperiment-1.html#SharpNeat_Experiments_NeatExperiment_1_Id_
  commentId: Overload:SharpNeat.Experiments.NeatExperiment`1.Id
  isSpec: "True"
  fullName: SharpNeat.Experiments.NeatExperiment<T>.Id
  fullName.vb: SharpNeat.Experiments.NeatExperiment(Of T).Id
  nameWithType: NeatExperiment<T>.Id
  nameWithType.vb: NeatExperiment(Of T).Id
- uid: SharpNeat.Experiments.NeatExperiment`1.InitialInterconnectionsProportion
  name: InitialInterconnectionsProportion
  href: api/SharpNeat.Experiments.NeatExperiment-1.html#SharpNeat_Experiments_NeatExperiment_1_InitialInterconnectionsProportion
  commentId: P:SharpNeat.Experiments.NeatExperiment`1.InitialInterconnectionsProportion
  fullName: SharpNeat.Experiments.NeatExperiment<T>.InitialInterconnectionsProportion
  fullName.vb: SharpNeat.Experiments.NeatExperiment(Of T).InitialInterconnectionsProportion
  nameWithType: NeatExperiment<T>.InitialInterconnectionsProportion
  nameWithType.vb: NeatExperiment(Of T).InitialInterconnectionsProportion
- uid: SharpNeat.Experiments.NeatExperiment`1.InitialInterconnectionsProportion*
  name: InitialInterconnectionsProportion
  href: api/SharpNeat.Experiments.NeatExperiment-1.html#SharpNeat_Experiments_NeatExperiment_1_InitialInterconnectionsProportion_
  commentId: Overload:SharpNeat.Experiments.NeatExperiment`1.InitialInterconnectionsProportion
  isSpec: "True"
  fullName: SharpNeat.Experiments.NeatExperiment<T>.InitialInterconnectionsProportion
  fullName.vb: SharpNeat.Experiments.NeatExperiment(Of T).InitialInterconnectionsProportion
  nameWithType: NeatExperiment<T>.InitialInterconnectionsProportion
  nameWithType.vb: NeatExperiment(Of T).InitialInterconnectionsProportion
- uid: SharpNeat.Experiments.NeatExperiment`1.IsAcyclic
  name: IsAcyclic
  href: api/SharpNeat.Experiments.NeatExperiment-1.html#SharpNeat_Experiments_NeatExperiment_1_IsAcyclic
  commentId: P:SharpNeat.Experiments.NeatExperiment`1.IsAcyclic
  fullName: SharpNeat.Experiments.NeatExperiment<T>.IsAcyclic
  fullName.vb: SharpNeat.Experiments.NeatExperiment(Of T).IsAcyclic
  nameWithType: NeatExperiment<T>.IsAcyclic
  nameWithType.vb: NeatExperiment(Of T).IsAcyclic
- uid: SharpNeat.Experiments.NeatExperiment`1.IsAcyclic*
  name: IsAcyclic
  href: api/SharpNeat.Experiments.NeatExperiment-1.html#SharpNeat_Experiments_NeatExperiment_1_IsAcyclic_
  commentId: Overload:SharpNeat.Experiments.NeatExperiment`1.IsAcyclic
  isSpec: "True"
  fullName: SharpNeat.Experiments.NeatExperiment<T>.IsAcyclic
  fullName.vb: SharpNeat.Experiments.NeatExperiment(Of T).IsAcyclic
  nameWithType: NeatExperiment<T>.IsAcyclic
  nameWithType.vb: NeatExperiment(Of T).IsAcyclic
- uid: SharpNeat.Experiments.NeatExperiment`1.Name
  name: Name
  href: api/SharpNeat.Experiments.NeatExperiment-1.html#SharpNeat_Experiments_NeatExperiment_1_Name
  commentId: P:SharpNeat.Experiments.NeatExperiment`1.Name
  fullName: SharpNeat.Experiments.NeatExperiment<T>.Name
  fullName.vb: SharpNeat.Experiments.NeatExperiment(Of T).Name
  nameWithType: NeatExperiment<T>.Name
  nameWithType.vb: NeatExperiment(Of T).Name
- uid: SharpNeat.Experiments.NeatExperiment`1.Name*
  name: Name
  href: api/SharpNeat.Experiments.NeatExperiment-1.html#SharpNeat_Experiments_NeatExperiment_1_Name_
  commentId: Overload:SharpNeat.Experiments.NeatExperiment`1.Name
  isSpec: "True"
  fullName: SharpNeat.Experiments.NeatExperiment<T>.Name
  fullName.vb: SharpNeat.Experiments.NeatExperiment(Of T).Name
  nameWithType: NeatExperiment<T>.Name
  nameWithType.vb: NeatExperiment(Of T).Name
- uid: SharpNeat.Experiments.NeatExperiment`1.PopulationSize
  name: PopulationSize
  href: api/SharpNeat.Experiments.NeatExperiment-1.html#SharpNeat_Experiments_NeatExperiment_1_PopulationSize
  commentId: P:SharpNeat.Experiments.NeatExperiment`1.PopulationSize
  fullName: SharpNeat.Experiments.NeatExperiment<T>.PopulationSize
  fullName.vb: SharpNeat.Experiments.NeatExperiment(Of T).PopulationSize
  nameWithType: NeatExperiment<T>.PopulationSize
  nameWithType.vb: NeatExperiment(Of T).PopulationSize
- uid: SharpNeat.Experiments.NeatExperiment`1.PopulationSize*
  name: PopulationSize
  href: api/SharpNeat.Experiments.NeatExperiment-1.html#SharpNeat_Experiments_NeatExperiment_1_PopulationSize_
  commentId: Overload:SharpNeat.Experiments.NeatExperiment`1.PopulationSize
  isSpec: "True"
  fullName: SharpNeat.Experiments.NeatExperiment<T>.PopulationSize
  fullName.vb: SharpNeat.Experiments.NeatExperiment(Of T).PopulationSize
  nameWithType: NeatExperiment<T>.PopulationSize
  nameWithType.vb: NeatExperiment(Of T).PopulationSize
- uid: SharpNeat.Experiments.NeatExperiment`1.ReproductionAsexualSettings
  name: ReproductionAsexualSettings
  href: api/SharpNeat.Experiments.NeatExperiment-1.html#SharpNeat_Experiments_NeatExperiment_1_ReproductionAsexualSettings
  commentId: P:SharpNeat.Experiments.NeatExperiment`1.ReproductionAsexualSettings
  fullName: SharpNeat.Experiments.NeatExperiment<T>.ReproductionAsexualSettings
  fullName.vb: SharpNeat.Experiments.NeatExperiment(Of T).ReproductionAsexualSettings
  nameWithType: NeatExperiment<T>.ReproductionAsexualSettings
  nameWithType.vb: NeatExperiment(Of T).ReproductionAsexualSettings
- uid: SharpNeat.Experiments.NeatExperiment`1.ReproductionAsexualSettings*
  name: ReproductionAsexualSettings
  href: api/SharpNeat.Experiments.NeatExperiment-1.html#SharpNeat_Experiments_NeatExperiment_1_ReproductionAsexualSettings_
  commentId: Overload:SharpNeat.Experiments.NeatExperiment`1.ReproductionAsexualSettings
  isSpec: "True"
  fullName: SharpNeat.Experiments.NeatExperiment<T>.ReproductionAsexualSettings
  fullName.vb: SharpNeat.Experiments.NeatExperiment(Of T).ReproductionAsexualSettings
  nameWithType: NeatExperiment<T>.ReproductionAsexualSettings
  nameWithType.vb: NeatExperiment(Of T).ReproductionAsexualSettings
- uid: SharpNeat.Experiments.NeatExperiment`1.ReproductionSexualSettings
  name: ReproductionSexualSettings
  href: api/SharpNeat.Experiments.NeatExperiment-1.html#SharpNeat_Experiments_NeatExperiment_1_ReproductionSexualSettings
  commentId: P:SharpNeat.Experiments.NeatExperiment`1.ReproductionSexualSettings
  fullName: SharpNeat.Experiments.NeatExperiment<T>.ReproductionSexualSettings
  fullName.vb: SharpNeat.Experiments.NeatExperiment(Of T).ReproductionSexualSettings
  nameWithType: NeatExperiment<T>.ReproductionSexualSettings
  nameWithType.vb: NeatExperiment(Of T).ReproductionSexualSettings
- uid: SharpNeat.Experiments.NeatExperiment`1.ReproductionSexualSettings*
  name: ReproductionSexualSettings
  href: api/SharpNeat.Experiments.NeatExperiment-1.html#SharpNeat_Experiments_NeatExperiment_1_ReproductionSexualSettings_
  commentId: Overload:SharpNeat.Experiments.NeatExperiment`1.ReproductionSexualSettings
  isSpec: "True"
  fullName: SharpNeat.Experiments.NeatExperiment<T>.ReproductionSexualSettings
  fullName.vb: SharpNeat.Experiments.NeatExperiment(Of T).ReproductionSexualSettings
  nameWithType: NeatExperiment<T>.ReproductionSexualSettings
  nameWithType.vb: NeatExperiment(Of T).ReproductionSexualSettings
- uid: SharpNeat.Experiments.NeatExperimentExtensions
  name: NeatExperimentExtensions
  href: api/SharpNeat.Experiments.NeatExperimentExtensions.html
  commentId: T:SharpNeat.Experiments.NeatExperimentExtensions
  fullName: SharpNeat.Experiments.NeatExperimentExtensions
  nameWithType: NeatExperimentExtensions
- uid: SharpNeat.Experiments.NeatExperimentExtensions.Configure*
  name: Configure
  href: api/SharpNeat.Experiments.NeatExperimentExtensions.html#SharpNeat_Experiments_NeatExperimentExtensions_Configure_
  commentId: Overload:SharpNeat.Experiments.NeatExperimentExtensions.Configure
  isSpec: "True"
  fullName: SharpNeat.Experiments.NeatExperimentExtensions.Configure
  nameWithType: NeatExperimentExtensions.Configure
- uid: SharpNeat.Experiments.NeatExperimentExtensions.Configure``1(SharpNeat.Experiments.INeatExperiment{``0},SharpNeat.Experiments.ConfigModels.ExperimentConfig)
  name: Configure<T>(INeatExperiment<T>, ExperimentConfig)
  href: api/SharpNeat.Experiments.NeatExperimentExtensions.html#SharpNeat_Experiments_NeatExperimentExtensions_Configure__1_SharpNeat_Experiments_INeatExperiment___0__SharpNeat_Experiments_ConfigModels_ExperimentConfig_
  commentId: M:SharpNeat.Experiments.NeatExperimentExtensions.Configure``1(SharpNeat.Experiments.INeatExperiment{``0},SharpNeat.Experiments.ConfigModels.ExperimentConfig)
  name.vb: Configure(Of T)(INeatExperiment(Of T), ExperimentConfig)
  fullName: SharpNeat.Experiments.NeatExperimentExtensions.Configure<T>(SharpNeat.Experiments.INeatExperiment<T>, SharpNeat.Experiments.ConfigModels.ExperimentConfig)
  fullName.vb: SharpNeat.Experiments.NeatExperimentExtensions.Configure(Of T)(SharpNeat.Experiments.INeatExperiment(Of T), SharpNeat.Experiments.ConfigModels.ExperimentConfig)
  nameWithType: NeatExperimentExtensions.Configure<T>(INeatExperiment<T>, ExperimentConfig)
  nameWithType.vb: NeatExperimentExtensions.Configure(Of T)(INeatExperiment(Of T), ExperimentConfig)
- uid: SharpNeat.Experiments.NeatExperimentExtensionsTests
  name: NeatExperimentExtensionsTests
  href: api/SharpNeat.Experiments.NeatExperimentExtensionsTests.html
  commentId: T:SharpNeat.Experiments.NeatExperimentExtensionsTests
  fullName: SharpNeat.Experiments.NeatExperimentExtensionsTests
  nameWithType: NeatExperimentExtensionsTests
- uid: SharpNeat.Experiments.NeatExperimentExtensionsTests.Configure
  name: Configure()
  href: api/SharpNeat.Experiments.NeatExperimentExtensionsTests.html#SharpNeat_Experiments_NeatExperimentExtensionsTests_Configure
  commentId: M:SharpNeat.Experiments.NeatExperimentExtensionsTests.Configure
  fullName: SharpNeat.Experiments.NeatExperimentExtensionsTests.Configure()
  nameWithType: NeatExperimentExtensionsTests.Configure()
- uid: SharpNeat.Experiments.NeatExperimentExtensionsTests.Configure*
  name: Configure
  href: api/SharpNeat.Experiments.NeatExperimentExtensionsTests.html#SharpNeat_Experiments_NeatExperimentExtensionsTests_Configure_
  commentId: Overload:SharpNeat.Experiments.NeatExperimentExtensionsTests.Configure
  isSpec: "True"
  fullName: SharpNeat.Experiments.NeatExperimentExtensionsTests.Configure
  nameWithType: NeatExperimentExtensionsTests.Configure
- uid: SharpNeat.Experiments.NeatExperimentFactoryExtensions
  name: NeatExperimentFactoryExtensions
  href: api/SharpNeat.Experiments.NeatExperimentFactoryExtensions.html
  commentId: T:SharpNeat.Experiments.NeatExperimentFactoryExtensions
  fullName: SharpNeat.Experiments.NeatExperimentFactoryExtensions
  nameWithType: NeatExperimentFactoryExtensions
- uid: SharpNeat.Experiments.NeatExperimentFactoryExtensions.CreateExperiment(SharpNeat.Experiments.INeatExperimentFactory,System.String)
  name: CreateExperiment(INeatExperimentFactory, string)
  href: api/SharpNeat.Experiments.NeatExperimentFactoryExtensions.html#SharpNeat_Experiments_NeatExperimentFactoryExtensions_CreateExperiment_SharpNeat_Experiments_INeatExperimentFactory_System_String_
  commentId: M:SharpNeat.Experiments.NeatExperimentFactoryExtensions.CreateExperiment(SharpNeat.Experiments.INeatExperimentFactory,System.String)
  name.vb: CreateExperiment(INeatExperimentFactory, String)
  fullName: SharpNeat.Experiments.NeatExperimentFactoryExtensions.CreateExperiment(SharpNeat.Experiments.INeatExperimentFactory, string)
  fullName.vb: SharpNeat.Experiments.NeatExperimentFactoryExtensions.CreateExperiment(SharpNeat.Experiments.INeatExperimentFactory, String)
  nameWithType: NeatExperimentFactoryExtensions.CreateExperiment(INeatExperimentFactory, string)
  nameWithType.vb: NeatExperimentFactoryExtensions.CreateExperiment(INeatExperimentFactory, String)
- uid: SharpNeat.Experiments.NeatExperimentFactoryExtensions.CreateExperiment*
  name: CreateExperiment
  href: api/SharpNeat.Experiments.NeatExperimentFactoryExtensions.html#SharpNeat_Experiments_NeatExperimentFactoryExtensions_CreateExperiment_
  commentId: Overload:SharpNeat.Experiments.NeatExperimentFactoryExtensions.CreateExperiment
  isSpec: "True"
  fullName: SharpNeat.Experiments.NeatExperimentFactoryExtensions.CreateExperiment
  nameWithType: NeatExperimentFactoryExtensions.CreateExperiment
- uid: SharpNeat.Graphs
  name: SharpNeat.Graphs
  href: api/SharpNeat.Graphs.html
  commentId: N:SharpNeat.Graphs
  fullName: SharpNeat.Graphs
  nameWithType: SharpNeat.Graphs
- uid: SharpNeat.Graphs.Acyclic
  name: SharpNeat.Graphs.Acyclic
  href: api/SharpNeat.Graphs.Acyclic.html
  commentId: N:SharpNeat.Graphs.Acyclic
  fullName: SharpNeat.Graphs.Acyclic
  nameWithType: SharpNeat.Graphs.Acyclic
- uid: SharpNeat.Graphs.Acyclic.AcyclicGraphDepthAnalysis
  name: AcyclicGraphDepthAnalysis
  href: api/SharpNeat.Graphs.Acyclic.AcyclicGraphDepthAnalysis.html
  commentId: T:SharpNeat.Graphs.Acyclic.AcyclicGraphDepthAnalysis
  fullName: SharpNeat.Graphs.Acyclic.AcyclicGraphDepthAnalysis
  nameWithType: AcyclicGraphDepthAnalysis
- uid: SharpNeat.Graphs.Acyclic.AcyclicGraphDepthAnalysis.#ctor
  name: AcyclicGraphDepthAnalysis()
  href: api/SharpNeat.Graphs.Acyclic.AcyclicGraphDepthAnalysis.html#SharpNeat_Graphs_Acyclic_AcyclicGraphDepthAnalysis__ctor
  commentId: M:SharpNeat.Graphs.Acyclic.AcyclicGraphDepthAnalysis.#ctor
  name.vb: New()
  fullName: SharpNeat.Graphs.Acyclic.AcyclicGraphDepthAnalysis.AcyclicGraphDepthAnalysis()
  fullName.vb: SharpNeat.Graphs.Acyclic.AcyclicGraphDepthAnalysis.New()
  nameWithType: AcyclicGraphDepthAnalysis.AcyclicGraphDepthAnalysis()
  nameWithType.vb: AcyclicGraphDepthAnalysis.New()
- uid: SharpNeat.Graphs.Acyclic.AcyclicGraphDepthAnalysis.#ctor(System.Boolean)
  name: AcyclicGraphDepthAnalysis(bool)
  href: api/SharpNeat.Graphs.Acyclic.AcyclicGraphDepthAnalysis.html#SharpNeat_Graphs_Acyclic_AcyclicGraphDepthAnalysis__ctor_System_Boolean_
  commentId: M:SharpNeat.Graphs.Acyclic.AcyclicGraphDepthAnalysis.#ctor(System.Boolean)
  name.vb: New(Boolean)
  fullName: SharpNeat.Graphs.Acyclic.AcyclicGraphDepthAnalysis.AcyclicGraphDepthAnalysis(bool)
  fullName.vb: SharpNeat.Graphs.Acyclic.AcyclicGraphDepthAnalysis.New(Boolean)
  nameWithType: AcyclicGraphDepthAnalysis.AcyclicGraphDepthAnalysis(bool)
  nameWithType.vb: AcyclicGraphDepthAnalysis.New(Boolean)
- uid: SharpNeat.Graphs.Acyclic.AcyclicGraphDepthAnalysis.#ctor*
  name: AcyclicGraphDepthAnalysis
  href: api/SharpNeat.Graphs.Acyclic.AcyclicGraphDepthAnalysis.html#SharpNeat_Graphs_Acyclic_AcyclicGraphDepthAnalysis__ctor_
  commentId: Overload:SharpNeat.Graphs.Acyclic.AcyclicGraphDepthAnalysis.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Graphs.Acyclic.AcyclicGraphDepthAnalysis.AcyclicGraphDepthAnalysis
  fullName.vb: SharpNeat.Graphs.Acyclic.AcyclicGraphDepthAnalysis.New
  nameWithType: AcyclicGraphDepthAnalysis.AcyclicGraphDepthAnalysis
  nameWithType.vb: AcyclicGraphDepthAnalysis.New
- uid: SharpNeat.Graphs.Acyclic.AcyclicGraphDepthAnalysis.CalculateNodeDepths(SharpNeat.Graphs.DirectedGraph)
  name: CalculateNodeDepths(DirectedGraph)
  href: api/SharpNeat.Graphs.Acyclic.AcyclicGraphDepthAnalysis.html#SharpNeat_Graphs_Acyclic_AcyclicGraphDepthAnalysis_CalculateNodeDepths_SharpNeat_Graphs_DirectedGraph_
  commentId: M:SharpNeat.Graphs.Acyclic.AcyclicGraphDepthAnalysis.CalculateNodeDepths(SharpNeat.Graphs.DirectedGraph)
  fullName: SharpNeat.Graphs.Acyclic.AcyclicGraphDepthAnalysis.CalculateNodeDepths(SharpNeat.Graphs.DirectedGraph)
  nameWithType: AcyclicGraphDepthAnalysis.CalculateNodeDepths(DirectedGraph)
- uid: SharpNeat.Graphs.Acyclic.AcyclicGraphDepthAnalysis.CalculateNodeDepths*
  name: CalculateNodeDepths
  href: api/SharpNeat.Graphs.Acyclic.AcyclicGraphDepthAnalysis.html#SharpNeat_Graphs_Acyclic_AcyclicGraphDepthAnalysis_CalculateNodeDepths_
  commentId: Overload:SharpNeat.Graphs.Acyclic.AcyclicGraphDepthAnalysis.CalculateNodeDepths
  isSpec: "True"
  fullName: SharpNeat.Graphs.Acyclic.AcyclicGraphDepthAnalysis.CalculateNodeDepths
  nameWithType: AcyclicGraphDepthAnalysis.CalculateNodeDepths
- uid: SharpNeat.Graphs.Acyclic.CyclicConnectionCheck
  name: CyclicConnectionCheck
  href: api/SharpNeat.Graphs.Acyclic.CyclicConnectionCheck.html
  commentId: T:SharpNeat.Graphs.Acyclic.CyclicConnectionCheck
  fullName: SharpNeat.Graphs.Acyclic.CyclicConnectionCheck
  nameWithType: CyclicConnectionCheck
- uid: SharpNeat.Graphs.Acyclic.CyclicConnectionCheck.IsConnectionCyclic(SharpNeat.Graphs.DirectedGraph,SharpNeat.Graphs.DirectedConnection@)
  name: IsConnectionCyclic(DirectedGraph, in DirectedConnection)
  href: api/SharpNeat.Graphs.Acyclic.CyclicConnectionCheck.html#SharpNeat_Graphs_Acyclic_CyclicConnectionCheck_IsConnectionCyclic_SharpNeat_Graphs_DirectedGraph_SharpNeat_Graphs_DirectedConnection__
  commentId: M:SharpNeat.Graphs.Acyclic.CyclicConnectionCheck.IsConnectionCyclic(SharpNeat.Graphs.DirectedGraph,SharpNeat.Graphs.DirectedConnection@)
  name.vb: IsConnectionCyclic(DirectedGraph, DirectedConnection)
  fullName: SharpNeat.Graphs.Acyclic.CyclicConnectionCheck.IsConnectionCyclic(SharpNeat.Graphs.DirectedGraph, in SharpNeat.Graphs.DirectedConnection)
  fullName.vb: SharpNeat.Graphs.Acyclic.CyclicConnectionCheck.IsConnectionCyclic(SharpNeat.Graphs.DirectedGraph, SharpNeat.Graphs.DirectedConnection)
  nameWithType: CyclicConnectionCheck.IsConnectionCyclic(DirectedGraph, in DirectedConnection)
  nameWithType.vb: CyclicConnectionCheck.IsConnectionCyclic(DirectedGraph, DirectedConnection)
- uid: SharpNeat.Graphs.Acyclic.CyclicConnectionCheck.IsConnectionCyclic*
  name: IsConnectionCyclic
  href: api/SharpNeat.Graphs.Acyclic.CyclicConnectionCheck.html#SharpNeat_Graphs_Acyclic_CyclicConnectionCheck_IsConnectionCyclic_
  commentId: Overload:SharpNeat.Graphs.Acyclic.CyclicConnectionCheck.IsConnectionCyclic
  isSpec: "True"
  fullName: SharpNeat.Graphs.Acyclic.CyclicConnectionCheck.IsConnectionCyclic
  nameWithType: CyclicConnectionCheck.IsConnectionCyclic
- uid: SharpNeat.Graphs.Acyclic.CyclicConnectionCheckTests
  name: CyclicConnectionCheckTests
  href: api/SharpNeat.Graphs.Acyclic.CyclicConnectionCheckTests.html
  commentId: T:SharpNeat.Graphs.Acyclic.CyclicConnectionCheckTests
  fullName: SharpNeat.Graphs.Acyclic.CyclicConnectionCheckTests
  nameWithType: CyclicConnectionCheckTests
- uid: SharpNeat.Graphs.Acyclic.CyclicConnectionCheckTests.IsConnectionCyclic1
  name: IsConnectionCyclic1()
  href: api/SharpNeat.Graphs.Acyclic.CyclicConnectionCheckTests.html#SharpNeat_Graphs_Acyclic_CyclicConnectionCheckTests_IsConnectionCyclic1
  commentId: M:SharpNeat.Graphs.Acyclic.CyclicConnectionCheckTests.IsConnectionCyclic1
  fullName: SharpNeat.Graphs.Acyclic.CyclicConnectionCheckTests.IsConnectionCyclic1()
  nameWithType: CyclicConnectionCheckTests.IsConnectionCyclic1()
- uid: SharpNeat.Graphs.Acyclic.CyclicConnectionCheckTests.IsConnectionCyclic1*
  name: IsConnectionCyclic1
  href: api/SharpNeat.Graphs.Acyclic.CyclicConnectionCheckTests.html#SharpNeat_Graphs_Acyclic_CyclicConnectionCheckTests_IsConnectionCyclic1_
  commentId: Overload:SharpNeat.Graphs.Acyclic.CyclicConnectionCheckTests.IsConnectionCyclic1
  isSpec: "True"
  fullName: SharpNeat.Graphs.Acyclic.CyclicConnectionCheckTests.IsConnectionCyclic1
  nameWithType: CyclicConnectionCheckTests.IsConnectionCyclic1
- uid: SharpNeat.Graphs.Acyclic.CyclicConnectionCheckTests.IsConnectionCyclic2
  name: IsConnectionCyclic2()
  href: api/SharpNeat.Graphs.Acyclic.CyclicConnectionCheckTests.html#SharpNeat_Graphs_Acyclic_CyclicConnectionCheckTests_IsConnectionCyclic2
  commentId: M:SharpNeat.Graphs.Acyclic.CyclicConnectionCheckTests.IsConnectionCyclic2
  fullName: SharpNeat.Graphs.Acyclic.CyclicConnectionCheckTests.IsConnectionCyclic2()
  nameWithType: CyclicConnectionCheckTests.IsConnectionCyclic2()
- uid: SharpNeat.Graphs.Acyclic.CyclicConnectionCheckTests.IsConnectionCyclic2*
  name: IsConnectionCyclic2
  href: api/SharpNeat.Graphs.Acyclic.CyclicConnectionCheckTests.html#SharpNeat_Graphs_Acyclic_CyclicConnectionCheckTests_IsConnectionCyclic2_
  commentId: Overload:SharpNeat.Graphs.Acyclic.CyclicConnectionCheckTests.IsConnectionCyclic2
  isSpec: "True"
  fullName: SharpNeat.Graphs.Acyclic.CyclicConnectionCheckTests.IsConnectionCyclic2
  nameWithType: CyclicConnectionCheckTests.IsConnectionCyclic2
- uid: SharpNeat.Graphs.Acyclic.DirectedGraphAcyclic
  name: DirectedGraphAcyclic
  href: api/SharpNeat.Graphs.Acyclic.DirectedGraphAcyclic.html
  commentId: T:SharpNeat.Graphs.Acyclic.DirectedGraphAcyclic
  fullName: SharpNeat.Graphs.Acyclic.DirectedGraphAcyclic
  nameWithType: DirectedGraphAcyclic
- uid: SharpNeat.Graphs.Acyclic.DirectedGraphAcyclic.LayerArray
  name: LayerArray
  href: api/SharpNeat.Graphs.Acyclic.DirectedGraphAcyclic.html#SharpNeat_Graphs_Acyclic_DirectedGraphAcyclic_LayerArray
  commentId: P:SharpNeat.Graphs.Acyclic.DirectedGraphAcyclic.LayerArray
  fullName: SharpNeat.Graphs.Acyclic.DirectedGraphAcyclic.LayerArray
  nameWithType: DirectedGraphAcyclic.LayerArray
- uid: SharpNeat.Graphs.Acyclic.DirectedGraphAcyclic.LayerArray*
  name: LayerArray
  href: api/SharpNeat.Graphs.Acyclic.DirectedGraphAcyclic.html#SharpNeat_Graphs_Acyclic_DirectedGraphAcyclic_LayerArray_
  commentId: Overload:SharpNeat.Graphs.Acyclic.DirectedGraphAcyclic.LayerArray
  isSpec: "True"
  fullName: SharpNeat.Graphs.Acyclic.DirectedGraphAcyclic.LayerArray
  nameWithType: DirectedGraphAcyclic.LayerArray
- uid: SharpNeat.Graphs.Acyclic.DirectedGraphAcyclic.OutputNodeIdxArr
  name: OutputNodeIdxArr
  href: api/SharpNeat.Graphs.Acyclic.DirectedGraphAcyclic.html#SharpNeat_Graphs_Acyclic_DirectedGraphAcyclic_OutputNodeIdxArr
  commentId: P:SharpNeat.Graphs.Acyclic.DirectedGraphAcyclic.OutputNodeIdxArr
  fullName: SharpNeat.Graphs.Acyclic.DirectedGraphAcyclic.OutputNodeIdxArr
  nameWithType: DirectedGraphAcyclic.OutputNodeIdxArr
- uid: SharpNeat.Graphs.Acyclic.DirectedGraphAcyclic.OutputNodeIdxArr*
  name: OutputNodeIdxArr
  href: api/SharpNeat.Graphs.Acyclic.DirectedGraphAcyclic.html#SharpNeat_Graphs_Acyclic_DirectedGraphAcyclic_OutputNodeIdxArr_
  commentId: Overload:SharpNeat.Graphs.Acyclic.DirectedGraphAcyclic.OutputNodeIdxArr
  isSpec: "True"
  fullName: SharpNeat.Graphs.Acyclic.DirectedGraphAcyclic.OutputNodeIdxArr
  nameWithType: DirectedGraphAcyclic.OutputNodeIdxArr
- uid: SharpNeat.Graphs.Acyclic.GraphDepthInfo
  name: GraphDepthInfo
  href: api/SharpNeat.Graphs.Acyclic.GraphDepthInfo.html
  commentId: T:SharpNeat.Graphs.Acyclic.GraphDepthInfo
  fullName: SharpNeat.Graphs.Acyclic.GraphDepthInfo
  nameWithType: GraphDepthInfo
- uid: SharpNeat.Graphs.Acyclic.GraphDepthInfo._graphDepth
  name: _graphDepth
  href: api/SharpNeat.Graphs.Acyclic.GraphDepthInfo.html#SharpNeat_Graphs_Acyclic_GraphDepthInfo__graphDepth
  commentId: F:SharpNeat.Graphs.Acyclic.GraphDepthInfo._graphDepth
  fullName: SharpNeat.Graphs.Acyclic.GraphDepthInfo._graphDepth
  nameWithType: GraphDepthInfo._graphDepth
- uid: SharpNeat.Graphs.Acyclic.GraphDepthInfo._nodeDepthArr
  name: _nodeDepthArr
  href: api/SharpNeat.Graphs.Acyclic.GraphDepthInfo.html#SharpNeat_Graphs_Acyclic_GraphDepthInfo__nodeDepthArr
  commentId: F:SharpNeat.Graphs.Acyclic.GraphDepthInfo._nodeDepthArr
  fullName: SharpNeat.Graphs.Acyclic.GraphDepthInfo._nodeDepthArr
  nameWithType: GraphDepthInfo._nodeDepthArr
- uid: SharpNeat.Graphs.Acyclic.GraphDepthInfo.#ctor(System.Int32,System.Int32[])
  name: GraphDepthInfo(int, int[])
  href: api/SharpNeat.Graphs.Acyclic.GraphDepthInfo.html#SharpNeat_Graphs_Acyclic_GraphDepthInfo__ctor_System_Int32_System_Int32___
  commentId: M:SharpNeat.Graphs.Acyclic.GraphDepthInfo.#ctor(System.Int32,System.Int32[])
  name.vb: New(Integer, Integer())
  fullName: SharpNeat.Graphs.Acyclic.GraphDepthInfo.GraphDepthInfo(int, int[])
  fullName.vb: SharpNeat.Graphs.Acyclic.GraphDepthInfo.New(Integer, Integer())
  nameWithType: GraphDepthInfo.GraphDepthInfo(int, int[])
  nameWithType.vb: GraphDepthInfo.New(Integer, Integer())
- uid: SharpNeat.Graphs.Acyclic.GraphDepthInfo.#ctor*
  name: GraphDepthInfo
  href: api/SharpNeat.Graphs.Acyclic.GraphDepthInfo.html#SharpNeat_Graphs_Acyclic_GraphDepthInfo__ctor_
  commentId: Overload:SharpNeat.Graphs.Acyclic.GraphDepthInfo.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Graphs.Acyclic.GraphDepthInfo.GraphDepthInfo
  fullName.vb: SharpNeat.Graphs.Acyclic.GraphDepthInfo.New
  nameWithType: GraphDepthInfo.GraphDepthInfo
  nameWithType.vb: GraphDepthInfo.New
- uid: SharpNeat.Graphs.Acyclic.GraphDepthInfo.Equals(SharpNeat.Graphs.Acyclic.GraphDepthInfo)
  name: Equals(GraphDepthInfo?)
  href: api/SharpNeat.Graphs.Acyclic.GraphDepthInfo.html#SharpNeat_Graphs_Acyclic_GraphDepthInfo_Equals_SharpNeat_Graphs_Acyclic_GraphDepthInfo_
  commentId: M:SharpNeat.Graphs.Acyclic.GraphDepthInfo.Equals(SharpNeat.Graphs.Acyclic.GraphDepthInfo)
  name.vb: Equals(GraphDepthInfo)
  fullName: SharpNeat.Graphs.Acyclic.GraphDepthInfo.Equals(SharpNeat.Graphs.Acyclic.GraphDepthInfo?)
  fullName.vb: SharpNeat.Graphs.Acyclic.GraphDepthInfo.Equals(SharpNeat.Graphs.Acyclic.GraphDepthInfo)
  nameWithType: GraphDepthInfo.Equals(GraphDepthInfo?)
  nameWithType.vb: GraphDepthInfo.Equals(GraphDepthInfo)
- uid: SharpNeat.Graphs.Acyclic.GraphDepthInfo.Equals(System.Object)
  name: Equals(object?)
  href: api/SharpNeat.Graphs.Acyclic.GraphDepthInfo.html#SharpNeat_Graphs_Acyclic_GraphDepthInfo_Equals_System_Object_
  commentId: M:SharpNeat.Graphs.Acyclic.GraphDepthInfo.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: SharpNeat.Graphs.Acyclic.GraphDepthInfo.Equals(object?)
  fullName.vb: SharpNeat.Graphs.Acyclic.GraphDepthInfo.Equals(Object)
  nameWithType: GraphDepthInfo.Equals(object?)
  nameWithType.vb: GraphDepthInfo.Equals(Object)
- uid: SharpNeat.Graphs.Acyclic.GraphDepthInfo.Equals*
  name: Equals
  href: api/SharpNeat.Graphs.Acyclic.GraphDepthInfo.html#SharpNeat_Graphs_Acyclic_GraphDepthInfo_Equals_
  commentId: Overload:SharpNeat.Graphs.Acyclic.GraphDepthInfo.Equals
  isSpec: "True"
  fullName: SharpNeat.Graphs.Acyclic.GraphDepthInfo.Equals
  nameWithType: GraphDepthInfo.Equals
- uid: SharpNeat.Graphs.Acyclic.LayerInfo
  name: LayerInfo
  href: api/SharpNeat.Graphs.Acyclic.LayerInfo.html
  commentId: T:SharpNeat.Graphs.Acyclic.LayerInfo
  fullName: SharpNeat.Graphs.Acyclic.LayerInfo
  nameWithType: LayerInfo
- uid: SharpNeat.Graphs.Acyclic.LayerInfo.#ctor(System.Int32,System.Int32)
  name: LayerInfo(int, int)
  href: api/SharpNeat.Graphs.Acyclic.LayerInfo.html#SharpNeat_Graphs_Acyclic_LayerInfo__ctor_System_Int32_System_Int32_
  commentId: M:SharpNeat.Graphs.Acyclic.LayerInfo.#ctor(System.Int32,System.Int32)
  name.vb: New(Integer, Integer)
  fullName: SharpNeat.Graphs.Acyclic.LayerInfo.LayerInfo(int, int)
  fullName.vb: SharpNeat.Graphs.Acyclic.LayerInfo.New(Integer, Integer)
  nameWithType: LayerInfo.LayerInfo(int, int)
  nameWithType.vb: LayerInfo.New(Integer, Integer)
- uid: SharpNeat.Graphs.Acyclic.LayerInfo.#ctor*
  name: LayerInfo
  href: api/SharpNeat.Graphs.Acyclic.LayerInfo.html#SharpNeat_Graphs_Acyclic_LayerInfo__ctor_
  commentId: Overload:SharpNeat.Graphs.Acyclic.LayerInfo.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Graphs.Acyclic.LayerInfo.LayerInfo
  fullName.vb: SharpNeat.Graphs.Acyclic.LayerInfo.New
  nameWithType: LayerInfo.LayerInfo
  nameWithType.vb: LayerInfo.New
- uid: SharpNeat.Graphs.Acyclic.LayerInfo.EndConnectionIdx
  name: EndConnectionIdx
  href: api/SharpNeat.Graphs.Acyclic.LayerInfo.html#SharpNeat_Graphs_Acyclic_LayerInfo_EndConnectionIdx
  commentId: P:SharpNeat.Graphs.Acyclic.LayerInfo.EndConnectionIdx
  fullName: SharpNeat.Graphs.Acyclic.LayerInfo.EndConnectionIdx
  nameWithType: LayerInfo.EndConnectionIdx
- uid: SharpNeat.Graphs.Acyclic.LayerInfo.EndConnectionIdx*
  name: EndConnectionIdx
  href: api/SharpNeat.Graphs.Acyclic.LayerInfo.html#SharpNeat_Graphs_Acyclic_LayerInfo_EndConnectionIdx_
  commentId: Overload:SharpNeat.Graphs.Acyclic.LayerInfo.EndConnectionIdx
  isSpec: "True"
  fullName: SharpNeat.Graphs.Acyclic.LayerInfo.EndConnectionIdx
  nameWithType: LayerInfo.EndConnectionIdx
- uid: SharpNeat.Graphs.Acyclic.LayerInfo.EndNodeIdx
  name: EndNodeIdx
  href: api/SharpNeat.Graphs.Acyclic.LayerInfo.html#SharpNeat_Graphs_Acyclic_LayerInfo_EndNodeIdx
  commentId: P:SharpNeat.Graphs.Acyclic.LayerInfo.EndNodeIdx
  fullName: SharpNeat.Graphs.Acyclic.LayerInfo.EndNodeIdx
  nameWithType: LayerInfo.EndNodeIdx
- uid: SharpNeat.Graphs.Acyclic.LayerInfo.EndNodeIdx*
  name: EndNodeIdx
  href: api/SharpNeat.Graphs.Acyclic.LayerInfo.html#SharpNeat_Graphs_Acyclic_LayerInfo_EndNodeIdx_
  commentId: Overload:SharpNeat.Graphs.Acyclic.LayerInfo.EndNodeIdx
  isSpec: "True"
  fullName: SharpNeat.Graphs.Acyclic.LayerInfo.EndNodeIdx
  nameWithType: LayerInfo.EndNodeIdx
- uid: SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclic`1
  name: WeightedDirectedGraphAcyclic<T>
  href: api/SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclic-1.html
  commentId: T:SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclic`1
  name.vb: WeightedDirectedGraphAcyclic(Of T)
  fullName: SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclic<T>
  fullName.vb: SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclic(Of T)
  nameWithType: WeightedDirectedGraphAcyclic<T>
  nameWithType.vb: WeightedDirectedGraphAcyclic(Of T)
- uid: SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclic`1.WeightArray
  name: WeightArray
  href: api/SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclic-1.html#SharpNeat_Graphs_Acyclic_WeightedDirectedGraphAcyclic_1_WeightArray
  commentId: P:SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclic`1.WeightArray
  fullName: SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclic<T>.WeightArray
  fullName.vb: SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclic(Of T).WeightArray
  nameWithType: WeightedDirectedGraphAcyclic<T>.WeightArray
  nameWithType.vb: WeightedDirectedGraphAcyclic(Of T).WeightArray
- uid: SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclic`1.WeightArray*
  name: WeightArray
  href: api/SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclic-1.html#SharpNeat_Graphs_Acyclic_WeightedDirectedGraphAcyclic_1_WeightArray_
  commentId: Overload:SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclic`1.WeightArray
  isSpec: "True"
  fullName: SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclic<T>.WeightArray
  fullName.vb: SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclic(Of T).WeightArray
  nameWithType: WeightedDirectedGraphAcyclic<T>.WeightArray
  nameWithType.vb: WeightedDirectedGraphAcyclic(Of T).WeightArray
- uid: SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclicBuilder`1
  name: WeightedDirectedGraphAcyclicBuilder<T>
  href: api/SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclicBuilder-1.html
  commentId: T:SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclicBuilder`1
  name.vb: WeightedDirectedGraphAcyclicBuilder(Of T)
  fullName: SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclicBuilder<T>
  fullName.vb: SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclicBuilder(Of T)
  nameWithType: WeightedDirectedGraphAcyclicBuilder<T>
  nameWithType.vb: WeightedDirectedGraphAcyclicBuilder(Of T)
- uid: SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclicBuilder`1.Create(SharpNeat.Graphs.WeightedDirectedGraph{`0},SharpNeat.Graphs.Acyclic.GraphDepthInfo)
  name: Create(WeightedDirectedGraph<T>, GraphDepthInfo)
  href: api/SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclicBuilder-1.html#SharpNeat_Graphs_Acyclic_WeightedDirectedGraphAcyclicBuilder_1_Create_SharpNeat_Graphs_WeightedDirectedGraph__0__SharpNeat_Graphs_Acyclic_GraphDepthInfo_
  commentId: M:SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclicBuilder`1.Create(SharpNeat.Graphs.WeightedDirectedGraph{`0},SharpNeat.Graphs.Acyclic.GraphDepthInfo)
  name.vb: Create(WeightedDirectedGraph(Of T), GraphDepthInfo)
  fullName: SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclicBuilder<T>.Create(SharpNeat.Graphs.WeightedDirectedGraph<T>, SharpNeat.Graphs.Acyclic.GraphDepthInfo)
  fullName.vb: SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclicBuilder(Of T).Create(SharpNeat.Graphs.WeightedDirectedGraph(Of T), SharpNeat.Graphs.Acyclic.GraphDepthInfo)
  nameWithType: WeightedDirectedGraphAcyclicBuilder<T>.Create(WeightedDirectedGraph<T>, GraphDepthInfo)
  nameWithType.vb: WeightedDirectedGraphAcyclicBuilder(Of T).Create(WeightedDirectedGraph(Of T), GraphDepthInfo)
- uid: SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclicBuilder`1.Create(SharpNeat.Graphs.WeightedDirectedGraph{`0})
  name: Create(WeightedDirectedGraph<T>)
  href: api/SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclicBuilder-1.html#SharpNeat_Graphs_Acyclic_WeightedDirectedGraphAcyclicBuilder_1_Create_SharpNeat_Graphs_WeightedDirectedGraph__0__
  commentId: M:SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclicBuilder`1.Create(SharpNeat.Graphs.WeightedDirectedGraph{`0})
  name.vb: Create(WeightedDirectedGraph(Of T))
  fullName: SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclicBuilder<T>.Create(SharpNeat.Graphs.WeightedDirectedGraph<T>)
  fullName.vb: SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclicBuilder(Of T).Create(SharpNeat.Graphs.WeightedDirectedGraph(Of T))
  nameWithType: WeightedDirectedGraphAcyclicBuilder<T>.Create(WeightedDirectedGraph<T>)
  nameWithType.vb: WeightedDirectedGraphAcyclicBuilder(Of T).Create(WeightedDirectedGraph(Of T))
- uid: SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclicBuilder`1.Create(System.Span{SharpNeat.Graphs.WeightedDirectedConnection{`0}},System.Int32,System.Int32)
  name: Create(Span<WeightedDirectedConnection<T>>, int, int)
  href: api/SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclicBuilder-1.html#SharpNeat_Graphs_Acyclic_WeightedDirectedGraphAcyclicBuilder_1_Create_System_Span_SharpNeat_Graphs_WeightedDirectedConnection__0___System_Int32_System_Int32_
  commentId: M:SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclicBuilder`1.Create(System.Span{SharpNeat.Graphs.WeightedDirectedConnection{`0}},System.Int32,System.Int32)
  name.vb: Create(Span(Of WeightedDirectedConnection(Of T)), Integer, Integer)
  fullName: SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclicBuilder<T>.Create(System.Span<SharpNeat.Graphs.WeightedDirectedConnection<T>>, int, int)
  fullName.vb: SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclicBuilder(Of T).Create(System.Span(Of SharpNeat.Graphs.WeightedDirectedConnection(Of T)), Integer, Integer)
  nameWithType: WeightedDirectedGraphAcyclicBuilder<T>.Create(Span<WeightedDirectedConnection<T>>, int, int)
  nameWithType.vb: WeightedDirectedGraphAcyclicBuilder(Of T).Create(Span(Of WeightedDirectedConnection(Of T)), Integer, Integer)
- uid: SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclicBuilder`1.Create*
  name: Create
  href: api/SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclicBuilder-1.html#SharpNeat_Graphs_Acyclic_WeightedDirectedGraphAcyclicBuilder_1_Create_
  commentId: Overload:SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclicBuilder`1.Create
  isSpec: "True"
  fullName: SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclicBuilder<T>.Create
  fullName.vb: SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclicBuilder(Of T).Create
  nameWithType: WeightedDirectedGraphAcyclicBuilder<T>.Create
  nameWithType.vb: WeightedDirectedGraphAcyclicBuilder(Of T).Create
- uid: SharpNeat.Graphs.AcyclicGraphDepthAnalysisByRecursion
  name: AcyclicGraphDepthAnalysisByRecursion
  href: api/SharpNeat.Graphs.AcyclicGraphDepthAnalysisByRecursion.html
  commentId: T:SharpNeat.Graphs.AcyclicGraphDepthAnalysisByRecursion
  fullName: SharpNeat.Graphs.AcyclicGraphDepthAnalysisByRecursion
  nameWithType: AcyclicGraphDepthAnalysisByRecursion
- uid: SharpNeat.Graphs.AcyclicGraphDepthAnalysisByRecursion.CalculateNodeDepths(SharpNeat.Graphs.DirectedGraph)
  name: CalculateNodeDepths(DirectedGraph)
  href: api/SharpNeat.Graphs.AcyclicGraphDepthAnalysisByRecursion.html#SharpNeat_Graphs_AcyclicGraphDepthAnalysisByRecursion_CalculateNodeDepths_SharpNeat_Graphs_DirectedGraph_
  commentId: M:SharpNeat.Graphs.AcyclicGraphDepthAnalysisByRecursion.CalculateNodeDepths(SharpNeat.Graphs.DirectedGraph)
  fullName: SharpNeat.Graphs.AcyclicGraphDepthAnalysisByRecursion.CalculateNodeDepths(SharpNeat.Graphs.DirectedGraph)
  nameWithType: AcyclicGraphDepthAnalysisByRecursion.CalculateNodeDepths(DirectedGraph)
- uid: SharpNeat.Graphs.AcyclicGraphDepthAnalysisByRecursion.CalculateNodeDepths*
  name: CalculateNodeDepths
  href: api/SharpNeat.Graphs.AcyclicGraphDepthAnalysisByRecursion.html#SharpNeat_Graphs_AcyclicGraphDepthAnalysisByRecursion_CalculateNodeDepths_
  commentId: Overload:SharpNeat.Graphs.AcyclicGraphDepthAnalysisByRecursion.CalculateNodeDepths
  isSpec: "True"
  fullName: SharpNeat.Graphs.AcyclicGraphDepthAnalysisByRecursion.CalculateNodeDepths
  nameWithType: AcyclicGraphDepthAnalysisByRecursion.CalculateNodeDepths
- uid: SharpNeat.Graphs.AcyclicGraphDepthAnalysisTests
  name: AcyclicGraphDepthAnalysisTests
  href: api/SharpNeat.Graphs.AcyclicGraphDepthAnalysisTests.html
  commentId: T:SharpNeat.Graphs.AcyclicGraphDepthAnalysisTests
  fullName: SharpNeat.Graphs.AcyclicGraphDepthAnalysisTests
  nameWithType: AcyclicGraphDepthAnalysisTests
- uid: SharpNeat.Graphs.AcyclicGraphDepthAnalysisTests.ConnectThroughInput
  name: ConnectThroughInput()
  href: api/SharpNeat.Graphs.AcyclicGraphDepthAnalysisTests.html#SharpNeat_Graphs_AcyclicGraphDepthAnalysisTests_ConnectThroughInput
  commentId: M:SharpNeat.Graphs.AcyclicGraphDepthAnalysisTests.ConnectThroughInput
  fullName: SharpNeat.Graphs.AcyclicGraphDepthAnalysisTests.ConnectThroughInput()
  nameWithType: AcyclicGraphDepthAnalysisTests.ConnectThroughInput()
- uid: SharpNeat.Graphs.AcyclicGraphDepthAnalysisTests.ConnectThroughInput*
  name: ConnectThroughInput
  href: api/SharpNeat.Graphs.AcyclicGraphDepthAnalysisTests.html#SharpNeat_Graphs_AcyclicGraphDepthAnalysisTests_ConnectThroughInput_
  commentId: Overload:SharpNeat.Graphs.AcyclicGraphDepthAnalysisTests.ConnectThroughInput
  isSpec: "True"
  fullName: SharpNeat.Graphs.AcyclicGraphDepthAnalysisTests.ConnectThroughInput
  nameWithType: AcyclicGraphDepthAnalysisTests.ConnectThroughInput
- uid: SharpNeat.Graphs.AcyclicGraphDepthAnalysisTests.Random1
  name: Random1()
  href: api/SharpNeat.Graphs.AcyclicGraphDepthAnalysisTests.html#SharpNeat_Graphs_AcyclicGraphDepthAnalysisTests_Random1
  commentId: M:SharpNeat.Graphs.AcyclicGraphDepthAnalysisTests.Random1
  fullName: SharpNeat.Graphs.AcyclicGraphDepthAnalysisTests.Random1()
  nameWithType: AcyclicGraphDepthAnalysisTests.Random1()
- uid: SharpNeat.Graphs.AcyclicGraphDepthAnalysisTests.Random1*
  name: Random1
  href: api/SharpNeat.Graphs.AcyclicGraphDepthAnalysisTests.html#SharpNeat_Graphs_AcyclicGraphDepthAnalysisTests_Random1_
  commentId: Overload:SharpNeat.Graphs.AcyclicGraphDepthAnalysisTests.Random1
  isSpec: "True"
  fullName: SharpNeat.Graphs.AcyclicGraphDepthAnalysisTests.Random1
  nameWithType: AcyclicGraphDepthAnalysisTests.Random1
- uid: SharpNeat.Graphs.AcyclicGraphDepthAnalysisTests.ShortAndLongPath
  name: ShortAndLongPath()
  href: api/SharpNeat.Graphs.AcyclicGraphDepthAnalysisTests.html#SharpNeat_Graphs_AcyclicGraphDepthAnalysisTests_ShortAndLongPath
  commentId: M:SharpNeat.Graphs.AcyclicGraphDepthAnalysisTests.ShortAndLongPath
  fullName: SharpNeat.Graphs.AcyclicGraphDepthAnalysisTests.ShortAndLongPath()
  nameWithType: AcyclicGraphDepthAnalysisTests.ShortAndLongPath()
- uid: SharpNeat.Graphs.AcyclicGraphDepthAnalysisTests.ShortAndLongPath*
  name: ShortAndLongPath
  href: api/SharpNeat.Graphs.AcyclicGraphDepthAnalysisTests.html#SharpNeat_Graphs_AcyclicGraphDepthAnalysisTests_ShortAndLongPath_
  commentId: Overload:SharpNeat.Graphs.AcyclicGraphDepthAnalysisTests.ShortAndLongPath
  isSpec: "True"
  fullName: SharpNeat.Graphs.AcyclicGraphDepthAnalysisTests.ShortAndLongPath
  nameWithType: AcyclicGraphDepthAnalysisTests.ShortAndLongPath
- uid: SharpNeat.Graphs.ArrayNodeIdMap
  name: ArrayNodeIdMap
  href: api/SharpNeat.Graphs.ArrayNodeIdMap.html
  commentId: T:SharpNeat.Graphs.ArrayNodeIdMap
  fullName: SharpNeat.Graphs.ArrayNodeIdMap
  nameWithType: ArrayNodeIdMap
- uid: SharpNeat.Graphs.ArrayNodeIdMap.#ctor(System.Int32[])
  name: ArrayNodeIdMap(int[])
  href: api/SharpNeat.Graphs.ArrayNodeIdMap.html#SharpNeat_Graphs_ArrayNodeIdMap__ctor_System_Int32___
  commentId: M:SharpNeat.Graphs.ArrayNodeIdMap.#ctor(System.Int32[])
  name.vb: New(Integer())
  fullName: SharpNeat.Graphs.ArrayNodeIdMap.ArrayNodeIdMap(int[])
  fullName.vb: SharpNeat.Graphs.ArrayNodeIdMap.New(Integer())
  nameWithType: ArrayNodeIdMap.ArrayNodeIdMap(int[])
  nameWithType.vb: ArrayNodeIdMap.New(Integer())
- uid: SharpNeat.Graphs.ArrayNodeIdMap.#ctor*
  name: ArrayNodeIdMap
  href: api/SharpNeat.Graphs.ArrayNodeIdMap.html#SharpNeat_Graphs_ArrayNodeIdMap__ctor_
  commentId: Overload:SharpNeat.Graphs.ArrayNodeIdMap.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Graphs.ArrayNodeIdMap.ArrayNodeIdMap
  fullName.vb: SharpNeat.Graphs.ArrayNodeIdMap.New
  nameWithType: ArrayNodeIdMap.ArrayNodeIdMap
  nameWithType.vb: ArrayNodeIdMap.New
- uid: SharpNeat.Graphs.ArrayNodeIdMap.Count
  name: Count
  href: api/SharpNeat.Graphs.ArrayNodeIdMap.html#SharpNeat_Graphs_ArrayNodeIdMap_Count
  commentId: P:SharpNeat.Graphs.ArrayNodeIdMap.Count
  fullName: SharpNeat.Graphs.ArrayNodeIdMap.Count
  nameWithType: ArrayNodeIdMap.Count
- uid: SharpNeat.Graphs.ArrayNodeIdMap.Count*
  name: Count
  href: api/SharpNeat.Graphs.ArrayNodeIdMap.html#SharpNeat_Graphs_ArrayNodeIdMap_Count_
  commentId: Overload:SharpNeat.Graphs.ArrayNodeIdMap.Count
  isSpec: "True"
  fullName: SharpNeat.Graphs.ArrayNodeIdMap.Count
  nameWithType: ArrayNodeIdMap.Count
- uid: SharpNeat.Graphs.ArrayNodeIdMap.CreateInverseMap
  name: CreateInverseMap()
  href: api/SharpNeat.Graphs.ArrayNodeIdMap.html#SharpNeat_Graphs_ArrayNodeIdMap_CreateInverseMap
  commentId: M:SharpNeat.Graphs.ArrayNodeIdMap.CreateInverseMap
  fullName: SharpNeat.Graphs.ArrayNodeIdMap.CreateInverseMap()
  nameWithType: ArrayNodeIdMap.CreateInverseMap()
- uid: SharpNeat.Graphs.ArrayNodeIdMap.CreateInverseMap*
  name: CreateInverseMap
  href: api/SharpNeat.Graphs.ArrayNodeIdMap.html#SharpNeat_Graphs_ArrayNodeIdMap_CreateInverseMap_
  commentId: Overload:SharpNeat.Graphs.ArrayNodeIdMap.CreateInverseMap
  isSpec: "True"
  fullName: SharpNeat.Graphs.ArrayNodeIdMap.CreateInverseMap
  nameWithType: ArrayNodeIdMap.CreateInverseMap
- uid: SharpNeat.Graphs.ArrayNodeIdMap.Map(System.Int32)
  name: Map(int)
  href: api/SharpNeat.Graphs.ArrayNodeIdMap.html#SharpNeat_Graphs_ArrayNodeIdMap_Map_System_Int32_
  commentId: M:SharpNeat.Graphs.ArrayNodeIdMap.Map(System.Int32)
  name.vb: Map(Integer)
  fullName: SharpNeat.Graphs.ArrayNodeIdMap.Map(int)
  fullName.vb: SharpNeat.Graphs.ArrayNodeIdMap.Map(Integer)
  nameWithType: ArrayNodeIdMap.Map(int)
  nameWithType.vb: ArrayNodeIdMap.Map(Integer)
- uid: SharpNeat.Graphs.ArrayNodeIdMap.Map*
  name: Map
  href: api/SharpNeat.Graphs.ArrayNodeIdMap.html#SharpNeat_Graphs_ArrayNodeIdMap_Map_
  commentId: Overload:SharpNeat.Graphs.ArrayNodeIdMap.Map
  isSpec: "True"
  fullName: SharpNeat.Graphs.ArrayNodeIdMap.Map
  nameWithType: ArrayNodeIdMap.Map
- uid: SharpNeat.Graphs.ArrayNodeIdMapTests
  name: ArrayNodeIdMapTests
  href: api/SharpNeat.Graphs.ArrayNodeIdMapTests.html
  commentId: T:SharpNeat.Graphs.ArrayNodeIdMapTests
  fullName: SharpNeat.Graphs.ArrayNodeIdMapTests
  nameWithType: ArrayNodeIdMapTests
- uid: SharpNeat.Graphs.ArrayNodeIdMapTests.Map
  name: Map()
  href: api/SharpNeat.Graphs.ArrayNodeIdMapTests.html#SharpNeat_Graphs_ArrayNodeIdMapTests_Map
  commentId: M:SharpNeat.Graphs.ArrayNodeIdMapTests.Map
  fullName: SharpNeat.Graphs.ArrayNodeIdMapTests.Map()
  nameWithType: ArrayNodeIdMapTests.Map()
- uid: SharpNeat.Graphs.ArrayNodeIdMapTests.Map*
  name: Map
  href: api/SharpNeat.Graphs.ArrayNodeIdMapTests.html#SharpNeat_Graphs_ArrayNodeIdMapTests_Map_
  commentId: Overload:SharpNeat.Graphs.ArrayNodeIdMapTests.Map
  isSpec: "True"
  fullName: SharpNeat.Graphs.ArrayNodeIdMapTests.Map
  nameWithType: ArrayNodeIdMapTests.Map
- uid: SharpNeat.Graphs.ConnectionCompareUtils
  name: ConnectionCompareUtils
  href: api/SharpNeat.Graphs.ConnectionCompareUtils.html
  commentId: T:SharpNeat.Graphs.ConnectionCompareUtils
  fullName: SharpNeat.Graphs.ConnectionCompareUtils
  nameWithType: ConnectionCompareUtils
- uid: SharpNeat.Graphs.ConnectionCompareUtils.CompareConnectionLists(SharpNeat.Graphs.DirectedConnection[],SharpNeat.Graphs.ConnectionIds@)
  name: CompareConnectionLists(DirectedConnection[], in ConnectionIds)
  href: api/SharpNeat.Graphs.ConnectionCompareUtils.html#SharpNeat_Graphs_ConnectionCompareUtils_CompareConnectionLists_SharpNeat_Graphs_DirectedConnection___SharpNeat_Graphs_ConnectionIds__
  commentId: M:SharpNeat.Graphs.ConnectionCompareUtils.CompareConnectionLists(SharpNeat.Graphs.DirectedConnection[],SharpNeat.Graphs.ConnectionIds@)
  name.vb: CompareConnectionLists(DirectedConnection(), ConnectionIds)
  fullName: SharpNeat.Graphs.ConnectionCompareUtils.CompareConnectionLists(SharpNeat.Graphs.DirectedConnection[], in SharpNeat.Graphs.ConnectionIds)
  fullName.vb: SharpNeat.Graphs.ConnectionCompareUtils.CompareConnectionLists(SharpNeat.Graphs.DirectedConnection(), SharpNeat.Graphs.ConnectionIds)
  nameWithType: ConnectionCompareUtils.CompareConnectionLists(DirectedConnection[], in ConnectionIds)
  nameWithType.vb: ConnectionCompareUtils.CompareConnectionLists(DirectedConnection(), ConnectionIds)
- uid: SharpNeat.Graphs.ConnectionCompareUtils.CompareConnectionLists*
  name: CompareConnectionLists
  href: api/SharpNeat.Graphs.ConnectionCompareUtils.html#SharpNeat_Graphs_ConnectionCompareUtils_CompareConnectionLists_
  commentId: Overload:SharpNeat.Graphs.ConnectionCompareUtils.CompareConnectionLists
  isSpec: "True"
  fullName: SharpNeat.Graphs.ConnectionCompareUtils.CompareConnectionLists
  nameWithType: ConnectionCompareUtils.CompareConnectionLists
- uid: SharpNeat.Graphs.ConnectionCompareUtils.CompareConnectionLists``1(SharpNeat.Graphs.DirectedConnection[],``0[],SharpNeat.Graphs.ConnectionIds@,``0[])
  name: CompareConnectionLists<T>(DirectedConnection[], T[], in ConnectionIds, T[])
  href: api/SharpNeat.Graphs.ConnectionCompareUtils.html#SharpNeat_Graphs_ConnectionCompareUtils_CompareConnectionLists__1_SharpNeat_Graphs_DirectedConnection_____0___SharpNeat_Graphs_ConnectionIds____0___
  commentId: M:SharpNeat.Graphs.ConnectionCompareUtils.CompareConnectionLists``1(SharpNeat.Graphs.DirectedConnection[],``0[],SharpNeat.Graphs.ConnectionIds@,``0[])
  name.vb: CompareConnectionLists(Of T)(DirectedConnection(), T(), ConnectionIds, T())
  fullName: SharpNeat.Graphs.ConnectionCompareUtils.CompareConnectionLists<T>(SharpNeat.Graphs.DirectedConnection[], T[], in SharpNeat.Graphs.ConnectionIds, T[])
  fullName.vb: SharpNeat.Graphs.ConnectionCompareUtils.CompareConnectionLists(Of T)(SharpNeat.Graphs.DirectedConnection(), T(), SharpNeat.Graphs.ConnectionIds, T())
  nameWithType: ConnectionCompareUtils.CompareConnectionLists<T>(DirectedConnection[], T[], in ConnectionIds, T[])
  nameWithType.vb: ConnectionCompareUtils.CompareConnectionLists(Of T)(DirectedConnection(), T(), ConnectionIds, T())
- uid: SharpNeat.Graphs.ConnectionCompareUtils.CompareConnectionLists``1(SharpNeat.Neat.Genome.ConnectionGenes{``0},SharpNeat.Graphs.ConnectionIds@,``0[])
  name: CompareConnectionLists<T>(ConnectionGenes<T>, in ConnectionIds, T[])
  href: api/SharpNeat.Graphs.ConnectionCompareUtils.html#SharpNeat_Graphs_ConnectionCompareUtils_CompareConnectionLists__1_SharpNeat_Neat_Genome_ConnectionGenes___0__SharpNeat_Graphs_ConnectionIds____0___
  commentId: M:SharpNeat.Graphs.ConnectionCompareUtils.CompareConnectionLists``1(SharpNeat.Neat.Genome.ConnectionGenes{``0},SharpNeat.Graphs.ConnectionIds@,``0[])
  name.vb: CompareConnectionLists(Of T)(ConnectionGenes(Of T), ConnectionIds, T())
  fullName: SharpNeat.Graphs.ConnectionCompareUtils.CompareConnectionLists<T>(SharpNeat.Neat.Genome.ConnectionGenes<T>, in SharpNeat.Graphs.ConnectionIds, T[])
  fullName.vb: SharpNeat.Graphs.ConnectionCompareUtils.CompareConnectionLists(Of T)(SharpNeat.Neat.Genome.ConnectionGenes(Of T), SharpNeat.Graphs.ConnectionIds, T())
  nameWithType: ConnectionCompareUtils.CompareConnectionLists<T>(ConnectionGenes<T>, in ConnectionIds, T[])
  nameWithType.vb: ConnectionCompareUtils.CompareConnectionLists(Of T)(ConnectionGenes(Of T), ConnectionIds, T())
- uid: SharpNeat.Graphs.ConnectionCompareUtils.CompareConnectionLists``1(SharpNeat.Neat.Genome.ConnectionGenes{``0},SharpNeat.Graphs.ConnectionIds@,System.Int32[])
  name: CompareConnectionLists<T>(ConnectionGenes<T>, in ConnectionIds, int[])
  href: api/SharpNeat.Graphs.ConnectionCompareUtils.html#SharpNeat_Graphs_ConnectionCompareUtils_CompareConnectionLists__1_SharpNeat_Neat_Genome_ConnectionGenes___0__SharpNeat_Graphs_ConnectionIds__System_Int32___
  commentId: M:SharpNeat.Graphs.ConnectionCompareUtils.CompareConnectionLists``1(SharpNeat.Neat.Genome.ConnectionGenes{``0},SharpNeat.Graphs.ConnectionIds@,System.Int32[])
  name.vb: CompareConnectionLists(Of T)(ConnectionGenes(Of T), ConnectionIds, Integer())
  fullName: SharpNeat.Graphs.ConnectionCompareUtils.CompareConnectionLists<T>(SharpNeat.Neat.Genome.ConnectionGenes<T>, in SharpNeat.Graphs.ConnectionIds, int[])
  fullName.vb: SharpNeat.Graphs.ConnectionCompareUtils.CompareConnectionLists(Of T)(SharpNeat.Neat.Genome.ConnectionGenes(Of T), SharpNeat.Graphs.ConnectionIds, Integer())
  nameWithType: ConnectionCompareUtils.CompareConnectionLists<T>(ConnectionGenes<T>, in ConnectionIds, int[])
  nameWithType.vb: ConnectionCompareUtils.CompareConnectionLists(Of T)(ConnectionGenes(Of T), ConnectionIds, Integer())
- uid: SharpNeat.Graphs.ConnectionCompareUtils.CompareConnectionLists``1(SharpNeat.Neat.Genome.ConnectionGenes{``0},SharpNeat.Graphs.ConnectionIds@)
  name: CompareConnectionLists<T>(ConnectionGenes<T>, in ConnectionIds)
  href: api/SharpNeat.Graphs.ConnectionCompareUtils.html#SharpNeat_Graphs_ConnectionCompareUtils_CompareConnectionLists__1_SharpNeat_Neat_Genome_ConnectionGenes___0__SharpNeat_Graphs_ConnectionIds__
  commentId: M:SharpNeat.Graphs.ConnectionCompareUtils.CompareConnectionLists``1(SharpNeat.Neat.Genome.ConnectionGenes{``0},SharpNeat.Graphs.ConnectionIds@)
  name.vb: CompareConnectionLists(Of T)(ConnectionGenes(Of T), ConnectionIds)
  fullName: SharpNeat.Graphs.ConnectionCompareUtils.CompareConnectionLists<T>(SharpNeat.Neat.Genome.ConnectionGenes<T>, in SharpNeat.Graphs.ConnectionIds)
  fullName.vb: SharpNeat.Graphs.ConnectionCompareUtils.CompareConnectionLists(Of T)(SharpNeat.Neat.Genome.ConnectionGenes(Of T), SharpNeat.Graphs.ConnectionIds)
  nameWithType: ConnectionCompareUtils.CompareConnectionLists<T>(ConnectionGenes<T>, in ConnectionIds)
  nameWithType.vb: ConnectionCompareUtils.CompareConnectionLists(Of T)(ConnectionGenes(Of T), ConnectionIds)
- uid: SharpNeat.Graphs.ConnectionIds
  name: ConnectionIds
  href: api/SharpNeat.Graphs.ConnectionIds.html
  commentId: T:SharpNeat.Graphs.ConnectionIds
  fullName: SharpNeat.Graphs.ConnectionIds
  nameWithType: ConnectionIds
- uid: SharpNeat.Graphs.ConnectionIds.#ctor(System.Int32)
  name: ConnectionIds(int)
  href: api/SharpNeat.Graphs.ConnectionIds.html#SharpNeat_Graphs_ConnectionIds__ctor_System_Int32_
  commentId: M:SharpNeat.Graphs.ConnectionIds.#ctor(System.Int32)
  name.vb: New(Integer)
  fullName: SharpNeat.Graphs.ConnectionIds.ConnectionIds(int)
  fullName.vb: SharpNeat.Graphs.ConnectionIds.New(Integer)
  nameWithType: ConnectionIds.ConnectionIds(int)
  nameWithType.vb: ConnectionIds.New(Integer)
- uid: SharpNeat.Graphs.ConnectionIds.#ctor*
  name: ConnectionIds
  href: api/SharpNeat.Graphs.ConnectionIds.html#SharpNeat_Graphs_ConnectionIds__ctor_
  commentId: Overload:SharpNeat.Graphs.ConnectionIds.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Graphs.ConnectionIds.ConnectionIds
  fullName.vb: SharpNeat.Graphs.ConnectionIds.New
  nameWithType: ConnectionIds.ConnectionIds
  nameWithType.vb: ConnectionIds.New
- uid: SharpNeat.Graphs.ConnectionIds.Dispose
  name: Dispose()
  href: api/SharpNeat.Graphs.ConnectionIds.html#SharpNeat_Graphs_ConnectionIds_Dispose
  commentId: M:SharpNeat.Graphs.ConnectionIds.Dispose
  fullName: SharpNeat.Graphs.ConnectionIds.Dispose()
  nameWithType: ConnectionIds.Dispose()
- uid: SharpNeat.Graphs.ConnectionIds.Dispose*
  name: Dispose
  href: api/SharpNeat.Graphs.ConnectionIds.html#SharpNeat_Graphs_ConnectionIds_Dispose_
  commentId: Overload:SharpNeat.Graphs.ConnectionIds.Dispose
  isSpec: "True"
  fullName: SharpNeat.Graphs.ConnectionIds.Dispose
  nameWithType: ConnectionIds.Dispose
- uid: SharpNeat.Graphs.ConnectionIds.GetSourceId(System.Int32)
  name: GetSourceId(int)
  href: api/SharpNeat.Graphs.ConnectionIds.html#SharpNeat_Graphs_ConnectionIds_GetSourceId_System_Int32_
  commentId: M:SharpNeat.Graphs.ConnectionIds.GetSourceId(System.Int32)
  name.vb: GetSourceId(Integer)
  fullName: SharpNeat.Graphs.ConnectionIds.GetSourceId(int)
  fullName.vb: SharpNeat.Graphs.ConnectionIds.GetSourceId(Integer)
  nameWithType: ConnectionIds.GetSourceId(int)
  nameWithType.vb: ConnectionIds.GetSourceId(Integer)
- uid: SharpNeat.Graphs.ConnectionIds.GetSourceId*
  name: GetSourceId
  href: api/SharpNeat.Graphs.ConnectionIds.html#SharpNeat_Graphs_ConnectionIds_GetSourceId_
  commentId: Overload:SharpNeat.Graphs.ConnectionIds.GetSourceId
  isSpec: "True"
  fullName: SharpNeat.Graphs.ConnectionIds.GetSourceId
  nameWithType: ConnectionIds.GetSourceId
- uid: SharpNeat.Graphs.ConnectionIds.GetSourceIdSpan
  name: GetSourceIdSpan()
  href: api/SharpNeat.Graphs.ConnectionIds.html#SharpNeat_Graphs_ConnectionIds_GetSourceIdSpan
  commentId: M:SharpNeat.Graphs.ConnectionIds.GetSourceIdSpan
  fullName: SharpNeat.Graphs.ConnectionIds.GetSourceIdSpan()
  nameWithType: ConnectionIds.GetSourceIdSpan()
- uid: SharpNeat.Graphs.ConnectionIds.GetSourceIdSpan*
  name: GetSourceIdSpan
  href: api/SharpNeat.Graphs.ConnectionIds.html#SharpNeat_Graphs_ConnectionIds_GetSourceIdSpan_
  commentId: Overload:SharpNeat.Graphs.ConnectionIds.GetSourceIdSpan
  isSpec: "True"
  fullName: SharpNeat.Graphs.ConnectionIds.GetSourceIdSpan
  nameWithType: ConnectionIds.GetSourceIdSpan
- uid: SharpNeat.Graphs.ConnectionIds.GetTargetId(System.Int32)
  name: GetTargetId(int)
  href: api/SharpNeat.Graphs.ConnectionIds.html#SharpNeat_Graphs_ConnectionIds_GetTargetId_System_Int32_
  commentId: M:SharpNeat.Graphs.ConnectionIds.GetTargetId(System.Int32)
  name.vb: GetTargetId(Integer)
  fullName: SharpNeat.Graphs.ConnectionIds.GetTargetId(int)
  fullName.vb: SharpNeat.Graphs.ConnectionIds.GetTargetId(Integer)
  nameWithType: ConnectionIds.GetTargetId(int)
  nameWithType.vb: ConnectionIds.GetTargetId(Integer)
- uid: SharpNeat.Graphs.ConnectionIds.GetTargetId*
  name: GetTargetId
  href: api/SharpNeat.Graphs.ConnectionIds.html#SharpNeat_Graphs_ConnectionIds_GetTargetId_
  commentId: Overload:SharpNeat.Graphs.ConnectionIds.GetTargetId
  isSpec: "True"
  fullName: SharpNeat.Graphs.ConnectionIds.GetTargetId
  nameWithType: ConnectionIds.GetTargetId
- uid: SharpNeat.Graphs.ConnectionIds.GetTargetIdSpan
  name: GetTargetIdSpan()
  href: api/SharpNeat.Graphs.ConnectionIds.html#SharpNeat_Graphs_ConnectionIds_GetTargetIdSpan
  commentId: M:SharpNeat.Graphs.ConnectionIds.GetTargetIdSpan
  fullName: SharpNeat.Graphs.ConnectionIds.GetTargetIdSpan()
  nameWithType: ConnectionIds.GetTargetIdSpan()
- uid: SharpNeat.Graphs.ConnectionIds.GetTargetIdSpan*
  name: GetTargetIdSpan
  href: api/SharpNeat.Graphs.ConnectionIds.html#SharpNeat_Graphs_ConnectionIds_GetTargetIdSpan_
  commentId: Overload:SharpNeat.Graphs.ConnectionIds.GetTargetIdSpan
  isSpec: "True"
  fullName: SharpNeat.Graphs.ConnectionIds.GetTargetIdSpan
  nameWithType: ConnectionIds.GetTargetIdSpan
- uid: SharpNeat.Graphs.ConnectionIds.Length
  name: Length
  href: api/SharpNeat.Graphs.ConnectionIds.html#SharpNeat_Graphs_ConnectionIds_Length
  commentId: P:SharpNeat.Graphs.ConnectionIds.Length
  fullName: SharpNeat.Graphs.ConnectionIds.Length
  nameWithType: ConnectionIds.Length
- uid: SharpNeat.Graphs.ConnectionIds.Length*
  name: Length
  href: api/SharpNeat.Graphs.ConnectionIds.html#SharpNeat_Graphs_ConnectionIds_Length_
  commentId: Overload:SharpNeat.Graphs.ConnectionIds.Length
  isSpec: "True"
  fullName: SharpNeat.Graphs.ConnectionIds.Length
  nameWithType: ConnectionIds.Length
- uid: SharpNeat.Graphs.ConnectionSorter`1
  name: ConnectionSorter<T>
  href: api/SharpNeat.Graphs.ConnectionSorter-1.html
  commentId: T:SharpNeat.Graphs.ConnectionSorter`1
  name.vb: ConnectionSorter(Of T)
  fullName: SharpNeat.Graphs.ConnectionSorter<T>
  fullName.vb: SharpNeat.Graphs.ConnectionSorter(Of T)
  nameWithType: ConnectionSorter<T>
  nameWithType.vb: ConnectionSorter(Of T)
- uid: SharpNeat.Graphs.ConnectionSorter`1.Sort(SharpNeat.Graphs.ConnectionIds@,System.Span{`0})
  name: Sort(in ConnectionIds, Span<T>)
  href: api/SharpNeat.Graphs.ConnectionSorter-1.html#SharpNeat_Graphs_ConnectionSorter_1_Sort_SharpNeat_Graphs_ConnectionIds__System_Span__0__
  commentId: M:SharpNeat.Graphs.ConnectionSorter`1.Sort(SharpNeat.Graphs.ConnectionIds@,System.Span{`0})
  name.vb: Sort(ConnectionIds, Span(Of T))
  fullName: SharpNeat.Graphs.ConnectionSorter<T>.Sort(in SharpNeat.Graphs.ConnectionIds, System.Span<T>)
  fullName.vb: SharpNeat.Graphs.ConnectionSorter(Of T).Sort(SharpNeat.Graphs.ConnectionIds, System.Span(Of T))
  nameWithType: ConnectionSorter<T>.Sort(in ConnectionIds, Span<T>)
  nameWithType.vb: ConnectionSorter(Of T).Sort(ConnectionIds, Span(Of T))
- uid: SharpNeat.Graphs.ConnectionSorter`1.Sort*
  name: Sort
  href: api/SharpNeat.Graphs.ConnectionSorter-1.html#SharpNeat_Graphs_ConnectionSorter_1_Sort_
  commentId: Overload:SharpNeat.Graphs.ConnectionSorter`1.Sort
  isSpec: "True"
  fullName: SharpNeat.Graphs.ConnectionSorter<T>.Sort
  fullName.vb: SharpNeat.Graphs.ConnectionSorter(Of T).Sort
  nameWithType: ConnectionSorter<T>.Sort
  nameWithType.vb: ConnectionSorter(Of T).Sort
- uid: SharpNeat.Graphs.ConnectionSorterTests
  name: ConnectionSorterTests
  href: api/SharpNeat.Graphs.ConnectionSorterTests.html
  commentId: T:SharpNeat.Graphs.ConnectionSorterTests
  fullName: SharpNeat.Graphs.ConnectionSorterTests
  nameWithType: ConnectionSorterTests
- uid: SharpNeat.Graphs.ConnectionSorterTests.TestConnectionSorter(System.Int32)
  name: TestConnectionSorter(int)
  href: api/SharpNeat.Graphs.ConnectionSorterTests.html#SharpNeat_Graphs_ConnectionSorterTests_TestConnectionSorter_System_Int32_
  commentId: M:SharpNeat.Graphs.ConnectionSorterTests.TestConnectionSorter(System.Int32)
  name.vb: TestConnectionSorter(Integer)
  fullName: SharpNeat.Graphs.ConnectionSorterTests.TestConnectionSorter(int)
  fullName.vb: SharpNeat.Graphs.ConnectionSorterTests.TestConnectionSorter(Integer)
  nameWithType: ConnectionSorterTests.TestConnectionSorter(int)
  nameWithType.vb: ConnectionSorterTests.TestConnectionSorter(Integer)
- uid: SharpNeat.Graphs.ConnectionSorterTests.TestConnectionSorter*
  name: TestConnectionSorter
  href: api/SharpNeat.Graphs.ConnectionSorterTests.html#SharpNeat_Graphs_ConnectionSorterTests_TestConnectionSorter_
  commentId: Overload:SharpNeat.Graphs.ConnectionSorterTests.TestConnectionSorter
  isSpec: "True"
  fullName: SharpNeat.Graphs.ConnectionSorterTests.TestConnectionSorter
  nameWithType: ConnectionSorterTests.TestConnectionSorter
- uid: SharpNeat.Graphs.CyclicGraphCheck
  name: CyclicGraphCheck
  href: api/SharpNeat.Graphs.CyclicGraphCheck.html
  commentId: T:SharpNeat.Graphs.CyclicGraphCheck
  fullName: SharpNeat.Graphs.CyclicGraphCheck
  nameWithType: CyclicGraphCheck
- uid: SharpNeat.Graphs.CyclicGraphCheck.IsCyclic(SharpNeat.Graphs.DirectedGraph)
  name: IsCyclic(DirectedGraph)
  href: api/SharpNeat.Graphs.CyclicGraphCheck.html#SharpNeat_Graphs_CyclicGraphCheck_IsCyclic_SharpNeat_Graphs_DirectedGraph_
  commentId: M:SharpNeat.Graphs.CyclicGraphCheck.IsCyclic(SharpNeat.Graphs.DirectedGraph)
  fullName: SharpNeat.Graphs.CyclicGraphCheck.IsCyclic(SharpNeat.Graphs.DirectedGraph)
  nameWithType: CyclicGraphCheck.IsCyclic(DirectedGraph)
- uid: SharpNeat.Graphs.CyclicGraphCheck.IsCyclic*
  name: IsCyclic
  href: api/SharpNeat.Graphs.CyclicGraphCheck.html#SharpNeat_Graphs_CyclicGraphCheck_IsCyclic_
  commentId: Overload:SharpNeat.Graphs.CyclicGraphCheck.IsCyclic
  isSpec: "True"
  fullName: SharpNeat.Graphs.CyclicGraphCheck.IsCyclic
  nameWithType: CyclicGraphCheck.IsCyclic
- uid: SharpNeat.Graphs.CyclicGraphCheckTests
  name: CyclicGraphCheckTests
  href: api/SharpNeat.Graphs.CyclicGraphCheckTests.html
  commentId: T:SharpNeat.Graphs.CyclicGraphCheckTests
  fullName: SharpNeat.Graphs.CyclicGraphCheckTests
  nameWithType: CyclicGraphCheckTests
- uid: SharpNeat.Graphs.CyclicGraphCheckTests.Regression1
  name: Regression1()
  href: api/SharpNeat.Graphs.CyclicGraphCheckTests.html#SharpNeat_Graphs_CyclicGraphCheckTests_Regression1
  commentId: M:SharpNeat.Graphs.CyclicGraphCheckTests.Regression1
  fullName: SharpNeat.Graphs.CyclicGraphCheckTests.Regression1()
  nameWithType: CyclicGraphCheckTests.Regression1()
- uid: SharpNeat.Graphs.CyclicGraphCheckTests.Regression1*
  name: Regression1
  href: api/SharpNeat.Graphs.CyclicGraphCheckTests.html#SharpNeat_Graphs_CyclicGraphCheckTests_Regression1_
  commentId: Overload:SharpNeat.Graphs.CyclicGraphCheckTests.Regression1
  isSpec: "True"
  fullName: SharpNeat.Graphs.CyclicGraphCheckTests.Regression1
  nameWithType: CyclicGraphCheckTests.Regression1
- uid: SharpNeat.Graphs.CyclicGraphCheckTests.SimpleAcyclic
  name: SimpleAcyclic()
  href: api/SharpNeat.Graphs.CyclicGraphCheckTests.html#SharpNeat_Graphs_CyclicGraphCheckTests_SimpleAcyclic
  commentId: M:SharpNeat.Graphs.CyclicGraphCheckTests.SimpleAcyclic
  fullName: SharpNeat.Graphs.CyclicGraphCheckTests.SimpleAcyclic()
  nameWithType: CyclicGraphCheckTests.SimpleAcyclic()
- uid: SharpNeat.Graphs.CyclicGraphCheckTests.SimpleAcyclic_DefinedNodes
  name: SimpleAcyclic_DefinedNodes()
  href: api/SharpNeat.Graphs.CyclicGraphCheckTests.html#SharpNeat_Graphs_CyclicGraphCheckTests_SimpleAcyclic_DefinedNodes
  commentId: M:SharpNeat.Graphs.CyclicGraphCheckTests.SimpleAcyclic_DefinedNodes
  fullName: SharpNeat.Graphs.CyclicGraphCheckTests.SimpleAcyclic_DefinedNodes()
  nameWithType: CyclicGraphCheckTests.SimpleAcyclic_DefinedNodes()
- uid: SharpNeat.Graphs.CyclicGraphCheckTests.SimpleAcyclic_DefinedNodes_NodeIdGap
  name: SimpleAcyclic_DefinedNodes_NodeIdGap()
  href: api/SharpNeat.Graphs.CyclicGraphCheckTests.html#SharpNeat_Graphs_CyclicGraphCheckTests_SimpleAcyclic_DefinedNodes_NodeIdGap
  commentId: M:SharpNeat.Graphs.CyclicGraphCheckTests.SimpleAcyclic_DefinedNodes_NodeIdGap
  fullName: SharpNeat.Graphs.CyclicGraphCheckTests.SimpleAcyclic_DefinedNodes_NodeIdGap()
  nameWithType: CyclicGraphCheckTests.SimpleAcyclic_DefinedNodes_NodeIdGap()
- uid: SharpNeat.Graphs.CyclicGraphCheckTests.SimpleAcyclic_DefinedNodes_NodeIdGap*
  name: SimpleAcyclic_DefinedNodes_NodeIdGap
  href: api/SharpNeat.Graphs.CyclicGraphCheckTests.html#SharpNeat_Graphs_CyclicGraphCheckTests_SimpleAcyclic_DefinedNodes_NodeIdGap_
  commentId: Overload:SharpNeat.Graphs.CyclicGraphCheckTests.SimpleAcyclic_DefinedNodes_NodeIdGap
  isSpec: "True"
  fullName: SharpNeat.Graphs.CyclicGraphCheckTests.SimpleAcyclic_DefinedNodes_NodeIdGap
  nameWithType: CyclicGraphCheckTests.SimpleAcyclic_DefinedNodes_NodeIdGap
- uid: SharpNeat.Graphs.CyclicGraphCheckTests.SimpleAcyclic_DefinedNodes*
  name: SimpleAcyclic_DefinedNodes
  href: api/SharpNeat.Graphs.CyclicGraphCheckTests.html#SharpNeat_Graphs_CyclicGraphCheckTests_SimpleAcyclic_DefinedNodes_
  commentId: Overload:SharpNeat.Graphs.CyclicGraphCheckTests.SimpleAcyclic_DefinedNodes
  isSpec: "True"
  fullName: SharpNeat.Graphs.CyclicGraphCheckTests.SimpleAcyclic_DefinedNodes
  nameWithType: CyclicGraphCheckTests.SimpleAcyclic_DefinedNodes
- uid: SharpNeat.Graphs.CyclicGraphCheckTests.SimpleAcyclic*
  name: SimpleAcyclic
  href: api/SharpNeat.Graphs.CyclicGraphCheckTests.html#SharpNeat_Graphs_CyclicGraphCheckTests_SimpleAcyclic_
  commentId: Overload:SharpNeat.Graphs.CyclicGraphCheckTests.SimpleAcyclic
  isSpec: "True"
  fullName: SharpNeat.Graphs.CyclicGraphCheckTests.SimpleAcyclic
  nameWithType: CyclicGraphCheckTests.SimpleAcyclic
- uid: SharpNeat.Graphs.CyclicGraphCheckTests.SimpleCyclic
  name: SimpleCyclic()
  href: api/SharpNeat.Graphs.CyclicGraphCheckTests.html#SharpNeat_Graphs_CyclicGraphCheckTests_SimpleCyclic
  commentId: M:SharpNeat.Graphs.CyclicGraphCheckTests.SimpleCyclic
  fullName: SharpNeat.Graphs.CyclicGraphCheckTests.SimpleCyclic()
  nameWithType: CyclicGraphCheckTests.SimpleCyclic()
- uid: SharpNeat.Graphs.CyclicGraphCheckTests.SimpleCyclic_DefinedNodes
  name: SimpleCyclic_DefinedNodes()
  href: api/SharpNeat.Graphs.CyclicGraphCheckTests.html#SharpNeat_Graphs_CyclicGraphCheckTests_SimpleCyclic_DefinedNodes
  commentId: M:SharpNeat.Graphs.CyclicGraphCheckTests.SimpleCyclic_DefinedNodes
  fullName: SharpNeat.Graphs.CyclicGraphCheckTests.SimpleCyclic_DefinedNodes()
  nameWithType: CyclicGraphCheckTests.SimpleCyclic_DefinedNodes()
- uid: SharpNeat.Graphs.CyclicGraphCheckTests.SimpleCyclic_DefinedNodes_NodeIdGap
  name: SimpleCyclic_DefinedNodes_NodeIdGap()
  href: api/SharpNeat.Graphs.CyclicGraphCheckTests.html#SharpNeat_Graphs_CyclicGraphCheckTests_SimpleCyclic_DefinedNodes_NodeIdGap
  commentId: M:SharpNeat.Graphs.CyclicGraphCheckTests.SimpleCyclic_DefinedNodes_NodeIdGap
  fullName: SharpNeat.Graphs.CyclicGraphCheckTests.SimpleCyclic_DefinedNodes_NodeIdGap()
  nameWithType: CyclicGraphCheckTests.SimpleCyclic_DefinedNodes_NodeIdGap()
- uid: SharpNeat.Graphs.CyclicGraphCheckTests.SimpleCyclic_DefinedNodes_NodeIdGap*
  name: SimpleCyclic_DefinedNodes_NodeIdGap
  href: api/SharpNeat.Graphs.CyclicGraphCheckTests.html#SharpNeat_Graphs_CyclicGraphCheckTests_SimpleCyclic_DefinedNodes_NodeIdGap_
  commentId: Overload:SharpNeat.Graphs.CyclicGraphCheckTests.SimpleCyclic_DefinedNodes_NodeIdGap
  isSpec: "True"
  fullName: SharpNeat.Graphs.CyclicGraphCheckTests.SimpleCyclic_DefinedNodes_NodeIdGap
  nameWithType: CyclicGraphCheckTests.SimpleCyclic_DefinedNodes_NodeIdGap
- uid: SharpNeat.Graphs.CyclicGraphCheckTests.SimpleCyclic_DefinedNodes*
  name: SimpleCyclic_DefinedNodes
  href: api/SharpNeat.Graphs.CyclicGraphCheckTests.html#SharpNeat_Graphs_CyclicGraphCheckTests_SimpleCyclic_DefinedNodes_
  commentId: Overload:SharpNeat.Graphs.CyclicGraphCheckTests.SimpleCyclic_DefinedNodes
  isSpec: "True"
  fullName: SharpNeat.Graphs.CyclicGraphCheckTests.SimpleCyclic_DefinedNodes
  nameWithType: CyclicGraphCheckTests.SimpleCyclic_DefinedNodes
- uid: SharpNeat.Graphs.CyclicGraphCheckTests.SimpleCyclic*
  name: SimpleCyclic
  href: api/SharpNeat.Graphs.CyclicGraphCheckTests.html#SharpNeat_Graphs_CyclicGraphCheckTests_SimpleCyclic_
  commentId: Overload:SharpNeat.Graphs.CyclicGraphCheckTests.SimpleCyclic
  isSpec: "True"
  fullName: SharpNeat.Graphs.CyclicGraphCheckTests.SimpleCyclic
  nameWithType: CyclicGraphCheckTests.SimpleCyclic
- uid: SharpNeat.Graphs.CyclicGraphDepthAnalysis
  name: CyclicGraphDepthAnalysis
  href: api/SharpNeat.Graphs.CyclicGraphDepthAnalysis.html
  commentId: T:SharpNeat.Graphs.CyclicGraphDepthAnalysis
  fullName: SharpNeat.Graphs.CyclicGraphDepthAnalysis
  nameWithType: CyclicGraphDepthAnalysis
- uid: SharpNeat.Graphs.CyclicGraphDepthAnalysis.CalculateNodeDepths(SharpNeat.Graphs.DirectedGraph)
  name: CalculateNodeDepths(DirectedGraph)
  href: api/SharpNeat.Graphs.CyclicGraphDepthAnalysis.html#SharpNeat_Graphs_CyclicGraphDepthAnalysis_CalculateNodeDepths_SharpNeat_Graphs_DirectedGraph_
  commentId: M:SharpNeat.Graphs.CyclicGraphDepthAnalysis.CalculateNodeDepths(SharpNeat.Graphs.DirectedGraph)
  fullName: SharpNeat.Graphs.CyclicGraphDepthAnalysis.CalculateNodeDepths(SharpNeat.Graphs.DirectedGraph)
  nameWithType: CyclicGraphDepthAnalysis.CalculateNodeDepths(DirectedGraph)
- uid: SharpNeat.Graphs.CyclicGraphDepthAnalysis.CalculateNodeDepths*
  name: CalculateNodeDepths
  href: api/SharpNeat.Graphs.CyclicGraphDepthAnalysis.html#SharpNeat_Graphs_CyclicGraphDepthAnalysis_CalculateNodeDepths_
  commentId: Overload:SharpNeat.Graphs.CyclicGraphDepthAnalysis.CalculateNodeDepths
  isSpec: "True"
  fullName: SharpNeat.Graphs.CyclicGraphDepthAnalysis.CalculateNodeDepths
  nameWithType: CyclicGraphDepthAnalysis.CalculateNodeDepths
- uid: SharpNeat.Graphs.CyclicGraphDepthAnalysisTests
  name: CyclicGraphDepthAnalysisTests
  href: api/SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.html
  commentId: T:SharpNeat.Graphs.CyclicGraphDepthAnalysisTests
  fullName: SharpNeat.Graphs.CyclicGraphDepthAnalysisTests
  nameWithType: CyclicGraphDepthAnalysisTests
- uid: SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.SimpleAcyclic_A1
  name: SimpleAcyclic_A1()
  href: api/SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.html#SharpNeat_Graphs_CyclicGraphDepthAnalysisTests_SimpleAcyclic_A1
  commentId: M:SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.SimpleAcyclic_A1
  fullName: SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.SimpleAcyclic_A1()
  nameWithType: CyclicGraphDepthAnalysisTests.SimpleAcyclic_A1()
- uid: SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.SimpleAcyclic_A1*
  name: SimpleAcyclic_A1
  href: api/SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.html#SharpNeat_Graphs_CyclicGraphDepthAnalysisTests_SimpleAcyclic_A1_
  commentId: Overload:SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.SimpleAcyclic_A1
  isSpec: "True"
  fullName: SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.SimpleAcyclic_A1
  nameWithType: CyclicGraphDepthAnalysisTests.SimpleAcyclic_A1
- uid: SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.SimpleAcyclic_A2
  name: SimpleAcyclic_A2()
  href: api/SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.html#SharpNeat_Graphs_CyclicGraphDepthAnalysisTests_SimpleAcyclic_A2
  commentId: M:SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.SimpleAcyclic_A2
  fullName: SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.SimpleAcyclic_A2()
  nameWithType: CyclicGraphDepthAnalysisTests.SimpleAcyclic_A2()
- uid: SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.SimpleAcyclic_A2*
  name: SimpleAcyclic_A2
  href: api/SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.html#SharpNeat_Graphs_CyclicGraphDepthAnalysisTests_SimpleAcyclic_A2_
  commentId: Overload:SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.SimpleAcyclic_A2
  isSpec: "True"
  fullName: SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.SimpleAcyclic_A2
  nameWithType: CyclicGraphDepthAnalysisTests.SimpleAcyclic_A2
- uid: SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.SimpleAcyclic_B1
  name: SimpleAcyclic_B1()
  href: api/SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.html#SharpNeat_Graphs_CyclicGraphDepthAnalysisTests_SimpleAcyclic_B1
  commentId: M:SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.SimpleAcyclic_B1
  fullName: SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.SimpleAcyclic_B1()
  nameWithType: CyclicGraphDepthAnalysisTests.SimpleAcyclic_B1()
- uid: SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.SimpleAcyclic_B1*
  name: SimpleAcyclic_B1
  href: api/SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.html#SharpNeat_Graphs_CyclicGraphDepthAnalysisTests_SimpleAcyclic_B1_
  commentId: Overload:SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.SimpleAcyclic_B1
  isSpec: "True"
  fullName: SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.SimpleAcyclic_B1
  nameWithType: CyclicGraphDepthAnalysisTests.SimpleAcyclic_B1
- uid: SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.SimpleAcyclic_B2
  name: SimpleAcyclic_B2()
  href: api/SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.html#SharpNeat_Graphs_CyclicGraphDepthAnalysisTests_SimpleAcyclic_B2
  commentId: M:SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.SimpleAcyclic_B2
  fullName: SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.SimpleAcyclic_B2()
  nameWithType: CyclicGraphDepthAnalysisTests.SimpleAcyclic_B2()
- uid: SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.SimpleAcyclic_B2*
  name: SimpleAcyclic_B2
  href: api/SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.html#SharpNeat_Graphs_CyclicGraphDepthAnalysisTests_SimpleAcyclic_B2_
  commentId: Overload:SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.SimpleAcyclic_B2
  isSpec: "True"
  fullName: SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.SimpleAcyclic_B2
  nameWithType: CyclicGraphDepthAnalysisTests.SimpleAcyclic_B2
- uid: SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.SimpleCyclic_A1
  name: SimpleCyclic_A1()
  href: api/SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.html#SharpNeat_Graphs_CyclicGraphDepthAnalysisTests_SimpleCyclic_A1
  commentId: M:SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.SimpleCyclic_A1
  fullName: SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.SimpleCyclic_A1()
  nameWithType: CyclicGraphDepthAnalysisTests.SimpleCyclic_A1()
- uid: SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.SimpleCyclic_A1*
  name: SimpleCyclic_A1
  href: api/SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.html#SharpNeat_Graphs_CyclicGraphDepthAnalysisTests_SimpleCyclic_A1_
  commentId: Overload:SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.SimpleCyclic_A1
  isSpec: "True"
  fullName: SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.SimpleCyclic_A1
  nameWithType: CyclicGraphDepthAnalysisTests.SimpleCyclic_A1
- uid: SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.SimpleCyclic_B1
  name: SimpleCyclic_B1()
  href: api/SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.html#SharpNeat_Graphs_CyclicGraphDepthAnalysisTests_SimpleCyclic_B1
  commentId: M:SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.SimpleCyclic_B1
  fullName: SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.SimpleCyclic_B1()
  nameWithType: CyclicGraphDepthAnalysisTests.SimpleCyclic_B1()
- uid: SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.SimpleCyclic_B1*
  name: SimpleCyclic_B1
  href: api/SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.html#SharpNeat_Graphs_CyclicGraphDepthAnalysisTests_SimpleCyclic_B1_
  commentId: Overload:SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.SimpleCyclic_B1
  isSpec: "True"
  fullName: SharpNeat.Graphs.CyclicGraphDepthAnalysisTests.SimpleCyclic_B1
  nameWithType: CyclicGraphDepthAnalysisTests.SimpleCyclic_B1
- uid: SharpNeat.Graphs.DictionaryNodeIdMap
  name: DictionaryNodeIdMap
  href: api/SharpNeat.Graphs.DictionaryNodeIdMap.html
  commentId: T:SharpNeat.Graphs.DictionaryNodeIdMap
  fullName: SharpNeat.Graphs.DictionaryNodeIdMap
  nameWithType: DictionaryNodeIdMap
- uid: SharpNeat.Graphs.DictionaryNodeIdMap.#ctor(System.Int32,System.Collections.Generic.Dictionary{System.Int32,System.Int32})
  name: DictionaryNodeIdMap(int, Dictionary<int, int>)
  href: api/SharpNeat.Graphs.DictionaryNodeIdMap.html#SharpNeat_Graphs_DictionaryNodeIdMap__ctor_System_Int32_System_Collections_Generic_Dictionary_System_Int32_System_Int32__
  commentId: M:SharpNeat.Graphs.DictionaryNodeIdMap.#ctor(System.Int32,System.Collections.Generic.Dictionary{System.Int32,System.Int32})
  name.vb: New(Integer, Dictionary(Of Integer, Integer))
  fullName: SharpNeat.Graphs.DictionaryNodeIdMap.DictionaryNodeIdMap(int, System.Collections.Generic.Dictionary<int, int>)
  fullName.vb: SharpNeat.Graphs.DictionaryNodeIdMap.New(Integer, System.Collections.Generic.Dictionary(Of Integer, Integer))
  nameWithType: DictionaryNodeIdMap.DictionaryNodeIdMap(int, Dictionary<int, int>)
  nameWithType.vb: DictionaryNodeIdMap.New(Integer, Dictionary(Of Integer, Integer))
- uid: SharpNeat.Graphs.DictionaryNodeIdMap.#ctor*
  name: DictionaryNodeIdMap
  href: api/SharpNeat.Graphs.DictionaryNodeIdMap.html#SharpNeat_Graphs_DictionaryNodeIdMap__ctor_
  commentId: Overload:SharpNeat.Graphs.DictionaryNodeIdMap.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Graphs.DictionaryNodeIdMap.DictionaryNodeIdMap
  fullName.vb: SharpNeat.Graphs.DictionaryNodeIdMap.New
  nameWithType: DictionaryNodeIdMap.DictionaryNodeIdMap
  nameWithType.vb: DictionaryNodeIdMap.New
- uid: SharpNeat.Graphs.DictionaryNodeIdMap.Count
  name: Count
  href: api/SharpNeat.Graphs.DictionaryNodeIdMap.html#SharpNeat_Graphs_DictionaryNodeIdMap_Count
  commentId: P:SharpNeat.Graphs.DictionaryNodeIdMap.Count
  fullName: SharpNeat.Graphs.DictionaryNodeIdMap.Count
  nameWithType: DictionaryNodeIdMap.Count
- uid: SharpNeat.Graphs.DictionaryNodeIdMap.Count*
  name: Count
  href: api/SharpNeat.Graphs.DictionaryNodeIdMap.html#SharpNeat_Graphs_DictionaryNodeIdMap_Count_
  commentId: Overload:SharpNeat.Graphs.DictionaryNodeIdMap.Count
  isSpec: "True"
  fullName: SharpNeat.Graphs.DictionaryNodeIdMap.Count
  nameWithType: DictionaryNodeIdMap.Count
- uid: SharpNeat.Graphs.DictionaryNodeIdMap.CreateInverseMap
  name: CreateInverseMap()
  href: api/SharpNeat.Graphs.DictionaryNodeIdMap.html#SharpNeat_Graphs_DictionaryNodeIdMap_CreateInverseMap
  commentId: M:SharpNeat.Graphs.DictionaryNodeIdMap.CreateInverseMap
  fullName: SharpNeat.Graphs.DictionaryNodeIdMap.CreateInverseMap()
  nameWithType: DictionaryNodeIdMap.CreateInverseMap()
- uid: SharpNeat.Graphs.DictionaryNodeIdMap.CreateInverseMap*
  name: CreateInverseMap
  href: api/SharpNeat.Graphs.DictionaryNodeIdMap.html#SharpNeat_Graphs_DictionaryNodeIdMap_CreateInverseMap_
  commentId: Overload:SharpNeat.Graphs.DictionaryNodeIdMap.CreateInverseMap
  isSpec: "True"
  fullName: SharpNeat.Graphs.DictionaryNodeIdMap.CreateInverseMap
  nameWithType: DictionaryNodeIdMap.CreateInverseMap
- uid: SharpNeat.Graphs.DictionaryNodeIdMap.Map(System.Int32)
  name: Map(int)
  href: api/SharpNeat.Graphs.DictionaryNodeIdMap.html#SharpNeat_Graphs_DictionaryNodeIdMap_Map_System_Int32_
  commentId: M:SharpNeat.Graphs.DictionaryNodeIdMap.Map(System.Int32)
  name.vb: Map(Integer)
  fullName: SharpNeat.Graphs.DictionaryNodeIdMap.Map(int)
  fullName.vb: SharpNeat.Graphs.DictionaryNodeIdMap.Map(Integer)
  nameWithType: DictionaryNodeIdMap.Map(int)
  nameWithType.vb: DictionaryNodeIdMap.Map(Integer)
- uid: SharpNeat.Graphs.DictionaryNodeIdMap.Map*
  name: Map
  href: api/SharpNeat.Graphs.DictionaryNodeIdMap.html#SharpNeat_Graphs_DictionaryNodeIdMap_Map_
  commentId: Overload:SharpNeat.Graphs.DictionaryNodeIdMap.Map
  isSpec: "True"
  fullName: SharpNeat.Graphs.DictionaryNodeIdMap.Map
  nameWithType: DictionaryNodeIdMap.Map
- uid: SharpNeat.Graphs.DictionaryNodeIdMapTests
  name: DictionaryNodeIdMapTests
  href: api/SharpNeat.Graphs.DictionaryNodeIdMapTests.html
  commentId: T:SharpNeat.Graphs.DictionaryNodeIdMapTests
  fullName: SharpNeat.Graphs.DictionaryNodeIdMapTests
  nameWithType: DictionaryNodeIdMapTests
- uid: SharpNeat.Graphs.DictionaryNodeIdMapTests.CreateInverse(System.Int32)
  name: CreateInverse(int)
  href: api/SharpNeat.Graphs.DictionaryNodeIdMapTests.html#SharpNeat_Graphs_DictionaryNodeIdMapTests_CreateInverse_System_Int32_
  commentId: M:SharpNeat.Graphs.DictionaryNodeIdMapTests.CreateInverse(System.Int32)
  name.vb: CreateInverse(Integer)
  fullName: SharpNeat.Graphs.DictionaryNodeIdMapTests.CreateInverse(int)
  fullName.vb: SharpNeat.Graphs.DictionaryNodeIdMapTests.CreateInverse(Integer)
  nameWithType: DictionaryNodeIdMapTests.CreateInverse(int)
  nameWithType.vb: DictionaryNodeIdMapTests.CreateInverse(Integer)
- uid: SharpNeat.Graphs.DictionaryNodeIdMapTests.CreateInverse*
  name: CreateInverse
  href: api/SharpNeat.Graphs.DictionaryNodeIdMapTests.html#SharpNeat_Graphs_DictionaryNodeIdMapTests_CreateInverse_
  commentId: Overload:SharpNeat.Graphs.DictionaryNodeIdMapTests.CreateInverse
  isSpec: "True"
  fullName: SharpNeat.Graphs.DictionaryNodeIdMapTests.CreateInverse
  nameWithType: DictionaryNodeIdMapTests.CreateInverse
- uid: SharpNeat.Graphs.DictionaryNodeIdMapTests.Map_NonZeroFixedNodeCount(System.Int32)
  name: Map_NonZeroFixedNodeCount(int)
  href: api/SharpNeat.Graphs.DictionaryNodeIdMapTests.html#SharpNeat_Graphs_DictionaryNodeIdMapTests_Map_NonZeroFixedNodeCount_System_Int32_
  commentId: M:SharpNeat.Graphs.DictionaryNodeIdMapTests.Map_NonZeroFixedNodeCount(System.Int32)
  name.vb: Map_NonZeroFixedNodeCount(Integer)
  fullName: SharpNeat.Graphs.DictionaryNodeIdMapTests.Map_NonZeroFixedNodeCount(int)
  fullName.vb: SharpNeat.Graphs.DictionaryNodeIdMapTests.Map_NonZeroFixedNodeCount(Integer)
  nameWithType: DictionaryNodeIdMapTests.Map_NonZeroFixedNodeCount(int)
  nameWithType.vb: DictionaryNodeIdMapTests.Map_NonZeroFixedNodeCount(Integer)
- uid: SharpNeat.Graphs.DictionaryNodeIdMapTests.Map_NonZeroFixedNodeCount*
  name: Map_NonZeroFixedNodeCount
  href: api/SharpNeat.Graphs.DictionaryNodeIdMapTests.html#SharpNeat_Graphs_DictionaryNodeIdMapTests_Map_NonZeroFixedNodeCount_
  commentId: Overload:SharpNeat.Graphs.DictionaryNodeIdMapTests.Map_NonZeroFixedNodeCount
  isSpec: "True"
  fullName: SharpNeat.Graphs.DictionaryNodeIdMapTests.Map_NonZeroFixedNodeCount
  nameWithType: DictionaryNodeIdMapTests.Map_NonZeroFixedNodeCount
- uid: SharpNeat.Graphs.DictionaryNodeIdMapTests.Map_ZeroFixedNodeCount
  name: Map_ZeroFixedNodeCount()
  href: api/SharpNeat.Graphs.DictionaryNodeIdMapTests.html#SharpNeat_Graphs_DictionaryNodeIdMapTests_Map_ZeroFixedNodeCount
  commentId: M:SharpNeat.Graphs.DictionaryNodeIdMapTests.Map_ZeroFixedNodeCount
  fullName: SharpNeat.Graphs.DictionaryNodeIdMapTests.Map_ZeroFixedNodeCount()
  nameWithType: DictionaryNodeIdMapTests.Map_ZeroFixedNodeCount()
- uid: SharpNeat.Graphs.DictionaryNodeIdMapTests.Map_ZeroFixedNodeCount*
  name: Map_ZeroFixedNodeCount
  href: api/SharpNeat.Graphs.DictionaryNodeIdMapTests.html#SharpNeat_Graphs_DictionaryNodeIdMapTests_Map_ZeroFixedNodeCount_
  commentId: Overload:SharpNeat.Graphs.DictionaryNodeIdMapTests.Map_ZeroFixedNodeCount
  isSpec: "True"
  fullName: SharpNeat.Graphs.DictionaryNodeIdMapTests.Map_ZeroFixedNodeCount
  nameWithType: DictionaryNodeIdMapTests.Map_ZeroFixedNodeCount
- uid: SharpNeat.Graphs.DirectedConnection
  name: DirectedConnection
  href: api/SharpNeat.Graphs.DirectedConnection.html
  commentId: T:SharpNeat.Graphs.DirectedConnection
  fullName: SharpNeat.Graphs.DirectedConnection
  nameWithType: DirectedConnection
- uid: SharpNeat.Graphs.DirectedConnection.#ctor(SharpNeat.Graphs.DirectedConnection@)
  name: DirectedConnection(in DirectedConnection)
  href: api/SharpNeat.Graphs.DirectedConnection.html#SharpNeat_Graphs_DirectedConnection__ctor_SharpNeat_Graphs_DirectedConnection__
  commentId: M:SharpNeat.Graphs.DirectedConnection.#ctor(SharpNeat.Graphs.DirectedConnection@)
  name.vb: New(DirectedConnection)
  fullName: SharpNeat.Graphs.DirectedConnection.DirectedConnection(in SharpNeat.Graphs.DirectedConnection)
  fullName.vb: SharpNeat.Graphs.DirectedConnection.New(SharpNeat.Graphs.DirectedConnection)
  nameWithType: DirectedConnection.DirectedConnection(in DirectedConnection)
  nameWithType.vb: DirectedConnection.New(DirectedConnection)
- uid: SharpNeat.Graphs.DirectedConnection.#ctor(System.Int32,System.Int32)
  name: DirectedConnection(int, int)
  href: api/SharpNeat.Graphs.DirectedConnection.html#SharpNeat_Graphs_DirectedConnection__ctor_System_Int32_System_Int32_
  commentId: M:SharpNeat.Graphs.DirectedConnection.#ctor(System.Int32,System.Int32)
  name.vb: New(Integer, Integer)
  fullName: SharpNeat.Graphs.DirectedConnection.DirectedConnection(int, int)
  fullName.vb: SharpNeat.Graphs.DirectedConnection.New(Integer, Integer)
  nameWithType: DirectedConnection.DirectedConnection(int, int)
  nameWithType.vb: DirectedConnection.New(Integer, Integer)
- uid: SharpNeat.Graphs.DirectedConnection.#ctor*
  name: DirectedConnection
  href: api/SharpNeat.Graphs.DirectedConnection.html#SharpNeat_Graphs_DirectedConnection__ctor_
  commentId: Overload:SharpNeat.Graphs.DirectedConnection.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Graphs.DirectedConnection.DirectedConnection
  fullName.vb: SharpNeat.Graphs.DirectedConnection.New
  nameWithType: DirectedConnection.DirectedConnection
  nameWithType.vb: DirectedConnection.New
- uid: SharpNeat.Graphs.DirectedConnection.CompareTo(SharpNeat.Graphs.DirectedConnection)
  name: CompareTo(DirectedConnection)
  href: api/SharpNeat.Graphs.DirectedConnection.html#SharpNeat_Graphs_DirectedConnection_CompareTo_SharpNeat_Graphs_DirectedConnection_
  commentId: M:SharpNeat.Graphs.DirectedConnection.CompareTo(SharpNeat.Graphs.DirectedConnection)
  fullName: SharpNeat.Graphs.DirectedConnection.CompareTo(SharpNeat.Graphs.DirectedConnection)
  nameWithType: DirectedConnection.CompareTo(DirectedConnection)
- uid: SharpNeat.Graphs.DirectedConnection.CompareTo*
  name: CompareTo
  href: api/SharpNeat.Graphs.DirectedConnection.html#SharpNeat_Graphs_DirectedConnection_CompareTo_
  commentId: Overload:SharpNeat.Graphs.DirectedConnection.CompareTo
  isSpec: "True"
  fullName: SharpNeat.Graphs.DirectedConnection.CompareTo
  nameWithType: DirectedConnection.CompareTo
- uid: SharpNeat.Graphs.DirectedConnection.Equals(SharpNeat.Graphs.DirectedConnection)
  name: Equals(DirectedConnection)
  href: api/SharpNeat.Graphs.DirectedConnection.html#SharpNeat_Graphs_DirectedConnection_Equals_SharpNeat_Graphs_DirectedConnection_
  commentId: M:SharpNeat.Graphs.DirectedConnection.Equals(SharpNeat.Graphs.DirectedConnection)
  fullName: SharpNeat.Graphs.DirectedConnection.Equals(SharpNeat.Graphs.DirectedConnection)
  nameWithType: DirectedConnection.Equals(DirectedConnection)
- uid: SharpNeat.Graphs.DirectedConnection.Equals(System.Object)
  name: Equals(object?)
  href: api/SharpNeat.Graphs.DirectedConnection.html#SharpNeat_Graphs_DirectedConnection_Equals_System_Object_
  commentId: M:SharpNeat.Graphs.DirectedConnection.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: SharpNeat.Graphs.DirectedConnection.Equals(object?)
  fullName.vb: SharpNeat.Graphs.DirectedConnection.Equals(Object)
  nameWithType: DirectedConnection.Equals(object?)
  nameWithType.vb: DirectedConnection.Equals(Object)
- uid: SharpNeat.Graphs.DirectedConnection.Equals*
  name: Equals
  href: api/SharpNeat.Graphs.DirectedConnection.html#SharpNeat_Graphs_DirectedConnection_Equals_
  commentId: Overload:SharpNeat.Graphs.DirectedConnection.Equals
  isSpec: "True"
  fullName: SharpNeat.Graphs.DirectedConnection.Equals
  nameWithType: DirectedConnection.Equals
- uid: SharpNeat.Graphs.DirectedConnection.GetHashCode
  name: GetHashCode()
  href: api/SharpNeat.Graphs.DirectedConnection.html#SharpNeat_Graphs_DirectedConnection_GetHashCode
  commentId: M:SharpNeat.Graphs.DirectedConnection.GetHashCode
  fullName: SharpNeat.Graphs.DirectedConnection.GetHashCode()
  nameWithType: DirectedConnection.GetHashCode()
- uid: SharpNeat.Graphs.DirectedConnection.GetHashCode*
  name: GetHashCode
  href: api/SharpNeat.Graphs.DirectedConnection.html#SharpNeat_Graphs_DirectedConnection_GetHashCode_
  commentId: Overload:SharpNeat.Graphs.DirectedConnection.GetHashCode
  isSpec: "True"
  fullName: SharpNeat.Graphs.DirectedConnection.GetHashCode
  nameWithType: DirectedConnection.GetHashCode
- uid: SharpNeat.Graphs.DirectedConnection.op_Equality(SharpNeat.Graphs.DirectedConnection@,SharpNeat.Graphs.DirectedConnection@)
  name: operator ==(in DirectedConnection, in DirectedConnection)
  href: api/SharpNeat.Graphs.DirectedConnection.html#SharpNeat_Graphs_DirectedConnection_op_Equality_SharpNeat_Graphs_DirectedConnection__SharpNeat_Graphs_DirectedConnection__
  commentId: M:SharpNeat.Graphs.DirectedConnection.op_Equality(SharpNeat.Graphs.DirectedConnection@,SharpNeat.Graphs.DirectedConnection@)
  name.vb: =(DirectedConnection, DirectedConnection)
  fullName: SharpNeat.Graphs.DirectedConnection.operator ==(in SharpNeat.Graphs.DirectedConnection, in SharpNeat.Graphs.DirectedConnection)
  fullName.vb: SharpNeat.Graphs.DirectedConnection.=(SharpNeat.Graphs.DirectedConnection, SharpNeat.Graphs.DirectedConnection)
  nameWithType: DirectedConnection.operator ==(in DirectedConnection, in DirectedConnection)
  nameWithType.vb: DirectedConnection.=(DirectedConnection, DirectedConnection)
- uid: SharpNeat.Graphs.DirectedConnection.op_Equality*
  name: operator ==
  href: api/SharpNeat.Graphs.DirectedConnection.html#SharpNeat_Graphs_DirectedConnection_op_Equality_
  commentId: Overload:SharpNeat.Graphs.DirectedConnection.op_Equality
  isSpec: "True"
  name.vb: =
  fullName: SharpNeat.Graphs.DirectedConnection.operator ==
  fullName.vb: SharpNeat.Graphs.DirectedConnection.=
  nameWithType: DirectedConnection.operator ==
  nameWithType.vb: DirectedConnection.=
- uid: SharpNeat.Graphs.DirectedConnection.op_GreaterThan(SharpNeat.Graphs.DirectedConnection@,SharpNeat.Graphs.DirectedConnection@)
  name: operator >(in DirectedConnection, in DirectedConnection)
  href: api/SharpNeat.Graphs.DirectedConnection.html#SharpNeat_Graphs_DirectedConnection_op_GreaterThan_SharpNeat_Graphs_DirectedConnection__SharpNeat_Graphs_DirectedConnection__
  commentId: M:SharpNeat.Graphs.DirectedConnection.op_GreaterThan(SharpNeat.Graphs.DirectedConnection@,SharpNeat.Graphs.DirectedConnection@)
  name.vb: '>(DirectedConnection, DirectedConnection)'
  fullName: SharpNeat.Graphs.DirectedConnection.operator >(in SharpNeat.Graphs.DirectedConnection, in SharpNeat.Graphs.DirectedConnection)
  fullName.vb: SharpNeat.Graphs.DirectedConnection.>(SharpNeat.Graphs.DirectedConnection, SharpNeat.Graphs.DirectedConnection)
  nameWithType: DirectedConnection.operator >(in DirectedConnection, in DirectedConnection)
  nameWithType.vb: DirectedConnection.>(DirectedConnection, DirectedConnection)
- uid: SharpNeat.Graphs.DirectedConnection.op_GreaterThan*
  name: operator >
  href: api/SharpNeat.Graphs.DirectedConnection.html#SharpNeat_Graphs_DirectedConnection_op_GreaterThan_
  commentId: Overload:SharpNeat.Graphs.DirectedConnection.op_GreaterThan
  isSpec: "True"
  name.vb: '>'
  fullName: SharpNeat.Graphs.DirectedConnection.operator >
  fullName.vb: SharpNeat.Graphs.DirectedConnection.>
  nameWithType: DirectedConnection.operator >
  nameWithType.vb: DirectedConnection.>
- uid: SharpNeat.Graphs.DirectedConnection.op_GreaterThanOrEqual(SharpNeat.Graphs.DirectedConnection@,SharpNeat.Graphs.DirectedConnection@)
  name: operator >=(in DirectedConnection, in DirectedConnection)
  href: api/SharpNeat.Graphs.DirectedConnection.html#SharpNeat_Graphs_DirectedConnection_op_GreaterThanOrEqual_SharpNeat_Graphs_DirectedConnection__SharpNeat_Graphs_DirectedConnection__
  commentId: M:SharpNeat.Graphs.DirectedConnection.op_GreaterThanOrEqual(SharpNeat.Graphs.DirectedConnection@,SharpNeat.Graphs.DirectedConnection@)
  name.vb: '>=(DirectedConnection, DirectedConnection)'
  fullName: SharpNeat.Graphs.DirectedConnection.operator >=(in SharpNeat.Graphs.DirectedConnection, in SharpNeat.Graphs.DirectedConnection)
  fullName.vb: SharpNeat.Graphs.DirectedConnection.>=(SharpNeat.Graphs.DirectedConnection, SharpNeat.Graphs.DirectedConnection)
  nameWithType: DirectedConnection.operator >=(in DirectedConnection, in DirectedConnection)
  nameWithType.vb: DirectedConnection.>=(DirectedConnection, DirectedConnection)
- uid: SharpNeat.Graphs.DirectedConnection.op_GreaterThanOrEqual*
  name: operator >=
  href: api/SharpNeat.Graphs.DirectedConnection.html#SharpNeat_Graphs_DirectedConnection_op_GreaterThanOrEqual_
  commentId: Overload:SharpNeat.Graphs.DirectedConnection.op_GreaterThanOrEqual
  isSpec: "True"
  name.vb: '>='
  fullName: SharpNeat.Graphs.DirectedConnection.operator >=
  fullName.vb: SharpNeat.Graphs.DirectedConnection.>=
  nameWithType: DirectedConnection.operator >=
  nameWithType.vb: DirectedConnection.>=
- uid: SharpNeat.Graphs.DirectedConnection.op_Inequality(SharpNeat.Graphs.DirectedConnection@,SharpNeat.Graphs.DirectedConnection@)
  name: operator !=(in DirectedConnection, in DirectedConnection)
  href: api/SharpNeat.Graphs.DirectedConnection.html#SharpNeat_Graphs_DirectedConnection_op_Inequality_SharpNeat_Graphs_DirectedConnection__SharpNeat_Graphs_DirectedConnection__
  commentId: M:SharpNeat.Graphs.DirectedConnection.op_Inequality(SharpNeat.Graphs.DirectedConnection@,SharpNeat.Graphs.DirectedConnection@)
  name.vb: <>(DirectedConnection, DirectedConnection)
  fullName: SharpNeat.Graphs.DirectedConnection.operator !=(in SharpNeat.Graphs.DirectedConnection, in SharpNeat.Graphs.DirectedConnection)
  fullName.vb: SharpNeat.Graphs.DirectedConnection.<>(SharpNeat.Graphs.DirectedConnection, SharpNeat.Graphs.DirectedConnection)
  nameWithType: DirectedConnection.operator !=(in DirectedConnection, in DirectedConnection)
  nameWithType.vb: DirectedConnection.<>(DirectedConnection, DirectedConnection)
- uid: SharpNeat.Graphs.DirectedConnection.op_Inequality*
  name: operator !=
  href: api/SharpNeat.Graphs.DirectedConnection.html#SharpNeat_Graphs_DirectedConnection_op_Inequality_
  commentId: Overload:SharpNeat.Graphs.DirectedConnection.op_Inequality
  isSpec: "True"
  name.vb: <>
  fullName: SharpNeat.Graphs.DirectedConnection.operator !=
  fullName.vb: SharpNeat.Graphs.DirectedConnection.<>
  nameWithType: DirectedConnection.operator !=
  nameWithType.vb: DirectedConnection.<>
- uid: SharpNeat.Graphs.DirectedConnection.op_LessThan(SharpNeat.Graphs.DirectedConnection@,SharpNeat.Graphs.DirectedConnection@)
  name: operator <(in DirectedConnection, in DirectedConnection)
  href: api/SharpNeat.Graphs.DirectedConnection.html#SharpNeat_Graphs_DirectedConnection_op_LessThan_SharpNeat_Graphs_DirectedConnection__SharpNeat_Graphs_DirectedConnection__
  commentId: M:SharpNeat.Graphs.DirectedConnection.op_LessThan(SharpNeat.Graphs.DirectedConnection@,SharpNeat.Graphs.DirectedConnection@)
  name.vb: <(DirectedConnection, DirectedConnection)
  fullName: SharpNeat.Graphs.DirectedConnection.operator <(in SharpNeat.Graphs.DirectedConnection, in SharpNeat.Graphs.DirectedConnection)
  fullName.vb: SharpNeat.Graphs.DirectedConnection.<(SharpNeat.Graphs.DirectedConnection, SharpNeat.Graphs.DirectedConnection)
  nameWithType: DirectedConnection.operator <(in DirectedConnection, in DirectedConnection)
  nameWithType.vb: DirectedConnection.<(DirectedConnection, DirectedConnection)
- uid: SharpNeat.Graphs.DirectedConnection.op_LessThan*
  name: operator <
  href: api/SharpNeat.Graphs.DirectedConnection.html#SharpNeat_Graphs_DirectedConnection_op_LessThan_
  commentId: Overload:SharpNeat.Graphs.DirectedConnection.op_LessThan
  isSpec: "True"
  name.vb: <
  fullName: SharpNeat.Graphs.DirectedConnection.operator <
  fullName.vb: SharpNeat.Graphs.DirectedConnection.<
  nameWithType: DirectedConnection.operator <
  nameWithType.vb: DirectedConnection.<
- uid: SharpNeat.Graphs.DirectedConnection.op_LessThanOrEqual(SharpNeat.Graphs.DirectedConnection@,SharpNeat.Graphs.DirectedConnection@)
  name: operator <=(in DirectedConnection, in DirectedConnection)
  href: api/SharpNeat.Graphs.DirectedConnection.html#SharpNeat_Graphs_DirectedConnection_op_LessThanOrEqual_SharpNeat_Graphs_DirectedConnection__SharpNeat_Graphs_DirectedConnection__
  commentId: M:SharpNeat.Graphs.DirectedConnection.op_LessThanOrEqual(SharpNeat.Graphs.DirectedConnection@,SharpNeat.Graphs.DirectedConnection@)
  name.vb: <=(DirectedConnection, DirectedConnection)
  fullName: SharpNeat.Graphs.DirectedConnection.operator <=(in SharpNeat.Graphs.DirectedConnection, in SharpNeat.Graphs.DirectedConnection)
  fullName.vb: SharpNeat.Graphs.DirectedConnection.<=(SharpNeat.Graphs.DirectedConnection, SharpNeat.Graphs.DirectedConnection)
  nameWithType: DirectedConnection.operator <=(in DirectedConnection, in DirectedConnection)
  nameWithType.vb: DirectedConnection.<=(DirectedConnection, DirectedConnection)
- uid: SharpNeat.Graphs.DirectedConnection.op_LessThanOrEqual*
  name: operator <=
  href: api/SharpNeat.Graphs.DirectedConnection.html#SharpNeat_Graphs_DirectedConnection_op_LessThanOrEqual_
  commentId: Overload:SharpNeat.Graphs.DirectedConnection.op_LessThanOrEqual
  isSpec: "True"
  name.vb: <=
  fullName: SharpNeat.Graphs.DirectedConnection.operator <=
  fullName.vb: SharpNeat.Graphs.DirectedConnection.<=
  nameWithType: DirectedConnection.operator <=
  nameWithType.vb: DirectedConnection.<=
- uid: SharpNeat.Graphs.DirectedConnection.SourceId
  name: SourceId
  href: api/SharpNeat.Graphs.DirectedConnection.html#SharpNeat_Graphs_DirectedConnection_SourceId
  commentId: P:SharpNeat.Graphs.DirectedConnection.SourceId
  fullName: SharpNeat.Graphs.DirectedConnection.SourceId
  nameWithType: DirectedConnection.SourceId
- uid: SharpNeat.Graphs.DirectedConnection.SourceId*
  name: SourceId
  href: api/SharpNeat.Graphs.DirectedConnection.html#SharpNeat_Graphs_DirectedConnection_SourceId_
  commentId: Overload:SharpNeat.Graphs.DirectedConnection.SourceId
  isSpec: "True"
  fullName: SharpNeat.Graphs.DirectedConnection.SourceId
  nameWithType: DirectedConnection.SourceId
- uid: SharpNeat.Graphs.DirectedConnection.TargetId
  name: TargetId
  href: api/SharpNeat.Graphs.DirectedConnection.html#SharpNeat_Graphs_DirectedConnection_TargetId
  commentId: P:SharpNeat.Graphs.DirectedConnection.TargetId
  fullName: SharpNeat.Graphs.DirectedConnection.TargetId
  nameWithType: DirectedConnection.TargetId
- uid: SharpNeat.Graphs.DirectedConnection.TargetId*
  name: TargetId
  href: api/SharpNeat.Graphs.DirectedConnection.html#SharpNeat_Graphs_DirectedConnection_TargetId_
  commentId: Overload:SharpNeat.Graphs.DirectedConnection.TargetId
  isSpec: "True"
  fullName: SharpNeat.Graphs.DirectedConnection.TargetId
  nameWithType: DirectedConnection.TargetId
- uid: SharpNeat.Graphs.DirectedConnectionTests
  name: DirectedConnectionTests
  href: api/SharpNeat.Graphs.DirectedConnectionTests.html
  commentId: T:SharpNeat.Graphs.DirectedConnectionTests
  fullName: SharpNeat.Graphs.DirectedConnectionTests
  nameWithType: DirectedConnectionTests
- uid: SharpNeat.Graphs.DirectedConnectionTests.CompareTo(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  name: CompareTo(int, int, int, int, int)
  href: api/SharpNeat.Graphs.DirectedConnectionTests.html#SharpNeat_Graphs_DirectedConnectionTests_CompareTo_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_
  commentId: M:SharpNeat.Graphs.DirectedConnectionTests.CompareTo(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  name.vb: CompareTo(Integer, Integer, Integer, Integer, Integer)
  fullName: SharpNeat.Graphs.DirectedConnectionTests.CompareTo(int, int, int, int, int)
  fullName.vb: SharpNeat.Graphs.DirectedConnectionTests.CompareTo(Integer, Integer, Integer, Integer, Integer)
  nameWithType: DirectedConnectionTests.CompareTo(int, int, int, int, int)
  nameWithType.vb: DirectedConnectionTests.CompareTo(Integer, Integer, Integer, Integer, Integer)
- uid: SharpNeat.Graphs.DirectedConnectionTests.CompareTo*
  name: CompareTo
  href: api/SharpNeat.Graphs.DirectedConnectionTests.html#SharpNeat_Graphs_DirectedConnectionTests_CompareTo_
  commentId: Overload:SharpNeat.Graphs.DirectedConnectionTests.CompareTo
  isSpec: "True"
  fullName: SharpNeat.Graphs.DirectedConnectionTests.CompareTo
  nameWithType: DirectedConnectionTests.CompareTo
- uid: SharpNeat.Graphs.DirectedConnectionTests.EqualsOperator(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  name: EqualsOperator(int, int, int, int, bool)
  href: api/SharpNeat.Graphs.DirectedConnectionTests.html#SharpNeat_Graphs_DirectedConnectionTests_EqualsOperator_System_Int32_System_Int32_System_Int32_System_Int32_System_Boolean_
  commentId: M:SharpNeat.Graphs.DirectedConnectionTests.EqualsOperator(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  name.vb: EqualsOperator(Integer, Integer, Integer, Integer, Boolean)
  fullName: SharpNeat.Graphs.DirectedConnectionTests.EqualsOperator(int, int, int, int, bool)
  fullName.vb: SharpNeat.Graphs.DirectedConnectionTests.EqualsOperator(Integer, Integer, Integer, Integer, Boolean)
  nameWithType: DirectedConnectionTests.EqualsOperator(int, int, int, int, bool)
  nameWithType.vb: DirectedConnectionTests.EqualsOperator(Integer, Integer, Integer, Integer, Boolean)
- uid: SharpNeat.Graphs.DirectedConnectionTests.EqualsOperator*
  name: EqualsOperator
  href: api/SharpNeat.Graphs.DirectedConnectionTests.html#SharpNeat_Graphs_DirectedConnectionTests_EqualsOperator_
  commentId: Overload:SharpNeat.Graphs.DirectedConnectionTests.EqualsOperator
  isSpec: "True"
  fullName: SharpNeat.Graphs.DirectedConnectionTests.EqualsOperator
  nameWithType: DirectedConnectionTests.EqualsOperator
- uid: SharpNeat.Graphs.DirectedConnectionTests.EqualsOverride(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  name: EqualsOverride(int, int, int, int, bool)
  href: api/SharpNeat.Graphs.DirectedConnectionTests.html#SharpNeat_Graphs_DirectedConnectionTests_EqualsOverride_System_Int32_System_Int32_System_Int32_System_Int32_System_Boolean_
  commentId: M:SharpNeat.Graphs.DirectedConnectionTests.EqualsOverride(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  name.vb: EqualsOverride(Integer, Integer, Integer, Integer, Boolean)
  fullName: SharpNeat.Graphs.DirectedConnectionTests.EqualsOverride(int, int, int, int, bool)
  fullName.vb: SharpNeat.Graphs.DirectedConnectionTests.EqualsOverride(Integer, Integer, Integer, Integer, Boolean)
  nameWithType: DirectedConnectionTests.EqualsOverride(int, int, int, int, bool)
  nameWithType.vb: DirectedConnectionTests.EqualsOverride(Integer, Integer, Integer, Integer, Boolean)
- uid: SharpNeat.Graphs.DirectedConnectionTests.EqualsOverride*
  name: EqualsOverride
  href: api/SharpNeat.Graphs.DirectedConnectionTests.html#SharpNeat_Graphs_DirectedConnectionTests_EqualsOverride_
  commentId: Overload:SharpNeat.Graphs.DirectedConnectionTests.EqualsOverride
  isSpec: "True"
  fullName: SharpNeat.Graphs.DirectedConnectionTests.EqualsOverride
  nameWithType: DirectedConnectionTests.EqualsOverride
- uid: SharpNeat.Graphs.DirectedConnectionTests.GreaterThan(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  name: GreaterThan(int, int, int, int, bool)
  href: api/SharpNeat.Graphs.DirectedConnectionTests.html#SharpNeat_Graphs_DirectedConnectionTests_GreaterThan_System_Int32_System_Int32_System_Int32_System_Int32_System_Boolean_
  commentId: M:SharpNeat.Graphs.DirectedConnectionTests.GreaterThan(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  name.vb: GreaterThan(Integer, Integer, Integer, Integer, Boolean)
  fullName: SharpNeat.Graphs.DirectedConnectionTests.GreaterThan(int, int, int, int, bool)
  fullName.vb: SharpNeat.Graphs.DirectedConnectionTests.GreaterThan(Integer, Integer, Integer, Integer, Boolean)
  nameWithType: DirectedConnectionTests.GreaterThan(int, int, int, int, bool)
  nameWithType.vb: DirectedConnectionTests.GreaterThan(Integer, Integer, Integer, Integer, Boolean)
- uid: SharpNeat.Graphs.DirectedConnectionTests.GreaterThan*
  name: GreaterThan
  href: api/SharpNeat.Graphs.DirectedConnectionTests.html#SharpNeat_Graphs_DirectedConnectionTests_GreaterThan_
  commentId: Overload:SharpNeat.Graphs.DirectedConnectionTests.GreaterThan
  isSpec: "True"
  fullName: SharpNeat.Graphs.DirectedConnectionTests.GreaterThan
  nameWithType: DirectedConnectionTests.GreaterThan
- uid: SharpNeat.Graphs.DirectedConnectionTests.LessThan(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  name: LessThan(int, int, int, int, bool)
  href: api/SharpNeat.Graphs.DirectedConnectionTests.html#SharpNeat_Graphs_DirectedConnectionTests_LessThan_System_Int32_System_Int32_System_Int32_System_Int32_System_Boolean_
  commentId: M:SharpNeat.Graphs.DirectedConnectionTests.LessThan(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  name.vb: LessThan(Integer, Integer, Integer, Integer, Boolean)
  fullName: SharpNeat.Graphs.DirectedConnectionTests.LessThan(int, int, int, int, bool)
  fullName.vb: SharpNeat.Graphs.DirectedConnectionTests.LessThan(Integer, Integer, Integer, Integer, Boolean)
  nameWithType: DirectedConnectionTests.LessThan(int, int, int, int, bool)
  nameWithType.vb: DirectedConnectionTests.LessThan(Integer, Integer, Integer, Integer, Boolean)
- uid: SharpNeat.Graphs.DirectedConnectionTests.LessThan*
  name: LessThan
  href: api/SharpNeat.Graphs.DirectedConnectionTests.html#SharpNeat_Graphs_DirectedConnectionTests_LessThan_
  commentId: Overload:SharpNeat.Graphs.DirectedConnectionTests.LessThan
  isSpec: "True"
  fullName: SharpNeat.Graphs.DirectedConnectionTests.LessThan
  nameWithType: DirectedConnectionTests.LessThan
- uid: SharpNeat.Graphs.DirectedConnectionTests.NotEqualsOperator(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  name: NotEqualsOperator(int, int, int, int, bool)
  href: api/SharpNeat.Graphs.DirectedConnectionTests.html#SharpNeat_Graphs_DirectedConnectionTests_NotEqualsOperator_System_Int32_System_Int32_System_Int32_System_Int32_System_Boolean_
  commentId: M:SharpNeat.Graphs.DirectedConnectionTests.NotEqualsOperator(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  name.vb: NotEqualsOperator(Integer, Integer, Integer, Integer, Boolean)
  fullName: SharpNeat.Graphs.DirectedConnectionTests.NotEqualsOperator(int, int, int, int, bool)
  fullName.vb: SharpNeat.Graphs.DirectedConnectionTests.NotEqualsOperator(Integer, Integer, Integer, Integer, Boolean)
  nameWithType: DirectedConnectionTests.NotEqualsOperator(int, int, int, int, bool)
  nameWithType.vb: DirectedConnectionTests.NotEqualsOperator(Integer, Integer, Integer, Integer, Boolean)
- uid: SharpNeat.Graphs.DirectedConnectionTests.NotEqualsOperator*
  name: NotEqualsOperator
  href: api/SharpNeat.Graphs.DirectedConnectionTests.html#SharpNeat_Graphs_DirectedConnectionTests_NotEqualsOperator_
  commentId: Overload:SharpNeat.Graphs.DirectedConnectionTests.NotEqualsOperator
  isSpec: "True"
  fullName: SharpNeat.Graphs.DirectedConnectionTests.NotEqualsOperator
  nameWithType: DirectedConnectionTests.NotEqualsOperator
- uid: SharpNeat.Graphs.DirectedConnectionUtilsTests
  name: DirectedConnectionUtilsTests
  href: api/SharpNeat.Graphs.DirectedConnectionUtilsTests.html
  commentId: T:SharpNeat.Graphs.DirectedConnectionUtilsTests
  fullName: SharpNeat.Graphs.DirectedConnectionUtilsTests
  nameWithType: DirectedConnectionUtilsTests
- uid: SharpNeat.Graphs.DirectedConnectionUtilsTests.GetConnectionIndexBySourceNodeId
  name: GetConnectionIndexBySourceNodeId()
  href: api/SharpNeat.Graphs.DirectedConnectionUtilsTests.html#SharpNeat_Graphs_DirectedConnectionUtilsTests_GetConnectionIndexBySourceNodeId
  commentId: M:SharpNeat.Graphs.DirectedConnectionUtilsTests.GetConnectionIndexBySourceNodeId
  fullName: SharpNeat.Graphs.DirectedConnectionUtilsTests.GetConnectionIndexBySourceNodeId()
  nameWithType: DirectedConnectionUtilsTests.GetConnectionIndexBySourceNodeId()
- uid: SharpNeat.Graphs.DirectedConnectionUtilsTests.GetConnectionIndexBySourceNodeId*
  name: GetConnectionIndexBySourceNodeId
  href: api/SharpNeat.Graphs.DirectedConnectionUtilsTests.html#SharpNeat_Graphs_DirectedConnectionUtilsTests_GetConnectionIndexBySourceNodeId_
  commentId: Overload:SharpNeat.Graphs.DirectedConnectionUtilsTests.GetConnectionIndexBySourceNodeId
  isSpec: "True"
  fullName: SharpNeat.Graphs.DirectedConnectionUtilsTests.GetConnectionIndexBySourceNodeId
  nameWithType: DirectedConnectionUtilsTests.GetConnectionIndexBySourceNodeId
- uid: SharpNeat.Graphs.DirectedGraph
  name: DirectedGraph
  href: api/SharpNeat.Graphs.DirectedGraph.html
  commentId: T:SharpNeat.Graphs.DirectedGraph
  fullName: SharpNeat.Graphs.DirectedGraph
  nameWithType: DirectedGraph
- uid: SharpNeat.Graphs.DirectedGraph.ConnectionIds
  name: ConnectionIds
  href: api/SharpNeat.Graphs.DirectedGraph.html#SharpNeat_Graphs_DirectedGraph_ConnectionIds
  commentId: P:SharpNeat.Graphs.DirectedGraph.ConnectionIds
  fullName: SharpNeat.Graphs.DirectedGraph.ConnectionIds
  nameWithType: DirectedGraph.ConnectionIds
- uid: SharpNeat.Graphs.DirectedGraph.ConnectionIds*
  name: ConnectionIds
  href: api/SharpNeat.Graphs.DirectedGraph.html#SharpNeat_Graphs_DirectedGraph_ConnectionIds_
  commentId: Overload:SharpNeat.Graphs.DirectedGraph.ConnectionIds
  isSpec: "True"
  fullName: SharpNeat.Graphs.DirectedGraph.ConnectionIds
  nameWithType: DirectedGraph.ConnectionIds
- uid: SharpNeat.Graphs.DirectedGraph.GetFirstConnectionIndex(System.Int32)
  name: GetFirstConnectionIndex(int)
  href: api/SharpNeat.Graphs.DirectedGraph.html#SharpNeat_Graphs_DirectedGraph_GetFirstConnectionIndex_System_Int32_
  commentId: M:SharpNeat.Graphs.DirectedGraph.GetFirstConnectionIndex(System.Int32)
  name.vb: GetFirstConnectionIndex(Integer)
  fullName: SharpNeat.Graphs.DirectedGraph.GetFirstConnectionIndex(int)
  fullName.vb: SharpNeat.Graphs.DirectedGraph.GetFirstConnectionIndex(Integer)
  nameWithType: DirectedGraph.GetFirstConnectionIndex(int)
  nameWithType.vb: DirectedGraph.GetFirstConnectionIndex(Integer)
- uid: SharpNeat.Graphs.DirectedGraph.GetFirstConnectionIndex*
  name: GetFirstConnectionIndex
  href: api/SharpNeat.Graphs.DirectedGraph.html#SharpNeat_Graphs_DirectedGraph_GetFirstConnectionIndex_
  commentId: Overload:SharpNeat.Graphs.DirectedGraph.GetFirstConnectionIndex
  isSpec: "True"
  fullName: SharpNeat.Graphs.DirectedGraph.GetFirstConnectionIndex
  nameWithType: DirectedGraph.GetFirstConnectionIndex
- uid: SharpNeat.Graphs.DirectedGraph.GetSourceNodeIdx(System.Int32)
  name: GetSourceNodeIdx(int)
  href: api/SharpNeat.Graphs.DirectedGraph.html#SharpNeat_Graphs_DirectedGraph_GetSourceNodeIdx_System_Int32_
  commentId: M:SharpNeat.Graphs.DirectedGraph.GetSourceNodeIdx(System.Int32)
  name.vb: GetSourceNodeIdx(Integer)
  fullName: SharpNeat.Graphs.DirectedGraph.GetSourceNodeIdx(int)
  fullName.vb: SharpNeat.Graphs.DirectedGraph.GetSourceNodeIdx(Integer)
  nameWithType: DirectedGraph.GetSourceNodeIdx(int)
  nameWithType.vb: DirectedGraph.GetSourceNodeIdx(Integer)
- uid: SharpNeat.Graphs.DirectedGraph.GetSourceNodeIdx*
  name: GetSourceNodeIdx
  href: api/SharpNeat.Graphs.DirectedGraph.html#SharpNeat_Graphs_DirectedGraph_GetSourceNodeIdx_
  commentId: Overload:SharpNeat.Graphs.DirectedGraph.GetSourceNodeIdx
  isSpec: "True"
  fullName: SharpNeat.Graphs.DirectedGraph.GetSourceNodeIdx
  nameWithType: DirectedGraph.GetSourceNodeIdx
- uid: SharpNeat.Graphs.DirectedGraph.GetTargetNodeIdx(System.Int32)
  name: GetTargetNodeIdx(int)
  href: api/SharpNeat.Graphs.DirectedGraph.html#SharpNeat_Graphs_DirectedGraph_GetTargetNodeIdx_System_Int32_
  commentId: M:SharpNeat.Graphs.DirectedGraph.GetTargetNodeIdx(System.Int32)
  name.vb: GetTargetNodeIdx(Integer)
  fullName: SharpNeat.Graphs.DirectedGraph.GetTargetNodeIdx(int)
  fullName.vb: SharpNeat.Graphs.DirectedGraph.GetTargetNodeIdx(Integer)
  nameWithType: DirectedGraph.GetTargetNodeIdx(int)
  nameWithType.vb: DirectedGraph.GetTargetNodeIdx(Integer)
- uid: SharpNeat.Graphs.DirectedGraph.GetTargetNodeIdx*
  name: GetTargetNodeIdx
  href: api/SharpNeat.Graphs.DirectedGraph.html#SharpNeat_Graphs_DirectedGraph_GetTargetNodeIdx_
  commentId: Overload:SharpNeat.Graphs.DirectedGraph.GetTargetNodeIdx
  isSpec: "True"
  fullName: SharpNeat.Graphs.DirectedGraph.GetTargetNodeIdx
  nameWithType: DirectedGraph.GetTargetNodeIdx
- uid: SharpNeat.Graphs.DirectedGraph.GetTargetNodeIndexes(System.Int32)
  name: GetTargetNodeIndexes(int)
  href: api/SharpNeat.Graphs.DirectedGraph.html#SharpNeat_Graphs_DirectedGraph_GetTargetNodeIndexes_System_Int32_
  commentId: M:SharpNeat.Graphs.DirectedGraph.GetTargetNodeIndexes(System.Int32)
  name.vb: GetTargetNodeIndexes(Integer)
  fullName: SharpNeat.Graphs.DirectedGraph.GetTargetNodeIndexes(int)
  fullName.vb: SharpNeat.Graphs.DirectedGraph.GetTargetNodeIndexes(Integer)
  nameWithType: DirectedGraph.GetTargetNodeIndexes(int)
  nameWithType.vb: DirectedGraph.GetTargetNodeIndexes(Integer)
- uid: SharpNeat.Graphs.DirectedGraph.GetTargetNodeIndexes*
  name: GetTargetNodeIndexes
  href: api/SharpNeat.Graphs.DirectedGraph.html#SharpNeat_Graphs_DirectedGraph_GetTargetNodeIndexes_
  commentId: Overload:SharpNeat.Graphs.DirectedGraph.GetTargetNodeIndexes
  isSpec: "True"
  fullName: SharpNeat.Graphs.DirectedGraph.GetTargetNodeIndexes
  nameWithType: DirectedGraph.GetTargetNodeIndexes
- uid: SharpNeat.Graphs.DirectedGraph.InputCount
  name: InputCount
  href: api/SharpNeat.Graphs.DirectedGraph.html#SharpNeat_Graphs_DirectedGraph_InputCount
  commentId: P:SharpNeat.Graphs.DirectedGraph.InputCount
  fullName: SharpNeat.Graphs.DirectedGraph.InputCount
  nameWithType: DirectedGraph.InputCount
- uid: SharpNeat.Graphs.DirectedGraph.InputCount*
  name: InputCount
  href: api/SharpNeat.Graphs.DirectedGraph.html#SharpNeat_Graphs_DirectedGraph_InputCount_
  commentId: Overload:SharpNeat.Graphs.DirectedGraph.InputCount
  isSpec: "True"
  fullName: SharpNeat.Graphs.DirectedGraph.InputCount
  nameWithType: DirectedGraph.InputCount
- uid: SharpNeat.Graphs.DirectedGraph.OutputCount
  name: OutputCount
  href: api/SharpNeat.Graphs.DirectedGraph.html#SharpNeat_Graphs_DirectedGraph_OutputCount
  commentId: P:SharpNeat.Graphs.DirectedGraph.OutputCount
  fullName: SharpNeat.Graphs.DirectedGraph.OutputCount
  nameWithType: DirectedGraph.OutputCount
- uid: SharpNeat.Graphs.DirectedGraph.OutputCount*
  name: OutputCount
  href: api/SharpNeat.Graphs.DirectedGraph.html#SharpNeat_Graphs_DirectedGraph_OutputCount_
  commentId: Overload:SharpNeat.Graphs.DirectedGraph.OutputCount
  isSpec: "True"
  fullName: SharpNeat.Graphs.DirectedGraph.OutputCount
  nameWithType: DirectedGraph.OutputCount
- uid: SharpNeat.Graphs.DirectedGraph.TotalNodeCount
  name: TotalNodeCount
  href: api/SharpNeat.Graphs.DirectedGraph.html#SharpNeat_Graphs_DirectedGraph_TotalNodeCount
  commentId: P:SharpNeat.Graphs.DirectedGraph.TotalNodeCount
  fullName: SharpNeat.Graphs.DirectedGraph.TotalNodeCount
  nameWithType: DirectedGraph.TotalNodeCount
- uid: SharpNeat.Graphs.DirectedGraph.TotalNodeCount*
  name: TotalNodeCount
  href: api/SharpNeat.Graphs.DirectedGraph.html#SharpNeat_Graphs_DirectedGraph_TotalNodeCount_
  commentId: Overload:SharpNeat.Graphs.DirectedGraph.TotalNodeCount
  isSpec: "True"
  fullName: SharpNeat.Graphs.DirectedGraph.TotalNodeCount
  nameWithType: DirectedGraph.TotalNodeCount
- uid: SharpNeat.Graphs.DirectedGraphBuilder
  name: DirectedGraphBuilder
  href: api/SharpNeat.Graphs.DirectedGraphBuilder.html
  commentId: T:SharpNeat.Graphs.DirectedGraphBuilder
  fullName: SharpNeat.Graphs.DirectedGraphBuilder
  nameWithType: DirectedGraphBuilder
- uid: SharpNeat.Graphs.DirectedGraphBuilder.Create(System.Span{SharpNeat.Graphs.DirectedConnection},System.Int32,System.Int32)
  name: Create(Span<DirectedConnection>, int, int)
  href: api/SharpNeat.Graphs.DirectedGraphBuilder.html#SharpNeat_Graphs_DirectedGraphBuilder_Create_System_Span_SharpNeat_Graphs_DirectedConnection__System_Int32_System_Int32_
  commentId: M:SharpNeat.Graphs.DirectedGraphBuilder.Create(System.Span{SharpNeat.Graphs.DirectedConnection},System.Int32,System.Int32)
  name.vb: Create(Span(Of DirectedConnection), Integer, Integer)
  fullName: SharpNeat.Graphs.DirectedGraphBuilder.Create(System.Span<SharpNeat.Graphs.DirectedConnection>, int, int)
  fullName.vb: SharpNeat.Graphs.DirectedGraphBuilder.Create(System.Span(Of SharpNeat.Graphs.DirectedConnection), Integer, Integer)
  nameWithType: DirectedGraphBuilder.Create(Span<DirectedConnection>, int, int)
  nameWithType.vb: DirectedGraphBuilder.Create(Span(Of DirectedConnection), Integer, Integer)
- uid: SharpNeat.Graphs.DirectedGraphBuilder.Create*
  name: Create
  href: api/SharpNeat.Graphs.DirectedGraphBuilder.html#SharpNeat_Graphs_DirectedGraphBuilder_Create_
  commentId: Overload:SharpNeat.Graphs.DirectedGraphBuilder.Create
  isSpec: "True"
  fullName: SharpNeat.Graphs.DirectedGraphBuilder.Create
  nameWithType: DirectedGraphBuilder.Create
- uid: SharpNeat.Graphs.DirectedGraphBuilderUtils
  name: DirectedGraphBuilderUtils
  href: api/SharpNeat.Graphs.DirectedGraphBuilderUtils.html
  commentId: T:SharpNeat.Graphs.DirectedGraphBuilderUtils
  fullName: SharpNeat.Graphs.DirectedGraphBuilderUtils
  nameWithType: DirectedGraphBuilderUtils
- uid: SharpNeat.Graphs.DirectedGraphBuilderUtils.CompileNodeIdMap(System.Int32,System.Int32[])
  name: CompileNodeIdMap(int, int[])
  href: api/SharpNeat.Graphs.DirectedGraphBuilderUtils.html#SharpNeat_Graphs_DirectedGraphBuilderUtils_CompileNodeIdMap_System_Int32_System_Int32___
  commentId: M:SharpNeat.Graphs.DirectedGraphBuilderUtils.CompileNodeIdMap(System.Int32,System.Int32[])
  name.vb: CompileNodeIdMap(Integer, Integer())
  fullName: SharpNeat.Graphs.DirectedGraphBuilderUtils.CompileNodeIdMap(int, int[])
  fullName.vb: SharpNeat.Graphs.DirectedGraphBuilderUtils.CompileNodeIdMap(Integer, Integer())
  nameWithType: DirectedGraphBuilderUtils.CompileNodeIdMap(int, int[])
  nameWithType.vb: DirectedGraphBuilderUtils.CompileNodeIdMap(Integer, Integer())
- uid: SharpNeat.Graphs.DirectedGraphBuilderUtils.CompileNodeIdMap*
  name: CompileNodeIdMap
  href: api/SharpNeat.Graphs.DirectedGraphBuilderUtils.html#SharpNeat_Graphs_DirectedGraphBuilderUtils_CompileNodeIdMap_
  commentId: Overload:SharpNeat.Graphs.DirectedGraphBuilderUtils.CompileNodeIdMap
  isSpec: "True"
  fullName: SharpNeat.Graphs.DirectedGraphBuilderUtils.CompileNodeIdMap
  nameWithType: DirectedGraphBuilderUtils.CompileNodeIdMap
- uid: SharpNeat.Graphs.DirectedGraphTests
  name: DirectedGraphTests
  href: api/SharpNeat.Graphs.DirectedGraphTests.html
  commentId: T:SharpNeat.Graphs.DirectedGraphTests
  fullName: SharpNeat.Graphs.DirectedGraphTests
  nameWithType: DirectedGraphTests
- uid: SharpNeat.Graphs.DirectedGraphTests.SimpleAcyclic
  name: SimpleAcyclic()
  href: api/SharpNeat.Graphs.DirectedGraphTests.html#SharpNeat_Graphs_DirectedGraphTests_SimpleAcyclic
  commentId: M:SharpNeat.Graphs.DirectedGraphTests.SimpleAcyclic
  fullName: SharpNeat.Graphs.DirectedGraphTests.SimpleAcyclic()
  nameWithType: DirectedGraphTests.SimpleAcyclic()
- uid: SharpNeat.Graphs.DirectedGraphTests.SimpleAcyclic_DefinedNodes
  name: SimpleAcyclic_DefinedNodes()
  href: api/SharpNeat.Graphs.DirectedGraphTests.html#SharpNeat_Graphs_DirectedGraphTests_SimpleAcyclic_DefinedNodes
  commentId: M:SharpNeat.Graphs.DirectedGraphTests.SimpleAcyclic_DefinedNodes
  fullName: SharpNeat.Graphs.DirectedGraphTests.SimpleAcyclic_DefinedNodes()
  nameWithType: DirectedGraphTests.SimpleAcyclic_DefinedNodes()
- uid: SharpNeat.Graphs.DirectedGraphTests.SimpleAcyclic_DefinedNodes_NodeIdGap
  name: SimpleAcyclic_DefinedNodes_NodeIdGap()
  href: api/SharpNeat.Graphs.DirectedGraphTests.html#SharpNeat_Graphs_DirectedGraphTests_SimpleAcyclic_DefinedNodes_NodeIdGap
  commentId: M:SharpNeat.Graphs.DirectedGraphTests.SimpleAcyclic_DefinedNodes_NodeIdGap
  fullName: SharpNeat.Graphs.DirectedGraphTests.SimpleAcyclic_DefinedNodes_NodeIdGap()
  nameWithType: DirectedGraphTests.SimpleAcyclic_DefinedNodes_NodeIdGap()
- uid: SharpNeat.Graphs.DirectedGraphTests.SimpleAcyclic_DefinedNodes_NodeIdGap*
  name: SimpleAcyclic_DefinedNodes_NodeIdGap
  href: api/SharpNeat.Graphs.DirectedGraphTests.html#SharpNeat_Graphs_DirectedGraphTests_SimpleAcyclic_DefinedNodes_NodeIdGap_
  commentId: Overload:SharpNeat.Graphs.DirectedGraphTests.SimpleAcyclic_DefinedNodes_NodeIdGap
  isSpec: "True"
  fullName: SharpNeat.Graphs.DirectedGraphTests.SimpleAcyclic_DefinedNodes_NodeIdGap
  nameWithType: DirectedGraphTests.SimpleAcyclic_DefinedNodes_NodeIdGap
- uid: SharpNeat.Graphs.DirectedGraphTests.SimpleAcyclic_DefinedNodes*
  name: SimpleAcyclic_DefinedNodes
  href: api/SharpNeat.Graphs.DirectedGraphTests.html#SharpNeat_Graphs_DirectedGraphTests_SimpleAcyclic_DefinedNodes_
  commentId: Overload:SharpNeat.Graphs.DirectedGraphTests.SimpleAcyclic_DefinedNodes
  isSpec: "True"
  fullName: SharpNeat.Graphs.DirectedGraphTests.SimpleAcyclic_DefinedNodes
  nameWithType: DirectedGraphTests.SimpleAcyclic_DefinedNodes
- uid: SharpNeat.Graphs.DirectedGraphTests.SimpleAcyclic*
  name: SimpleAcyclic
  href: api/SharpNeat.Graphs.DirectedGraphTests.html#SharpNeat_Graphs_DirectedGraphTests_SimpleAcyclic_
  commentId: Overload:SharpNeat.Graphs.DirectedGraphTests.SimpleAcyclic
  isSpec: "True"
  fullName: SharpNeat.Graphs.DirectedGraphTests.SimpleAcyclic
  nameWithType: DirectedGraphTests.SimpleAcyclic
- uid: SharpNeat.Graphs.IActivationFunctionLibrary
  name: IActivationFunctionLibrary
  href: api/SharpNeat.Graphs.IActivationFunctionLibrary.html
  commentId: T:SharpNeat.Graphs.IActivationFunctionLibrary
  fullName: SharpNeat.Graphs.IActivationFunctionLibrary
  nameWithType: IActivationFunctionLibrary
- uid: SharpNeat.Graphs.IActivationFunctionLibrary.GetActivationFunction*
  name: GetActivationFunction
  href: api/SharpNeat.Graphs.IActivationFunctionLibrary.html#SharpNeat_Graphs_IActivationFunctionLibrary_GetActivationFunction_
  commentId: Overload:SharpNeat.Graphs.IActivationFunctionLibrary.GetActivationFunction
  isSpec: "True"
  fullName: SharpNeat.Graphs.IActivationFunctionLibrary.GetActivationFunction
  nameWithType: IActivationFunctionLibrary.GetActivationFunction
- uid: SharpNeat.Graphs.IActivationFunctionLibrary.GetActivationFunction``1(System.Int32)
  name: GetActivationFunction<T>(int)
  href: api/SharpNeat.Graphs.IActivationFunctionLibrary.html#SharpNeat_Graphs_IActivationFunctionLibrary_GetActivationFunction__1_System_Int32_
  commentId: M:SharpNeat.Graphs.IActivationFunctionLibrary.GetActivationFunction``1(System.Int32)
  name.vb: GetActivationFunction(Of T)(Integer)
  fullName: SharpNeat.Graphs.IActivationFunctionLibrary.GetActivationFunction<T>(int)
  fullName.vb: SharpNeat.Graphs.IActivationFunctionLibrary.GetActivationFunction(Of T)(Integer)
  nameWithType: IActivationFunctionLibrary.GetActivationFunction<T>(int)
  nameWithType.vb: IActivationFunctionLibrary.GetActivationFunction(Of T)(Integer)
- uid: SharpNeat.Graphs.IActivationFunctionLibrary.GetActivationFunction``1(System.String)
  name: GetActivationFunction<T>(string)
  href: api/SharpNeat.Graphs.IActivationFunctionLibrary.html#SharpNeat_Graphs_IActivationFunctionLibrary_GetActivationFunction__1_System_String_
  commentId: M:SharpNeat.Graphs.IActivationFunctionLibrary.GetActivationFunction``1(System.String)
  name.vb: GetActivationFunction(Of T)(String)
  fullName: SharpNeat.Graphs.IActivationFunctionLibrary.GetActivationFunction<T>(string)
  fullName.vb: SharpNeat.Graphs.IActivationFunctionLibrary.GetActivationFunction(Of T)(String)
  nameWithType: IActivationFunctionLibrary.GetActivationFunction<T>(string)
  nameWithType.vb: IActivationFunctionLibrary.GetActivationFunction(Of T)(String)
- uid: SharpNeat.Graphs.INodeIdMap
  name: INodeIdMap
  href: api/SharpNeat.Graphs.INodeIdMap.html
  commentId: T:SharpNeat.Graphs.INodeIdMap
  fullName: SharpNeat.Graphs.INodeIdMap
  nameWithType: INodeIdMap
- uid: SharpNeat.Graphs.INodeIdMap.Count
  name: Count
  href: api/SharpNeat.Graphs.INodeIdMap.html#SharpNeat_Graphs_INodeIdMap_Count
  commentId: P:SharpNeat.Graphs.INodeIdMap.Count
  fullName: SharpNeat.Graphs.INodeIdMap.Count
  nameWithType: INodeIdMap.Count
- uid: SharpNeat.Graphs.INodeIdMap.Count*
  name: Count
  href: api/SharpNeat.Graphs.INodeIdMap.html#SharpNeat_Graphs_INodeIdMap_Count_
  commentId: Overload:SharpNeat.Graphs.INodeIdMap.Count
  isSpec: "True"
  fullName: SharpNeat.Graphs.INodeIdMap.Count
  nameWithType: INodeIdMap.Count
- uid: SharpNeat.Graphs.INodeIdMap.CreateInverseMap
  name: CreateInverseMap()
  href: api/SharpNeat.Graphs.INodeIdMap.html#SharpNeat_Graphs_INodeIdMap_CreateInverseMap
  commentId: M:SharpNeat.Graphs.INodeIdMap.CreateInverseMap
  fullName: SharpNeat.Graphs.INodeIdMap.CreateInverseMap()
  nameWithType: INodeIdMap.CreateInverseMap()
- uid: SharpNeat.Graphs.INodeIdMap.CreateInverseMap*
  name: CreateInverseMap
  href: api/SharpNeat.Graphs.INodeIdMap.html#SharpNeat_Graphs_INodeIdMap_CreateInverseMap_
  commentId: Overload:SharpNeat.Graphs.INodeIdMap.CreateInverseMap
  isSpec: "True"
  fullName: SharpNeat.Graphs.INodeIdMap.CreateInverseMap
  nameWithType: INodeIdMap.CreateInverseMap
- uid: SharpNeat.Graphs.INodeIdMap.Map(System.Int32)
  name: Map(int)
  href: api/SharpNeat.Graphs.INodeIdMap.html#SharpNeat_Graphs_INodeIdMap_Map_System_Int32_
  commentId: M:SharpNeat.Graphs.INodeIdMap.Map(System.Int32)
  name.vb: Map(Integer)
  fullName: SharpNeat.Graphs.INodeIdMap.Map(int)
  fullName.vb: SharpNeat.Graphs.INodeIdMap.Map(Integer)
  nameWithType: INodeIdMap.Map(int)
  nameWithType.vb: INodeIdMap.Map(Integer)
- uid: SharpNeat.Graphs.INodeIdMap.Map*
  name: Map
  href: api/SharpNeat.Graphs.INodeIdMap.html#SharpNeat_Graphs_INodeIdMap_Map_
  commentId: Overload:SharpNeat.Graphs.INodeIdMap.Map
  isSpec: "True"
  fullName: SharpNeat.Graphs.INodeIdMap.Map
  nameWithType: INodeIdMap.Map
- uid: SharpNeat.Graphs.NetworkUtils
  name: NetworkUtils
  href: api/SharpNeat.Graphs.NetworkUtils.html
  commentId: T:SharpNeat.Graphs.NetworkUtils
  fullName: SharpNeat.Graphs.NetworkUtils
  nameWithType: NetworkUtils
- uid: SharpNeat.Graphs.NetworkUtils.CompareConnectionLists(System.Span{SharpNeat.Graphs.WeightedDirectedConnection{System.Double}},SharpNeat.Graphs.ConnectionIds@,System.Double[])
  name: CompareConnectionLists(Span<WeightedDirectedConnection<double>>, in ConnectionIds, double[])
  href: api/SharpNeat.Graphs.NetworkUtils.html#SharpNeat_Graphs_NetworkUtils_CompareConnectionLists_System_Span_SharpNeat_Graphs_WeightedDirectedConnection_System_Double___SharpNeat_Graphs_ConnectionIds__System_Double___
  commentId: M:SharpNeat.Graphs.NetworkUtils.CompareConnectionLists(System.Span{SharpNeat.Graphs.WeightedDirectedConnection{System.Double}},SharpNeat.Graphs.ConnectionIds@,System.Double[])
  name.vb: CompareConnectionLists(Span(Of WeightedDirectedConnection(Of Double)), ConnectionIds, Double())
  fullName: SharpNeat.Graphs.NetworkUtils.CompareConnectionLists(System.Span<SharpNeat.Graphs.WeightedDirectedConnection<double>>, in SharpNeat.Graphs.ConnectionIds, double[])
  fullName.vb: SharpNeat.Graphs.NetworkUtils.CompareConnectionLists(System.Span(Of SharpNeat.Graphs.WeightedDirectedConnection(Of Double)), SharpNeat.Graphs.ConnectionIds, Double())
  nameWithType: NetworkUtils.CompareConnectionLists(Span<WeightedDirectedConnection<double>>, in ConnectionIds, double[])
  nameWithType.vb: NetworkUtils.CompareConnectionLists(Span(Of WeightedDirectedConnection(Of Double)), ConnectionIds, Double())
- uid: SharpNeat.Graphs.NetworkUtils.CompareConnectionLists*
  name: CompareConnectionLists
  href: api/SharpNeat.Graphs.NetworkUtils.html#SharpNeat_Graphs_NetworkUtils_CompareConnectionLists_
  commentId: Overload:SharpNeat.Graphs.NetworkUtils.CompareConnectionLists
  isSpec: "True"
  fullName: SharpNeat.Graphs.NetworkUtils.CompareConnectionLists
  nameWithType: NetworkUtils.CompareConnectionLists
- uid: SharpNeat.Graphs.NetworkUtils.CompareConnections(SharpNeat.Graphs.WeightedDirectedConnection{System.Double}@,System.Int32,System.Int32,System.Double)
  name: CompareConnections(in WeightedDirectedConnection<double>, int, int, double)
  href: api/SharpNeat.Graphs.NetworkUtils.html#SharpNeat_Graphs_NetworkUtils_CompareConnections_SharpNeat_Graphs_WeightedDirectedConnection_System_Double___System_Int32_System_Int32_System_Double_
  commentId: M:SharpNeat.Graphs.NetworkUtils.CompareConnections(SharpNeat.Graphs.WeightedDirectedConnection{System.Double}@,System.Int32,System.Int32,System.Double)
  name.vb: CompareConnections(WeightedDirectedConnection(Of Double), Integer, Integer, Double)
  fullName: SharpNeat.Graphs.NetworkUtils.CompareConnections(in SharpNeat.Graphs.WeightedDirectedConnection<double>, int, int, double)
  fullName.vb: SharpNeat.Graphs.NetworkUtils.CompareConnections(SharpNeat.Graphs.WeightedDirectedConnection(Of Double), Integer, Integer, Double)
  nameWithType: NetworkUtils.CompareConnections(in WeightedDirectedConnection<double>, int, int, double)
  nameWithType.vb: NetworkUtils.CompareConnections(WeightedDirectedConnection(Of Double), Integer, Integer, Double)
- uid: SharpNeat.Graphs.NetworkUtils.CompareConnections*
  name: CompareConnections
  href: api/SharpNeat.Graphs.NetworkUtils.html#SharpNeat_Graphs_NetworkUtils_CompareConnections_
  commentId: Overload:SharpNeat.Graphs.NetworkUtils.CompareConnections
  isSpec: "True"
  fullName: SharpNeat.Graphs.NetworkUtils.CompareConnections
  nameWithType: NetworkUtils.CompareConnections
- uid: SharpNeat.Graphs.NetworkUtils.CompareLayerInfo(SharpNeat.Graphs.Acyclic.LayerInfo@,SharpNeat.Graphs.Acyclic.LayerInfo@)
  name: CompareLayerInfo(in LayerInfo, in LayerInfo)
  href: api/SharpNeat.Graphs.NetworkUtils.html#SharpNeat_Graphs_NetworkUtils_CompareLayerInfo_SharpNeat_Graphs_Acyclic_LayerInfo__SharpNeat_Graphs_Acyclic_LayerInfo__
  commentId: M:SharpNeat.Graphs.NetworkUtils.CompareLayerInfo(SharpNeat.Graphs.Acyclic.LayerInfo@,SharpNeat.Graphs.Acyclic.LayerInfo@)
  name.vb: CompareLayerInfo(LayerInfo, LayerInfo)
  fullName: SharpNeat.Graphs.NetworkUtils.CompareLayerInfo(in SharpNeat.Graphs.Acyclic.LayerInfo, in SharpNeat.Graphs.Acyclic.LayerInfo)
  fullName.vb: SharpNeat.Graphs.NetworkUtils.CompareLayerInfo(SharpNeat.Graphs.Acyclic.LayerInfo, SharpNeat.Graphs.Acyclic.LayerInfo)
  nameWithType: NetworkUtils.CompareLayerInfo(in LayerInfo, in LayerInfo)
  nameWithType.vb: NetworkUtils.CompareLayerInfo(LayerInfo, LayerInfo)
- uid: SharpNeat.Graphs.NetworkUtils.CompareLayerInfo*
  name: CompareLayerInfo
  href: api/SharpNeat.Graphs.NetworkUtils.html#SharpNeat_Graphs_NetworkUtils_CompareLayerInfo_
  commentId: Overload:SharpNeat.Graphs.NetworkUtils.CompareLayerInfo
  isSpec: "True"
  fullName: SharpNeat.Graphs.NetworkUtils.CompareLayerInfo
  nameWithType: NetworkUtils.CompareLayerInfo
- uid: SharpNeat.Graphs.NetworkUtils.CompareLayerInfoLists(System.Span{SharpNeat.Graphs.Acyclic.LayerInfo},System.Span{SharpNeat.Graphs.Acyclic.LayerInfo})
  name: CompareLayerInfoLists(Span<LayerInfo>, Span<LayerInfo>)
  href: api/SharpNeat.Graphs.NetworkUtils.html#SharpNeat_Graphs_NetworkUtils_CompareLayerInfoLists_System_Span_SharpNeat_Graphs_Acyclic_LayerInfo__System_Span_SharpNeat_Graphs_Acyclic_LayerInfo__
  commentId: M:SharpNeat.Graphs.NetworkUtils.CompareLayerInfoLists(System.Span{SharpNeat.Graphs.Acyclic.LayerInfo},System.Span{SharpNeat.Graphs.Acyclic.LayerInfo})
  name.vb: CompareLayerInfoLists(Span(Of LayerInfo), Span(Of LayerInfo))
  fullName: SharpNeat.Graphs.NetworkUtils.CompareLayerInfoLists(System.Span<SharpNeat.Graphs.Acyclic.LayerInfo>, System.Span<SharpNeat.Graphs.Acyclic.LayerInfo>)
  fullName.vb: SharpNeat.Graphs.NetworkUtils.CompareLayerInfoLists(System.Span(Of SharpNeat.Graphs.Acyclic.LayerInfo), System.Span(Of SharpNeat.Graphs.Acyclic.LayerInfo))
  nameWithType: NetworkUtils.CompareLayerInfoLists(Span<LayerInfo>, Span<LayerInfo>)
  nameWithType.vb: NetworkUtils.CompareLayerInfoLists(Span(Of LayerInfo), Span(Of LayerInfo))
- uid: SharpNeat.Graphs.NetworkUtils.CompareLayerInfoLists*
  name: CompareLayerInfoLists
  href: api/SharpNeat.Graphs.NetworkUtils.html#SharpNeat_Graphs_NetworkUtils_CompareLayerInfoLists_
  commentId: Overload:SharpNeat.Graphs.NetworkUtils.CompareLayerInfoLists
  isSpec: "True"
  fullName: SharpNeat.Graphs.NetworkUtils.CompareLayerInfoLists
  nameWithType: NetworkUtils.CompareLayerInfoLists
- uid: SharpNeat.Graphs.WeightedDirectedConnection`1
  name: WeightedDirectedConnection<T>
  href: api/SharpNeat.Graphs.WeightedDirectedConnection-1.html
  commentId: T:SharpNeat.Graphs.WeightedDirectedConnection`1
  name.vb: WeightedDirectedConnection(Of T)
  fullName: SharpNeat.Graphs.WeightedDirectedConnection<T>
  fullName.vb: SharpNeat.Graphs.WeightedDirectedConnection(Of T)
  nameWithType: WeightedDirectedConnection<T>
  nameWithType.vb: WeightedDirectedConnection(Of T)
- uid: SharpNeat.Graphs.WeightedDirectedConnection`1.#ctor(System.Int32,System.Int32,`0)
  name: WeightedDirectedConnection(int, int, T)
  href: api/SharpNeat.Graphs.WeightedDirectedConnection-1.html#SharpNeat_Graphs_WeightedDirectedConnection_1__ctor_System_Int32_System_Int32__0_
  commentId: M:SharpNeat.Graphs.WeightedDirectedConnection`1.#ctor(System.Int32,System.Int32,`0)
  name.vb: New(Integer, Integer, T)
  fullName: SharpNeat.Graphs.WeightedDirectedConnection<T>.WeightedDirectedConnection(int, int, T)
  fullName.vb: SharpNeat.Graphs.WeightedDirectedConnection(Of T).New(Integer, Integer, T)
  nameWithType: WeightedDirectedConnection<T>.WeightedDirectedConnection(int, int, T)
  nameWithType.vb: WeightedDirectedConnection(Of T).New(Integer, Integer, T)
- uid: SharpNeat.Graphs.WeightedDirectedConnection`1.#ctor*
  name: WeightedDirectedConnection
  href: api/SharpNeat.Graphs.WeightedDirectedConnection-1.html#SharpNeat_Graphs_WeightedDirectedConnection_1__ctor_
  commentId: Overload:SharpNeat.Graphs.WeightedDirectedConnection`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Graphs.WeightedDirectedConnection<T>.WeightedDirectedConnection
  fullName.vb: SharpNeat.Graphs.WeightedDirectedConnection(Of T).New
  nameWithType: WeightedDirectedConnection<T>.WeightedDirectedConnection
  nameWithType.vb: WeightedDirectedConnection(Of T).New
- uid: SharpNeat.Graphs.WeightedDirectedConnection`1.CompareTo(SharpNeat.Graphs.WeightedDirectedConnection{`0})
  name: CompareTo(WeightedDirectedConnection<T>)
  href: api/SharpNeat.Graphs.WeightedDirectedConnection-1.html#SharpNeat_Graphs_WeightedDirectedConnection_1_CompareTo_SharpNeat_Graphs_WeightedDirectedConnection__0__
  commentId: M:SharpNeat.Graphs.WeightedDirectedConnection`1.CompareTo(SharpNeat.Graphs.WeightedDirectedConnection{`0})
  name.vb: CompareTo(WeightedDirectedConnection(Of T))
  fullName: SharpNeat.Graphs.WeightedDirectedConnection<T>.CompareTo(SharpNeat.Graphs.WeightedDirectedConnection<T>)
  fullName.vb: SharpNeat.Graphs.WeightedDirectedConnection(Of T).CompareTo(SharpNeat.Graphs.WeightedDirectedConnection(Of T))
  nameWithType: WeightedDirectedConnection<T>.CompareTo(WeightedDirectedConnection<T>)
  nameWithType.vb: WeightedDirectedConnection(Of T).CompareTo(WeightedDirectedConnection(Of T))
- uid: SharpNeat.Graphs.WeightedDirectedConnection`1.CompareTo*
  name: CompareTo
  href: api/SharpNeat.Graphs.WeightedDirectedConnection-1.html#SharpNeat_Graphs_WeightedDirectedConnection_1_CompareTo_
  commentId: Overload:SharpNeat.Graphs.WeightedDirectedConnection`1.CompareTo
  isSpec: "True"
  fullName: SharpNeat.Graphs.WeightedDirectedConnection<T>.CompareTo
  fullName.vb: SharpNeat.Graphs.WeightedDirectedConnection(Of T).CompareTo
  nameWithType: WeightedDirectedConnection<T>.CompareTo
  nameWithType.vb: WeightedDirectedConnection(Of T).CompareTo
- uid: SharpNeat.Graphs.WeightedDirectedConnection`1.SourceId
  name: SourceId
  href: api/SharpNeat.Graphs.WeightedDirectedConnection-1.html#SharpNeat_Graphs_WeightedDirectedConnection_1_SourceId
  commentId: P:SharpNeat.Graphs.WeightedDirectedConnection`1.SourceId
  fullName: SharpNeat.Graphs.WeightedDirectedConnection<T>.SourceId
  fullName.vb: SharpNeat.Graphs.WeightedDirectedConnection(Of T).SourceId
  nameWithType: WeightedDirectedConnection<T>.SourceId
  nameWithType.vb: WeightedDirectedConnection(Of T).SourceId
- uid: SharpNeat.Graphs.WeightedDirectedConnection`1.SourceId*
  name: SourceId
  href: api/SharpNeat.Graphs.WeightedDirectedConnection-1.html#SharpNeat_Graphs_WeightedDirectedConnection_1_SourceId_
  commentId: Overload:SharpNeat.Graphs.WeightedDirectedConnection`1.SourceId
  isSpec: "True"
  fullName: SharpNeat.Graphs.WeightedDirectedConnection<T>.SourceId
  fullName.vb: SharpNeat.Graphs.WeightedDirectedConnection(Of T).SourceId
  nameWithType: WeightedDirectedConnection<T>.SourceId
  nameWithType.vb: WeightedDirectedConnection(Of T).SourceId
- uid: SharpNeat.Graphs.WeightedDirectedConnection`1.TargetId
  name: TargetId
  href: api/SharpNeat.Graphs.WeightedDirectedConnection-1.html#SharpNeat_Graphs_WeightedDirectedConnection_1_TargetId
  commentId: P:SharpNeat.Graphs.WeightedDirectedConnection`1.TargetId
  fullName: SharpNeat.Graphs.WeightedDirectedConnection<T>.TargetId
  fullName.vb: SharpNeat.Graphs.WeightedDirectedConnection(Of T).TargetId
  nameWithType: WeightedDirectedConnection<T>.TargetId
  nameWithType.vb: WeightedDirectedConnection(Of T).TargetId
- uid: SharpNeat.Graphs.WeightedDirectedConnection`1.TargetId*
  name: TargetId
  href: api/SharpNeat.Graphs.WeightedDirectedConnection-1.html#SharpNeat_Graphs_WeightedDirectedConnection_1_TargetId_
  commentId: Overload:SharpNeat.Graphs.WeightedDirectedConnection`1.TargetId
  isSpec: "True"
  fullName: SharpNeat.Graphs.WeightedDirectedConnection<T>.TargetId
  fullName.vb: SharpNeat.Graphs.WeightedDirectedConnection(Of T).TargetId
  nameWithType: WeightedDirectedConnection<T>.TargetId
  nameWithType.vb: WeightedDirectedConnection(Of T).TargetId
- uid: SharpNeat.Graphs.WeightedDirectedConnection`1.Weight
  name: Weight
  href: api/SharpNeat.Graphs.WeightedDirectedConnection-1.html#SharpNeat_Graphs_WeightedDirectedConnection_1_Weight
  commentId: P:SharpNeat.Graphs.WeightedDirectedConnection`1.Weight
  fullName: SharpNeat.Graphs.WeightedDirectedConnection<T>.Weight
  fullName.vb: SharpNeat.Graphs.WeightedDirectedConnection(Of T).Weight
  nameWithType: WeightedDirectedConnection<T>.Weight
  nameWithType.vb: WeightedDirectedConnection(Of T).Weight
- uid: SharpNeat.Graphs.WeightedDirectedConnection`1.Weight*
  name: Weight
  href: api/SharpNeat.Graphs.WeightedDirectedConnection-1.html#SharpNeat_Graphs_WeightedDirectedConnection_1_Weight_
  commentId: Overload:SharpNeat.Graphs.WeightedDirectedConnection`1.Weight
  isSpec: "True"
  fullName: SharpNeat.Graphs.WeightedDirectedConnection<T>.Weight
  fullName.vb: SharpNeat.Graphs.WeightedDirectedConnection(Of T).Weight
  nameWithType: WeightedDirectedConnection<T>.Weight
  nameWithType.vb: WeightedDirectedConnection(Of T).Weight
- uid: SharpNeat.Graphs.WeightedDirectedConnectionComparer`1
  name: WeightedDirectedConnectionComparer<T>
  href: api/SharpNeat.Graphs.WeightedDirectedConnectionComparer-1.html
  commentId: T:SharpNeat.Graphs.WeightedDirectedConnectionComparer`1
  name.vb: WeightedDirectedConnectionComparer(Of T)
  fullName: SharpNeat.Graphs.WeightedDirectedConnectionComparer<T>
  fullName.vb: SharpNeat.Graphs.WeightedDirectedConnectionComparer(Of T)
  nameWithType: WeightedDirectedConnectionComparer<T>
  nameWithType.vb: WeightedDirectedConnectionComparer(Of T)
- uid: SharpNeat.Graphs.WeightedDirectedConnectionComparer`1.Compare(SharpNeat.Graphs.WeightedDirectedConnection{`0},SharpNeat.Graphs.WeightedDirectedConnection{`0})
  name: Compare(WeightedDirectedConnection<T>, WeightedDirectedConnection<T>)
  href: api/SharpNeat.Graphs.WeightedDirectedConnectionComparer-1.html#SharpNeat_Graphs_WeightedDirectedConnectionComparer_1_Compare_SharpNeat_Graphs_WeightedDirectedConnection__0__SharpNeat_Graphs_WeightedDirectedConnection__0__
  commentId: M:SharpNeat.Graphs.WeightedDirectedConnectionComparer`1.Compare(SharpNeat.Graphs.WeightedDirectedConnection{`0},SharpNeat.Graphs.WeightedDirectedConnection{`0})
  name.vb: Compare(WeightedDirectedConnection(Of T), WeightedDirectedConnection(Of T))
  fullName: SharpNeat.Graphs.WeightedDirectedConnectionComparer<T>.Compare(SharpNeat.Graphs.WeightedDirectedConnection<T>, SharpNeat.Graphs.WeightedDirectedConnection<T>)
  fullName.vb: SharpNeat.Graphs.WeightedDirectedConnectionComparer(Of T).Compare(SharpNeat.Graphs.WeightedDirectedConnection(Of T), SharpNeat.Graphs.WeightedDirectedConnection(Of T))
  nameWithType: WeightedDirectedConnectionComparer<T>.Compare(WeightedDirectedConnection<T>, WeightedDirectedConnection<T>)
  nameWithType.vb: WeightedDirectedConnectionComparer(Of T).Compare(WeightedDirectedConnection(Of T), WeightedDirectedConnection(Of T))
- uid: SharpNeat.Graphs.WeightedDirectedConnectionComparer`1.Compare*
  name: Compare
  href: api/SharpNeat.Graphs.WeightedDirectedConnectionComparer-1.html#SharpNeat_Graphs_WeightedDirectedConnectionComparer_1_Compare_
  commentId: Overload:SharpNeat.Graphs.WeightedDirectedConnectionComparer`1.Compare
  isSpec: "True"
  fullName: SharpNeat.Graphs.WeightedDirectedConnectionComparer<T>.Compare
  fullName.vb: SharpNeat.Graphs.WeightedDirectedConnectionComparer(Of T).Compare
  nameWithType: WeightedDirectedConnectionComparer<T>.Compare
  nameWithType.vb: WeightedDirectedConnectionComparer(Of T).Compare
- uid: SharpNeat.Graphs.WeightedDirectedConnectionComparer`1.Default
  name: Default
  href: api/SharpNeat.Graphs.WeightedDirectedConnectionComparer-1.html#SharpNeat_Graphs_WeightedDirectedConnectionComparer_1_Default
  commentId: F:SharpNeat.Graphs.WeightedDirectedConnectionComparer`1.Default
  fullName: SharpNeat.Graphs.WeightedDirectedConnectionComparer<T>.Default
  fullName.vb: SharpNeat.Graphs.WeightedDirectedConnectionComparer(Of T).Default
  nameWithType: WeightedDirectedConnectionComparer<T>.Default
  nameWithType.vb: WeightedDirectedConnectionComparer(Of T).Default
- uid: SharpNeat.Graphs.WeightedDirectedGraph`1
  name: WeightedDirectedGraph<T>
  href: api/SharpNeat.Graphs.WeightedDirectedGraph-1.html
  commentId: T:SharpNeat.Graphs.WeightedDirectedGraph`1
  name.vb: WeightedDirectedGraph(Of T)
  fullName: SharpNeat.Graphs.WeightedDirectedGraph<T>
  fullName.vb: SharpNeat.Graphs.WeightedDirectedGraph(Of T)
  nameWithType: WeightedDirectedGraph<T>
  nameWithType.vb: WeightedDirectedGraph(Of T)
- uid: SharpNeat.Graphs.WeightedDirectedGraph`1.WeightArray
  name: WeightArray
  href: api/SharpNeat.Graphs.WeightedDirectedGraph-1.html#SharpNeat_Graphs_WeightedDirectedGraph_1_WeightArray
  commentId: P:SharpNeat.Graphs.WeightedDirectedGraph`1.WeightArray
  fullName: SharpNeat.Graphs.WeightedDirectedGraph<T>.WeightArray
  fullName.vb: SharpNeat.Graphs.WeightedDirectedGraph(Of T).WeightArray
  nameWithType: WeightedDirectedGraph<T>.WeightArray
  nameWithType.vb: WeightedDirectedGraph(Of T).WeightArray
- uid: SharpNeat.Graphs.WeightedDirectedGraph`1.WeightArray*
  name: WeightArray
  href: api/SharpNeat.Graphs.WeightedDirectedGraph-1.html#SharpNeat_Graphs_WeightedDirectedGraph_1_WeightArray_
  commentId: Overload:SharpNeat.Graphs.WeightedDirectedGraph`1.WeightArray
  isSpec: "True"
  fullName: SharpNeat.Graphs.WeightedDirectedGraph<T>.WeightArray
  fullName.vb: SharpNeat.Graphs.WeightedDirectedGraph(Of T).WeightArray
  nameWithType: WeightedDirectedGraph<T>.WeightArray
  nameWithType.vb: WeightedDirectedGraph(Of T).WeightArray
- uid: SharpNeat.Graphs.WeightedDirectedGraphAcyclicBuilderTests
  name: WeightedDirectedGraphAcyclicBuilderTests
  href: api/SharpNeat.Graphs.WeightedDirectedGraphAcyclicBuilderTests.html
  commentId: T:SharpNeat.Graphs.WeightedDirectedGraphAcyclicBuilderTests
  fullName: SharpNeat.Graphs.WeightedDirectedGraphAcyclicBuilderTests
  nameWithType: WeightedDirectedGraphAcyclicBuilderTests
- uid: SharpNeat.Graphs.WeightedDirectedGraphAcyclicBuilderTests.DepthNodeReorderTest
  name: DepthNodeReorderTest()
  href: api/SharpNeat.Graphs.WeightedDirectedGraphAcyclicBuilderTests.html#SharpNeat_Graphs_WeightedDirectedGraphAcyclicBuilderTests_DepthNodeReorderTest
  commentId: M:SharpNeat.Graphs.WeightedDirectedGraphAcyclicBuilderTests.DepthNodeReorderTest
  fullName: SharpNeat.Graphs.WeightedDirectedGraphAcyclicBuilderTests.DepthNodeReorderTest()
  nameWithType: WeightedDirectedGraphAcyclicBuilderTests.DepthNodeReorderTest()
- uid: SharpNeat.Graphs.WeightedDirectedGraphAcyclicBuilderTests.DepthNodeReorderTest*
  name: DepthNodeReorderTest
  href: api/SharpNeat.Graphs.WeightedDirectedGraphAcyclicBuilderTests.html#SharpNeat_Graphs_WeightedDirectedGraphAcyclicBuilderTests_DepthNodeReorderTest_
  commentId: Overload:SharpNeat.Graphs.WeightedDirectedGraphAcyclicBuilderTests.DepthNodeReorderTest
  isSpec: "True"
  fullName: SharpNeat.Graphs.WeightedDirectedGraphAcyclicBuilderTests.DepthNodeReorderTest
  nameWithType: WeightedDirectedGraphAcyclicBuilderTests.DepthNodeReorderTest
- uid: SharpNeat.Graphs.WeightedDirectedGraphAcyclicBuilderTests.SimpleAcyclic
  name: SimpleAcyclic()
  href: api/SharpNeat.Graphs.WeightedDirectedGraphAcyclicBuilderTests.html#SharpNeat_Graphs_WeightedDirectedGraphAcyclicBuilderTests_SimpleAcyclic
  commentId: M:SharpNeat.Graphs.WeightedDirectedGraphAcyclicBuilderTests.SimpleAcyclic
  fullName: SharpNeat.Graphs.WeightedDirectedGraphAcyclicBuilderTests.SimpleAcyclic()
  nameWithType: WeightedDirectedGraphAcyclicBuilderTests.SimpleAcyclic()
- uid: SharpNeat.Graphs.WeightedDirectedGraphAcyclicBuilderTests.SimpleAcyclic*
  name: SimpleAcyclic
  href: api/SharpNeat.Graphs.WeightedDirectedGraphAcyclicBuilderTests.html#SharpNeat_Graphs_WeightedDirectedGraphAcyclicBuilderTests_SimpleAcyclic_
  commentId: Overload:SharpNeat.Graphs.WeightedDirectedGraphAcyclicBuilderTests.SimpleAcyclic
  isSpec: "True"
  fullName: SharpNeat.Graphs.WeightedDirectedGraphAcyclicBuilderTests.SimpleAcyclic
  nameWithType: WeightedDirectedGraphAcyclicBuilderTests.SimpleAcyclic
- uid: SharpNeat.Graphs.WeightedDirectedGraphBuilder`1
  name: WeightedDirectedGraphBuilder<T>
  href: api/SharpNeat.Graphs.WeightedDirectedGraphBuilder-1.html
  commentId: T:SharpNeat.Graphs.WeightedDirectedGraphBuilder`1
  name.vb: WeightedDirectedGraphBuilder(Of T)
  fullName: SharpNeat.Graphs.WeightedDirectedGraphBuilder<T>
  fullName.vb: SharpNeat.Graphs.WeightedDirectedGraphBuilder(Of T)
  nameWithType: WeightedDirectedGraphBuilder<T>
  nameWithType.vb: WeightedDirectedGraphBuilder(Of T)
- uid: SharpNeat.Graphs.WeightedDirectedGraphBuilder`1.Create(System.Span{SharpNeat.Graphs.WeightedDirectedConnection{`0}},System.Int32,System.Int32)
  name: Create(Span<WeightedDirectedConnection<T>>, int, int)
  href: api/SharpNeat.Graphs.WeightedDirectedGraphBuilder-1.html#SharpNeat_Graphs_WeightedDirectedGraphBuilder_1_Create_System_Span_SharpNeat_Graphs_WeightedDirectedConnection__0___System_Int32_System_Int32_
  commentId: M:SharpNeat.Graphs.WeightedDirectedGraphBuilder`1.Create(System.Span{SharpNeat.Graphs.WeightedDirectedConnection{`0}},System.Int32,System.Int32)
  name.vb: Create(Span(Of WeightedDirectedConnection(Of T)), Integer, Integer)
  fullName: SharpNeat.Graphs.WeightedDirectedGraphBuilder<T>.Create(System.Span<SharpNeat.Graphs.WeightedDirectedConnection<T>>, int, int)
  fullName.vb: SharpNeat.Graphs.WeightedDirectedGraphBuilder(Of T).Create(System.Span(Of SharpNeat.Graphs.WeightedDirectedConnection(Of T)), Integer, Integer)
  nameWithType: WeightedDirectedGraphBuilder<T>.Create(Span<WeightedDirectedConnection<T>>, int, int)
  nameWithType.vb: WeightedDirectedGraphBuilder(Of T).Create(Span(Of WeightedDirectedConnection(Of T)), Integer, Integer)
- uid: SharpNeat.Graphs.WeightedDirectedGraphBuilder`1.Create*
  name: Create
  href: api/SharpNeat.Graphs.WeightedDirectedGraphBuilder-1.html#SharpNeat_Graphs_WeightedDirectedGraphBuilder_1_Create_
  commentId: Overload:SharpNeat.Graphs.WeightedDirectedGraphBuilder`1.Create
  isSpec: "True"
  fullName: SharpNeat.Graphs.WeightedDirectedGraphBuilder<T>.Create
  fullName.vb: SharpNeat.Graphs.WeightedDirectedGraphBuilder(Of T).Create
  nameWithType: WeightedDirectedGraphBuilder<T>.Create
  nameWithType.vb: WeightedDirectedGraphBuilder(Of T).Create
- uid: SharpNeat.IBlackBox`1
  name: IBlackBox<T>
  href: api/SharpNeat.IBlackBox-1.html
  commentId: T:SharpNeat.IBlackBox`1
  name.vb: IBlackBox(Of T)
  fullName: SharpNeat.IBlackBox<T>
  fullName.vb: SharpNeat.IBlackBox(Of T)
  nameWithType: IBlackBox<T>
  nameWithType.vb: IBlackBox(Of T)
- uid: SharpNeat.IBlackBox`1.Activate
  name: Activate()
  href: api/SharpNeat.IBlackBox-1.html#SharpNeat_IBlackBox_1_Activate
  commentId: M:SharpNeat.IBlackBox`1.Activate
  fullName: SharpNeat.IBlackBox<T>.Activate()
  fullName.vb: SharpNeat.IBlackBox(Of T).Activate()
  nameWithType: IBlackBox<T>.Activate()
  nameWithType.vb: IBlackBox(Of T).Activate()
- uid: SharpNeat.IBlackBox`1.Activate*
  name: Activate
  href: api/SharpNeat.IBlackBox-1.html#SharpNeat_IBlackBox_1_Activate_
  commentId: Overload:SharpNeat.IBlackBox`1.Activate
  isSpec: "True"
  fullName: SharpNeat.IBlackBox<T>.Activate
  fullName.vb: SharpNeat.IBlackBox(Of T).Activate
  nameWithType: IBlackBox<T>.Activate
  nameWithType.vb: IBlackBox(Of T).Activate
- uid: SharpNeat.IBlackBox`1.Inputs
  name: Inputs
  href: api/SharpNeat.IBlackBox-1.html#SharpNeat_IBlackBox_1_Inputs
  commentId: P:SharpNeat.IBlackBox`1.Inputs
  fullName: SharpNeat.IBlackBox<T>.Inputs
  fullName.vb: SharpNeat.IBlackBox(Of T).Inputs
  nameWithType: IBlackBox<T>.Inputs
  nameWithType.vb: IBlackBox(Of T).Inputs
- uid: SharpNeat.IBlackBox`1.Inputs*
  name: Inputs
  href: api/SharpNeat.IBlackBox-1.html#SharpNeat_IBlackBox_1_Inputs_
  commentId: Overload:SharpNeat.IBlackBox`1.Inputs
  isSpec: "True"
  fullName: SharpNeat.IBlackBox<T>.Inputs
  fullName.vb: SharpNeat.IBlackBox(Of T).Inputs
  nameWithType: IBlackBox<T>.Inputs
  nameWithType.vb: IBlackBox(Of T).Inputs
- uid: SharpNeat.IBlackBox`1.Outputs
  name: Outputs
  href: api/SharpNeat.IBlackBox-1.html#SharpNeat_IBlackBox_1_Outputs
  commentId: P:SharpNeat.IBlackBox`1.Outputs
  fullName: SharpNeat.IBlackBox<T>.Outputs
  fullName.vb: SharpNeat.IBlackBox(Of T).Outputs
  nameWithType: IBlackBox<T>.Outputs
  nameWithType.vb: IBlackBox(Of T).Outputs
- uid: SharpNeat.IBlackBox`1.Outputs*
  name: Outputs
  href: api/SharpNeat.IBlackBox-1.html#SharpNeat_IBlackBox_1_Outputs_
  commentId: Overload:SharpNeat.IBlackBox`1.Outputs
  isSpec: "True"
  fullName: SharpNeat.IBlackBox<T>.Outputs
  fullName.vb: SharpNeat.IBlackBox(Of T).Outputs
  nameWithType: IBlackBox<T>.Outputs
  nameWithType.vb: IBlackBox(Of T).Outputs
- uid: SharpNeat.IBlackBox`1.Reset
  name: Reset()
  href: api/SharpNeat.IBlackBox-1.html#SharpNeat_IBlackBox_1_Reset
  commentId: M:SharpNeat.IBlackBox`1.Reset
  fullName: SharpNeat.IBlackBox<T>.Reset()
  fullName.vb: SharpNeat.IBlackBox(Of T).Reset()
  nameWithType: IBlackBox<T>.Reset()
  nameWithType.vb: IBlackBox(Of T).Reset()
- uid: SharpNeat.IBlackBox`1.Reset*
  name: Reset
  href: api/SharpNeat.IBlackBox-1.html#SharpNeat_IBlackBox_1_Reset_
  commentId: Overload:SharpNeat.IBlackBox`1.Reset
  isSpec: "True"
  fullName: SharpNeat.IBlackBox<T>.Reset
  fullName.vb: SharpNeat.IBlackBox(Of T).Reset
  nameWithType: IBlackBox<T>.Reset
  nameWithType.vb: IBlackBox(Of T).Reset
- uid: SharpNeat.IO
  name: SharpNeat.IO
  href: api/SharpNeat.IO.html
  commentId: N:SharpNeat.IO
  fullName: SharpNeat.IO
  nameWithType: SharpNeat.IO
- uid: SharpNeat.IO.FileFormatException
  name: FileFormatException
  href: api/SharpNeat.IO.FileFormatException.html
  commentId: T:SharpNeat.IO.FileFormatException
  fullName: SharpNeat.IO.FileFormatException
  nameWithType: FileFormatException
- uid: SharpNeat.IO.FileFormatException.#ctor(System.String,System.Exception)
  name: FileFormatException(string, Exception)
  href: api/SharpNeat.IO.FileFormatException.html#SharpNeat_IO_FileFormatException__ctor_System_String_System_Exception_
  commentId: M:SharpNeat.IO.FileFormatException.#ctor(System.String,System.Exception)
  name.vb: New(String, Exception)
  fullName: SharpNeat.IO.FileFormatException.FileFormatException(string, System.Exception)
  fullName.vb: SharpNeat.IO.FileFormatException.New(String, System.Exception)
  nameWithType: FileFormatException.FileFormatException(string, Exception)
  nameWithType.vb: FileFormatException.New(String, Exception)
- uid: SharpNeat.IO.FileFormatException.#ctor(System.String)
  name: FileFormatException(string)
  href: api/SharpNeat.IO.FileFormatException.html#SharpNeat_IO_FileFormatException__ctor_System_String_
  commentId: M:SharpNeat.IO.FileFormatException.#ctor(System.String)
  name.vb: New(String)
  fullName: SharpNeat.IO.FileFormatException.FileFormatException(string)
  fullName.vb: SharpNeat.IO.FileFormatException.New(String)
  nameWithType: FileFormatException.FileFormatException(string)
  nameWithType.vb: FileFormatException.New(String)
- uid: SharpNeat.IO.FileFormatException.#ctor*
  name: FileFormatException
  href: api/SharpNeat.IO.FileFormatException.html#SharpNeat_IO_FileFormatException__ctor_
  commentId: Overload:SharpNeat.IO.FileFormatException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.IO.FileFormatException.FileFormatException
  fullName.vb: SharpNeat.IO.FileFormatException.New
  nameWithType: FileFormatException.FileFormatException
  nameWithType.vb: FileFormatException.New
- uid: SharpNeat.IO.JsonUtils
  name: JsonUtils
  href: api/SharpNeat.IO.JsonUtils.html
  commentId: T:SharpNeat.IO.JsonUtils
  fullName: SharpNeat.IO.JsonUtils
  nameWithType: JsonUtils
- uid: SharpNeat.IO.JsonUtils.Deserialize*
  name: Deserialize
  href: api/SharpNeat.IO.JsonUtils.html#SharpNeat_IO_JsonUtils_Deserialize_
  commentId: Overload:SharpNeat.IO.JsonUtils.Deserialize
  isSpec: "True"
  fullName: SharpNeat.IO.JsonUtils.Deserialize
  nameWithType: JsonUtils.Deserialize
- uid: SharpNeat.IO.JsonUtils.Deserialize``1(System.IO.Stream)
  name: Deserialize<T>(Stream)
  href: api/SharpNeat.IO.JsonUtils.html#SharpNeat_IO_JsonUtils_Deserialize__1_System_IO_Stream_
  commentId: M:SharpNeat.IO.JsonUtils.Deserialize``1(System.IO.Stream)
  name.vb: Deserialize(Of T)(Stream)
  fullName: SharpNeat.IO.JsonUtils.Deserialize<T>(System.IO.Stream)
  fullName.vb: SharpNeat.IO.JsonUtils.Deserialize(Of T)(System.IO.Stream)
  nameWithType: JsonUtils.Deserialize<T>(Stream)
  nameWithType.vb: JsonUtils.Deserialize(Of T)(Stream)
- uid: SharpNeat.IO.JsonUtils.Deserialize``1(System.String)
  name: Deserialize<T>(string)
  href: api/SharpNeat.IO.JsonUtils.html#SharpNeat_IO_JsonUtils_Deserialize__1_System_String_
  commentId: M:SharpNeat.IO.JsonUtils.Deserialize``1(System.String)
  name.vb: Deserialize(Of T)(String)
  fullName: SharpNeat.IO.JsonUtils.Deserialize<T>(string)
  fullName.vb: SharpNeat.IO.JsonUtils.Deserialize(Of T)(String)
  nameWithType: JsonUtils.Deserialize<T>(string)
  nameWithType.vb: JsonUtils.Deserialize(Of T)(String)
- uid: SharpNeat.IO.JsonUtils.DeserializeFromFile*
  name: DeserializeFromFile
  href: api/SharpNeat.IO.JsonUtils.html#SharpNeat_IO_JsonUtils_DeserializeFromFile_
  commentId: Overload:SharpNeat.IO.JsonUtils.DeserializeFromFile
  isSpec: "True"
  fullName: SharpNeat.IO.JsonUtils.DeserializeFromFile
  nameWithType: JsonUtils.DeserializeFromFile
- uid: SharpNeat.IO.JsonUtils.DeserializeFromFile``1(System.String)
  name: DeserializeFromFile<T>(string)
  href: api/SharpNeat.IO.JsonUtils.html#SharpNeat_IO_JsonUtils_DeserializeFromFile__1_System_String_
  commentId: M:SharpNeat.IO.JsonUtils.DeserializeFromFile``1(System.String)
  name.vb: DeserializeFromFile(Of T)(String)
  fullName: SharpNeat.IO.JsonUtils.DeserializeFromFile<T>(string)
  fullName.vb: SharpNeat.IO.JsonUtils.DeserializeFromFile(Of T)(String)
  nameWithType: JsonUtils.DeserializeFromFile<T>(string)
  nameWithType.vb: JsonUtils.DeserializeFromFile(Of T)(String)
- uid: SharpNeat.IO.Models
  name: SharpNeat.IO.Models
  href: api/SharpNeat.IO.Models.html
  commentId: N:SharpNeat.IO.Models
  fullName: SharpNeat.IO.Models
  nameWithType: SharpNeat.IO.Models
- uid: SharpNeat.IO.Models.ActivationFnLine
  name: ActivationFnLine
  href: api/SharpNeat.IO.Models.ActivationFnLine.html
  commentId: T:SharpNeat.IO.Models.ActivationFnLine
  fullName: SharpNeat.IO.Models.ActivationFnLine
  nameWithType: ActivationFnLine
- uid: SharpNeat.IO.Models.ActivationFnLine.#ctor(System.Int32,System.String)
  name: ActivationFnLine(int, string)
  href: api/SharpNeat.IO.Models.ActivationFnLine.html#SharpNeat_IO_Models_ActivationFnLine__ctor_System_Int32_System_String_
  commentId: M:SharpNeat.IO.Models.ActivationFnLine.#ctor(System.Int32,System.String)
  name.vb: New(Integer, String)
  fullName: SharpNeat.IO.Models.ActivationFnLine.ActivationFnLine(int, string)
  fullName.vb: SharpNeat.IO.Models.ActivationFnLine.New(Integer, String)
  nameWithType: ActivationFnLine.ActivationFnLine(int, string)
  nameWithType.vb: ActivationFnLine.New(Integer, String)
- uid: SharpNeat.IO.Models.ActivationFnLine.#ctor*
  name: ActivationFnLine
  href: api/SharpNeat.IO.Models.ActivationFnLine.html#SharpNeat_IO_Models_ActivationFnLine__ctor_
  commentId: Overload:SharpNeat.IO.Models.ActivationFnLine.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.IO.Models.ActivationFnLine.ActivationFnLine
  fullName.vb: SharpNeat.IO.Models.ActivationFnLine.New
  nameWithType: ActivationFnLine.ActivationFnLine
  nameWithType.vb: ActivationFnLine.New
- uid: SharpNeat.IO.Models.ActivationFnLine.Code
  name: Code
  href: api/SharpNeat.IO.Models.ActivationFnLine.html#SharpNeat_IO_Models_ActivationFnLine_Code
  commentId: P:SharpNeat.IO.Models.ActivationFnLine.Code
  fullName: SharpNeat.IO.Models.ActivationFnLine.Code
  nameWithType: ActivationFnLine.Code
- uid: SharpNeat.IO.Models.ActivationFnLine.Code*
  name: Code
  href: api/SharpNeat.IO.Models.ActivationFnLine.html#SharpNeat_IO_Models_ActivationFnLine_Code_
  commentId: Overload:SharpNeat.IO.Models.ActivationFnLine.Code
  isSpec: "True"
  fullName: SharpNeat.IO.Models.ActivationFnLine.Code
  nameWithType: ActivationFnLine.Code
- uid: SharpNeat.IO.Models.ActivationFnLine.Id
  name: Id
  href: api/SharpNeat.IO.Models.ActivationFnLine.html#SharpNeat_IO_Models_ActivationFnLine_Id
  commentId: P:SharpNeat.IO.Models.ActivationFnLine.Id
  fullName: SharpNeat.IO.Models.ActivationFnLine.Id
  nameWithType: ActivationFnLine.Id
- uid: SharpNeat.IO.Models.ActivationFnLine.Id*
  name: Id
  href: api/SharpNeat.IO.Models.ActivationFnLine.html#SharpNeat_IO_Models_ActivationFnLine_Id_
  commentId: Overload:SharpNeat.IO.Models.ActivationFnLine.Id
  isSpec: "True"
  fullName: SharpNeat.IO.Models.ActivationFnLine.Id
  nameWithType: ActivationFnLine.Id
- uid: SharpNeat.IO.Models.ConnectionLine
  name: ConnectionLine
  href: api/SharpNeat.IO.Models.ConnectionLine.html
  commentId: T:SharpNeat.IO.Models.ConnectionLine
  fullName: SharpNeat.IO.Models.ConnectionLine
  nameWithType: ConnectionLine
- uid: SharpNeat.IO.Models.ConnectionLine.#ctor(System.Int32,System.Int32,System.Double)
  name: ConnectionLine(int, int, double)
  href: api/SharpNeat.IO.Models.ConnectionLine.html#SharpNeat_IO_Models_ConnectionLine__ctor_System_Int32_System_Int32_System_Double_
  commentId: M:SharpNeat.IO.Models.ConnectionLine.#ctor(System.Int32,System.Int32,System.Double)
  name.vb: New(Integer, Integer, Double)
  fullName: SharpNeat.IO.Models.ConnectionLine.ConnectionLine(int, int, double)
  fullName.vb: SharpNeat.IO.Models.ConnectionLine.New(Integer, Integer, Double)
  nameWithType: ConnectionLine.ConnectionLine(int, int, double)
  nameWithType.vb: ConnectionLine.New(Integer, Integer, Double)
- uid: SharpNeat.IO.Models.ConnectionLine.#ctor*
  name: ConnectionLine
  href: api/SharpNeat.IO.Models.ConnectionLine.html#SharpNeat_IO_Models_ConnectionLine__ctor_
  commentId: Overload:SharpNeat.IO.Models.ConnectionLine.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.IO.Models.ConnectionLine.ConnectionLine
  fullName.vb: SharpNeat.IO.Models.ConnectionLine.New
  nameWithType: ConnectionLine.ConnectionLine
  nameWithType.vb: ConnectionLine.New
- uid: SharpNeat.IO.Models.ConnectionLine.SourceId
  name: SourceId
  href: api/SharpNeat.IO.Models.ConnectionLine.html#SharpNeat_IO_Models_ConnectionLine_SourceId
  commentId: P:SharpNeat.IO.Models.ConnectionLine.SourceId
  fullName: SharpNeat.IO.Models.ConnectionLine.SourceId
  nameWithType: ConnectionLine.SourceId
- uid: SharpNeat.IO.Models.ConnectionLine.SourceId*
  name: SourceId
  href: api/SharpNeat.IO.Models.ConnectionLine.html#SharpNeat_IO_Models_ConnectionLine_SourceId_
  commentId: Overload:SharpNeat.IO.Models.ConnectionLine.SourceId
  isSpec: "True"
  fullName: SharpNeat.IO.Models.ConnectionLine.SourceId
  nameWithType: ConnectionLine.SourceId
- uid: SharpNeat.IO.Models.ConnectionLine.TargetId
  name: TargetId
  href: api/SharpNeat.IO.Models.ConnectionLine.html#SharpNeat_IO_Models_ConnectionLine_TargetId
  commentId: P:SharpNeat.IO.Models.ConnectionLine.TargetId
  fullName: SharpNeat.IO.Models.ConnectionLine.TargetId
  nameWithType: ConnectionLine.TargetId
- uid: SharpNeat.IO.Models.ConnectionLine.TargetId*
  name: TargetId
  href: api/SharpNeat.IO.Models.ConnectionLine.html#SharpNeat_IO_Models_ConnectionLine_TargetId_
  commentId: Overload:SharpNeat.IO.Models.ConnectionLine.TargetId
  isSpec: "True"
  fullName: SharpNeat.IO.Models.ConnectionLine.TargetId
  nameWithType: ConnectionLine.TargetId
- uid: SharpNeat.IO.Models.ConnectionLine.Weight
  name: Weight
  href: api/SharpNeat.IO.Models.ConnectionLine.html#SharpNeat_IO_Models_ConnectionLine_Weight
  commentId: P:SharpNeat.IO.Models.ConnectionLine.Weight
  fullName: SharpNeat.IO.Models.ConnectionLine.Weight
  nameWithType: ConnectionLine.Weight
- uid: SharpNeat.IO.Models.ConnectionLine.Weight*
  name: Weight
  href: api/SharpNeat.IO.Models.ConnectionLine.html#SharpNeat_IO_Models_ConnectionLine_Weight_
  commentId: Overload:SharpNeat.IO.Models.ConnectionLine.Weight
  isSpec: "True"
  fullName: SharpNeat.IO.Models.ConnectionLine.Weight
  nameWithType: ConnectionLine.Weight
- uid: SharpNeat.IO.Models.NetFileModel
  name: NetFileModel
  href: api/SharpNeat.IO.Models.NetFileModel.html
  commentId: T:SharpNeat.IO.Models.NetFileModel
  fullName: SharpNeat.IO.Models.NetFileModel
  nameWithType: NetFileModel
- uid: SharpNeat.IO.Models.NetFileModel.ActivationFns
  name: ActivationFns
  href: api/SharpNeat.IO.Models.NetFileModel.html#SharpNeat_IO_Models_NetFileModel_ActivationFns
  commentId: P:SharpNeat.IO.Models.NetFileModel.ActivationFns
  fullName: SharpNeat.IO.Models.NetFileModel.ActivationFns
  nameWithType: NetFileModel.ActivationFns
- uid: SharpNeat.IO.Models.NetFileModel.ActivationFns*
  name: ActivationFns
  href: api/SharpNeat.IO.Models.NetFileModel.html#SharpNeat_IO_Models_NetFileModel_ActivationFns_
  commentId: Overload:SharpNeat.IO.Models.NetFileModel.ActivationFns
  isSpec: "True"
  fullName: SharpNeat.IO.Models.NetFileModel.ActivationFns
  nameWithType: NetFileModel.ActivationFns
- uid: SharpNeat.IO.Models.NetFileModel.Connections
  name: Connections
  href: api/SharpNeat.IO.Models.NetFileModel.html#SharpNeat_IO_Models_NetFileModel_Connections
  commentId: P:SharpNeat.IO.Models.NetFileModel.Connections
  fullName: SharpNeat.IO.Models.NetFileModel.Connections
  nameWithType: NetFileModel.Connections
- uid: SharpNeat.IO.Models.NetFileModel.Connections*
  name: Connections
  href: api/SharpNeat.IO.Models.NetFileModel.html#SharpNeat_IO_Models_NetFileModel_Connections_
  commentId: Overload:SharpNeat.IO.Models.NetFileModel.Connections
  isSpec: "True"
  fullName: SharpNeat.IO.Models.NetFileModel.Connections
  nameWithType: NetFileModel.Connections
- uid: SharpNeat.IO.Models.NetFileModel.CreateAcyclic(System.Int32,System.Int32,System.Collections.Generic.List{SharpNeat.IO.Models.ConnectionLine},System.Collections.Generic.List{SharpNeat.IO.Models.ActivationFnLine})
  name: CreateAcyclic(int, int, List<ConnectionLine>, List<ActivationFnLine>)
  href: api/SharpNeat.IO.Models.NetFileModel.html#SharpNeat_IO_Models_NetFileModel_CreateAcyclic_System_Int32_System_Int32_System_Collections_Generic_List_SharpNeat_IO_Models_ConnectionLine__System_Collections_Generic_List_SharpNeat_IO_Models_ActivationFnLine__
  commentId: M:SharpNeat.IO.Models.NetFileModel.CreateAcyclic(System.Int32,System.Int32,System.Collections.Generic.List{SharpNeat.IO.Models.ConnectionLine},System.Collections.Generic.List{SharpNeat.IO.Models.ActivationFnLine})
  name.vb: CreateAcyclic(Integer, Integer, List(Of ConnectionLine), List(Of ActivationFnLine))
  fullName: SharpNeat.IO.Models.NetFileModel.CreateAcyclic(int, int, System.Collections.Generic.List<SharpNeat.IO.Models.ConnectionLine>, System.Collections.Generic.List<SharpNeat.IO.Models.ActivationFnLine>)
  fullName.vb: SharpNeat.IO.Models.NetFileModel.CreateAcyclic(Integer, Integer, System.Collections.Generic.List(Of SharpNeat.IO.Models.ConnectionLine), System.Collections.Generic.List(Of SharpNeat.IO.Models.ActivationFnLine))
  nameWithType: NetFileModel.CreateAcyclic(int, int, List<ConnectionLine>, List<ActivationFnLine>)
  nameWithType.vb: NetFileModel.CreateAcyclic(Integer, Integer, List(Of ConnectionLine), List(Of ActivationFnLine))
- uid: SharpNeat.IO.Models.NetFileModel.CreateAcyclic*
  name: CreateAcyclic
  href: api/SharpNeat.IO.Models.NetFileModel.html#SharpNeat_IO_Models_NetFileModel_CreateAcyclic_
  commentId: Overload:SharpNeat.IO.Models.NetFileModel.CreateAcyclic
  isSpec: "True"
  fullName: SharpNeat.IO.Models.NetFileModel.CreateAcyclic
  nameWithType: NetFileModel.CreateAcyclic
- uid: SharpNeat.IO.Models.NetFileModel.CreateCyclic(System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{SharpNeat.IO.Models.ConnectionLine},System.Collections.Generic.List{SharpNeat.IO.Models.ActivationFnLine})
  name: CreateCyclic(int, int, int, List<ConnectionLine>, List<ActivationFnLine>)
  href: api/SharpNeat.IO.Models.NetFileModel.html#SharpNeat_IO_Models_NetFileModel_CreateCyclic_System_Int32_System_Int32_System_Int32_System_Collections_Generic_List_SharpNeat_IO_Models_ConnectionLine__System_Collections_Generic_List_SharpNeat_IO_Models_ActivationFnLine__
  commentId: M:SharpNeat.IO.Models.NetFileModel.CreateCyclic(System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{SharpNeat.IO.Models.ConnectionLine},System.Collections.Generic.List{SharpNeat.IO.Models.ActivationFnLine})
  name.vb: CreateCyclic(Integer, Integer, Integer, List(Of ConnectionLine), List(Of ActivationFnLine))
  fullName: SharpNeat.IO.Models.NetFileModel.CreateCyclic(int, int, int, System.Collections.Generic.List<SharpNeat.IO.Models.ConnectionLine>, System.Collections.Generic.List<SharpNeat.IO.Models.ActivationFnLine>)
  fullName.vb: SharpNeat.IO.Models.NetFileModel.CreateCyclic(Integer, Integer, Integer, System.Collections.Generic.List(Of SharpNeat.IO.Models.ConnectionLine), System.Collections.Generic.List(Of SharpNeat.IO.Models.ActivationFnLine))
  nameWithType: NetFileModel.CreateCyclic(int, int, int, List<ConnectionLine>, List<ActivationFnLine>)
  nameWithType.vb: NetFileModel.CreateCyclic(Integer, Integer, Integer, List(Of ConnectionLine), List(Of ActivationFnLine))
- uid: SharpNeat.IO.Models.NetFileModel.CreateCyclic*
  name: CreateCyclic
  href: api/SharpNeat.IO.Models.NetFileModel.html#SharpNeat_IO_Models_NetFileModel_CreateCyclic_
  commentId: Overload:SharpNeat.IO.Models.NetFileModel.CreateCyclic
  isSpec: "True"
  fullName: SharpNeat.IO.Models.NetFileModel.CreateCyclic
  nameWithType: NetFileModel.CreateCyclic
- uid: SharpNeat.IO.Models.NetFileModel.CyclesPerActivation
  name: CyclesPerActivation
  href: api/SharpNeat.IO.Models.NetFileModel.html#SharpNeat_IO_Models_NetFileModel_CyclesPerActivation
  commentId: P:SharpNeat.IO.Models.NetFileModel.CyclesPerActivation
  fullName: SharpNeat.IO.Models.NetFileModel.CyclesPerActivation
  nameWithType: NetFileModel.CyclesPerActivation
- uid: SharpNeat.IO.Models.NetFileModel.CyclesPerActivation*
  name: CyclesPerActivation
  href: api/SharpNeat.IO.Models.NetFileModel.html#SharpNeat_IO_Models_NetFileModel_CyclesPerActivation_
  commentId: Overload:SharpNeat.IO.Models.NetFileModel.CyclesPerActivation
  isSpec: "True"
  fullName: SharpNeat.IO.Models.NetFileModel.CyclesPerActivation
  nameWithType: NetFileModel.CyclesPerActivation
- uid: SharpNeat.IO.Models.NetFileModel.InputCount
  name: InputCount
  href: api/SharpNeat.IO.Models.NetFileModel.html#SharpNeat_IO_Models_NetFileModel_InputCount
  commentId: P:SharpNeat.IO.Models.NetFileModel.InputCount
  fullName: SharpNeat.IO.Models.NetFileModel.InputCount
  nameWithType: NetFileModel.InputCount
- uid: SharpNeat.IO.Models.NetFileModel.InputCount*
  name: InputCount
  href: api/SharpNeat.IO.Models.NetFileModel.html#SharpNeat_IO_Models_NetFileModel_InputCount_
  commentId: Overload:SharpNeat.IO.Models.NetFileModel.InputCount
  isSpec: "True"
  fullName: SharpNeat.IO.Models.NetFileModel.InputCount
  nameWithType: NetFileModel.InputCount
- uid: SharpNeat.IO.Models.NetFileModel.IsAcyclic
  name: IsAcyclic
  href: api/SharpNeat.IO.Models.NetFileModel.html#SharpNeat_IO_Models_NetFileModel_IsAcyclic
  commentId: P:SharpNeat.IO.Models.NetFileModel.IsAcyclic
  fullName: SharpNeat.IO.Models.NetFileModel.IsAcyclic
  nameWithType: NetFileModel.IsAcyclic
- uid: SharpNeat.IO.Models.NetFileModel.IsAcyclic*
  name: IsAcyclic
  href: api/SharpNeat.IO.Models.NetFileModel.html#SharpNeat_IO_Models_NetFileModel_IsAcyclic_
  commentId: Overload:SharpNeat.IO.Models.NetFileModel.IsAcyclic
  isSpec: "True"
  fullName: SharpNeat.IO.Models.NetFileModel.IsAcyclic
  nameWithType: NetFileModel.IsAcyclic
- uid: SharpNeat.IO.Models.NetFileModel.OutputCount
  name: OutputCount
  href: api/SharpNeat.IO.Models.NetFileModel.html#SharpNeat_IO_Models_NetFileModel_OutputCount
  commentId: P:SharpNeat.IO.Models.NetFileModel.OutputCount
  fullName: SharpNeat.IO.Models.NetFileModel.OutputCount
  nameWithType: NetFileModel.OutputCount
- uid: SharpNeat.IO.Models.NetFileModel.OutputCount*
  name: OutputCount
  href: api/SharpNeat.IO.Models.NetFileModel.html#SharpNeat_IO_Models_NetFileModel_OutputCount_
  commentId: Overload:SharpNeat.IO.Models.NetFileModel.OutputCount
  isSpec: "True"
  fullName: SharpNeat.IO.Models.NetFileModel.OutputCount
  nameWithType: NetFileModel.OutputCount
- uid: SharpNeat.IO.NetFile
  name: NetFile
  href: api/SharpNeat.IO.NetFile.html
  commentId: T:SharpNeat.IO.NetFile
  fullName: SharpNeat.IO.NetFile
  nameWithType: NetFile
- uid: SharpNeat.IO.NetFile.Load(System.IO.Stream)
  name: Load(Stream)
  href: api/SharpNeat.IO.NetFile.html#SharpNeat_IO_NetFile_Load_System_IO_Stream_
  commentId: M:SharpNeat.IO.NetFile.Load(System.IO.Stream)
  fullName: SharpNeat.IO.NetFile.Load(System.IO.Stream)
  nameWithType: NetFile.Load(Stream)
- uid: SharpNeat.IO.NetFile.Load(System.String)
  name: Load(string)
  href: api/SharpNeat.IO.NetFile.html#SharpNeat_IO_NetFile_Load_System_String_
  commentId: M:SharpNeat.IO.NetFile.Load(System.String)
  name.vb: Load(String)
  fullName: SharpNeat.IO.NetFile.Load(string)
  fullName.vb: SharpNeat.IO.NetFile.Load(String)
  nameWithType: NetFile.Load(string)
  nameWithType.vb: NetFile.Load(String)
- uid: SharpNeat.IO.NetFile.Load*
  name: Load
  href: api/SharpNeat.IO.NetFile.html#SharpNeat_IO_NetFile_Load_
  commentId: Overload:SharpNeat.IO.NetFile.Load
  isSpec: "True"
  fullName: SharpNeat.IO.NetFile.Load
  nameWithType: NetFile.Load
- uid: SharpNeat.IO.NetFile.Save(SharpNeat.IO.Models.NetFileModel,System.IO.Stream)
  name: Save(NetFileModel, Stream)
  href: api/SharpNeat.IO.NetFile.html#SharpNeat_IO_NetFile_Save_SharpNeat_IO_Models_NetFileModel_System_IO_Stream_
  commentId: M:SharpNeat.IO.NetFile.Save(SharpNeat.IO.Models.NetFileModel,System.IO.Stream)
  fullName: SharpNeat.IO.NetFile.Save(SharpNeat.IO.Models.NetFileModel, System.IO.Stream)
  nameWithType: NetFile.Save(NetFileModel, Stream)
- uid: SharpNeat.IO.NetFile.Save(SharpNeat.IO.Models.NetFileModel,System.String)
  name: Save(NetFileModel, string)
  href: api/SharpNeat.IO.NetFile.html#SharpNeat_IO_NetFile_Save_SharpNeat_IO_Models_NetFileModel_System_String_
  commentId: M:SharpNeat.IO.NetFile.Save(SharpNeat.IO.Models.NetFileModel,System.String)
  name.vb: Save(NetFileModel, String)
  fullName: SharpNeat.IO.NetFile.Save(SharpNeat.IO.Models.NetFileModel, string)
  fullName.vb: SharpNeat.IO.NetFile.Save(SharpNeat.IO.Models.NetFileModel, String)
  nameWithType: NetFile.Save(NetFileModel, string)
  nameWithType.vb: NetFile.Save(NetFileModel, String)
- uid: SharpNeat.IO.NetFile.Save*
  name: Save
  href: api/SharpNeat.IO.NetFile.html#SharpNeat_IO_NetFile_Save_
  commentId: Overload:SharpNeat.IO.NetFile.Save
  isSpec: "True"
  fullName: SharpNeat.IO.NetFile.Save
  nameWithType: NetFile.Save
- uid: SharpNeat.IO.NetFileTests
  name: NetFileTests
  href: api/SharpNeat.IO.NetFileTests.html
  commentId: T:SharpNeat.IO.NetFileTests
  fullName: SharpNeat.IO.NetFileTests
  nameWithType: NetFileTests
- uid: SharpNeat.IO.NetFileTests.Load
  name: Load()
  href: api/SharpNeat.IO.NetFileTests.html#SharpNeat_IO_NetFileTests_Load
  commentId: M:SharpNeat.IO.NetFileTests.Load
  fullName: SharpNeat.IO.NetFileTests.Load()
  nameWithType: NetFileTests.Load()
- uid: SharpNeat.IO.NetFileTests.Load*
  name: Load
  href: api/SharpNeat.IO.NetFileTests.html#SharpNeat_IO_NetFileTests_Load_
  commentId: Overload:SharpNeat.IO.NetFileTests.Load
  isSpec: "True"
  fullName: SharpNeat.IO.NetFileTests.Load
  nameWithType: NetFileTests.Load
- uid: SharpNeat.IO.NetFileTests.Save
  name: Save()
  href: api/SharpNeat.IO.NetFileTests.html#SharpNeat_IO_NetFileTests_Save
  commentId: M:SharpNeat.IO.NetFileTests.Save
  fullName: SharpNeat.IO.NetFileTests.Save()
  nameWithType: NetFileTests.Save()
- uid: SharpNeat.IO.NetFileTests.Save*
  name: Save
  href: api/SharpNeat.IO.NetFileTests.html#SharpNeat_IO_NetFileTests_Save_
  commentId: Overload:SharpNeat.IO.NetFileTests.Save
  isSpec: "True"
  fullName: SharpNeat.IO.NetFileTests.Save
  nameWithType: NetFileTests.Save
- uid: SharpNeat.Neat
  name: SharpNeat.Neat
  href: api/SharpNeat.Neat.html
  commentId: N:SharpNeat.Neat
  fullName: SharpNeat.Neat
  nameWithType: SharpNeat.Neat
- uid: SharpNeat.Neat.AddedNodeBuffer
  name: AddedNodeBuffer
  href: api/SharpNeat.Neat.AddedNodeBuffer.html
  commentId: T:SharpNeat.Neat.AddedNodeBuffer
  fullName: SharpNeat.Neat.AddedNodeBuffer
  nameWithType: AddedNodeBuffer
- uid: SharpNeat.Neat.AddedNodeBuffer.#ctor(System.Int32)
  name: AddedNodeBuffer(int)
  href: api/SharpNeat.Neat.AddedNodeBuffer.html#SharpNeat_Neat_AddedNodeBuffer__ctor_System_Int32_
  commentId: M:SharpNeat.Neat.AddedNodeBuffer.#ctor(System.Int32)
  name.vb: New(Integer)
  fullName: SharpNeat.Neat.AddedNodeBuffer.AddedNodeBuffer(int)
  fullName.vb: SharpNeat.Neat.AddedNodeBuffer.New(Integer)
  nameWithType: AddedNodeBuffer.AddedNodeBuffer(int)
  nameWithType.vb: AddedNodeBuffer.New(Integer)
- uid: SharpNeat.Neat.AddedNodeBuffer.#ctor*
  name: AddedNodeBuffer
  href: api/SharpNeat.Neat.AddedNodeBuffer.html#SharpNeat_Neat_AddedNodeBuffer__ctor_
  commentId: Overload:SharpNeat.Neat.AddedNodeBuffer.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Neat.AddedNodeBuffer.AddedNodeBuffer
  fullName.vb: SharpNeat.Neat.AddedNodeBuffer.New
  nameWithType: AddedNodeBuffer.AddedNodeBuffer
  nameWithType.vb: AddedNodeBuffer.New
- uid: SharpNeat.Neat.AddedNodeBuffer.Register(SharpNeat.Graphs.DirectedConnection@,System.Int32)
  name: Register(in DirectedConnection, int)
  href: api/SharpNeat.Neat.AddedNodeBuffer.html#SharpNeat_Neat_AddedNodeBuffer_Register_SharpNeat_Graphs_DirectedConnection__System_Int32_
  commentId: M:SharpNeat.Neat.AddedNodeBuffer.Register(SharpNeat.Graphs.DirectedConnection@,System.Int32)
  name.vb: Register(DirectedConnection, Integer)
  fullName: SharpNeat.Neat.AddedNodeBuffer.Register(in SharpNeat.Graphs.DirectedConnection, int)
  fullName.vb: SharpNeat.Neat.AddedNodeBuffer.Register(SharpNeat.Graphs.DirectedConnection, Integer)
  nameWithType: AddedNodeBuffer.Register(in DirectedConnection, int)
  nameWithType.vb: AddedNodeBuffer.Register(DirectedConnection, Integer)
- uid: SharpNeat.Neat.AddedNodeBuffer.Register*
  name: Register
  href: api/SharpNeat.Neat.AddedNodeBuffer.html#SharpNeat_Neat_AddedNodeBuffer_Register_
  commentId: Overload:SharpNeat.Neat.AddedNodeBuffer.Register
  isSpec: "True"
  fullName: SharpNeat.Neat.AddedNodeBuffer.Register
  nameWithType: AddedNodeBuffer.Register
- uid: SharpNeat.Neat.AddedNodeBuffer.TryLookup(SharpNeat.Graphs.DirectedConnection@,System.Int32@)
  name: TryLookup(in DirectedConnection, out int)
  href: api/SharpNeat.Neat.AddedNodeBuffer.html#SharpNeat_Neat_AddedNodeBuffer_TryLookup_SharpNeat_Graphs_DirectedConnection__System_Int32__
  commentId: M:SharpNeat.Neat.AddedNodeBuffer.TryLookup(SharpNeat.Graphs.DirectedConnection@,System.Int32@)
  name.vb: TryLookup(DirectedConnection, Integer)
  fullName: SharpNeat.Neat.AddedNodeBuffer.TryLookup(in SharpNeat.Graphs.DirectedConnection, out int)
  fullName.vb: SharpNeat.Neat.AddedNodeBuffer.TryLookup(SharpNeat.Graphs.DirectedConnection, Integer)
  nameWithType: AddedNodeBuffer.TryLookup(in DirectedConnection, out int)
  nameWithType.vb: AddedNodeBuffer.TryLookup(DirectedConnection, Integer)
- uid: SharpNeat.Neat.AddedNodeBuffer.TryLookup*
  name: TryLookup
  href: api/SharpNeat.Neat.AddedNodeBuffer.html#SharpNeat_Neat_AddedNodeBuffer_TryLookup_
  commentId: Overload:SharpNeat.Neat.AddedNodeBuffer.TryLookup
  isSpec: "True"
  fullName: SharpNeat.Neat.AddedNodeBuffer.TryLookup
  nameWithType: AddedNodeBuffer.TryLookup
- uid: SharpNeat.Neat.AddedNodeBufferTests
  name: AddedNodeBufferTests
  href: api/SharpNeat.Neat.AddedNodeBufferTests.html
  commentId: T:SharpNeat.Neat.AddedNodeBufferTests
  fullName: SharpNeat.Neat.AddedNodeBufferTests
  nameWithType: AddedNodeBufferTests
- uid: SharpNeat.Neat.AddedNodeBufferTests.TryLookup
  name: TryLookup()
  href: api/SharpNeat.Neat.AddedNodeBufferTests.html#SharpNeat_Neat_AddedNodeBufferTests_TryLookup
  commentId: M:SharpNeat.Neat.AddedNodeBufferTests.TryLookup
  fullName: SharpNeat.Neat.AddedNodeBufferTests.TryLookup()
  nameWithType: AddedNodeBufferTests.TryLookup()
- uid: SharpNeat.Neat.AddedNodeBufferTests.TryLookup*
  name: TryLookup
  href: api/SharpNeat.Neat.AddedNodeBufferTests.html#SharpNeat_Neat_AddedNodeBufferTests_TryLookup_
  commentId: Overload:SharpNeat.Neat.AddedNodeBufferTests.TryLookup
  isSpec: "True"
  fullName: SharpNeat.Neat.AddedNodeBufferTests.TryLookup
  nameWithType: AddedNodeBufferTests.TryLookup
- uid: SharpNeat.Neat.ComplexityRegulation
  name: SharpNeat.Neat.ComplexityRegulation
  href: api/SharpNeat.Neat.ComplexityRegulation.html
  commentId: N:SharpNeat.Neat.ComplexityRegulation
  fullName: SharpNeat.Neat.ComplexityRegulation
  nameWithType: SharpNeat.Neat.ComplexityRegulation
- uid: SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategy
  name: AbsoluteComplexityRegulationStrategy
  href: api/SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategy.html
  commentId: T:SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategy
  fullName: SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategy
  nameWithType: AbsoluteComplexityRegulationStrategy
- uid: SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategy.#ctor(System.Int32,System.Double)
  name: AbsoluteComplexityRegulationStrategy(int, double)
  href: api/SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategy.html#SharpNeat_Neat_ComplexityRegulation_AbsoluteComplexityRegulationStrategy__ctor_System_Int32_System_Double_
  commentId: M:SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategy.#ctor(System.Int32,System.Double)
  name.vb: New(Integer, Double)
  fullName: SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategy.AbsoluteComplexityRegulationStrategy(int, double)
  fullName.vb: SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategy.New(Integer, Double)
  nameWithType: AbsoluteComplexityRegulationStrategy.AbsoluteComplexityRegulationStrategy(int, double)
  nameWithType.vb: AbsoluteComplexityRegulationStrategy.New(Integer, Double)
- uid: SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategy.#ctor*
  name: AbsoluteComplexityRegulationStrategy
  href: api/SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategy.html#SharpNeat_Neat_ComplexityRegulation_AbsoluteComplexityRegulationStrategy__ctor_
  commentId: Overload:SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategy.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategy.AbsoluteComplexityRegulationStrategy
  fullName.vb: SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategy.New
  nameWithType: AbsoluteComplexityRegulationStrategy.AbsoluteComplexityRegulationStrategy
  nameWithType.vb: AbsoluteComplexityRegulationStrategy.New
- uid: SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategy.CurrentMode
  name: CurrentMode
  href: api/SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategy.html#SharpNeat_Neat_ComplexityRegulation_AbsoluteComplexityRegulationStrategy_CurrentMode
  commentId: P:SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategy.CurrentMode
  fullName: SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategy.CurrentMode
  nameWithType: AbsoluteComplexityRegulationStrategy.CurrentMode
- uid: SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategy.CurrentMode*
  name: CurrentMode
  href: api/SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategy.html#SharpNeat_Neat_ComplexityRegulation_AbsoluteComplexityRegulationStrategy_CurrentMode_
  commentId: Overload:SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategy.CurrentMode
  isSpec: "True"
  fullName: SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategy.CurrentMode
  nameWithType: AbsoluteComplexityRegulationStrategy.CurrentMode
- uid: SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategy.UpdateMode(SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics,SharpNeat.EvolutionAlgorithm.PopulationStatistics)
  name: UpdateMode(EvolutionAlgorithmStatistics, PopulationStatistics)
  href: api/SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategy.html#SharpNeat_Neat_ComplexityRegulation_AbsoluteComplexityRegulationStrategy_UpdateMode_SharpNeat_EvolutionAlgorithm_EvolutionAlgorithmStatistics_SharpNeat_EvolutionAlgorithm_PopulationStatistics_
  commentId: M:SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategy.UpdateMode(SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics,SharpNeat.EvolutionAlgorithm.PopulationStatistics)
  fullName: SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategy.UpdateMode(SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics, SharpNeat.EvolutionAlgorithm.PopulationStatistics)
  nameWithType: AbsoluteComplexityRegulationStrategy.UpdateMode(EvolutionAlgorithmStatistics, PopulationStatistics)
- uid: SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategy.UpdateMode*
  name: UpdateMode
  href: api/SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategy.html#SharpNeat_Neat_ComplexityRegulation_AbsoluteComplexityRegulationStrategy_UpdateMode_
  commentId: Overload:SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategy.UpdateMode
  isSpec: "True"
  fullName: SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategy.UpdateMode
  nameWithType: AbsoluteComplexityRegulationStrategy.UpdateMode
- uid: SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategyTests
  name: AbsoluteComplexityRegulationStrategyTests
  href: api/SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategyTests.html
  commentId: T:SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategyTests
  fullName: SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategyTests
  nameWithType: AbsoluteComplexityRegulationStrategyTests
- uid: SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategyTests.TestInitialisation
  name: TestInitialisation()
  href: api/SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategyTests.html#SharpNeat_Neat_ComplexityRegulation_AbsoluteComplexityRegulationStrategyTests_TestInitialisation
  commentId: M:SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategyTests.TestInitialisation
  fullName: SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategyTests.TestInitialisation()
  nameWithType: AbsoluteComplexityRegulationStrategyTests.TestInitialisation()
- uid: SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategyTests.TestInitialisation*
  name: TestInitialisation
  href: api/SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategyTests.html#SharpNeat_Neat_ComplexityRegulation_AbsoluteComplexityRegulationStrategyTests_TestInitialisation_
  commentId: Overload:SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategyTests.TestInitialisation
  isSpec: "True"
  fullName: SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategyTests.TestInitialisation
  nameWithType: AbsoluteComplexityRegulationStrategyTests.TestInitialisation
- uid: SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategyTests.TestTransitionToComplexifying
  name: TestTransitionToComplexifying()
  href: api/SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategyTests.html#SharpNeat_Neat_ComplexityRegulation_AbsoluteComplexityRegulationStrategyTests_TestTransitionToComplexifying
  commentId: M:SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategyTests.TestTransitionToComplexifying
  fullName: SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategyTests.TestTransitionToComplexifying()
  nameWithType: AbsoluteComplexityRegulationStrategyTests.TestTransitionToComplexifying()
- uid: SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategyTests.TestTransitionToComplexifying*
  name: TestTransitionToComplexifying
  href: api/SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategyTests.html#SharpNeat_Neat_ComplexityRegulation_AbsoluteComplexityRegulationStrategyTests_TestTransitionToComplexifying_
  commentId: Overload:SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategyTests.TestTransitionToComplexifying
  isSpec: "True"
  fullName: SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategyTests.TestTransitionToComplexifying
  nameWithType: AbsoluteComplexityRegulationStrategyTests.TestTransitionToComplexifying
- uid: SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategyTests.TestTransitionToSimplifying
  name: TestTransitionToSimplifying()
  href: api/SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategyTests.html#SharpNeat_Neat_ComplexityRegulation_AbsoluteComplexityRegulationStrategyTests_TestTransitionToSimplifying
  commentId: M:SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategyTests.TestTransitionToSimplifying
  fullName: SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategyTests.TestTransitionToSimplifying()
  nameWithType: AbsoluteComplexityRegulationStrategyTests.TestTransitionToSimplifying()
- uid: SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategyTests.TestTransitionToSimplifying*
  name: TestTransitionToSimplifying
  href: api/SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategyTests.html#SharpNeat_Neat_ComplexityRegulation_AbsoluteComplexityRegulationStrategyTests_TestTransitionToSimplifying_
  commentId: Overload:SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategyTests.TestTransitionToSimplifying
  isSpec: "True"
  fullName: SharpNeat.Neat.ComplexityRegulation.AbsoluteComplexityRegulationStrategyTests.TestTransitionToSimplifying
  nameWithType: AbsoluteComplexityRegulationStrategyTests.TestTransitionToSimplifying
- uid: SharpNeat.Neat.ComplexityRegulation.ComplexityRegulationMode
  name: ComplexityRegulationMode
  href: api/SharpNeat.Neat.ComplexityRegulation.ComplexityRegulationMode.html
  commentId: T:SharpNeat.Neat.ComplexityRegulation.ComplexityRegulationMode
  fullName: SharpNeat.Neat.ComplexityRegulation.ComplexityRegulationMode
  nameWithType: ComplexityRegulationMode
- uid: SharpNeat.Neat.ComplexityRegulation.ComplexityRegulationMode.Complexifying
  name: Complexifying
  href: api/SharpNeat.Neat.ComplexityRegulation.ComplexityRegulationMode.html#SharpNeat_Neat_ComplexityRegulation_ComplexityRegulationMode_Complexifying
  commentId: F:SharpNeat.Neat.ComplexityRegulation.ComplexityRegulationMode.Complexifying
  fullName: SharpNeat.Neat.ComplexityRegulation.ComplexityRegulationMode.Complexifying
  nameWithType: ComplexityRegulationMode.Complexifying
- uid: SharpNeat.Neat.ComplexityRegulation.ComplexityRegulationMode.Simplifying
  name: Simplifying
  href: api/SharpNeat.Neat.ComplexityRegulation.ComplexityRegulationMode.html#SharpNeat_Neat_ComplexityRegulation_ComplexityRegulationMode_Simplifying
  commentId: F:SharpNeat.Neat.ComplexityRegulation.ComplexityRegulationMode.Simplifying
  fullName: SharpNeat.Neat.ComplexityRegulation.ComplexityRegulationMode.Simplifying
  nameWithType: ComplexityRegulationMode.Simplifying
- uid: SharpNeat.Neat.ComplexityRegulation.IComplexityRegulationStrategy
  name: IComplexityRegulationStrategy
  href: api/SharpNeat.Neat.ComplexityRegulation.IComplexityRegulationStrategy.html
  commentId: T:SharpNeat.Neat.ComplexityRegulation.IComplexityRegulationStrategy
  fullName: SharpNeat.Neat.ComplexityRegulation.IComplexityRegulationStrategy
  nameWithType: IComplexityRegulationStrategy
- uid: SharpNeat.Neat.ComplexityRegulation.IComplexityRegulationStrategy.CurrentMode
  name: CurrentMode
  href: api/SharpNeat.Neat.ComplexityRegulation.IComplexityRegulationStrategy.html#SharpNeat_Neat_ComplexityRegulation_IComplexityRegulationStrategy_CurrentMode
  commentId: P:SharpNeat.Neat.ComplexityRegulation.IComplexityRegulationStrategy.CurrentMode
  fullName: SharpNeat.Neat.ComplexityRegulation.IComplexityRegulationStrategy.CurrentMode
  nameWithType: IComplexityRegulationStrategy.CurrentMode
- uid: SharpNeat.Neat.ComplexityRegulation.IComplexityRegulationStrategy.CurrentMode*
  name: CurrentMode
  href: api/SharpNeat.Neat.ComplexityRegulation.IComplexityRegulationStrategy.html#SharpNeat_Neat_ComplexityRegulation_IComplexityRegulationStrategy_CurrentMode_
  commentId: Overload:SharpNeat.Neat.ComplexityRegulation.IComplexityRegulationStrategy.CurrentMode
  isSpec: "True"
  fullName: SharpNeat.Neat.ComplexityRegulation.IComplexityRegulationStrategy.CurrentMode
  nameWithType: IComplexityRegulationStrategy.CurrentMode
- uid: SharpNeat.Neat.ComplexityRegulation.IComplexityRegulationStrategy.UpdateMode(SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics,SharpNeat.EvolutionAlgorithm.PopulationStatistics)
  name: UpdateMode(EvolutionAlgorithmStatistics, PopulationStatistics)
  href: api/SharpNeat.Neat.ComplexityRegulation.IComplexityRegulationStrategy.html#SharpNeat_Neat_ComplexityRegulation_IComplexityRegulationStrategy_UpdateMode_SharpNeat_EvolutionAlgorithm_EvolutionAlgorithmStatistics_SharpNeat_EvolutionAlgorithm_PopulationStatistics_
  commentId: M:SharpNeat.Neat.ComplexityRegulation.IComplexityRegulationStrategy.UpdateMode(SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics,SharpNeat.EvolutionAlgorithm.PopulationStatistics)
  fullName: SharpNeat.Neat.ComplexityRegulation.IComplexityRegulationStrategy.UpdateMode(SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics, SharpNeat.EvolutionAlgorithm.PopulationStatistics)
  nameWithType: IComplexityRegulationStrategy.UpdateMode(EvolutionAlgorithmStatistics, PopulationStatistics)
- uid: SharpNeat.Neat.ComplexityRegulation.IComplexityRegulationStrategy.UpdateMode*
  name: UpdateMode
  href: api/SharpNeat.Neat.ComplexityRegulation.IComplexityRegulationStrategy.html#SharpNeat_Neat_ComplexityRegulation_IComplexityRegulationStrategy_UpdateMode_
  commentId: Overload:SharpNeat.Neat.ComplexityRegulation.IComplexityRegulationStrategy.UpdateMode
  isSpec: "True"
  fullName: SharpNeat.Neat.ComplexityRegulation.IComplexityRegulationStrategy.UpdateMode
  nameWithType: IComplexityRegulationStrategy.UpdateMode
- uid: SharpNeat.Neat.ComplexityRegulation.NullComplexityRegulationStrategy
  name: NullComplexityRegulationStrategy
  href: api/SharpNeat.Neat.ComplexityRegulation.NullComplexityRegulationStrategy.html
  commentId: T:SharpNeat.Neat.ComplexityRegulation.NullComplexityRegulationStrategy
  fullName: SharpNeat.Neat.ComplexityRegulation.NullComplexityRegulationStrategy
  nameWithType: NullComplexityRegulationStrategy
- uid: SharpNeat.Neat.ComplexityRegulation.NullComplexityRegulationStrategy.CurrentMode
  name: CurrentMode
  href: api/SharpNeat.Neat.ComplexityRegulation.NullComplexityRegulationStrategy.html#SharpNeat_Neat_ComplexityRegulation_NullComplexityRegulationStrategy_CurrentMode
  commentId: P:SharpNeat.Neat.ComplexityRegulation.NullComplexityRegulationStrategy.CurrentMode
  fullName: SharpNeat.Neat.ComplexityRegulation.NullComplexityRegulationStrategy.CurrentMode
  nameWithType: NullComplexityRegulationStrategy.CurrentMode
- uid: SharpNeat.Neat.ComplexityRegulation.NullComplexityRegulationStrategy.CurrentMode*
  name: CurrentMode
  href: api/SharpNeat.Neat.ComplexityRegulation.NullComplexityRegulationStrategy.html#SharpNeat_Neat_ComplexityRegulation_NullComplexityRegulationStrategy_CurrentMode_
  commentId: Overload:SharpNeat.Neat.ComplexityRegulation.NullComplexityRegulationStrategy.CurrentMode
  isSpec: "True"
  fullName: SharpNeat.Neat.ComplexityRegulation.NullComplexityRegulationStrategy.CurrentMode
  nameWithType: NullComplexityRegulationStrategy.CurrentMode
- uid: SharpNeat.Neat.ComplexityRegulation.NullComplexityRegulationStrategy.UpdateMode(SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics,SharpNeat.EvolutionAlgorithm.PopulationStatistics)
  name: UpdateMode(EvolutionAlgorithmStatistics, PopulationStatistics)
  href: api/SharpNeat.Neat.ComplexityRegulation.NullComplexityRegulationStrategy.html#SharpNeat_Neat_ComplexityRegulation_NullComplexityRegulationStrategy_UpdateMode_SharpNeat_EvolutionAlgorithm_EvolutionAlgorithmStatistics_SharpNeat_EvolutionAlgorithm_PopulationStatistics_
  commentId: M:SharpNeat.Neat.ComplexityRegulation.NullComplexityRegulationStrategy.UpdateMode(SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics,SharpNeat.EvolutionAlgorithm.PopulationStatistics)
  fullName: SharpNeat.Neat.ComplexityRegulation.NullComplexityRegulationStrategy.UpdateMode(SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics, SharpNeat.EvolutionAlgorithm.PopulationStatistics)
  nameWithType: NullComplexityRegulationStrategy.UpdateMode(EvolutionAlgorithmStatistics, PopulationStatistics)
- uid: SharpNeat.Neat.ComplexityRegulation.NullComplexityRegulationStrategy.UpdateMode*
  name: UpdateMode
  href: api/SharpNeat.Neat.ComplexityRegulation.NullComplexityRegulationStrategy.html#SharpNeat_Neat_ComplexityRegulation_NullComplexityRegulationStrategy_UpdateMode_
  commentId: Overload:SharpNeat.Neat.ComplexityRegulation.NullComplexityRegulationStrategy.UpdateMode
  isSpec: "True"
  fullName: SharpNeat.Neat.ComplexityRegulation.NullComplexityRegulationStrategy.UpdateMode
  nameWithType: NullComplexityRegulationStrategy.UpdateMode
- uid: SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategy
  name: RelativeComplexityRegulationStrategy
  href: api/SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategy.html
  commentId: T:SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategy
  fullName: SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategy
  nameWithType: RelativeComplexityRegulationStrategy
- uid: SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategy.#ctor(System.Int32,System.Double)
  name: RelativeComplexityRegulationStrategy(int, double)
  href: api/SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategy.html#SharpNeat_Neat_ComplexityRegulation_RelativeComplexityRegulationStrategy__ctor_System_Int32_System_Double_
  commentId: M:SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategy.#ctor(System.Int32,System.Double)
  name.vb: New(Integer, Double)
  fullName: SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategy.RelativeComplexityRegulationStrategy(int, double)
  fullName.vb: SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategy.New(Integer, Double)
  nameWithType: RelativeComplexityRegulationStrategy.RelativeComplexityRegulationStrategy(int, double)
  nameWithType.vb: RelativeComplexityRegulationStrategy.New(Integer, Double)
- uid: SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategy.#ctor*
  name: RelativeComplexityRegulationStrategy
  href: api/SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategy.html#SharpNeat_Neat_ComplexityRegulation_RelativeComplexityRegulationStrategy__ctor_
  commentId: Overload:SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategy.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategy.RelativeComplexityRegulationStrategy
  fullName.vb: SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategy.New
  nameWithType: RelativeComplexityRegulationStrategy.RelativeComplexityRegulationStrategy
  nameWithType.vb: RelativeComplexityRegulationStrategy.New
- uid: SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategy.CurrentMode
  name: CurrentMode
  href: api/SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategy.html#SharpNeat_Neat_ComplexityRegulation_RelativeComplexityRegulationStrategy_CurrentMode
  commentId: P:SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategy.CurrentMode
  fullName: SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategy.CurrentMode
  nameWithType: RelativeComplexityRegulationStrategy.CurrentMode
- uid: SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategy.CurrentMode*
  name: CurrentMode
  href: api/SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategy.html#SharpNeat_Neat_ComplexityRegulation_RelativeComplexityRegulationStrategy_CurrentMode_
  commentId: Overload:SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategy.CurrentMode
  isSpec: "True"
  fullName: SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategy.CurrentMode
  nameWithType: RelativeComplexityRegulationStrategy.CurrentMode
- uid: SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategy.UpdateMode(SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics,SharpNeat.EvolutionAlgorithm.PopulationStatistics)
  name: UpdateMode(EvolutionAlgorithmStatistics, PopulationStatistics)
  href: api/SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategy.html#SharpNeat_Neat_ComplexityRegulation_RelativeComplexityRegulationStrategy_UpdateMode_SharpNeat_EvolutionAlgorithm_EvolutionAlgorithmStatistics_SharpNeat_EvolutionAlgorithm_PopulationStatistics_
  commentId: M:SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategy.UpdateMode(SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics,SharpNeat.EvolutionAlgorithm.PopulationStatistics)
  fullName: SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategy.UpdateMode(SharpNeat.EvolutionAlgorithm.EvolutionAlgorithmStatistics, SharpNeat.EvolutionAlgorithm.PopulationStatistics)
  nameWithType: RelativeComplexityRegulationStrategy.UpdateMode(EvolutionAlgorithmStatistics, PopulationStatistics)
- uid: SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategy.UpdateMode*
  name: UpdateMode
  href: api/SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategy.html#SharpNeat_Neat_ComplexityRegulation_RelativeComplexityRegulationStrategy_UpdateMode_
  commentId: Overload:SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategy.UpdateMode
  isSpec: "True"
  fullName: SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategy.UpdateMode
  nameWithType: RelativeComplexityRegulationStrategy.UpdateMode
- uid: SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategyTests
  name: RelativeComplexityRegulationStrategyTests
  href: api/SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategyTests.html
  commentId: T:SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategyTests
  fullName: SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategyTests
  nameWithType: RelativeComplexityRegulationStrategyTests
- uid: SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategyTests.TestInitialisation
  name: TestInitialisation()
  href: api/SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategyTests.html#SharpNeat_Neat_ComplexityRegulation_RelativeComplexityRegulationStrategyTests_TestInitialisation
  commentId: M:SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategyTests.TestInitialisation
  fullName: SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategyTests.TestInitialisation()
  nameWithType: RelativeComplexityRegulationStrategyTests.TestInitialisation()
- uid: SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategyTests.TestInitialisation*
  name: TestInitialisation
  href: api/SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategyTests.html#SharpNeat_Neat_ComplexityRegulation_RelativeComplexityRegulationStrategyTests_TestInitialisation_
  commentId: Overload:SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategyTests.TestInitialisation
  isSpec: "True"
  fullName: SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategyTests.TestInitialisation
  nameWithType: RelativeComplexityRegulationStrategyTests.TestInitialisation
- uid: SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategyTests.TestTransitionToComplexifying
  name: TestTransitionToComplexifying()
  href: api/SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategyTests.html#SharpNeat_Neat_ComplexityRegulation_RelativeComplexityRegulationStrategyTests_TestTransitionToComplexifying
  commentId: M:SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategyTests.TestTransitionToComplexifying
  fullName: SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategyTests.TestTransitionToComplexifying()
  nameWithType: RelativeComplexityRegulationStrategyTests.TestTransitionToComplexifying()
- uid: SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategyTests.TestTransitionToComplexifying*
  name: TestTransitionToComplexifying
  href: api/SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategyTests.html#SharpNeat_Neat_ComplexityRegulation_RelativeComplexityRegulationStrategyTests_TestTransitionToComplexifying_
  commentId: Overload:SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategyTests.TestTransitionToComplexifying
  isSpec: "True"
  fullName: SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategyTests.TestTransitionToComplexifying
  nameWithType: RelativeComplexityRegulationStrategyTests.TestTransitionToComplexifying
- uid: SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategyTests.TestTransitionToSimplifying
  name: TestTransitionToSimplifying()
  href: api/SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategyTests.html#SharpNeat_Neat_ComplexityRegulation_RelativeComplexityRegulationStrategyTests_TestTransitionToSimplifying
  commentId: M:SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategyTests.TestTransitionToSimplifying
  fullName: SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategyTests.TestTransitionToSimplifying()
  nameWithType: RelativeComplexityRegulationStrategyTests.TestTransitionToSimplifying()
- uid: SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategyTests.TestTransitionToSimplifying*
  name: TestTransitionToSimplifying
  href: api/SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategyTests.html#SharpNeat_Neat_ComplexityRegulation_RelativeComplexityRegulationStrategyTests_TestTransitionToSimplifying_
  commentId: Overload:SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategyTests.TestTransitionToSimplifying
  isSpec: "True"
  fullName: SharpNeat.Neat.ComplexityRegulation.RelativeComplexityRegulationStrategyTests.TestTransitionToSimplifying
  nameWithType: RelativeComplexityRegulationStrategyTests.TestTransitionToSimplifying
- uid: SharpNeat.Neat.DistanceMetrics
  name: SharpNeat.Neat.DistanceMetrics
  href: api/SharpNeat.Neat.DistanceMetrics.html
  commentId: N:SharpNeat.Neat.DistanceMetrics
  fullName: SharpNeat.Neat.DistanceMetrics
  nameWithType: SharpNeat.Neat.DistanceMetrics
- uid: SharpNeat.Neat.DistanceMetrics.DistanceMetricExtensions
  name: DistanceMetricExtensions
  href: api/SharpNeat.Neat.DistanceMetrics.DistanceMetricExtensions.html
  commentId: T:SharpNeat.Neat.DistanceMetrics.DistanceMetricExtensions
  fullName: SharpNeat.Neat.DistanceMetrics.DistanceMetricExtensions
  nameWithType: DistanceMetricExtensions
- uid: SharpNeat.Neat.DistanceMetrics.DistanceMetricExtensions.CalculateCentroid*
  name: CalculateCentroid
  href: api/SharpNeat.Neat.DistanceMetrics.DistanceMetricExtensions.html#SharpNeat_Neat_DistanceMetrics_DistanceMetricExtensions_CalculateCentroid_
  commentId: Overload:SharpNeat.Neat.DistanceMetrics.DistanceMetricExtensions.CalculateCentroid
  isSpec: "True"
  fullName: SharpNeat.Neat.DistanceMetrics.DistanceMetricExtensions.CalculateCentroid
  nameWithType: DistanceMetricExtensions.CalculateCentroid
- uid: SharpNeat.Neat.DistanceMetrics.DistanceMetricExtensions.CalculateCentroid``1(SharpNeat.Neat.DistanceMetrics.IDistanceMetric{``0},System.Collections.Generic.List{SharpNeat.Neat.Genome.ConnectionGenes{``0}})
  name: CalculateCentroid<T>(IDistanceMetric<T>, List<ConnectionGenes<T>>)
  href: api/SharpNeat.Neat.DistanceMetrics.DistanceMetricExtensions.html#SharpNeat_Neat_DistanceMetrics_DistanceMetricExtensions_CalculateCentroid__1_SharpNeat_Neat_DistanceMetrics_IDistanceMetric___0__System_Collections_Generic_List_SharpNeat_Neat_Genome_ConnectionGenes___0___
  commentId: M:SharpNeat.Neat.DistanceMetrics.DistanceMetricExtensions.CalculateCentroid``1(SharpNeat.Neat.DistanceMetrics.IDistanceMetric{``0},System.Collections.Generic.List{SharpNeat.Neat.Genome.ConnectionGenes{``0}})
  name.vb: CalculateCentroid(Of T)(IDistanceMetric(Of T), List(Of ConnectionGenes(Of T)))
  fullName: SharpNeat.Neat.DistanceMetrics.DistanceMetricExtensions.CalculateCentroid<T>(SharpNeat.Neat.DistanceMetrics.IDistanceMetric<T>, System.Collections.Generic.List<SharpNeat.Neat.Genome.ConnectionGenes<T>>)
  fullName.vb: SharpNeat.Neat.DistanceMetrics.DistanceMetricExtensions.CalculateCentroid(Of T)(SharpNeat.Neat.DistanceMetrics.IDistanceMetric(Of T), System.Collections.Generic.List(Of SharpNeat.Neat.Genome.ConnectionGenes(Of T)))
  nameWithType: DistanceMetricExtensions.CalculateCentroid<T>(IDistanceMetric<T>, List<ConnectionGenes<T>>)
  nameWithType.vb: DistanceMetricExtensions.CalculateCentroid(Of T)(IDistanceMetric(Of T), List(Of ConnectionGenes(Of T)))
- uid: SharpNeat.Neat.DistanceMetrics.DistanceMetricUtilsBenchmarks
  name: DistanceMetricUtilsBenchmarks
  href: api/SharpNeat.Neat.DistanceMetrics.DistanceMetricUtilsBenchmarks.html
  commentId: T:SharpNeat.Neat.DistanceMetrics.DistanceMetricUtilsBenchmarks
  fullName: SharpNeat.Neat.DistanceMetrics.DistanceMetricUtilsBenchmarks
  nameWithType: DistanceMetricUtilsBenchmarks
- uid: SharpNeat.Neat.DistanceMetrics.DistanceMetricUtilsBenchmarks.#ctor
  name: DistanceMetricUtilsBenchmarks()
  href: api/SharpNeat.Neat.DistanceMetrics.DistanceMetricUtilsBenchmarks.html#SharpNeat_Neat_DistanceMetrics_DistanceMetricUtilsBenchmarks__ctor
  commentId: M:SharpNeat.Neat.DistanceMetrics.DistanceMetricUtilsBenchmarks.#ctor
  name.vb: New()
  fullName: SharpNeat.Neat.DistanceMetrics.DistanceMetricUtilsBenchmarks.DistanceMetricUtilsBenchmarks()
  fullName.vb: SharpNeat.Neat.DistanceMetrics.DistanceMetricUtilsBenchmarks.New()
  nameWithType: DistanceMetricUtilsBenchmarks.DistanceMetricUtilsBenchmarks()
  nameWithType.vb: DistanceMetricUtilsBenchmarks.New()
- uid: SharpNeat.Neat.DistanceMetrics.DistanceMetricUtilsBenchmarks.#ctor*
  name: DistanceMetricUtilsBenchmarks
  href: api/SharpNeat.Neat.DistanceMetrics.DistanceMetricUtilsBenchmarks.html#SharpNeat_Neat_DistanceMetrics_DistanceMetricUtilsBenchmarks__ctor_
  commentId: Overload:SharpNeat.Neat.DistanceMetrics.DistanceMetricUtilsBenchmarks.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Neat.DistanceMetrics.DistanceMetricUtilsBenchmarks.DistanceMetricUtilsBenchmarks
  fullName.vb: SharpNeat.Neat.DistanceMetrics.DistanceMetricUtilsBenchmarks.New
  nameWithType: DistanceMetricUtilsBenchmarks.DistanceMetricUtilsBenchmarks
  nameWithType.vb: DistanceMetricUtilsBenchmarks.New
- uid: SharpNeat.Neat.DistanceMetrics.DistanceMetricUtilsBenchmarks.CalculateEuclideanCentroid
  name: CalculateEuclideanCentroid()
  href: api/SharpNeat.Neat.DistanceMetrics.DistanceMetricUtilsBenchmarks.html#SharpNeat_Neat_DistanceMetrics_DistanceMetricUtilsBenchmarks_CalculateEuclideanCentroid
  commentId: M:SharpNeat.Neat.DistanceMetrics.DistanceMetricUtilsBenchmarks.CalculateEuclideanCentroid
  fullName: SharpNeat.Neat.DistanceMetrics.DistanceMetricUtilsBenchmarks.CalculateEuclideanCentroid()
  nameWithType: DistanceMetricUtilsBenchmarks.CalculateEuclideanCentroid()
- uid: SharpNeat.Neat.DistanceMetrics.DistanceMetricUtilsBenchmarks.CalculateEuclideanCentroid*
  name: CalculateEuclideanCentroid
  href: api/SharpNeat.Neat.DistanceMetrics.DistanceMetricUtilsBenchmarks.html#SharpNeat_Neat_DistanceMetrics_DistanceMetricUtilsBenchmarks_CalculateEuclideanCentroid_
  commentId: Overload:SharpNeat.Neat.DistanceMetrics.DistanceMetricUtilsBenchmarks.CalculateEuclideanCentroid
  isSpec: "True"
  fullName: SharpNeat.Neat.DistanceMetrics.DistanceMetricUtilsBenchmarks.CalculateEuclideanCentroid
  nameWithType: DistanceMetricUtilsBenchmarks.CalculateEuclideanCentroid
- uid: SharpNeat.Neat.DistanceMetrics.Double
  name: SharpNeat.Neat.DistanceMetrics.Double
  href: api/SharpNeat.Neat.DistanceMetrics.Double.html
  commentId: N:SharpNeat.Neat.DistanceMetrics.Double
  fullName: SharpNeat.Neat.DistanceMetrics.Double
  nameWithType: SharpNeat.Neat.DistanceMetrics.Double
- uid: SharpNeat.Neat.DistanceMetrics.Double.DistanceMetricExtensions
  name: DistanceMetricExtensions
  href: api/SharpNeat.Neat.DistanceMetrics.Double.DistanceMetricExtensions.html
  commentId: T:SharpNeat.Neat.DistanceMetrics.Double.DistanceMetricExtensions
  fullName: SharpNeat.Neat.DistanceMetrics.Double.DistanceMetricExtensions
  nameWithType: DistanceMetricExtensions
- uid: SharpNeat.Neat.DistanceMetrics.Double.DistanceMetricExtensions.FindMedoid(SharpNeat.Neat.DistanceMetrics.IDistanceMetric{System.Double},System.ReadOnlySpan{SharpNeat.Neat.Genome.ConnectionGenes{System.Double}})
  name: FindMedoid(IDistanceMetric<double>, ReadOnlySpan<ConnectionGenes<double>>)
  href: api/SharpNeat.Neat.DistanceMetrics.Double.DistanceMetricExtensions.html#SharpNeat_Neat_DistanceMetrics_Double_DistanceMetricExtensions_FindMedoid_SharpNeat_Neat_DistanceMetrics_IDistanceMetric_System_Double__System_ReadOnlySpan_SharpNeat_Neat_Genome_ConnectionGenes_System_Double___
  commentId: M:SharpNeat.Neat.DistanceMetrics.Double.DistanceMetricExtensions.FindMedoid(SharpNeat.Neat.DistanceMetrics.IDistanceMetric{System.Double},System.ReadOnlySpan{SharpNeat.Neat.Genome.ConnectionGenes{System.Double}})
  name.vb: FindMedoid(IDistanceMetric(Of Double), ReadOnlySpan(Of ConnectionGenes(Of Double)))
  fullName: SharpNeat.Neat.DistanceMetrics.Double.DistanceMetricExtensions.FindMedoid(SharpNeat.Neat.DistanceMetrics.IDistanceMetric<double>, System.ReadOnlySpan<SharpNeat.Neat.Genome.ConnectionGenes<double>>)
  fullName.vb: SharpNeat.Neat.DistanceMetrics.Double.DistanceMetricExtensions.FindMedoid(SharpNeat.Neat.DistanceMetrics.IDistanceMetric(Of Double), System.ReadOnlySpan(Of SharpNeat.Neat.Genome.ConnectionGenes(Of Double)))
  nameWithType: DistanceMetricExtensions.FindMedoid(IDistanceMetric<double>, ReadOnlySpan<ConnectionGenes<double>>)
  nameWithType.vb: DistanceMetricExtensions.FindMedoid(IDistanceMetric(Of Double), ReadOnlySpan(Of ConnectionGenes(Of Double)))
- uid: SharpNeat.Neat.DistanceMetrics.Double.DistanceMetricExtensions.FindMedoid*
  name: FindMedoid
  href: api/SharpNeat.Neat.DistanceMetrics.Double.DistanceMetricExtensions.html#SharpNeat_Neat_DistanceMetrics_Double_DistanceMetricExtensions_FindMedoid_
  commentId: Overload:SharpNeat.Neat.DistanceMetrics.Double.DistanceMetricExtensions.FindMedoid
  isSpec: "True"
  fullName: SharpNeat.Neat.DistanceMetrics.Double.DistanceMetricExtensions.FindMedoid
  nameWithType: DistanceMetricExtensions.FindMedoid
- uid: SharpNeat.Neat.DistanceMetrics.Double.DistanceMetricsUtilsTests
  name: DistanceMetricsUtilsTests
  href: api/SharpNeat.Neat.DistanceMetrics.Double.DistanceMetricsUtilsTests.html
  commentId: T:SharpNeat.Neat.DistanceMetrics.Double.DistanceMetricsUtilsTests
  fullName: SharpNeat.Neat.DistanceMetrics.Double.DistanceMetricsUtilsTests
  nameWithType: DistanceMetricsUtilsTests
- uid: SharpNeat.Neat.DistanceMetrics.Double.DistanceMetricsUtilsTests.CalculateEuclideanCentroid
  name: CalculateEuclideanCentroid()
  href: api/SharpNeat.Neat.DistanceMetrics.Double.DistanceMetricsUtilsTests.html#SharpNeat_Neat_DistanceMetrics_Double_DistanceMetricsUtilsTests_CalculateEuclideanCentroid
  commentId: M:SharpNeat.Neat.DistanceMetrics.Double.DistanceMetricsUtilsTests.CalculateEuclideanCentroid
  fullName: SharpNeat.Neat.DistanceMetrics.Double.DistanceMetricsUtilsTests.CalculateEuclideanCentroid()
  nameWithType: DistanceMetricsUtilsTests.CalculateEuclideanCentroid()
- uid: SharpNeat.Neat.DistanceMetrics.Double.DistanceMetricsUtilsTests.CalculateEuclideanCentroid*
  name: CalculateEuclideanCentroid
  href: api/SharpNeat.Neat.DistanceMetrics.Double.DistanceMetricsUtilsTests.html#SharpNeat_Neat_DistanceMetrics_Double_DistanceMetricsUtilsTests_CalculateEuclideanCentroid_
  commentId: Overload:SharpNeat.Neat.DistanceMetrics.Double.DistanceMetricsUtilsTests.CalculateEuclideanCentroid
  isSpec: "True"
  fullName: SharpNeat.Neat.DistanceMetrics.Double.DistanceMetricsUtilsTests.CalculateEuclideanCentroid
  nameWithType: DistanceMetricsUtilsTests.CalculateEuclideanCentroid
- uid: SharpNeat.Neat.DistanceMetrics.Double.DistanceMetricUtils
  name: DistanceMetricUtils
  href: api/SharpNeat.Neat.DistanceMetrics.Double.DistanceMetricUtils.html
  commentId: T:SharpNeat.Neat.DistanceMetrics.Double.DistanceMetricUtils
  fullName: SharpNeat.Neat.DistanceMetrics.Double.DistanceMetricUtils
  nameWithType: DistanceMetricUtils
- uid: SharpNeat.Neat.DistanceMetrics.Double.DistanceMetricUtils.CalculateEuclideanCentroid(System.ReadOnlySpan{SharpNeat.Neat.Genome.ConnectionGenes{System.Double}})
  name: CalculateEuclideanCentroid(ReadOnlySpan<ConnectionGenes<double>>)
  href: api/SharpNeat.Neat.DistanceMetrics.Double.DistanceMetricUtils.html#SharpNeat_Neat_DistanceMetrics_Double_DistanceMetricUtils_CalculateEuclideanCentroid_System_ReadOnlySpan_SharpNeat_Neat_Genome_ConnectionGenes_System_Double___
  commentId: M:SharpNeat.Neat.DistanceMetrics.Double.DistanceMetricUtils.CalculateEuclideanCentroid(System.ReadOnlySpan{SharpNeat.Neat.Genome.ConnectionGenes{System.Double}})
  name.vb: CalculateEuclideanCentroid(ReadOnlySpan(Of ConnectionGenes(Of Double)))
  fullName: SharpNeat.Neat.DistanceMetrics.Double.DistanceMetricUtils.CalculateEuclideanCentroid(System.ReadOnlySpan<SharpNeat.Neat.Genome.ConnectionGenes<double>>)
  fullName.vb: SharpNeat.Neat.DistanceMetrics.Double.DistanceMetricUtils.CalculateEuclideanCentroid(System.ReadOnlySpan(Of SharpNeat.Neat.Genome.ConnectionGenes(Of Double)))
  nameWithType: DistanceMetricUtils.CalculateEuclideanCentroid(ReadOnlySpan<ConnectionGenes<double>>)
  nameWithType.vb: DistanceMetricUtils.CalculateEuclideanCentroid(ReadOnlySpan(Of ConnectionGenes(Of Double)))
- uid: SharpNeat.Neat.DistanceMetrics.Double.DistanceMetricUtils.CalculateEuclideanCentroid*
  name: CalculateEuclideanCentroid
  href: api/SharpNeat.Neat.DistanceMetrics.Double.DistanceMetricUtils.html#SharpNeat_Neat_DistanceMetrics_Double_DistanceMetricUtils_CalculateEuclideanCentroid_
  commentId: Overload:SharpNeat.Neat.DistanceMetrics.Double.DistanceMetricUtils.CalculateEuclideanCentroid
  isSpec: "True"
  fullName: SharpNeat.Neat.DistanceMetrics.Double.DistanceMetricUtils.CalculateEuclideanCentroid
  nameWithType: DistanceMetricUtils.CalculateEuclideanCentroid
- uid: SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetric
  name: EuclideanDistanceMetric
  href: api/SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetric.html
  commentId: T:SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetric
  fullName: SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetric
  nameWithType: EuclideanDistanceMetric
- uid: SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetric.CalcDistance(SharpNeat.Neat.Genome.ConnectionGenes{System.Double},SharpNeat.Neat.Genome.ConnectionGenes{System.Double})
  name: CalcDistance(ConnectionGenes<double>, ConnectionGenes<double>)
  href: api/SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetric.html#SharpNeat_Neat_DistanceMetrics_Double_EuclideanDistanceMetric_CalcDistance_SharpNeat_Neat_Genome_ConnectionGenes_System_Double__SharpNeat_Neat_Genome_ConnectionGenes_System_Double__
  commentId: M:SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetric.CalcDistance(SharpNeat.Neat.Genome.ConnectionGenes{System.Double},SharpNeat.Neat.Genome.ConnectionGenes{System.Double})
  name.vb: CalcDistance(ConnectionGenes(Of Double), ConnectionGenes(Of Double))
  fullName: SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetric.CalcDistance(SharpNeat.Neat.Genome.ConnectionGenes<double>, SharpNeat.Neat.Genome.ConnectionGenes<double>)
  fullName.vb: SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetric.CalcDistance(SharpNeat.Neat.Genome.ConnectionGenes(Of Double), SharpNeat.Neat.Genome.ConnectionGenes(Of Double))
  nameWithType: EuclideanDistanceMetric.CalcDistance(ConnectionGenes<double>, ConnectionGenes<double>)
  nameWithType.vb: EuclideanDistanceMetric.CalcDistance(ConnectionGenes(Of Double), ConnectionGenes(Of Double))
- uid: SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetric.CalcDistance*
  name: CalcDistance
  href: api/SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetric.html#SharpNeat_Neat_DistanceMetrics_Double_EuclideanDistanceMetric_CalcDistance_
  commentId: Overload:SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetric.CalcDistance
  isSpec: "True"
  fullName: SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetric.CalcDistance
  nameWithType: EuclideanDistanceMetric.CalcDistance
- uid: SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetric.CalculateCentroid(System.ReadOnlySpan{SharpNeat.Neat.Genome.ConnectionGenes{System.Double}})
  name: CalculateCentroid(ReadOnlySpan<ConnectionGenes<double>>)
  href: api/SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetric.html#SharpNeat_Neat_DistanceMetrics_Double_EuclideanDistanceMetric_CalculateCentroid_System_ReadOnlySpan_SharpNeat_Neat_Genome_ConnectionGenes_System_Double___
  commentId: M:SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetric.CalculateCentroid(System.ReadOnlySpan{SharpNeat.Neat.Genome.ConnectionGenes{System.Double}})
  name.vb: CalculateCentroid(ReadOnlySpan(Of ConnectionGenes(Of Double)))
  fullName: SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetric.CalculateCentroid(System.ReadOnlySpan<SharpNeat.Neat.Genome.ConnectionGenes<double>>)
  fullName.vb: SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetric.CalculateCentroid(System.ReadOnlySpan(Of SharpNeat.Neat.Genome.ConnectionGenes(Of Double)))
  nameWithType: EuclideanDistanceMetric.CalculateCentroid(ReadOnlySpan<ConnectionGenes<double>>)
  nameWithType.vb: EuclideanDistanceMetric.CalculateCentroid(ReadOnlySpan(Of ConnectionGenes(Of Double)))
- uid: SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetric.CalculateCentroid*
  name: CalculateCentroid
  href: api/SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetric.html#SharpNeat_Neat_DistanceMetrics_Double_EuclideanDistanceMetric_CalculateCentroid_
  commentId: Overload:SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetric.CalculateCentroid
  isSpec: "True"
  fullName: SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetric.CalculateCentroid
  nameWithType: EuclideanDistanceMetric.CalculateCentroid
- uid: SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetric.TestDistance(SharpNeat.Neat.Genome.ConnectionGenes{System.Double},SharpNeat.Neat.Genome.ConnectionGenes{System.Double},System.Double)
  name: TestDistance(ConnectionGenes<double>, ConnectionGenes<double>, double)
  href: api/SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetric.html#SharpNeat_Neat_DistanceMetrics_Double_EuclideanDistanceMetric_TestDistance_SharpNeat_Neat_Genome_ConnectionGenes_System_Double__SharpNeat_Neat_Genome_ConnectionGenes_System_Double__System_Double_
  commentId: M:SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetric.TestDistance(SharpNeat.Neat.Genome.ConnectionGenes{System.Double},SharpNeat.Neat.Genome.ConnectionGenes{System.Double},System.Double)
  name.vb: TestDistance(ConnectionGenes(Of Double), ConnectionGenes(Of Double), Double)
  fullName: SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetric.TestDistance(SharpNeat.Neat.Genome.ConnectionGenes<double>, SharpNeat.Neat.Genome.ConnectionGenes<double>, double)
  fullName.vb: SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetric.TestDistance(SharpNeat.Neat.Genome.ConnectionGenes(Of Double), SharpNeat.Neat.Genome.ConnectionGenes(Of Double), Double)
  nameWithType: EuclideanDistanceMetric.TestDistance(ConnectionGenes<double>, ConnectionGenes<double>, double)
  nameWithType.vb: EuclideanDistanceMetric.TestDistance(ConnectionGenes(Of Double), ConnectionGenes(Of Double), Double)
- uid: SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetric.TestDistance*
  name: TestDistance
  href: api/SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetric.html#SharpNeat_Neat_DistanceMetrics_Double_EuclideanDistanceMetric_TestDistance_
  commentId: Overload:SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetric.TestDistance
  isSpec: "True"
  fullName: SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetric.TestDistance
  nameWithType: EuclideanDistanceMetric.TestDistance
- uid: SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetricTests
  name: EuclideanDistanceMetricTests
  href: api/SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetricTests.html
  commentId: T:SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetricTests
  fullName: SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetricTests
  nameWithType: EuclideanDistanceMetricTests
- uid: SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetricTests.TestMatchingGenomes
  name: TestMatchingGenomes()
  href: api/SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetricTests.html#SharpNeat_Neat_DistanceMetrics_Double_EuclideanDistanceMetricTests_TestMatchingGenomes
  commentId: M:SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetricTests.TestMatchingGenomes
  fullName: SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetricTests.TestMatchingGenomes()
  nameWithType: EuclideanDistanceMetricTests.TestMatchingGenomes()
- uid: SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetricTests.TestMatchingGenomes*
  name: TestMatchingGenomes
  href: api/SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetricTests.html#SharpNeat_Neat_DistanceMetrics_Double_EuclideanDistanceMetricTests_TestMatchingGenomes_
  commentId: Overload:SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetricTests.TestMatchingGenomes
  isSpec: "True"
  fullName: SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetricTests.TestMatchingGenomes
  nameWithType: EuclideanDistanceMetricTests.TestMatchingGenomes
- uid: SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetricTests.TestMismatchGenomes
  name: TestMismatchGenomes()
  href: api/SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetricTests.html#SharpNeat_Neat_DistanceMetrics_Double_EuclideanDistanceMetricTests_TestMismatchGenomes
  commentId: M:SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetricTests.TestMismatchGenomes
  fullName: SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetricTests.TestMismatchGenomes()
  nameWithType: EuclideanDistanceMetricTests.TestMismatchGenomes()
- uid: SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetricTests.TestMismatchGenomes*
  name: TestMismatchGenomes
  href: api/SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetricTests.html#SharpNeat_Neat_DistanceMetrics_Double_EuclideanDistanceMetricTests_TestMismatchGenomes_
  commentId: Overload:SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetricTests.TestMismatchGenomes
  isSpec: "True"
  fullName: SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetricTests.TestMismatchGenomes
  nameWithType: EuclideanDistanceMetricTests.TestMismatchGenomes
- uid: SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetricTests.TestPartialMatchGenomes
  name: TestPartialMatchGenomes()
  href: api/SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetricTests.html#SharpNeat_Neat_DistanceMetrics_Double_EuclideanDistanceMetricTests_TestPartialMatchGenomes
  commentId: M:SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetricTests.TestPartialMatchGenomes
  fullName: SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetricTests.TestPartialMatchGenomes()
  nameWithType: EuclideanDistanceMetricTests.TestPartialMatchGenomes()
- uid: SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetricTests.TestPartialMatchGenomes*
  name: TestPartialMatchGenomes
  href: api/SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetricTests.html#SharpNeat_Neat_DistanceMetrics_Double_EuclideanDistanceMetricTests_TestPartialMatchGenomes_
  commentId: Overload:SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetricTests.TestPartialMatchGenomes
  isSpec: "True"
  fullName: SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetricTests.TestPartialMatchGenomes
  nameWithType: EuclideanDistanceMetricTests.TestPartialMatchGenomes
- uid: SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetricTests.TestPythagoras
  name: TestPythagoras()
  href: api/SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetricTests.html#SharpNeat_Neat_DistanceMetrics_Double_EuclideanDistanceMetricTests_TestPythagoras
  commentId: M:SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetricTests.TestPythagoras
  fullName: SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetricTests.TestPythagoras()
  nameWithType: EuclideanDistanceMetricTests.TestPythagoras()
- uid: SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetricTests.TestPythagoras*
  name: TestPythagoras
  href: api/SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetricTests.html#SharpNeat_Neat_DistanceMetrics_Double_EuclideanDistanceMetricTests_TestPythagoras_
  commentId: Overload:SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetricTests.TestPythagoras
  isSpec: "True"
  fullName: SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetricTests.TestPythagoras
  nameWithType: EuclideanDistanceMetricTests.TestPythagoras
- uid: SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetricTests.TestSingleMatchGenomes
  name: TestSingleMatchGenomes()
  href: api/SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetricTests.html#SharpNeat_Neat_DistanceMetrics_Double_EuclideanDistanceMetricTests_TestSingleMatchGenomes
  commentId: M:SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetricTests.TestSingleMatchGenomes
  fullName: SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetricTests.TestSingleMatchGenomes()
  nameWithType: EuclideanDistanceMetricTests.TestSingleMatchGenomes()
- uid: SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetricTests.TestSingleMatchGenomes*
  name: TestSingleMatchGenomes
  href: api/SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetricTests.html#SharpNeat_Neat_DistanceMetrics_Double_EuclideanDistanceMetricTests_TestSingleMatchGenomes_
  commentId: Overload:SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetricTests.TestSingleMatchGenomes
  isSpec: "True"
  fullName: SharpNeat.Neat.DistanceMetrics.Double.EuclideanDistanceMetricTests.TestSingleMatchGenomes
  nameWithType: EuclideanDistanceMetricTests.TestSingleMatchGenomes
- uid: SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetric
  name: ManhattanDistanceMetric
  href: api/SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetric.html
  commentId: T:SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetric
  fullName: SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetric
  nameWithType: ManhattanDistanceMetric
- uid: SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetric.#ctor
  name: ManhattanDistanceMetric()
  href: api/SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetric.html#SharpNeat_Neat_DistanceMetrics_Double_ManhattanDistanceMetric__ctor
  commentId: M:SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetric.#ctor
  name.vb: New()
  fullName: SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetric.ManhattanDistanceMetric()
  fullName.vb: SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetric.New()
  nameWithType: ManhattanDistanceMetric.ManhattanDistanceMetric()
  nameWithType.vb: ManhattanDistanceMetric.New()
- uid: SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetric.#ctor(System.Double,System.Double,System.Double)
  name: ManhattanDistanceMetric(double, double, double)
  href: api/SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetric.html#SharpNeat_Neat_DistanceMetrics_Double_ManhattanDistanceMetric__ctor_System_Double_System_Double_System_Double_
  commentId: M:SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetric.#ctor(System.Double,System.Double,System.Double)
  name.vb: New(Double, Double, Double)
  fullName: SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetric.ManhattanDistanceMetric(double, double, double)
  fullName.vb: SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetric.New(Double, Double, Double)
  nameWithType: ManhattanDistanceMetric.ManhattanDistanceMetric(double, double, double)
  nameWithType.vb: ManhattanDistanceMetric.New(Double, Double, Double)
- uid: SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetric.#ctor*
  name: ManhattanDistanceMetric
  href: api/SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetric.html#SharpNeat_Neat_DistanceMetrics_Double_ManhattanDistanceMetric__ctor_
  commentId: Overload:SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetric.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetric.ManhattanDistanceMetric
  fullName.vb: SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetric.New
  nameWithType: ManhattanDistanceMetric.ManhattanDistanceMetric
  nameWithType.vb: ManhattanDistanceMetric.New
- uid: SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetric.CalcDistance(SharpNeat.Neat.Genome.ConnectionGenes{System.Double},SharpNeat.Neat.Genome.ConnectionGenes{System.Double})
  name: CalcDistance(ConnectionGenes<double>, ConnectionGenes<double>)
  href: api/SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetric.html#SharpNeat_Neat_DistanceMetrics_Double_ManhattanDistanceMetric_CalcDistance_SharpNeat_Neat_Genome_ConnectionGenes_System_Double__SharpNeat_Neat_Genome_ConnectionGenes_System_Double__
  commentId: M:SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetric.CalcDistance(SharpNeat.Neat.Genome.ConnectionGenes{System.Double},SharpNeat.Neat.Genome.ConnectionGenes{System.Double})
  name.vb: CalcDistance(ConnectionGenes(Of Double), ConnectionGenes(Of Double))
  fullName: SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetric.CalcDistance(SharpNeat.Neat.Genome.ConnectionGenes<double>, SharpNeat.Neat.Genome.ConnectionGenes<double>)
  fullName.vb: SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetric.CalcDistance(SharpNeat.Neat.Genome.ConnectionGenes(Of Double), SharpNeat.Neat.Genome.ConnectionGenes(Of Double))
  nameWithType: ManhattanDistanceMetric.CalcDistance(ConnectionGenes<double>, ConnectionGenes<double>)
  nameWithType.vb: ManhattanDistanceMetric.CalcDistance(ConnectionGenes(Of Double), ConnectionGenes(Of Double))
- uid: SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetric.CalcDistance*
  name: CalcDistance
  href: api/SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetric.html#SharpNeat_Neat_DistanceMetrics_Double_ManhattanDistanceMetric_CalcDistance_
  commentId: Overload:SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetric.CalcDistance
  isSpec: "True"
  fullName: SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetric.CalcDistance
  nameWithType: ManhattanDistanceMetric.CalcDistance
- uid: SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetric.CalculateCentroid(System.ReadOnlySpan{SharpNeat.Neat.Genome.ConnectionGenes{System.Double}})
  name: CalculateCentroid(ReadOnlySpan<ConnectionGenes<double>>)
  href: api/SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetric.html#SharpNeat_Neat_DistanceMetrics_Double_ManhattanDistanceMetric_CalculateCentroid_System_ReadOnlySpan_SharpNeat_Neat_Genome_ConnectionGenes_System_Double___
  commentId: M:SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetric.CalculateCentroid(System.ReadOnlySpan{SharpNeat.Neat.Genome.ConnectionGenes{System.Double}})
  name.vb: CalculateCentroid(ReadOnlySpan(Of ConnectionGenes(Of Double)))
  fullName: SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetric.CalculateCentroid(System.ReadOnlySpan<SharpNeat.Neat.Genome.ConnectionGenes<double>>)
  fullName.vb: SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetric.CalculateCentroid(System.ReadOnlySpan(Of SharpNeat.Neat.Genome.ConnectionGenes(Of Double)))
  nameWithType: ManhattanDistanceMetric.CalculateCentroid(ReadOnlySpan<ConnectionGenes<double>>)
  nameWithType.vb: ManhattanDistanceMetric.CalculateCentroid(ReadOnlySpan(Of ConnectionGenes(Of Double)))
- uid: SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetric.CalculateCentroid*
  name: CalculateCentroid
  href: api/SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetric.html#SharpNeat_Neat_DistanceMetrics_Double_ManhattanDistanceMetric_CalculateCentroid_
  commentId: Overload:SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetric.CalculateCentroid
  isSpec: "True"
  fullName: SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetric.CalculateCentroid
  nameWithType: ManhattanDistanceMetric.CalculateCentroid
- uid: SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetric.TestDistance(SharpNeat.Neat.Genome.ConnectionGenes{System.Double},SharpNeat.Neat.Genome.ConnectionGenes{System.Double},System.Double)
  name: TestDistance(ConnectionGenes<double>, ConnectionGenes<double>, double)
  href: api/SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetric.html#SharpNeat_Neat_DistanceMetrics_Double_ManhattanDistanceMetric_TestDistance_SharpNeat_Neat_Genome_ConnectionGenes_System_Double__SharpNeat_Neat_Genome_ConnectionGenes_System_Double__System_Double_
  commentId: M:SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetric.TestDistance(SharpNeat.Neat.Genome.ConnectionGenes{System.Double},SharpNeat.Neat.Genome.ConnectionGenes{System.Double},System.Double)
  name.vb: TestDistance(ConnectionGenes(Of Double), ConnectionGenes(Of Double), Double)
  fullName: SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetric.TestDistance(SharpNeat.Neat.Genome.ConnectionGenes<double>, SharpNeat.Neat.Genome.ConnectionGenes<double>, double)
  fullName.vb: SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetric.TestDistance(SharpNeat.Neat.Genome.ConnectionGenes(Of Double), SharpNeat.Neat.Genome.ConnectionGenes(Of Double), Double)
  nameWithType: ManhattanDistanceMetric.TestDistance(ConnectionGenes<double>, ConnectionGenes<double>, double)
  nameWithType.vb: ManhattanDistanceMetric.TestDistance(ConnectionGenes(Of Double), ConnectionGenes(Of Double), Double)
- uid: SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetric.TestDistance*
  name: TestDistance
  href: api/SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetric.html#SharpNeat_Neat_DistanceMetrics_Double_ManhattanDistanceMetric_TestDistance_
  commentId: Overload:SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetric.TestDistance
  isSpec: "True"
  fullName: SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetric.TestDistance
  nameWithType: ManhattanDistanceMetric.TestDistance
- uid: SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetricTests
  name: ManhattanDistanceMetricTests
  href: api/SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetricTests.html
  commentId: T:SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetricTests
  fullName: SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetricTests
  nameWithType: ManhattanDistanceMetricTests
- uid: SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetricTests.TestMatchingGenomes
  name: TestMatchingGenomes()
  href: api/SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetricTests.html#SharpNeat_Neat_DistanceMetrics_Double_ManhattanDistanceMetricTests_TestMatchingGenomes
  commentId: M:SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetricTests.TestMatchingGenomes
  fullName: SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetricTests.TestMatchingGenomes()
  nameWithType: ManhattanDistanceMetricTests.TestMatchingGenomes()
- uid: SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetricTests.TestMatchingGenomes*
  name: TestMatchingGenomes
  href: api/SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetricTests.html#SharpNeat_Neat_DistanceMetrics_Double_ManhattanDistanceMetricTests_TestMatchingGenomes_
  commentId: Overload:SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetricTests.TestMatchingGenomes
  isSpec: "True"
  fullName: SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetricTests.TestMatchingGenomes
  nameWithType: ManhattanDistanceMetricTests.TestMatchingGenomes
- uid: SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetricTests.TestMismatchGenomes
  name: TestMismatchGenomes()
  href: api/SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetricTests.html#SharpNeat_Neat_DistanceMetrics_Double_ManhattanDistanceMetricTests_TestMismatchGenomes
  commentId: M:SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetricTests.TestMismatchGenomes
  fullName: SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetricTests.TestMismatchGenomes()
  nameWithType: ManhattanDistanceMetricTests.TestMismatchGenomes()
- uid: SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetricTests.TestMismatchGenomes*
  name: TestMismatchGenomes
  href: api/SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetricTests.html#SharpNeat_Neat_DistanceMetrics_Double_ManhattanDistanceMetricTests_TestMismatchGenomes_
  commentId: Overload:SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetricTests.TestMismatchGenomes
  isSpec: "True"
  fullName: SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetricTests.TestMismatchGenomes
  nameWithType: ManhattanDistanceMetricTests.TestMismatchGenomes
- uid: SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetricTests.TestPartialMatchGenomes
  name: TestPartialMatchGenomes()
  href: api/SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetricTests.html#SharpNeat_Neat_DistanceMetrics_Double_ManhattanDistanceMetricTests_TestPartialMatchGenomes
  commentId: M:SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetricTests.TestPartialMatchGenomes
  fullName: SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetricTests.TestPartialMatchGenomes()
  nameWithType: ManhattanDistanceMetricTests.TestPartialMatchGenomes()
- uid: SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetricTests.TestPartialMatchGenomes*
  name: TestPartialMatchGenomes
  href: api/SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetricTests.html#SharpNeat_Neat_DistanceMetrics_Double_ManhattanDistanceMetricTests_TestPartialMatchGenomes_
  commentId: Overload:SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetricTests.TestPartialMatchGenomes
  isSpec: "True"
  fullName: SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetricTests.TestPartialMatchGenomes
  nameWithType: ManhattanDistanceMetricTests.TestPartialMatchGenomes
- uid: SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetricTests.TestPythagoras
  name: TestPythagoras()
  href: api/SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetricTests.html#SharpNeat_Neat_DistanceMetrics_Double_ManhattanDistanceMetricTests_TestPythagoras
  commentId: M:SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetricTests.TestPythagoras
  fullName: SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetricTests.TestPythagoras()
  nameWithType: ManhattanDistanceMetricTests.TestPythagoras()
- uid: SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetricTests.TestPythagoras*
  name: TestPythagoras
  href: api/SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetricTests.html#SharpNeat_Neat_DistanceMetrics_Double_ManhattanDistanceMetricTests_TestPythagoras_
  commentId: Overload:SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetricTests.TestPythagoras
  isSpec: "True"
  fullName: SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetricTests.TestPythagoras
  nameWithType: ManhattanDistanceMetricTests.TestPythagoras
- uid: SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetricTests.TestSingleMatchGenomes
  name: TestSingleMatchGenomes()
  href: api/SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetricTests.html#SharpNeat_Neat_DistanceMetrics_Double_ManhattanDistanceMetricTests_TestSingleMatchGenomes
  commentId: M:SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetricTests.TestSingleMatchGenomes
  fullName: SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetricTests.TestSingleMatchGenomes()
  nameWithType: ManhattanDistanceMetricTests.TestSingleMatchGenomes()
- uid: SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetricTests.TestSingleMatchGenomes*
  name: TestSingleMatchGenomes
  href: api/SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetricTests.html#SharpNeat_Neat_DistanceMetrics_Double_ManhattanDistanceMetricTests_TestSingleMatchGenomes_
  commentId: Overload:SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetricTests.TestSingleMatchGenomes
  isSpec: "True"
  fullName: SharpNeat.Neat.DistanceMetrics.Double.ManhattanDistanceMetricTests.TestSingleMatchGenomes
  nameWithType: ManhattanDistanceMetricTests.TestSingleMatchGenomes
- uid: SharpNeat.Neat.DistanceMetrics.EuclideanDistanceMetricBenchmarks
  name: EuclideanDistanceMetricBenchmarks
  href: api/SharpNeat.Neat.DistanceMetrics.EuclideanDistanceMetricBenchmarks.html
  commentId: T:SharpNeat.Neat.DistanceMetrics.EuclideanDistanceMetricBenchmarks
  fullName: SharpNeat.Neat.DistanceMetrics.EuclideanDistanceMetricBenchmarks
  nameWithType: EuclideanDistanceMetricBenchmarks
- uid: SharpNeat.Neat.DistanceMetrics.EuclideanDistanceMetricBenchmarks.#ctor
  name: EuclideanDistanceMetricBenchmarks()
  href: api/SharpNeat.Neat.DistanceMetrics.EuclideanDistanceMetricBenchmarks.html#SharpNeat_Neat_DistanceMetrics_EuclideanDistanceMetricBenchmarks__ctor
  commentId: M:SharpNeat.Neat.DistanceMetrics.EuclideanDistanceMetricBenchmarks.#ctor
  name.vb: New()
  fullName: SharpNeat.Neat.DistanceMetrics.EuclideanDistanceMetricBenchmarks.EuclideanDistanceMetricBenchmarks()
  fullName.vb: SharpNeat.Neat.DistanceMetrics.EuclideanDistanceMetricBenchmarks.New()
  nameWithType: EuclideanDistanceMetricBenchmarks.EuclideanDistanceMetricBenchmarks()
  nameWithType.vb: EuclideanDistanceMetricBenchmarks.New()
- uid: SharpNeat.Neat.DistanceMetrics.EuclideanDistanceMetricBenchmarks.#ctor*
  name: EuclideanDistanceMetricBenchmarks
  href: api/SharpNeat.Neat.DistanceMetrics.EuclideanDistanceMetricBenchmarks.html#SharpNeat_Neat_DistanceMetrics_EuclideanDistanceMetricBenchmarks__ctor_
  commentId: Overload:SharpNeat.Neat.DistanceMetrics.EuclideanDistanceMetricBenchmarks.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Neat.DistanceMetrics.EuclideanDistanceMetricBenchmarks.EuclideanDistanceMetricBenchmarks
  fullName.vb: SharpNeat.Neat.DistanceMetrics.EuclideanDistanceMetricBenchmarks.New
  nameWithType: EuclideanDistanceMetricBenchmarks.EuclideanDistanceMetricBenchmarks
  nameWithType.vb: EuclideanDistanceMetricBenchmarks.New
- uid: SharpNeat.Neat.DistanceMetrics.EuclideanDistanceMetricBenchmarks.FindMedoid
  name: FindMedoid()
  href: api/SharpNeat.Neat.DistanceMetrics.EuclideanDistanceMetricBenchmarks.html#SharpNeat_Neat_DistanceMetrics_EuclideanDistanceMetricBenchmarks_FindMedoid
  commentId: M:SharpNeat.Neat.DistanceMetrics.EuclideanDistanceMetricBenchmarks.FindMedoid
  fullName: SharpNeat.Neat.DistanceMetrics.EuclideanDistanceMetricBenchmarks.FindMedoid()
  nameWithType: EuclideanDistanceMetricBenchmarks.FindMedoid()
- uid: SharpNeat.Neat.DistanceMetrics.EuclideanDistanceMetricBenchmarks.FindMedoid*
  name: FindMedoid
  href: api/SharpNeat.Neat.DistanceMetrics.EuclideanDistanceMetricBenchmarks.html#SharpNeat_Neat_DistanceMetrics_EuclideanDistanceMetricBenchmarks_FindMedoid_
  commentId: Overload:SharpNeat.Neat.DistanceMetrics.EuclideanDistanceMetricBenchmarks.FindMedoid
  isSpec: "True"
  fullName: SharpNeat.Neat.DistanceMetrics.EuclideanDistanceMetricBenchmarks.FindMedoid
  nameWithType: EuclideanDistanceMetricBenchmarks.FindMedoid
- uid: SharpNeat.Neat.DistanceMetrics.IDistanceMetric`1
  name: IDistanceMetric<T>
  href: api/SharpNeat.Neat.DistanceMetrics.IDistanceMetric-1.html
  commentId: T:SharpNeat.Neat.DistanceMetrics.IDistanceMetric`1
  name.vb: IDistanceMetric(Of T)
  fullName: SharpNeat.Neat.DistanceMetrics.IDistanceMetric<T>
  fullName.vb: SharpNeat.Neat.DistanceMetrics.IDistanceMetric(Of T)
  nameWithType: IDistanceMetric<T>
  nameWithType.vb: IDistanceMetric(Of T)
- uid: SharpNeat.Neat.DistanceMetrics.IDistanceMetric`1.CalcDistance(SharpNeat.Neat.Genome.ConnectionGenes{`0},SharpNeat.Neat.Genome.ConnectionGenes{`0})
  name: CalcDistance(ConnectionGenes<T>, ConnectionGenes<T>)
  href: api/SharpNeat.Neat.DistanceMetrics.IDistanceMetric-1.html#SharpNeat_Neat_DistanceMetrics_IDistanceMetric_1_CalcDistance_SharpNeat_Neat_Genome_ConnectionGenes__0__SharpNeat_Neat_Genome_ConnectionGenes__0__
  commentId: M:SharpNeat.Neat.DistanceMetrics.IDistanceMetric`1.CalcDistance(SharpNeat.Neat.Genome.ConnectionGenes{`0},SharpNeat.Neat.Genome.ConnectionGenes{`0})
  name.vb: CalcDistance(ConnectionGenes(Of T), ConnectionGenes(Of T))
  fullName: SharpNeat.Neat.DistanceMetrics.IDistanceMetric<T>.CalcDistance(SharpNeat.Neat.Genome.ConnectionGenes<T>, SharpNeat.Neat.Genome.ConnectionGenes<T>)
  fullName.vb: SharpNeat.Neat.DistanceMetrics.IDistanceMetric(Of T).CalcDistance(SharpNeat.Neat.Genome.ConnectionGenes(Of T), SharpNeat.Neat.Genome.ConnectionGenes(Of T))
  nameWithType: IDistanceMetric<T>.CalcDistance(ConnectionGenes<T>, ConnectionGenes<T>)
  nameWithType.vb: IDistanceMetric(Of T).CalcDistance(ConnectionGenes(Of T), ConnectionGenes(Of T))
- uid: SharpNeat.Neat.DistanceMetrics.IDistanceMetric`1.CalcDistance*
  name: CalcDistance
  href: api/SharpNeat.Neat.DistanceMetrics.IDistanceMetric-1.html#SharpNeat_Neat_DistanceMetrics_IDistanceMetric_1_CalcDistance_
  commentId: Overload:SharpNeat.Neat.DistanceMetrics.IDistanceMetric`1.CalcDistance
  isSpec: "True"
  fullName: SharpNeat.Neat.DistanceMetrics.IDistanceMetric<T>.CalcDistance
  fullName.vb: SharpNeat.Neat.DistanceMetrics.IDistanceMetric(Of T).CalcDistance
  nameWithType: IDistanceMetric<T>.CalcDistance
  nameWithType.vb: IDistanceMetric(Of T).CalcDistance
- uid: SharpNeat.Neat.DistanceMetrics.IDistanceMetric`1.CalculateCentroid(System.ReadOnlySpan{SharpNeat.Neat.Genome.ConnectionGenes{`0}})
  name: CalculateCentroid(ReadOnlySpan<ConnectionGenes<T>>)
  href: api/SharpNeat.Neat.DistanceMetrics.IDistanceMetric-1.html#SharpNeat_Neat_DistanceMetrics_IDistanceMetric_1_CalculateCentroid_System_ReadOnlySpan_SharpNeat_Neat_Genome_ConnectionGenes__0___
  commentId: M:SharpNeat.Neat.DistanceMetrics.IDistanceMetric`1.CalculateCentroid(System.ReadOnlySpan{SharpNeat.Neat.Genome.ConnectionGenes{`0}})
  name.vb: CalculateCentroid(ReadOnlySpan(Of ConnectionGenes(Of T)))
  fullName: SharpNeat.Neat.DistanceMetrics.IDistanceMetric<T>.CalculateCentroid(System.ReadOnlySpan<SharpNeat.Neat.Genome.ConnectionGenes<T>>)
  fullName.vb: SharpNeat.Neat.DistanceMetrics.IDistanceMetric(Of T).CalculateCentroid(System.ReadOnlySpan(Of SharpNeat.Neat.Genome.ConnectionGenes(Of T)))
  nameWithType: IDistanceMetric<T>.CalculateCentroid(ReadOnlySpan<ConnectionGenes<T>>)
  nameWithType.vb: IDistanceMetric(Of T).CalculateCentroid(ReadOnlySpan(Of ConnectionGenes(Of T)))
- uid: SharpNeat.Neat.DistanceMetrics.IDistanceMetric`1.CalculateCentroid*
  name: CalculateCentroid
  href: api/SharpNeat.Neat.DistanceMetrics.IDistanceMetric-1.html#SharpNeat_Neat_DistanceMetrics_IDistanceMetric_1_CalculateCentroid_
  commentId: Overload:SharpNeat.Neat.DistanceMetrics.IDistanceMetric`1.CalculateCentroid
  isSpec: "True"
  fullName: SharpNeat.Neat.DistanceMetrics.IDistanceMetric<T>.CalculateCentroid
  fullName.vb: SharpNeat.Neat.DistanceMetrics.IDistanceMetric(Of T).CalculateCentroid
  nameWithType: IDistanceMetric<T>.CalculateCentroid
  nameWithType.vb: IDistanceMetric(Of T).CalculateCentroid
- uid: SharpNeat.Neat.DistanceMetrics.IDistanceMetric`1.TestDistance(SharpNeat.Neat.Genome.ConnectionGenes{`0},SharpNeat.Neat.Genome.ConnectionGenes{`0},System.Double)
  name: TestDistance(ConnectionGenes<T>, ConnectionGenes<T>, double)
  href: api/SharpNeat.Neat.DistanceMetrics.IDistanceMetric-1.html#SharpNeat_Neat_DistanceMetrics_IDistanceMetric_1_TestDistance_SharpNeat_Neat_Genome_ConnectionGenes__0__SharpNeat_Neat_Genome_ConnectionGenes__0__System_Double_
  commentId: M:SharpNeat.Neat.DistanceMetrics.IDistanceMetric`1.TestDistance(SharpNeat.Neat.Genome.ConnectionGenes{`0},SharpNeat.Neat.Genome.ConnectionGenes{`0},System.Double)
  name.vb: TestDistance(ConnectionGenes(Of T), ConnectionGenes(Of T), Double)
  fullName: SharpNeat.Neat.DistanceMetrics.IDistanceMetric<T>.TestDistance(SharpNeat.Neat.Genome.ConnectionGenes<T>, SharpNeat.Neat.Genome.ConnectionGenes<T>, double)
  fullName.vb: SharpNeat.Neat.DistanceMetrics.IDistanceMetric(Of T).TestDistance(SharpNeat.Neat.Genome.ConnectionGenes(Of T), SharpNeat.Neat.Genome.ConnectionGenes(Of T), Double)
  nameWithType: IDistanceMetric<T>.TestDistance(ConnectionGenes<T>, ConnectionGenes<T>, double)
  nameWithType.vb: IDistanceMetric(Of T).TestDistance(ConnectionGenes(Of T), ConnectionGenes(Of T), Double)
- uid: SharpNeat.Neat.DistanceMetrics.IDistanceMetric`1.TestDistance*
  name: TestDistance
  href: api/SharpNeat.Neat.DistanceMetrics.IDistanceMetric-1.html#SharpNeat_Neat_DistanceMetrics_IDistanceMetric_1_TestDistance_
  commentId: Overload:SharpNeat.Neat.DistanceMetrics.IDistanceMetric`1.TestDistance
  isSpec: "True"
  fullName: SharpNeat.Neat.DistanceMetrics.IDistanceMetric<T>.TestDistance
  fullName.vb: SharpNeat.Neat.DistanceMetrics.IDistanceMetric(Of T).TestDistance
  nameWithType: IDistanceMetric<T>.TestDistance
  nameWithType.vb: IDistanceMetric(Of T).TestDistance
- uid: SharpNeat.Neat.DistanceMetrics.ManhattanDistanceMetricBenchmarks
  name: ManhattanDistanceMetricBenchmarks
  href: api/SharpNeat.Neat.DistanceMetrics.ManhattanDistanceMetricBenchmarks.html
  commentId: T:SharpNeat.Neat.DistanceMetrics.ManhattanDistanceMetricBenchmarks
  fullName: SharpNeat.Neat.DistanceMetrics.ManhattanDistanceMetricBenchmarks
  nameWithType: ManhattanDistanceMetricBenchmarks
- uid: SharpNeat.Neat.DistanceMetrics.ManhattanDistanceMetricBenchmarks.#ctor
  name: ManhattanDistanceMetricBenchmarks()
  href: api/SharpNeat.Neat.DistanceMetrics.ManhattanDistanceMetricBenchmarks.html#SharpNeat_Neat_DistanceMetrics_ManhattanDistanceMetricBenchmarks__ctor
  commentId: M:SharpNeat.Neat.DistanceMetrics.ManhattanDistanceMetricBenchmarks.#ctor
  name.vb: New()
  fullName: SharpNeat.Neat.DistanceMetrics.ManhattanDistanceMetricBenchmarks.ManhattanDistanceMetricBenchmarks()
  fullName.vb: SharpNeat.Neat.DistanceMetrics.ManhattanDistanceMetricBenchmarks.New()
  nameWithType: ManhattanDistanceMetricBenchmarks.ManhattanDistanceMetricBenchmarks()
  nameWithType.vb: ManhattanDistanceMetricBenchmarks.New()
- uid: SharpNeat.Neat.DistanceMetrics.ManhattanDistanceMetricBenchmarks.#ctor*
  name: ManhattanDistanceMetricBenchmarks
  href: api/SharpNeat.Neat.DistanceMetrics.ManhattanDistanceMetricBenchmarks.html#SharpNeat_Neat_DistanceMetrics_ManhattanDistanceMetricBenchmarks__ctor_
  commentId: Overload:SharpNeat.Neat.DistanceMetrics.ManhattanDistanceMetricBenchmarks.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Neat.DistanceMetrics.ManhattanDistanceMetricBenchmarks.ManhattanDistanceMetricBenchmarks
  fullName.vb: SharpNeat.Neat.DistanceMetrics.ManhattanDistanceMetricBenchmarks.New
  nameWithType: ManhattanDistanceMetricBenchmarks.ManhattanDistanceMetricBenchmarks
  nameWithType.vb: ManhattanDistanceMetricBenchmarks.New
- uid: SharpNeat.Neat.DistanceMetrics.ManhattanDistanceMetricBenchmarks.FindMedoid
  name: FindMedoid()
  href: api/SharpNeat.Neat.DistanceMetrics.ManhattanDistanceMetricBenchmarks.html#SharpNeat_Neat_DistanceMetrics_ManhattanDistanceMetricBenchmarks_FindMedoid
  commentId: M:SharpNeat.Neat.DistanceMetrics.ManhattanDistanceMetricBenchmarks.FindMedoid
  fullName: SharpNeat.Neat.DistanceMetrics.ManhattanDistanceMetricBenchmarks.FindMedoid()
  nameWithType: ManhattanDistanceMetricBenchmarks.FindMedoid()
- uid: SharpNeat.Neat.DistanceMetrics.ManhattanDistanceMetricBenchmarks.FindMedoid*
  name: FindMedoid
  href: api/SharpNeat.Neat.DistanceMetrics.ManhattanDistanceMetricBenchmarks.html#SharpNeat_Neat_DistanceMetrics_ManhattanDistanceMetricBenchmarks_FindMedoid_
  commentId: Overload:SharpNeat.Neat.DistanceMetrics.ManhattanDistanceMetricBenchmarks.FindMedoid
  isSpec: "True"
  fullName: SharpNeat.Neat.DistanceMetrics.ManhattanDistanceMetricBenchmarks.FindMedoid
  nameWithType: ManhattanDistanceMetricBenchmarks.FindMedoid
- uid: SharpNeat.Neat.EvolutionAlgorithm
  name: SharpNeat.Neat.EvolutionAlgorithm
  href: api/SharpNeat.Neat.EvolutionAlgorithm.html
  commentId: N:SharpNeat.Neat.EvolutionAlgorithm
  fullName: SharpNeat.Neat.EvolutionAlgorithm
  nameWithType: SharpNeat.Neat.EvolutionAlgorithm
- uid: SharpNeat.Neat.EvolutionAlgorithm.GenomeComparerDescending
  name: GenomeComparerDescending
  href: api/SharpNeat.Neat.EvolutionAlgorithm.GenomeComparerDescending.html
  commentId: T:SharpNeat.Neat.EvolutionAlgorithm.GenomeComparerDescending
  fullName: SharpNeat.Neat.EvolutionAlgorithm.GenomeComparerDescending
  nameWithType: GenomeComparerDescending
- uid: SharpNeat.Neat.EvolutionAlgorithm.GenomeComparerDescending.#ctor(System.Collections.Generic.IComparer{SharpNeat.Evaluation.FitnessInfo})
  name: GenomeComparerDescending(IComparer<FitnessInfo>)
  href: api/SharpNeat.Neat.EvolutionAlgorithm.GenomeComparerDescending.html#SharpNeat_Neat_EvolutionAlgorithm_GenomeComparerDescending__ctor_System_Collections_Generic_IComparer_SharpNeat_Evaluation_FitnessInfo__
  commentId: M:SharpNeat.Neat.EvolutionAlgorithm.GenomeComparerDescending.#ctor(System.Collections.Generic.IComparer{SharpNeat.Evaluation.FitnessInfo})
  name.vb: New(IComparer(Of FitnessInfo))
  fullName: SharpNeat.Neat.EvolutionAlgorithm.GenomeComparerDescending.GenomeComparerDescending(System.Collections.Generic.IComparer<SharpNeat.Evaluation.FitnessInfo>)
  fullName.vb: SharpNeat.Neat.EvolutionAlgorithm.GenomeComparerDescending.New(System.Collections.Generic.IComparer(Of SharpNeat.Evaluation.FitnessInfo))
  nameWithType: GenomeComparerDescending.GenomeComparerDescending(IComparer<FitnessInfo>)
  nameWithType.vb: GenomeComparerDescending.New(IComparer(Of FitnessInfo))
- uid: SharpNeat.Neat.EvolutionAlgorithm.GenomeComparerDescending.#ctor*
  name: GenomeComparerDescending
  href: api/SharpNeat.Neat.EvolutionAlgorithm.GenomeComparerDescending.html#SharpNeat_Neat_EvolutionAlgorithm_GenomeComparerDescending__ctor_
  commentId: Overload:SharpNeat.Neat.EvolutionAlgorithm.GenomeComparerDescending.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Neat.EvolutionAlgorithm.GenomeComparerDescending.GenomeComparerDescending
  fullName.vb: SharpNeat.Neat.EvolutionAlgorithm.GenomeComparerDescending.New
  nameWithType: GenomeComparerDescending.GenomeComparerDescending
  nameWithType.vb: GenomeComparerDescending.New
- uid: SharpNeat.Neat.EvolutionAlgorithm.GenomeComparerDescending.Compare(SharpNeat.EvolutionAlgorithm.IGenome,SharpNeat.EvolutionAlgorithm.IGenome)
  name: Compare(IGenome?, IGenome?)
  href: api/SharpNeat.Neat.EvolutionAlgorithm.GenomeComparerDescending.html#SharpNeat_Neat_EvolutionAlgorithm_GenomeComparerDescending_Compare_SharpNeat_EvolutionAlgorithm_IGenome_SharpNeat_EvolutionAlgorithm_IGenome_
  commentId: M:SharpNeat.Neat.EvolutionAlgorithm.GenomeComparerDescending.Compare(SharpNeat.EvolutionAlgorithm.IGenome,SharpNeat.EvolutionAlgorithm.IGenome)
  name.vb: Compare(IGenome, IGenome)
  fullName: SharpNeat.Neat.EvolutionAlgorithm.GenomeComparerDescending.Compare(SharpNeat.EvolutionAlgorithm.IGenome?, SharpNeat.EvolutionAlgorithm.IGenome?)
  fullName.vb: SharpNeat.Neat.EvolutionAlgorithm.GenomeComparerDescending.Compare(SharpNeat.EvolutionAlgorithm.IGenome, SharpNeat.EvolutionAlgorithm.IGenome)
  nameWithType: GenomeComparerDescending.Compare(IGenome?, IGenome?)
  nameWithType.vb: GenomeComparerDescending.Compare(IGenome, IGenome)
- uid: SharpNeat.Neat.EvolutionAlgorithm.GenomeComparerDescending.Compare*
  name: Compare
  href: api/SharpNeat.Neat.EvolutionAlgorithm.GenomeComparerDescending.html#SharpNeat_Neat_EvolutionAlgorithm_GenomeComparerDescending_Compare_
  commentId: Overload:SharpNeat.Neat.EvolutionAlgorithm.GenomeComparerDescending.Compare
  isSpec: "True"
  fullName: SharpNeat.Neat.EvolutionAlgorithm.GenomeComparerDescending.Compare
  nameWithType: GenomeComparerDescending.Compare
- uid: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm`1
  name: NeatEvolutionAlgorithm<T>
  href: api/SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm-1.html
  commentId: T:SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm`1
  name.vb: NeatEvolutionAlgorithm(Of T)
  fullName: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm<T>
  fullName.vb: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm(Of T)
  nameWithType: NeatEvolutionAlgorithm<T>
  nameWithType.vb: NeatEvolutionAlgorithm(Of T)
- uid: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm`1.#ctor(SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings,SharpNeat.Evaluation.IGenomeListEvaluator{SharpNeat.Neat.Genome.NeatGenome{`0}},SharpNeat.Neat.Speciation.ISpeciationStrategy{SharpNeat.Neat.Genome.NeatGenome{`0},`0},SharpNeat.Neat.NeatPopulation{`0},SharpNeat.Neat.ComplexityRegulation.IComplexityRegulationStrategy,SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings,SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexualSettings,SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationScheme{`0},Redzen.Random.IRandomSource)
  name: NeatEvolutionAlgorithm(NeatEvolutionAlgorithmSettings, IGenomeListEvaluator<NeatGenome<T>>, ISpeciationStrategy<NeatGenome<T>, T>, NeatPopulation<T>, IComplexityRegulationStrategy, NeatReproductionAsexualSettings, NeatReproductionSexualSettings, WeightMutationScheme<T>, IRandomSource?)
  href: api/SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm-1.html#SharpNeat_Neat_EvolutionAlgorithm_NeatEvolutionAlgorithm_1__ctor_SharpNeat_Neat_EvolutionAlgorithm_NeatEvolutionAlgorithmSettings_SharpNeat_Evaluation_IGenomeListEvaluator_SharpNeat_Neat_Genome_NeatGenome__0___SharpNeat_Neat_Speciation_ISpeciationStrategy_SharpNeat_Neat_Genome_NeatGenome__0___0__SharpNeat_Neat_NeatPopulation__0__SharpNeat_Neat_ComplexityRegulation_IComplexityRegulationStrategy_SharpNeat_Neat_Reproduction_Asexual_NeatReproductionAsexualSettings_SharpNeat_Neat_Reproduction_Sexual_NeatReproductionSexualSettings_SharpNeat_Neat_Reproduction_Asexual_WeightMutation_WeightMutationScheme__0__Redzen_Random_IRandomSource_
  commentId: M:SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm`1.#ctor(SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings,SharpNeat.Evaluation.IGenomeListEvaluator{SharpNeat.Neat.Genome.NeatGenome{`0}},SharpNeat.Neat.Speciation.ISpeciationStrategy{SharpNeat.Neat.Genome.NeatGenome{`0},`0},SharpNeat.Neat.NeatPopulation{`0},SharpNeat.Neat.ComplexityRegulation.IComplexityRegulationStrategy,SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings,SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexualSettings,SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationScheme{`0},Redzen.Random.IRandomSource)
  name.vb: New(NeatEvolutionAlgorithmSettings, IGenomeListEvaluator(Of NeatGenome(Of T)), ISpeciationStrategy(Of NeatGenome(Of T), T), NeatPopulation(Of T), IComplexityRegulationStrategy, NeatReproductionAsexualSettings, NeatReproductionSexualSettings, WeightMutationScheme(Of T), IRandomSource)
  fullName: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm<T>.NeatEvolutionAlgorithm(SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings, SharpNeat.Evaluation.IGenomeListEvaluator<SharpNeat.Neat.Genome.NeatGenome<T>>, SharpNeat.Neat.Speciation.ISpeciationStrategy<SharpNeat.Neat.Genome.NeatGenome<T>, T>, SharpNeat.Neat.NeatPopulation<T>, SharpNeat.Neat.ComplexityRegulation.IComplexityRegulationStrategy, SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings, SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexualSettings, SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationScheme<T>, Redzen.Random.IRandomSource?)
  fullName.vb: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm(Of T).New(SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings, SharpNeat.Evaluation.IGenomeListEvaluator(Of SharpNeat.Neat.Genome.NeatGenome(Of T)), SharpNeat.Neat.Speciation.ISpeciationStrategy(Of SharpNeat.Neat.Genome.NeatGenome(Of T), T), SharpNeat.Neat.NeatPopulation(Of T), SharpNeat.Neat.ComplexityRegulation.IComplexityRegulationStrategy, SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings, SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexualSettings, SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationScheme(Of T), Redzen.Random.IRandomSource)
  nameWithType: NeatEvolutionAlgorithm<T>.NeatEvolutionAlgorithm(NeatEvolutionAlgorithmSettings, IGenomeListEvaluator<NeatGenome<T>>, ISpeciationStrategy<NeatGenome<T>, T>, NeatPopulation<T>, IComplexityRegulationStrategy, NeatReproductionAsexualSettings, NeatReproductionSexualSettings, WeightMutationScheme<T>, IRandomSource?)
  nameWithType.vb: NeatEvolutionAlgorithm(Of T).New(NeatEvolutionAlgorithmSettings, IGenomeListEvaluator(Of NeatGenome(Of T)), ISpeciationStrategy(Of NeatGenome(Of T), T), NeatPopulation(Of T), IComplexityRegulationStrategy, NeatReproductionAsexualSettings, NeatReproductionSexualSettings, WeightMutationScheme(Of T), IRandomSource)
- uid: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm`1.#ctor*
  name: NeatEvolutionAlgorithm
  href: api/SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm-1.html#SharpNeat_Neat_EvolutionAlgorithm_NeatEvolutionAlgorithm_1__ctor_
  commentId: Overload:SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm<T>.NeatEvolutionAlgorithm
  fullName.vb: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm(Of T).New
  nameWithType: NeatEvolutionAlgorithm<T>.NeatEvolutionAlgorithm
  nameWithType.vb: NeatEvolutionAlgorithm(Of T).New
- uid: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm`1.ComplexityRegulationMode
  name: ComplexityRegulationMode
  href: api/SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm-1.html#SharpNeat_Neat_EvolutionAlgorithm_NeatEvolutionAlgorithm_1_ComplexityRegulationMode
  commentId: P:SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm`1.ComplexityRegulationMode
  fullName: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm<T>.ComplexityRegulationMode
  fullName.vb: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm(Of T).ComplexityRegulationMode
  nameWithType: NeatEvolutionAlgorithm<T>.ComplexityRegulationMode
  nameWithType.vb: NeatEvolutionAlgorithm(Of T).ComplexityRegulationMode
- uid: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm`1.ComplexityRegulationMode*
  name: ComplexityRegulationMode
  href: api/SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm-1.html#SharpNeat_Neat_EvolutionAlgorithm_NeatEvolutionAlgorithm_1_ComplexityRegulationMode_
  commentId: Overload:SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm`1.ComplexityRegulationMode
  isSpec: "True"
  fullName: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm<T>.ComplexityRegulationMode
  fullName.vb: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm(Of T).ComplexityRegulationMode
  nameWithType: NeatEvolutionAlgorithm<T>.ComplexityRegulationMode
  nameWithType.vb: NeatEvolutionAlgorithm(Of T).ComplexityRegulationMode
- uid: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm`1.Initialise
  name: Initialise()
  href: api/SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm-1.html#SharpNeat_Neat_EvolutionAlgorithm_NeatEvolutionAlgorithm_1_Initialise
  commentId: M:SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm`1.Initialise
  fullName: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm<T>.Initialise()
  fullName.vb: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm(Of T).Initialise()
  nameWithType: NeatEvolutionAlgorithm<T>.Initialise()
  nameWithType.vb: NeatEvolutionAlgorithm(Of T).Initialise()
- uid: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm`1.Initialise*
  name: Initialise
  href: api/SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm-1.html#SharpNeat_Neat_EvolutionAlgorithm_NeatEvolutionAlgorithm_1_Initialise_
  commentId: Overload:SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm`1.Initialise
  isSpec: "True"
  fullName: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm<T>.Initialise
  fullName.vb: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm(Of T).Initialise
  nameWithType: NeatEvolutionAlgorithm<T>.Initialise
  nameWithType.vb: NeatEvolutionAlgorithm(Of T).Initialise
- uid: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm`1.PerformOneGeneration
  name: PerformOneGeneration()
  href: api/SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm-1.html#SharpNeat_Neat_EvolutionAlgorithm_NeatEvolutionAlgorithm_1_PerformOneGeneration
  commentId: M:SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm`1.PerformOneGeneration
  fullName: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm<T>.PerformOneGeneration()
  fullName.vb: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm(Of T).PerformOneGeneration()
  nameWithType: NeatEvolutionAlgorithm<T>.PerformOneGeneration()
  nameWithType.vb: NeatEvolutionAlgorithm(Of T).PerformOneGeneration()
- uid: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm`1.PerformOneGeneration*
  name: PerformOneGeneration
  href: api/SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm-1.html#SharpNeat_Neat_EvolutionAlgorithm_NeatEvolutionAlgorithm_1_PerformOneGeneration_
  commentId: Overload:SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm`1.PerformOneGeneration
  isSpec: "True"
  fullName: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm<T>.PerformOneGeneration
  fullName.vb: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm(Of T).PerformOneGeneration
  nameWithType: NeatEvolutionAlgorithm<T>.PerformOneGeneration
  nameWithType.vb: NeatEvolutionAlgorithm(Of T).PerformOneGeneration
- uid: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm`1.Population
  name: Population
  href: api/SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm-1.html#SharpNeat_Neat_EvolutionAlgorithm_NeatEvolutionAlgorithm_1_Population
  commentId: P:SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm`1.Population
  fullName: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm<T>.Population
  fullName.vb: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm(Of T).Population
  nameWithType: NeatEvolutionAlgorithm<T>.Population
  nameWithType.vb: NeatEvolutionAlgorithm(Of T).Population
- uid: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm`1.Population*
  name: Population
  href: api/SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm-1.html#SharpNeat_Neat_EvolutionAlgorithm_NeatEvolutionAlgorithm_1_Population_
  commentId: Overload:SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm`1.Population
  isSpec: "True"
  fullName: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm<T>.Population
  fullName.vb: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm(Of T).Population
  nameWithType: NeatEvolutionAlgorithm<T>.Population
  nameWithType.vb: NeatEvolutionAlgorithm(Of T).Population
- uid: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm`1.Stats
  name: Stats
  href: api/SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm-1.html#SharpNeat_Neat_EvolutionAlgorithm_NeatEvolutionAlgorithm_1_Stats
  commentId: P:SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm`1.Stats
  fullName: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm<T>.Stats
  fullName.vb: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm(Of T).Stats
  nameWithType: NeatEvolutionAlgorithm<T>.Stats
  nameWithType.vb: NeatEvolutionAlgorithm(Of T).Stats
- uid: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm`1.Stats*
  name: Stats
  href: api/SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm-1.html#SharpNeat_Neat_EvolutionAlgorithm_NeatEvolutionAlgorithm_1_Stats_
  commentId: Overload:SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm`1.Stats
  isSpec: "True"
  fullName: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm<T>.Stats
  fullName.vb: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithm(Of T).Stats
  nameWithType: NeatEvolutionAlgorithm<T>.Stats
  nameWithType.vb: NeatEvolutionAlgorithm(Of T).Stats
- uid: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings
  name: NeatEvolutionAlgorithmSettings
  href: api/SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.html
  commentId: T:SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings
  fullName: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings
  nameWithType: NeatEvolutionAlgorithmSettings
- uid: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.#ctor
  name: NeatEvolutionAlgorithmSettings()
  href: api/SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.html#SharpNeat_Neat_EvolutionAlgorithm_NeatEvolutionAlgorithmSettings__ctor
  commentId: M:SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.#ctor
  name.vb: New()
  fullName: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.NeatEvolutionAlgorithmSettings()
  fullName.vb: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.New()
  nameWithType: NeatEvolutionAlgorithmSettings.NeatEvolutionAlgorithmSettings()
  nameWithType.vb: NeatEvolutionAlgorithmSettings.New()
- uid: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.#ctor(SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings)
  name: NeatEvolutionAlgorithmSettings(NeatEvolutionAlgorithmSettings)
  href: api/SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.html#SharpNeat_Neat_EvolutionAlgorithm_NeatEvolutionAlgorithmSettings__ctor_SharpNeat_Neat_EvolutionAlgorithm_NeatEvolutionAlgorithmSettings_
  commentId: M:SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.#ctor(SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings)
  name.vb: New(NeatEvolutionAlgorithmSettings)
  fullName: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.NeatEvolutionAlgorithmSettings(SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings)
  fullName.vb: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.New(SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings)
  nameWithType: NeatEvolutionAlgorithmSettings.NeatEvolutionAlgorithmSettings(NeatEvolutionAlgorithmSettings)
  nameWithType.vb: NeatEvolutionAlgorithmSettings.New(NeatEvolutionAlgorithmSettings)
- uid: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.#ctor*
  name: NeatEvolutionAlgorithmSettings
  href: api/SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.html#SharpNeat_Neat_EvolutionAlgorithm_NeatEvolutionAlgorithmSettings__ctor_
  commentId: Overload:SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.NeatEvolutionAlgorithmSettings
  fullName.vb: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.New
  nameWithType: NeatEvolutionAlgorithmSettings.NeatEvolutionAlgorithmSettings
  nameWithType.vb: NeatEvolutionAlgorithmSettings.New
- uid: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.CreateSimplifyingSettings
  name: CreateSimplifyingSettings()
  href: api/SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.html#SharpNeat_Neat_EvolutionAlgorithm_NeatEvolutionAlgorithmSettings_CreateSimplifyingSettings
  commentId: M:SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.CreateSimplifyingSettings
  fullName: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.CreateSimplifyingSettings()
  nameWithType: NeatEvolutionAlgorithmSettings.CreateSimplifyingSettings()
- uid: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.CreateSimplifyingSettings*
  name: CreateSimplifyingSettings
  href: api/SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.html#SharpNeat_Neat_EvolutionAlgorithm_NeatEvolutionAlgorithmSettings_CreateSimplifyingSettings_
  commentId: Overload:SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.CreateSimplifyingSettings
  isSpec: "True"
  fullName: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.CreateSimplifyingSettings
  nameWithType: NeatEvolutionAlgorithmSettings.CreateSimplifyingSettings
- uid: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.ElitismProportion
  name: ElitismProportion
  href: api/SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.html#SharpNeat_Neat_EvolutionAlgorithm_NeatEvolutionAlgorithmSettings_ElitismProportion
  commentId: P:SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.ElitismProportion
  fullName: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.ElitismProportion
  nameWithType: NeatEvolutionAlgorithmSettings.ElitismProportion
- uid: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.ElitismProportion*
  name: ElitismProportion
  href: api/SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.html#SharpNeat_Neat_EvolutionAlgorithm_NeatEvolutionAlgorithmSettings_ElitismProportion_
  commentId: Overload:SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.ElitismProportion
  isSpec: "True"
  fullName: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.ElitismProportion
  nameWithType: NeatEvolutionAlgorithmSettings.ElitismProportion
- uid: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.InterspeciesMatingProportion
  name: InterspeciesMatingProportion
  href: api/SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.html#SharpNeat_Neat_EvolutionAlgorithm_NeatEvolutionAlgorithmSettings_InterspeciesMatingProportion
  commentId: P:SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.InterspeciesMatingProportion
  fullName: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.InterspeciesMatingProportion
  nameWithType: NeatEvolutionAlgorithmSettings.InterspeciesMatingProportion
- uid: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.InterspeciesMatingProportion*
  name: InterspeciesMatingProportion
  href: api/SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.html#SharpNeat_Neat_EvolutionAlgorithm_NeatEvolutionAlgorithmSettings_InterspeciesMatingProportion_
  commentId: Overload:SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.InterspeciesMatingProportion
  isSpec: "True"
  fullName: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.InterspeciesMatingProportion
  nameWithType: NeatEvolutionAlgorithmSettings.InterspeciesMatingProportion
- uid: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.OffspringAsexualProportion
  name: OffspringAsexualProportion
  href: api/SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.html#SharpNeat_Neat_EvolutionAlgorithm_NeatEvolutionAlgorithmSettings_OffspringAsexualProportion
  commentId: P:SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.OffspringAsexualProportion
  fullName: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.OffspringAsexualProportion
  nameWithType: NeatEvolutionAlgorithmSettings.OffspringAsexualProportion
- uid: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.OffspringAsexualProportion*
  name: OffspringAsexualProportion
  href: api/SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.html#SharpNeat_Neat_EvolutionAlgorithm_NeatEvolutionAlgorithmSettings_OffspringAsexualProportion_
  commentId: Overload:SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.OffspringAsexualProportion
  isSpec: "True"
  fullName: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.OffspringAsexualProportion
  nameWithType: NeatEvolutionAlgorithmSettings.OffspringAsexualProportion
- uid: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.OffspringSexualProportion
  name: OffspringSexualProportion
  href: api/SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.html#SharpNeat_Neat_EvolutionAlgorithm_NeatEvolutionAlgorithmSettings_OffspringSexualProportion
  commentId: P:SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.OffspringSexualProportion
  fullName: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.OffspringSexualProportion
  nameWithType: NeatEvolutionAlgorithmSettings.OffspringSexualProportion
- uid: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.OffspringSexualProportion*
  name: OffspringSexualProportion
  href: api/SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.html#SharpNeat_Neat_EvolutionAlgorithm_NeatEvolutionAlgorithmSettings_OffspringSexualProportion_
  commentId: Overload:SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.OffspringSexualProportion
  isSpec: "True"
  fullName: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.OffspringSexualProportion
  nameWithType: NeatEvolutionAlgorithmSettings.OffspringSexualProportion
- uid: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.SelectionProportion
  name: SelectionProportion
  href: api/SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.html#SharpNeat_Neat_EvolutionAlgorithm_NeatEvolutionAlgorithmSettings_SelectionProportion
  commentId: P:SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.SelectionProportion
  fullName: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.SelectionProportion
  nameWithType: NeatEvolutionAlgorithmSettings.SelectionProportion
- uid: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.SelectionProportion*
  name: SelectionProportion
  href: api/SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.html#SharpNeat_Neat_EvolutionAlgorithm_NeatEvolutionAlgorithmSettings_SelectionProportion_
  commentId: Overload:SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.SelectionProportion
  isSpec: "True"
  fullName: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.SelectionProportion
  nameWithType: NeatEvolutionAlgorithmSettings.SelectionProportion
- uid: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.SpeciesCount
  name: SpeciesCount
  href: api/SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.html#SharpNeat_Neat_EvolutionAlgorithm_NeatEvolutionAlgorithmSettings_SpeciesCount
  commentId: P:SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.SpeciesCount
  fullName: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.SpeciesCount
  nameWithType: NeatEvolutionAlgorithmSettings.SpeciesCount
- uid: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.SpeciesCount*
  name: SpeciesCount
  href: api/SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.html#SharpNeat_Neat_EvolutionAlgorithm_NeatEvolutionAlgorithmSettings_SpeciesCount_
  commentId: Overload:SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.SpeciesCount
  isSpec: "True"
  fullName: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.SpeciesCount
  nameWithType: NeatEvolutionAlgorithmSettings.SpeciesCount
- uid: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.StatisticsMovingAverageHistoryLength
  name: StatisticsMovingAverageHistoryLength
  href: api/SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.html#SharpNeat_Neat_EvolutionAlgorithm_NeatEvolutionAlgorithmSettings_StatisticsMovingAverageHistoryLength
  commentId: P:SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.StatisticsMovingAverageHistoryLength
  fullName: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.StatisticsMovingAverageHistoryLength
  nameWithType: NeatEvolutionAlgorithmSettings.StatisticsMovingAverageHistoryLength
- uid: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.StatisticsMovingAverageHistoryLength*
  name: StatisticsMovingAverageHistoryLength
  href: api/SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.html#SharpNeat_Neat_EvolutionAlgorithm_NeatEvolutionAlgorithmSettings_StatisticsMovingAverageHistoryLength_
  commentId: Overload:SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.StatisticsMovingAverageHistoryLength
  isSpec: "True"
  fullName: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.StatisticsMovingAverageHistoryLength
  nameWithType: NeatEvolutionAlgorithmSettings.StatisticsMovingAverageHistoryLength
- uid: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.Validate
  name: Validate()
  href: api/SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.html#SharpNeat_Neat_EvolutionAlgorithm_NeatEvolutionAlgorithmSettings_Validate
  commentId: M:SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.Validate
  fullName: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.Validate()
  nameWithType: NeatEvolutionAlgorithmSettings.Validate()
- uid: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.Validate*
  name: Validate
  href: api/SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.html#SharpNeat_Neat_EvolutionAlgorithm_NeatEvolutionAlgorithmSettings_Validate_
  commentId: Overload:SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.Validate
  isSpec: "True"
  fullName: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmSettings.Validate
  nameWithType: NeatEvolutionAlgorithmSettings.Validate
- uid: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmStatistics
  name: NeatEvolutionAlgorithmStatistics
  href: api/SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmStatistics.html
  commentId: T:SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmStatistics
  fullName: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmStatistics
  nameWithType: NeatEvolutionAlgorithmStatistics
- uid: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmStatistics.TotalOffspringAsexualCount
  name: TotalOffspringAsexualCount
  href: api/SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmStatistics.html#SharpNeat_Neat_EvolutionAlgorithm_NeatEvolutionAlgorithmStatistics_TotalOffspringAsexualCount
  commentId: P:SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmStatistics.TotalOffspringAsexualCount
  fullName: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmStatistics.TotalOffspringAsexualCount
  nameWithType: NeatEvolutionAlgorithmStatistics.TotalOffspringAsexualCount
- uid: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmStatistics.TotalOffspringAsexualCount*
  name: TotalOffspringAsexualCount
  href: api/SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmStatistics.html#SharpNeat_Neat_EvolutionAlgorithm_NeatEvolutionAlgorithmStatistics_TotalOffspringAsexualCount_
  commentId: Overload:SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmStatistics.TotalOffspringAsexualCount
  isSpec: "True"
  fullName: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmStatistics.TotalOffspringAsexualCount
  nameWithType: NeatEvolutionAlgorithmStatistics.TotalOffspringAsexualCount
- uid: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmStatistics.TotalOffspringCount
  name: TotalOffspringCount
  href: api/SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmStatistics.html#SharpNeat_Neat_EvolutionAlgorithm_NeatEvolutionAlgorithmStatistics_TotalOffspringCount
  commentId: P:SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmStatistics.TotalOffspringCount
  fullName: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmStatistics.TotalOffspringCount
  nameWithType: NeatEvolutionAlgorithmStatistics.TotalOffspringCount
- uid: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmStatistics.TotalOffspringCount*
  name: TotalOffspringCount
  href: api/SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmStatistics.html#SharpNeat_Neat_EvolutionAlgorithm_NeatEvolutionAlgorithmStatistics_TotalOffspringCount_
  commentId: Overload:SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmStatistics.TotalOffspringCount
  isSpec: "True"
  fullName: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmStatistics.TotalOffspringCount
  nameWithType: NeatEvolutionAlgorithmStatistics.TotalOffspringCount
- uid: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmStatistics.TotalOffspringInterspeciesCount
  name: TotalOffspringInterspeciesCount
  href: api/SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmStatistics.html#SharpNeat_Neat_EvolutionAlgorithm_NeatEvolutionAlgorithmStatistics_TotalOffspringInterspeciesCount
  commentId: P:SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmStatistics.TotalOffspringInterspeciesCount
  fullName: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmStatistics.TotalOffspringInterspeciesCount
  nameWithType: NeatEvolutionAlgorithmStatistics.TotalOffspringInterspeciesCount
- uid: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmStatistics.TotalOffspringInterspeciesCount*
  name: TotalOffspringInterspeciesCount
  href: api/SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmStatistics.html#SharpNeat_Neat_EvolutionAlgorithm_NeatEvolutionAlgorithmStatistics_TotalOffspringInterspeciesCount_
  commentId: Overload:SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmStatistics.TotalOffspringInterspeciesCount
  isSpec: "True"
  fullName: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmStatistics.TotalOffspringInterspeciesCount
  nameWithType: NeatEvolutionAlgorithmStatistics.TotalOffspringInterspeciesCount
- uid: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmStatistics.TotalOffspringSexualCount
  name: TotalOffspringSexualCount
  href: api/SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmStatistics.html#SharpNeat_Neat_EvolutionAlgorithm_NeatEvolutionAlgorithmStatistics_TotalOffspringSexualCount
  commentId: P:SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmStatistics.TotalOffspringSexualCount
  fullName: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmStatistics.TotalOffspringSexualCount
  nameWithType: NeatEvolutionAlgorithmStatistics.TotalOffspringSexualCount
- uid: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmStatistics.TotalOffspringSexualCount*
  name: TotalOffspringSexualCount
  href: api/SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmStatistics.html#SharpNeat_Neat_EvolutionAlgorithm_NeatEvolutionAlgorithmStatistics_TotalOffspringSexualCount_
  commentId: Overload:SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmStatistics.TotalOffspringSexualCount
  isSpec: "True"
  fullName: SharpNeat.Neat.EvolutionAlgorithm.NeatEvolutionAlgorithmStatistics.TotalOffspringSexualCount
  nameWithType: NeatEvolutionAlgorithmStatistics.TotalOffspringSexualCount
- uid: SharpNeat.Neat.Genome
  name: SharpNeat.Neat.Genome
  href: api/SharpNeat.Neat.Genome.html
  commentId: N:SharpNeat.Neat.Genome
  fullName: SharpNeat.Neat.Genome
  nameWithType: SharpNeat.Neat.Genome
- uid: SharpNeat.Neat.Genome.ConnectionGenes`1
  name: ConnectionGenes<T>
  href: api/SharpNeat.Neat.Genome.ConnectionGenes-1.html
  commentId: T:SharpNeat.Neat.Genome.ConnectionGenes`1
  name.vb: ConnectionGenes(Of T)
  fullName: SharpNeat.Neat.Genome.ConnectionGenes<T>
  fullName.vb: SharpNeat.Neat.Genome.ConnectionGenes(Of T)
  nameWithType: ConnectionGenes<T>
  nameWithType.vb: ConnectionGenes(Of T)
- uid: SharpNeat.Neat.Genome.ConnectionGenes`1._connArr
  name: _connArr
  href: api/SharpNeat.Neat.Genome.ConnectionGenes-1.html#SharpNeat_Neat_Genome_ConnectionGenes_1__connArr
  commentId: F:SharpNeat.Neat.Genome.ConnectionGenes`1._connArr
  fullName: SharpNeat.Neat.Genome.ConnectionGenes<T>._connArr
  fullName.vb: SharpNeat.Neat.Genome.ConnectionGenes(Of T)._connArr
  nameWithType: ConnectionGenes<T>._connArr
  nameWithType.vb: ConnectionGenes(Of T)._connArr
- uid: SharpNeat.Neat.Genome.ConnectionGenes`1._weightArr
  name: _weightArr
  href: api/SharpNeat.Neat.Genome.ConnectionGenes-1.html#SharpNeat_Neat_Genome_ConnectionGenes_1__weightArr
  commentId: F:SharpNeat.Neat.Genome.ConnectionGenes`1._weightArr
  fullName: SharpNeat.Neat.Genome.ConnectionGenes<T>._weightArr
  fullName.vb: SharpNeat.Neat.Genome.ConnectionGenes(Of T)._weightArr
  nameWithType: ConnectionGenes<T>._weightArr
  nameWithType.vb: ConnectionGenes(Of T)._weightArr
- uid: SharpNeat.Neat.Genome.ConnectionGenes`1.#ctor(SharpNeat.Graphs.DirectedConnection[],`0[])
  name: ConnectionGenes(DirectedConnection[], T[])
  href: api/SharpNeat.Neat.Genome.ConnectionGenes-1.html#SharpNeat_Neat_Genome_ConnectionGenes_1__ctor_SharpNeat_Graphs_DirectedConnection____0___
  commentId: M:SharpNeat.Neat.Genome.ConnectionGenes`1.#ctor(SharpNeat.Graphs.DirectedConnection[],`0[])
  name.vb: New(DirectedConnection(), T())
  fullName: SharpNeat.Neat.Genome.ConnectionGenes<T>.ConnectionGenes(SharpNeat.Graphs.DirectedConnection[], T[])
  fullName.vb: SharpNeat.Neat.Genome.ConnectionGenes(Of T).New(SharpNeat.Graphs.DirectedConnection(), T())
  nameWithType: ConnectionGenes<T>.ConnectionGenes(DirectedConnection[], T[])
  nameWithType.vb: ConnectionGenes(Of T).New(DirectedConnection(), T())
- uid: SharpNeat.Neat.Genome.ConnectionGenes`1.#ctor(System.Int32)
  name: ConnectionGenes(int)
  href: api/SharpNeat.Neat.Genome.ConnectionGenes-1.html#SharpNeat_Neat_Genome_ConnectionGenes_1__ctor_System_Int32_
  commentId: M:SharpNeat.Neat.Genome.ConnectionGenes`1.#ctor(System.Int32)
  name.vb: New(Integer)
  fullName: SharpNeat.Neat.Genome.ConnectionGenes<T>.ConnectionGenes(int)
  fullName.vb: SharpNeat.Neat.Genome.ConnectionGenes(Of T).New(Integer)
  nameWithType: ConnectionGenes<T>.ConnectionGenes(int)
  nameWithType.vb: ConnectionGenes(Of T).New(Integer)
- uid: SharpNeat.Neat.Genome.ConnectionGenes`1.#ctor*
  name: ConnectionGenes
  href: api/SharpNeat.Neat.Genome.ConnectionGenes-1.html#SharpNeat_Neat_Genome_ConnectionGenes_1__ctor_
  commentId: Overload:SharpNeat.Neat.Genome.ConnectionGenes`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Neat.Genome.ConnectionGenes<T>.ConnectionGenes
  fullName.vb: SharpNeat.Neat.Genome.ConnectionGenes(Of T).New
  nameWithType: ConnectionGenes<T>.ConnectionGenes
  nameWithType.vb: ConnectionGenes(Of T).New
- uid: SharpNeat.Neat.Genome.ConnectionGenes`1.Item(System.Int32)
  name: this[int]
  href: api/SharpNeat.Neat.Genome.ConnectionGenes-1.html#SharpNeat_Neat_Genome_ConnectionGenes_1_Item_System_Int32_
  commentId: P:SharpNeat.Neat.Genome.ConnectionGenes`1.Item(System.Int32)
  name.vb: this[](Integer)
  fullName: SharpNeat.Neat.Genome.ConnectionGenes<T>.this[int]
  fullName.vb: SharpNeat.Neat.Genome.ConnectionGenes(Of T).this[](Integer)
  nameWithType: ConnectionGenes<T>.this[int]
  nameWithType.vb: ConnectionGenes(Of T).this[](Integer)
- uid: SharpNeat.Neat.Genome.ConnectionGenes`1.Item*
  name: this
  href: api/SharpNeat.Neat.Genome.ConnectionGenes-1.html#SharpNeat_Neat_Genome_ConnectionGenes_1_Item_
  commentId: Overload:SharpNeat.Neat.Genome.ConnectionGenes`1.Item
  isSpec: "True"
  name.vb: this[]
  fullName: SharpNeat.Neat.Genome.ConnectionGenes<T>.this
  fullName.vb: SharpNeat.Neat.Genome.ConnectionGenes(Of T).this[]
  nameWithType: ConnectionGenes<T>.this
  nameWithType.vb: ConnectionGenes(Of T).this[]
- uid: SharpNeat.Neat.Genome.ConnectionGenes`1.Length
  name: Length
  href: api/SharpNeat.Neat.Genome.ConnectionGenes-1.html#SharpNeat_Neat_Genome_ConnectionGenes_1_Length
  commentId: P:SharpNeat.Neat.Genome.ConnectionGenes`1.Length
  fullName: SharpNeat.Neat.Genome.ConnectionGenes<T>.Length
  fullName.vb: SharpNeat.Neat.Genome.ConnectionGenes(Of T).Length
  nameWithType: ConnectionGenes<T>.Length
  nameWithType.vb: ConnectionGenes(Of T).Length
- uid: SharpNeat.Neat.Genome.ConnectionGenes`1.Length*
  name: Length
  href: api/SharpNeat.Neat.Genome.ConnectionGenes-1.html#SharpNeat_Neat_Genome_ConnectionGenes_1_Length_
  commentId: Overload:SharpNeat.Neat.Genome.ConnectionGenes`1.Length
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.ConnectionGenes<T>.Length
  fullName.vb: SharpNeat.Neat.Genome.ConnectionGenes(Of T).Length
  nameWithType: ConnectionGenes<T>.Length
  nameWithType.vb: ConnectionGenes(Of T).Length
- uid: SharpNeat.Neat.Genome.ConnectionGenes`1.Sort
  name: Sort()
  href: api/SharpNeat.Neat.Genome.ConnectionGenes-1.html#SharpNeat_Neat_Genome_ConnectionGenes_1_Sort
  commentId: M:SharpNeat.Neat.Genome.ConnectionGenes`1.Sort
  fullName: SharpNeat.Neat.Genome.ConnectionGenes<T>.Sort()
  fullName.vb: SharpNeat.Neat.Genome.ConnectionGenes(Of T).Sort()
  nameWithType: ConnectionGenes<T>.Sort()
  nameWithType.vb: ConnectionGenes(Of T).Sort()
- uid: SharpNeat.Neat.Genome.ConnectionGenes`1.Sort*
  name: Sort
  href: api/SharpNeat.Neat.Genome.ConnectionGenes-1.html#SharpNeat_Neat_Genome_ConnectionGenes_1_Sort_
  commentId: Overload:SharpNeat.Neat.Genome.ConnectionGenes`1.Sort
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.ConnectionGenes<T>.Sort
  fullName.vb: SharpNeat.Neat.Genome.ConnectionGenes(Of T).Sort
  nameWithType: ConnectionGenes<T>.Sort
  nameWithType.vb: ConnectionGenes(Of T).Sort
- uid: SharpNeat.Neat.Genome.Double
  name: SharpNeat.Neat.Genome.Double
  href: api/SharpNeat.Neat.Genome.Double.html
  commentId: N:SharpNeat.Neat.Genome.Double
  fullName: SharpNeat.Neat.Genome.Double
  nameWithType: SharpNeat.Neat.Genome.Double
- uid: SharpNeat.Neat.Genome.Double.NeatGenomeDecoderAcyclic
  name: NeatGenomeDecoderAcyclic
  href: api/SharpNeat.Neat.Genome.Double.NeatGenomeDecoderAcyclic.html
  commentId: T:SharpNeat.Neat.Genome.Double.NeatGenomeDecoderAcyclic
  fullName: SharpNeat.Neat.Genome.Double.NeatGenomeDecoderAcyclic
  nameWithType: NeatGenomeDecoderAcyclic
- uid: SharpNeat.Neat.Genome.Double.NeatGenomeDecoderAcyclic.Decode(SharpNeat.Neat.Genome.NeatGenome{System.Double})
  name: Decode(NeatGenome<double>)
  href: api/SharpNeat.Neat.Genome.Double.NeatGenomeDecoderAcyclic.html#SharpNeat_Neat_Genome_Double_NeatGenomeDecoderAcyclic_Decode_SharpNeat_Neat_Genome_NeatGenome_System_Double__
  commentId: M:SharpNeat.Neat.Genome.Double.NeatGenomeDecoderAcyclic.Decode(SharpNeat.Neat.Genome.NeatGenome{System.Double})
  name.vb: Decode(NeatGenome(Of Double))
  fullName: SharpNeat.Neat.Genome.Double.NeatGenomeDecoderAcyclic.Decode(SharpNeat.Neat.Genome.NeatGenome<double>)
  fullName.vb: SharpNeat.Neat.Genome.Double.NeatGenomeDecoderAcyclic.Decode(SharpNeat.Neat.Genome.NeatGenome(Of Double))
  nameWithType: NeatGenomeDecoderAcyclic.Decode(NeatGenome<double>)
  nameWithType.vb: NeatGenomeDecoderAcyclic.Decode(NeatGenome(Of Double))
- uid: SharpNeat.Neat.Genome.Double.NeatGenomeDecoderAcyclic.Decode*
  name: Decode
  href: api/SharpNeat.Neat.Genome.Double.NeatGenomeDecoderAcyclic.html#SharpNeat_Neat_Genome_Double_NeatGenomeDecoderAcyclic_Decode_
  commentId: Overload:SharpNeat.Neat.Genome.Double.NeatGenomeDecoderAcyclic.Decode
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.Double.NeatGenomeDecoderAcyclic.Decode
  nameWithType: NeatGenomeDecoderAcyclic.Decode
- uid: SharpNeat.Neat.Genome.Double.NeatGenomeDecoderCyclic
  name: NeatGenomeDecoderCyclic
  href: api/SharpNeat.Neat.Genome.Double.NeatGenomeDecoderCyclic.html
  commentId: T:SharpNeat.Neat.Genome.Double.NeatGenomeDecoderCyclic
  fullName: SharpNeat.Neat.Genome.Double.NeatGenomeDecoderCyclic
  nameWithType: NeatGenomeDecoderCyclic
- uid: SharpNeat.Neat.Genome.Double.NeatGenomeDecoderCyclic.Decode(SharpNeat.Neat.Genome.NeatGenome{System.Double})
  name: Decode(NeatGenome<double>)
  href: api/SharpNeat.Neat.Genome.Double.NeatGenomeDecoderCyclic.html#SharpNeat_Neat_Genome_Double_NeatGenomeDecoderCyclic_Decode_SharpNeat_Neat_Genome_NeatGenome_System_Double__
  commentId: M:SharpNeat.Neat.Genome.Double.NeatGenomeDecoderCyclic.Decode(SharpNeat.Neat.Genome.NeatGenome{System.Double})
  name.vb: Decode(NeatGenome(Of Double))
  fullName: SharpNeat.Neat.Genome.Double.NeatGenomeDecoderCyclic.Decode(SharpNeat.Neat.Genome.NeatGenome<double>)
  fullName.vb: SharpNeat.Neat.Genome.Double.NeatGenomeDecoderCyclic.Decode(SharpNeat.Neat.Genome.NeatGenome(Of Double))
  nameWithType: NeatGenomeDecoderCyclic.Decode(NeatGenome<double>)
  nameWithType.vb: NeatGenomeDecoderCyclic.Decode(NeatGenome(Of Double))
- uid: SharpNeat.Neat.Genome.Double.NeatGenomeDecoderCyclic.Decode*
  name: Decode
  href: api/SharpNeat.Neat.Genome.Double.NeatGenomeDecoderCyclic.html#SharpNeat_Neat_Genome_Double_NeatGenomeDecoderCyclic_Decode_
  commentId: Overload:SharpNeat.Neat.Genome.Double.NeatGenomeDecoderCyclic.Decode
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.Double.NeatGenomeDecoderCyclic.Decode
  nameWithType: NeatGenomeDecoderCyclic.Decode
- uid: SharpNeat.Neat.Genome.Double.NeatGenomeDecoderFactory
  name: NeatGenomeDecoderFactory
  href: api/SharpNeat.Neat.Genome.Double.NeatGenomeDecoderFactory.html
  commentId: T:SharpNeat.Neat.Genome.Double.NeatGenomeDecoderFactory
  fullName: SharpNeat.Neat.Genome.Double.NeatGenomeDecoderFactory
  nameWithType: NeatGenomeDecoderFactory
- uid: SharpNeat.Neat.Genome.Double.NeatGenomeDecoderFactory.CreateGenomeDecoder(System.Boolean,System.Boolean)
  name: CreateGenomeDecoder(bool, bool)
  href: api/SharpNeat.Neat.Genome.Double.NeatGenomeDecoderFactory.html#SharpNeat_Neat_Genome_Double_NeatGenomeDecoderFactory_CreateGenomeDecoder_System_Boolean_System_Boolean_
  commentId: M:SharpNeat.Neat.Genome.Double.NeatGenomeDecoderFactory.CreateGenomeDecoder(System.Boolean,System.Boolean)
  name.vb: CreateGenomeDecoder(Boolean, Boolean)
  fullName: SharpNeat.Neat.Genome.Double.NeatGenomeDecoderFactory.CreateGenomeDecoder(bool, bool)
  fullName.vb: SharpNeat.Neat.Genome.Double.NeatGenomeDecoderFactory.CreateGenomeDecoder(Boolean, Boolean)
  nameWithType: NeatGenomeDecoderFactory.CreateGenomeDecoder(bool, bool)
  nameWithType.vb: NeatGenomeDecoderFactory.CreateGenomeDecoder(Boolean, Boolean)
- uid: SharpNeat.Neat.Genome.Double.NeatGenomeDecoderFactory.CreateGenomeDecoder*
  name: CreateGenomeDecoder
  href: api/SharpNeat.Neat.Genome.Double.NeatGenomeDecoderFactory.html#SharpNeat_Neat_Genome_Double_NeatGenomeDecoderFactory_CreateGenomeDecoder_
  commentId: Overload:SharpNeat.Neat.Genome.Double.NeatGenomeDecoderFactory.CreateGenomeDecoder
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.Double.NeatGenomeDecoderFactory.CreateGenomeDecoder
  nameWithType: NeatGenomeDecoderFactory.CreateGenomeDecoder
- uid: SharpNeat.Neat.Genome.Double.Vectorized
  name: SharpNeat.Neat.Genome.Double.Vectorized
  href: api/SharpNeat.Neat.Genome.Double.Vectorized.html
  commentId: N:SharpNeat.Neat.Genome.Double.Vectorized
  fullName: SharpNeat.Neat.Genome.Double.Vectorized
  nameWithType: SharpNeat.Neat.Genome.Double.Vectorized
- uid: SharpNeat.Neat.Genome.Double.Vectorized.NeatGenomeDecoderAcyclic
  name: NeatGenomeDecoderAcyclic
  href: api/SharpNeat.Neat.Genome.Double.Vectorized.NeatGenomeDecoderAcyclic.html
  commentId: T:SharpNeat.Neat.Genome.Double.Vectorized.NeatGenomeDecoderAcyclic
  fullName: SharpNeat.Neat.Genome.Double.Vectorized.NeatGenomeDecoderAcyclic
  nameWithType: NeatGenomeDecoderAcyclic
- uid: SharpNeat.Neat.Genome.Double.Vectorized.NeatGenomeDecoderAcyclic.Decode(SharpNeat.Neat.Genome.NeatGenome{System.Double})
  name: Decode(NeatGenome<double>)
  href: api/SharpNeat.Neat.Genome.Double.Vectorized.NeatGenomeDecoderAcyclic.html#SharpNeat_Neat_Genome_Double_Vectorized_NeatGenomeDecoderAcyclic_Decode_SharpNeat_Neat_Genome_NeatGenome_System_Double__
  commentId: M:SharpNeat.Neat.Genome.Double.Vectorized.NeatGenomeDecoderAcyclic.Decode(SharpNeat.Neat.Genome.NeatGenome{System.Double})
  name.vb: Decode(NeatGenome(Of Double))
  fullName: SharpNeat.Neat.Genome.Double.Vectorized.NeatGenomeDecoderAcyclic.Decode(SharpNeat.Neat.Genome.NeatGenome<double>)
  fullName.vb: SharpNeat.Neat.Genome.Double.Vectorized.NeatGenomeDecoderAcyclic.Decode(SharpNeat.Neat.Genome.NeatGenome(Of Double))
  nameWithType: NeatGenomeDecoderAcyclic.Decode(NeatGenome<double>)
  nameWithType.vb: NeatGenomeDecoderAcyclic.Decode(NeatGenome(Of Double))
- uid: SharpNeat.Neat.Genome.Double.Vectorized.NeatGenomeDecoderAcyclic.Decode*
  name: Decode
  href: api/SharpNeat.Neat.Genome.Double.Vectorized.NeatGenomeDecoderAcyclic.html#SharpNeat_Neat_Genome_Double_Vectorized_NeatGenomeDecoderAcyclic_Decode_
  commentId: Overload:SharpNeat.Neat.Genome.Double.Vectorized.NeatGenomeDecoderAcyclic.Decode
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.Double.Vectorized.NeatGenomeDecoderAcyclic.Decode
  nameWithType: NeatGenomeDecoderAcyclic.Decode
- uid: SharpNeat.Neat.Genome.Double.Vectorized.NeatGenomeDecoderCyclic
  name: NeatGenomeDecoderCyclic
  href: api/SharpNeat.Neat.Genome.Double.Vectorized.NeatGenomeDecoderCyclic.html
  commentId: T:SharpNeat.Neat.Genome.Double.Vectorized.NeatGenomeDecoderCyclic
  fullName: SharpNeat.Neat.Genome.Double.Vectorized.NeatGenomeDecoderCyclic
  nameWithType: NeatGenomeDecoderCyclic
- uid: SharpNeat.Neat.Genome.Double.Vectorized.NeatGenomeDecoderCyclic.Decode(SharpNeat.Neat.Genome.NeatGenome{System.Double})
  name: Decode(NeatGenome<double>)
  href: api/SharpNeat.Neat.Genome.Double.Vectorized.NeatGenomeDecoderCyclic.html#SharpNeat_Neat_Genome_Double_Vectorized_NeatGenomeDecoderCyclic_Decode_SharpNeat_Neat_Genome_NeatGenome_System_Double__
  commentId: M:SharpNeat.Neat.Genome.Double.Vectorized.NeatGenomeDecoderCyclic.Decode(SharpNeat.Neat.Genome.NeatGenome{System.Double})
  name.vb: Decode(NeatGenome(Of Double))
  fullName: SharpNeat.Neat.Genome.Double.Vectorized.NeatGenomeDecoderCyclic.Decode(SharpNeat.Neat.Genome.NeatGenome<double>)
  fullName.vb: SharpNeat.Neat.Genome.Double.Vectorized.NeatGenomeDecoderCyclic.Decode(SharpNeat.Neat.Genome.NeatGenome(Of Double))
  nameWithType: NeatGenomeDecoderCyclic.Decode(NeatGenome<double>)
  nameWithType.vb: NeatGenomeDecoderCyclic.Decode(NeatGenome(Of Double))
- uid: SharpNeat.Neat.Genome.Double.Vectorized.NeatGenomeDecoderCyclic.Decode*
  name: Decode
  href: api/SharpNeat.Neat.Genome.Double.Vectorized.NeatGenomeDecoderCyclic.html#SharpNeat_Neat_Genome_Double_Vectorized_NeatGenomeDecoderCyclic_Decode_
  commentId: Overload:SharpNeat.Neat.Genome.Double.Vectorized.NeatGenomeDecoderCyclic.Decode
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.Double.Vectorized.NeatGenomeDecoderCyclic.Decode
  nameWithType: NeatGenomeDecoderCyclic.Decode
- uid: SharpNeat.Neat.Genome.INeatGenomeBuilder`1
  name: INeatGenomeBuilder<T>
  href: api/SharpNeat.Neat.Genome.INeatGenomeBuilder-1.html
  commentId: T:SharpNeat.Neat.Genome.INeatGenomeBuilder`1
  name.vb: INeatGenomeBuilder(Of T)
  fullName: SharpNeat.Neat.Genome.INeatGenomeBuilder<T>
  fullName.vb: SharpNeat.Neat.Genome.INeatGenomeBuilder(Of T)
  nameWithType: INeatGenomeBuilder<T>
  nameWithType.vb: INeatGenomeBuilder(Of T)
- uid: SharpNeat.Neat.Genome.INeatGenomeBuilder`1.Create(System.Int32,System.Int32,SharpNeat.Neat.Genome.ConnectionGenes{`0},System.Int32[],SharpNeat.Graphs.INodeIdMap,SharpNeat.Graphs.DirectedGraph,System.Int32[])
  name: Create(int, int, ConnectionGenes<T>, int[], INodeIdMap, DirectedGraph, int[]?)
  href: api/SharpNeat.Neat.Genome.INeatGenomeBuilder-1.html#SharpNeat_Neat_Genome_INeatGenomeBuilder_1_Create_System_Int32_System_Int32_SharpNeat_Neat_Genome_ConnectionGenes__0__System_Int32___SharpNeat_Graphs_INodeIdMap_SharpNeat_Graphs_DirectedGraph_System_Int32___
  commentId: M:SharpNeat.Neat.Genome.INeatGenomeBuilder`1.Create(System.Int32,System.Int32,SharpNeat.Neat.Genome.ConnectionGenes{`0},System.Int32[],SharpNeat.Graphs.INodeIdMap,SharpNeat.Graphs.DirectedGraph,System.Int32[])
  name.vb: Create(Integer, Integer, ConnectionGenes(Of T), Integer(), INodeIdMap, DirectedGraph, Integer())
  fullName: SharpNeat.Neat.Genome.INeatGenomeBuilder<T>.Create(int, int, SharpNeat.Neat.Genome.ConnectionGenes<T>, int[], SharpNeat.Graphs.INodeIdMap, SharpNeat.Graphs.DirectedGraph, int[]?)
  fullName.vb: SharpNeat.Neat.Genome.INeatGenomeBuilder(Of T).Create(Integer, Integer, SharpNeat.Neat.Genome.ConnectionGenes(Of T), Integer(), SharpNeat.Graphs.INodeIdMap, SharpNeat.Graphs.DirectedGraph, Integer())
  nameWithType: INeatGenomeBuilder<T>.Create(int, int, ConnectionGenes<T>, int[], INodeIdMap, DirectedGraph, int[]?)
  nameWithType.vb: INeatGenomeBuilder(Of T).Create(Integer, Integer, ConnectionGenes(Of T), Integer(), INodeIdMap, DirectedGraph, Integer())
- uid: SharpNeat.Neat.Genome.INeatGenomeBuilder`1.Create(System.Int32,System.Int32,SharpNeat.Neat.Genome.ConnectionGenes{`0},System.Int32[],SharpNeat.Graphs.INodeIdMap)
  name: Create(int, int, ConnectionGenes<T>, int[], INodeIdMap)
  href: api/SharpNeat.Neat.Genome.INeatGenomeBuilder-1.html#SharpNeat_Neat_Genome_INeatGenomeBuilder_1_Create_System_Int32_System_Int32_SharpNeat_Neat_Genome_ConnectionGenes__0__System_Int32___SharpNeat_Graphs_INodeIdMap_
  commentId: M:SharpNeat.Neat.Genome.INeatGenomeBuilder`1.Create(System.Int32,System.Int32,SharpNeat.Neat.Genome.ConnectionGenes{`0},System.Int32[],SharpNeat.Graphs.INodeIdMap)
  name.vb: Create(Integer, Integer, ConnectionGenes(Of T), Integer(), INodeIdMap)
  fullName: SharpNeat.Neat.Genome.INeatGenomeBuilder<T>.Create(int, int, SharpNeat.Neat.Genome.ConnectionGenes<T>, int[], SharpNeat.Graphs.INodeIdMap)
  fullName.vb: SharpNeat.Neat.Genome.INeatGenomeBuilder(Of T).Create(Integer, Integer, SharpNeat.Neat.Genome.ConnectionGenes(Of T), Integer(), SharpNeat.Graphs.INodeIdMap)
  nameWithType: INeatGenomeBuilder<T>.Create(int, int, ConnectionGenes<T>, int[], INodeIdMap)
  nameWithType.vb: INeatGenomeBuilder(Of T).Create(Integer, Integer, ConnectionGenes(Of T), Integer(), INodeIdMap)
- uid: SharpNeat.Neat.Genome.INeatGenomeBuilder`1.Create(System.Int32,System.Int32,SharpNeat.Neat.Genome.ConnectionGenes{`0},System.Int32[])
  name: Create(int, int, ConnectionGenes<T>, int[])
  href: api/SharpNeat.Neat.Genome.INeatGenomeBuilder-1.html#SharpNeat_Neat_Genome_INeatGenomeBuilder_1_Create_System_Int32_System_Int32_SharpNeat_Neat_Genome_ConnectionGenes__0__System_Int32___
  commentId: M:SharpNeat.Neat.Genome.INeatGenomeBuilder`1.Create(System.Int32,System.Int32,SharpNeat.Neat.Genome.ConnectionGenes{`0},System.Int32[])
  name.vb: Create(Integer, Integer, ConnectionGenes(Of T), Integer())
  fullName: SharpNeat.Neat.Genome.INeatGenomeBuilder<T>.Create(int, int, SharpNeat.Neat.Genome.ConnectionGenes<T>, int[])
  fullName.vb: SharpNeat.Neat.Genome.INeatGenomeBuilder(Of T).Create(Integer, Integer, SharpNeat.Neat.Genome.ConnectionGenes(Of T), Integer())
  nameWithType: INeatGenomeBuilder<T>.Create(int, int, ConnectionGenes<T>, int[])
  nameWithType.vb: INeatGenomeBuilder(Of T).Create(Integer, Integer, ConnectionGenes(Of T), Integer())
- uid: SharpNeat.Neat.Genome.INeatGenomeBuilder`1.Create(System.Int32,System.Int32,SharpNeat.Neat.Genome.ConnectionGenes{`0})
  name: Create(int, int, ConnectionGenes<T>)
  href: api/SharpNeat.Neat.Genome.INeatGenomeBuilder-1.html#SharpNeat_Neat_Genome_INeatGenomeBuilder_1_Create_System_Int32_System_Int32_SharpNeat_Neat_Genome_ConnectionGenes__0__
  commentId: M:SharpNeat.Neat.Genome.INeatGenomeBuilder`1.Create(System.Int32,System.Int32,SharpNeat.Neat.Genome.ConnectionGenes{`0})
  name.vb: Create(Integer, Integer, ConnectionGenes(Of T))
  fullName: SharpNeat.Neat.Genome.INeatGenomeBuilder<T>.Create(int, int, SharpNeat.Neat.Genome.ConnectionGenes<T>)
  fullName.vb: SharpNeat.Neat.Genome.INeatGenomeBuilder(Of T).Create(Integer, Integer, SharpNeat.Neat.Genome.ConnectionGenes(Of T))
  nameWithType: INeatGenomeBuilder<T>.Create(int, int, ConnectionGenes<T>)
  nameWithType.vb: INeatGenomeBuilder(Of T).Create(Integer, Integer, ConnectionGenes(Of T))
- uid: SharpNeat.Neat.Genome.INeatGenomeBuilder`1.Create*
  name: Create
  href: api/SharpNeat.Neat.Genome.INeatGenomeBuilder-1.html#SharpNeat_Neat_Genome_INeatGenomeBuilder_1_Create_
  commentId: Overload:SharpNeat.Neat.Genome.INeatGenomeBuilder`1.Create
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.INeatGenomeBuilder<T>.Create
  fullName.vb: SharpNeat.Neat.Genome.INeatGenomeBuilder(Of T).Create
  nameWithType: INeatGenomeBuilder<T>.Create
  nameWithType.vb: INeatGenomeBuilder(Of T).Create
- uid: SharpNeat.Neat.Genome.IO
  name: SharpNeat.Neat.Genome.IO
  href: api/SharpNeat.Neat.Genome.IO.html
  commentId: N:SharpNeat.Neat.Genome.IO
  fullName: SharpNeat.Neat.Genome.IO
  nameWithType: SharpNeat.Neat.Genome.IO
- uid: SharpNeat.Neat.Genome.IO.IOTestUtils
  name: IOTestUtils
  href: api/SharpNeat.Neat.Genome.IO.IOTestUtils.html
  commentId: T:SharpNeat.Neat.Genome.IO.IOTestUtils
  fullName: SharpNeat.Neat.Genome.IO.IOTestUtils
  nameWithType: IOTestUtils
- uid: SharpNeat.Neat.Genome.IO.IOTestUtils.CompareGenomeLists(System.Collections.Generic.IList{SharpNeat.Neat.Genome.NeatGenome{System.Double}},System.Collections.Generic.IList{SharpNeat.Neat.Genome.NeatGenome{System.Double}})
  name: CompareGenomeLists(IList<NeatGenome<double>>, IList<NeatGenome<double>>)
  href: api/SharpNeat.Neat.Genome.IO.IOTestUtils.html#SharpNeat_Neat_Genome_IO_IOTestUtils_CompareGenomeLists_System_Collections_Generic_IList_SharpNeat_Neat_Genome_NeatGenome_System_Double___System_Collections_Generic_IList_SharpNeat_Neat_Genome_NeatGenome_System_Double___
  commentId: M:SharpNeat.Neat.Genome.IO.IOTestUtils.CompareGenomeLists(System.Collections.Generic.IList{SharpNeat.Neat.Genome.NeatGenome{System.Double}},System.Collections.Generic.IList{SharpNeat.Neat.Genome.NeatGenome{System.Double}})
  name.vb: CompareGenomeLists(IList(Of NeatGenome(Of Double)), IList(Of NeatGenome(Of Double)))
  fullName: SharpNeat.Neat.Genome.IO.IOTestUtils.CompareGenomeLists(System.Collections.Generic.IList<SharpNeat.Neat.Genome.NeatGenome<double>>, System.Collections.Generic.IList<SharpNeat.Neat.Genome.NeatGenome<double>>)
  fullName.vb: SharpNeat.Neat.Genome.IO.IOTestUtils.CompareGenomeLists(System.Collections.Generic.IList(Of SharpNeat.Neat.Genome.NeatGenome(Of Double)), System.Collections.Generic.IList(Of SharpNeat.Neat.Genome.NeatGenome(Of Double)))
  nameWithType: IOTestUtils.CompareGenomeLists(IList<NeatGenome<double>>, IList<NeatGenome<double>>)
  nameWithType.vb: IOTestUtils.CompareGenomeLists(IList(Of NeatGenome(Of Double)), IList(Of NeatGenome(Of Double)))
- uid: SharpNeat.Neat.Genome.IO.IOTestUtils.CompareGenomeLists*
  name: CompareGenomeLists
  href: api/SharpNeat.Neat.Genome.IO.IOTestUtils.html#SharpNeat_Neat_Genome_IO_IOTestUtils_CompareGenomeLists_
  commentId: Overload:SharpNeat.Neat.Genome.IO.IOTestUtils.CompareGenomeLists
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.IO.IOTestUtils.CompareGenomeLists
  nameWithType: IOTestUtils.CompareGenomeLists
- uid: SharpNeat.Neat.Genome.IO.IOTestUtils.CompareGenomes(SharpNeat.Neat.Genome.NeatGenome{System.Double},SharpNeat.Neat.Genome.NeatGenome{System.Double})
  name: CompareGenomes(NeatGenome<double>, NeatGenome<double>)
  href: api/SharpNeat.Neat.Genome.IO.IOTestUtils.html#SharpNeat_Neat_Genome_IO_IOTestUtils_CompareGenomes_SharpNeat_Neat_Genome_NeatGenome_System_Double__SharpNeat_Neat_Genome_NeatGenome_System_Double__
  commentId: M:SharpNeat.Neat.Genome.IO.IOTestUtils.CompareGenomes(SharpNeat.Neat.Genome.NeatGenome{System.Double},SharpNeat.Neat.Genome.NeatGenome{System.Double})
  name.vb: CompareGenomes(NeatGenome(Of Double), NeatGenome(Of Double))
  fullName: SharpNeat.Neat.Genome.IO.IOTestUtils.CompareGenomes(SharpNeat.Neat.Genome.NeatGenome<double>, SharpNeat.Neat.Genome.NeatGenome<double>)
  fullName.vb: SharpNeat.Neat.Genome.IO.IOTestUtils.CompareGenomes(SharpNeat.Neat.Genome.NeatGenome(Of Double), SharpNeat.Neat.Genome.NeatGenome(Of Double))
  nameWithType: IOTestUtils.CompareGenomes(NeatGenome<double>, NeatGenome<double>)
  nameWithType.vb: IOTestUtils.CompareGenomes(NeatGenome(Of Double), NeatGenome(Of Double))
- uid: SharpNeat.Neat.Genome.IO.IOTestUtils.CompareGenomes*
  name: CompareGenomes
  href: api/SharpNeat.Neat.Genome.IO.IOTestUtils.html#SharpNeat_Neat_Genome_IO_IOTestUtils_CompareGenomes_
  commentId: Overload:SharpNeat.Neat.Genome.IO.IOTestUtils.CompareGenomes
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.IO.IOTestUtils.CompareGenomes
  nameWithType: IOTestUtils.CompareGenomes
- uid: SharpNeat.Neat.Genome.IO.NeatGenomeConverter
  name: NeatGenomeConverter
  href: api/SharpNeat.Neat.Genome.IO.NeatGenomeConverter.html
  commentId: T:SharpNeat.Neat.Genome.IO.NeatGenomeConverter
  fullName: SharpNeat.Neat.Genome.IO.NeatGenomeConverter
  nameWithType: NeatGenomeConverter
- uid: SharpNeat.Neat.Genome.IO.NeatGenomeConverter.ToNeatGenome*
  name: ToNeatGenome
  href: api/SharpNeat.Neat.Genome.IO.NeatGenomeConverter.html#SharpNeat_Neat_Genome_IO_NeatGenomeConverter_ToNeatGenome_
  commentId: Overload:SharpNeat.Neat.Genome.IO.NeatGenomeConverter.ToNeatGenome
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.IO.NeatGenomeConverter.ToNeatGenome
  nameWithType: NeatGenomeConverter.ToNeatGenome
- uid: SharpNeat.Neat.Genome.IO.NeatGenomeConverter.ToNeatGenome``1(SharpNeat.IO.Models.NetFileModel,SharpNeat.Neat.Genome.MetaNeatGenome{``0},System.Int32,System.Boolean)
  name: ToNeatGenome<T>(NetFileModel, MetaNeatGenome<T>, int, bool)
  href: api/SharpNeat.Neat.Genome.IO.NeatGenomeConverter.html#SharpNeat_Neat_Genome_IO_NeatGenomeConverter_ToNeatGenome__1_SharpNeat_IO_Models_NetFileModel_SharpNeat_Neat_Genome_MetaNeatGenome___0__System_Int32_System_Boolean_
  commentId: M:SharpNeat.Neat.Genome.IO.NeatGenomeConverter.ToNeatGenome``1(SharpNeat.IO.Models.NetFileModel,SharpNeat.Neat.Genome.MetaNeatGenome{``0},System.Int32,System.Boolean)
  name.vb: ToNeatGenome(Of T)(NetFileModel, MetaNeatGenome(Of T), Integer, Boolean)
  fullName: SharpNeat.Neat.Genome.IO.NeatGenomeConverter.ToNeatGenome<T>(SharpNeat.IO.Models.NetFileModel, SharpNeat.Neat.Genome.MetaNeatGenome<T>, int, bool)
  fullName.vb: SharpNeat.Neat.Genome.IO.NeatGenomeConverter.ToNeatGenome(Of T)(SharpNeat.IO.Models.NetFileModel, SharpNeat.Neat.Genome.MetaNeatGenome(Of T), Integer, Boolean)
  nameWithType: NeatGenomeConverter.ToNeatGenome<T>(NetFileModel, MetaNeatGenome<T>, int, bool)
  nameWithType.vb: NeatGenomeConverter.ToNeatGenome(Of T)(NetFileModel, MetaNeatGenome(Of T), Integer, Boolean)
- uid: SharpNeat.Neat.Genome.IO.NeatGenomeConverter.ToNetFileModel*
  name: ToNetFileModel
  href: api/SharpNeat.Neat.Genome.IO.NeatGenomeConverter.html#SharpNeat_Neat_Genome_IO_NeatGenomeConverter_ToNetFileModel_
  commentId: Overload:SharpNeat.Neat.Genome.IO.NeatGenomeConverter.ToNetFileModel
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.IO.NeatGenomeConverter.ToNetFileModel
  nameWithType: NeatGenomeConverter.ToNetFileModel
- uid: SharpNeat.Neat.Genome.IO.NeatGenomeConverter.ToNetFileModel``1(SharpNeat.Neat.Genome.NeatGenome{``0})
  name: ToNetFileModel<T>(NeatGenome<T>)
  href: api/SharpNeat.Neat.Genome.IO.NeatGenomeConverter.html#SharpNeat_Neat_Genome_IO_NeatGenomeConverter_ToNetFileModel__1_SharpNeat_Neat_Genome_NeatGenome___0__
  commentId: M:SharpNeat.Neat.Genome.IO.NeatGenomeConverter.ToNetFileModel``1(SharpNeat.Neat.Genome.NeatGenome{``0})
  name.vb: ToNetFileModel(Of T)(NeatGenome(Of T))
  fullName: SharpNeat.Neat.Genome.IO.NeatGenomeConverter.ToNetFileModel<T>(SharpNeat.Neat.Genome.NeatGenome<T>)
  fullName.vb: SharpNeat.Neat.Genome.IO.NeatGenomeConverter.ToNetFileModel(Of T)(SharpNeat.Neat.Genome.NeatGenome(Of T))
  nameWithType: NeatGenomeConverter.ToNetFileModel<T>(NeatGenome<T>)
  nameWithType.vb: NeatGenomeConverter.ToNetFileModel(Of T)(NeatGenome(Of T))
- uid: SharpNeat.Neat.Genome.IO.NeatGenomeConverterTests
  name: NeatGenomeConverterTests
  href: api/SharpNeat.Neat.Genome.IO.NeatGenomeConverterTests.html
  commentId: T:SharpNeat.Neat.Genome.IO.NeatGenomeConverterTests
  fullName: SharpNeat.Neat.Genome.IO.NeatGenomeConverterTests
  nameWithType: NeatGenomeConverterTests
- uid: SharpNeat.Neat.Genome.IO.NeatGenomeConverterTests.GenomeShouldConvertToNetFileModel
  name: GenomeShouldConvertToNetFileModel()
  href: api/SharpNeat.Neat.Genome.IO.NeatGenomeConverterTests.html#SharpNeat_Neat_Genome_IO_NeatGenomeConverterTests_GenomeShouldConvertToNetFileModel
  commentId: M:SharpNeat.Neat.Genome.IO.NeatGenomeConverterTests.GenomeShouldConvertToNetFileModel
  fullName: SharpNeat.Neat.Genome.IO.NeatGenomeConverterTests.GenomeShouldConvertToNetFileModel()
  nameWithType: NeatGenomeConverterTests.GenomeShouldConvertToNetFileModel()
- uid: SharpNeat.Neat.Genome.IO.NeatGenomeConverterTests.GenomeShouldConvertToNetFileModel*
  name: GenomeShouldConvertToNetFileModel
  href: api/SharpNeat.Neat.Genome.IO.NeatGenomeConverterTests.html#SharpNeat_Neat_Genome_IO_NeatGenomeConverterTests_GenomeShouldConvertToNetFileModel_
  commentId: Overload:SharpNeat.Neat.Genome.IO.NeatGenomeConverterTests.GenomeShouldConvertToNetFileModel
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.IO.NeatGenomeConverterTests.GenomeShouldConvertToNetFileModel
  nameWithType: NeatGenomeConverterTests.GenomeShouldConvertToNetFileModel
- uid: SharpNeat.Neat.Genome.IO.NeatGenomeConverterTests.NetFileModelShouldConvertToGenome
  name: NetFileModelShouldConvertToGenome()
  href: api/SharpNeat.Neat.Genome.IO.NeatGenomeConverterTests.html#SharpNeat_Neat_Genome_IO_NeatGenomeConverterTests_NetFileModelShouldConvertToGenome
  commentId: M:SharpNeat.Neat.Genome.IO.NeatGenomeConverterTests.NetFileModelShouldConvertToGenome
  fullName: SharpNeat.Neat.Genome.IO.NeatGenomeConverterTests.NetFileModelShouldConvertToGenome()
  nameWithType: NeatGenomeConverterTests.NetFileModelShouldConvertToGenome()
- uid: SharpNeat.Neat.Genome.IO.NeatGenomeConverterTests.NetFileModelShouldConvertToGenome*
  name: NetFileModelShouldConvertToGenome
  href: api/SharpNeat.Neat.Genome.IO.NeatGenomeConverterTests.html#SharpNeat_Neat_Genome_IO_NeatGenomeConverterTests_NetFileModelShouldConvertToGenome_
  commentId: Overload:SharpNeat.Neat.Genome.IO.NeatGenomeConverterTests.NetFileModelShouldConvertToGenome
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.IO.NeatGenomeConverterTests.NetFileModelShouldConvertToGenome
  nameWithType: NeatGenomeConverterTests.NetFileModelShouldConvertToGenome
- uid: SharpNeat.Neat.Genome.IO.NeatGenomeLoader
  name: NeatGenomeLoader
  href: api/SharpNeat.Neat.Genome.IO.NeatGenomeLoader.html
  commentId: T:SharpNeat.Neat.Genome.IO.NeatGenomeLoader
  fullName: SharpNeat.Neat.Genome.IO.NeatGenomeLoader
  nameWithType: NeatGenomeLoader
- uid: SharpNeat.Neat.Genome.IO.NeatGenomeLoader.Load*
  name: Load
  href: api/SharpNeat.Neat.Genome.IO.NeatGenomeLoader.html#SharpNeat_Neat_Genome_IO_NeatGenomeLoader_Load_
  commentId: Overload:SharpNeat.Neat.Genome.IO.NeatGenomeLoader.Load
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.IO.NeatGenomeLoader.Load
  nameWithType: NeatGenomeLoader.Load
- uid: SharpNeat.Neat.Genome.IO.NeatGenomeLoader.Load``1(System.IO.Stream,SharpNeat.Neat.Genome.MetaNeatGenome{``0},System.Int32)
  name: Load<T>(Stream, MetaNeatGenome<T>, int)
  href: api/SharpNeat.Neat.Genome.IO.NeatGenomeLoader.html#SharpNeat_Neat_Genome_IO_NeatGenomeLoader_Load__1_System_IO_Stream_SharpNeat_Neat_Genome_MetaNeatGenome___0__System_Int32_
  commentId: M:SharpNeat.Neat.Genome.IO.NeatGenomeLoader.Load``1(System.IO.Stream,SharpNeat.Neat.Genome.MetaNeatGenome{``0},System.Int32)
  name.vb: Load(Of T)(Stream, MetaNeatGenome(Of T), Integer)
  fullName: SharpNeat.Neat.Genome.IO.NeatGenomeLoader.Load<T>(System.IO.Stream, SharpNeat.Neat.Genome.MetaNeatGenome<T>, int)
  fullName.vb: SharpNeat.Neat.Genome.IO.NeatGenomeLoader.Load(Of T)(System.IO.Stream, SharpNeat.Neat.Genome.MetaNeatGenome(Of T), Integer)
  nameWithType: NeatGenomeLoader.Load<T>(Stream, MetaNeatGenome<T>, int)
  nameWithType.vb: NeatGenomeLoader.Load(Of T)(Stream, MetaNeatGenome(Of T), Integer)
- uid: SharpNeat.Neat.Genome.IO.NeatGenomeLoader.Load``1(System.String,SharpNeat.Neat.Genome.MetaNeatGenome{``0},System.Int32)
  name: Load<T>(string, MetaNeatGenome<T>, int)
  href: api/SharpNeat.Neat.Genome.IO.NeatGenomeLoader.html#SharpNeat_Neat_Genome_IO_NeatGenomeLoader_Load__1_System_String_SharpNeat_Neat_Genome_MetaNeatGenome___0__System_Int32_
  commentId: M:SharpNeat.Neat.Genome.IO.NeatGenomeLoader.Load``1(System.String,SharpNeat.Neat.Genome.MetaNeatGenome{``0},System.Int32)
  name.vb: Load(Of T)(String, MetaNeatGenome(Of T), Integer)
  fullName: SharpNeat.Neat.Genome.IO.NeatGenomeLoader.Load<T>(string, SharpNeat.Neat.Genome.MetaNeatGenome<T>, int)
  fullName.vb: SharpNeat.Neat.Genome.IO.NeatGenomeLoader.Load(Of T)(String, SharpNeat.Neat.Genome.MetaNeatGenome(Of T), Integer)
  nameWithType: NeatGenomeLoader.Load<T>(string, MetaNeatGenome<T>, int)
  nameWithType.vb: NeatGenomeLoader.Load(Of T)(String, MetaNeatGenome(Of T), Integer)
- uid: SharpNeat.Neat.Genome.IO.NeatGenomeLoaderTests
  name: NeatGenomeLoaderTests
  href: api/SharpNeat.Neat.Genome.IO.NeatGenomeLoaderTests.html
  commentId: T:SharpNeat.Neat.Genome.IO.NeatGenomeLoaderTests
  fullName: SharpNeat.Neat.Genome.IO.NeatGenomeLoaderTests
  nameWithType: NeatGenomeLoaderTests
- uid: SharpNeat.Neat.Genome.IO.NeatGenomeLoaderTests.LoadGenome
  name: LoadGenome()
  href: api/SharpNeat.Neat.Genome.IO.NeatGenomeLoaderTests.html#SharpNeat_Neat_Genome_IO_NeatGenomeLoaderTests_LoadGenome
  commentId: M:SharpNeat.Neat.Genome.IO.NeatGenomeLoaderTests.LoadGenome
  fullName: SharpNeat.Neat.Genome.IO.NeatGenomeLoaderTests.LoadGenome()
  nameWithType: NeatGenomeLoaderTests.LoadGenome()
- uid: SharpNeat.Neat.Genome.IO.NeatGenomeLoaderTests.LoadGenome*
  name: LoadGenome
  href: api/SharpNeat.Neat.Genome.IO.NeatGenomeLoaderTests.html#SharpNeat_Neat_Genome_IO_NeatGenomeLoaderTests_LoadGenome_
  commentId: Overload:SharpNeat.Neat.Genome.IO.NeatGenomeLoaderTests.LoadGenome
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.IO.NeatGenomeLoaderTests.LoadGenome
  nameWithType: NeatGenomeLoaderTests.LoadGenome
- uid: SharpNeat.Neat.Genome.IO.NeatGenomeSaver
  name: NeatGenomeSaver
  href: api/SharpNeat.Neat.Genome.IO.NeatGenomeSaver.html
  commentId: T:SharpNeat.Neat.Genome.IO.NeatGenomeSaver
  fullName: SharpNeat.Neat.Genome.IO.NeatGenomeSaver
  nameWithType: NeatGenomeSaver
- uid: SharpNeat.Neat.Genome.IO.NeatGenomeSaver.Save*
  name: Save
  href: api/SharpNeat.Neat.Genome.IO.NeatGenomeSaver.html#SharpNeat_Neat_Genome_IO_NeatGenomeSaver_Save_
  commentId: Overload:SharpNeat.Neat.Genome.IO.NeatGenomeSaver.Save
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.IO.NeatGenomeSaver.Save
  nameWithType: NeatGenomeSaver.Save
- uid: SharpNeat.Neat.Genome.IO.NeatGenomeSaver.Save``1(SharpNeat.Neat.Genome.NeatGenome{``0},System.IO.Stream)
  name: Save<T>(NeatGenome<T>, Stream)
  href: api/SharpNeat.Neat.Genome.IO.NeatGenomeSaver.html#SharpNeat_Neat_Genome_IO_NeatGenomeSaver_Save__1_SharpNeat_Neat_Genome_NeatGenome___0__System_IO_Stream_
  commentId: M:SharpNeat.Neat.Genome.IO.NeatGenomeSaver.Save``1(SharpNeat.Neat.Genome.NeatGenome{``0},System.IO.Stream)
  name.vb: Save(Of T)(NeatGenome(Of T), Stream)
  fullName: SharpNeat.Neat.Genome.IO.NeatGenomeSaver.Save<T>(SharpNeat.Neat.Genome.NeatGenome<T>, System.IO.Stream)
  fullName.vb: SharpNeat.Neat.Genome.IO.NeatGenomeSaver.Save(Of T)(SharpNeat.Neat.Genome.NeatGenome(Of T), System.IO.Stream)
  nameWithType: NeatGenomeSaver.Save<T>(NeatGenome<T>, Stream)
  nameWithType.vb: NeatGenomeSaver.Save(Of T)(NeatGenome(Of T), Stream)
- uid: SharpNeat.Neat.Genome.IO.NeatGenomeSaver.Save``1(SharpNeat.Neat.Genome.NeatGenome{``0},System.String)
  name: Save<T>(NeatGenome<T>, string)
  href: api/SharpNeat.Neat.Genome.IO.NeatGenomeSaver.html#SharpNeat_Neat_Genome_IO_NeatGenomeSaver_Save__1_SharpNeat_Neat_Genome_NeatGenome___0__System_String_
  commentId: M:SharpNeat.Neat.Genome.IO.NeatGenomeSaver.Save``1(SharpNeat.Neat.Genome.NeatGenome{``0},System.String)
  name.vb: Save(Of T)(NeatGenome(Of T), String)
  fullName: SharpNeat.Neat.Genome.IO.NeatGenomeSaver.Save<T>(SharpNeat.Neat.Genome.NeatGenome<T>, string)
  fullName.vb: SharpNeat.Neat.Genome.IO.NeatGenomeSaver.Save(Of T)(SharpNeat.Neat.Genome.NeatGenome(Of T), String)
  nameWithType: NeatGenomeSaver.Save<T>(NeatGenome<T>, string)
  nameWithType.vb: NeatGenomeSaver.Save(Of T)(NeatGenome(Of T), String)
- uid: SharpNeat.Neat.Genome.IO.NeatGenomeSaverTests
  name: NeatGenomeSaverTests
  href: api/SharpNeat.Neat.Genome.IO.NeatGenomeSaverTests.html
  commentId: T:SharpNeat.Neat.Genome.IO.NeatGenomeSaverTests
  fullName: SharpNeat.Neat.Genome.IO.NeatGenomeSaverTests
  nameWithType: NeatGenomeSaverTests
- uid: SharpNeat.Neat.Genome.IO.NeatGenomeSaverTests.SaveGenome
  name: SaveGenome()
  href: api/SharpNeat.Neat.Genome.IO.NeatGenomeSaverTests.html#SharpNeat_Neat_Genome_IO_NeatGenomeSaverTests_SaveGenome
  commentId: M:SharpNeat.Neat.Genome.IO.NeatGenomeSaverTests.SaveGenome
  fullName: SharpNeat.Neat.Genome.IO.NeatGenomeSaverTests.SaveGenome()
  nameWithType: NeatGenomeSaverTests.SaveGenome()
- uid: SharpNeat.Neat.Genome.IO.NeatGenomeSaverTests.SaveGenome_FrenchLocale
  name: SaveGenome_FrenchLocale()
  href: api/SharpNeat.Neat.Genome.IO.NeatGenomeSaverTests.html#SharpNeat_Neat_Genome_IO_NeatGenomeSaverTests_SaveGenome_FrenchLocale
  commentId: M:SharpNeat.Neat.Genome.IO.NeatGenomeSaverTests.SaveGenome_FrenchLocale
  fullName: SharpNeat.Neat.Genome.IO.NeatGenomeSaverTests.SaveGenome_FrenchLocale()
  nameWithType: NeatGenomeSaverTests.SaveGenome_FrenchLocale()
- uid: SharpNeat.Neat.Genome.IO.NeatGenomeSaverTests.SaveGenome_FrenchLocale*
  name: SaveGenome_FrenchLocale
  href: api/SharpNeat.Neat.Genome.IO.NeatGenomeSaverTests.html#SharpNeat_Neat_Genome_IO_NeatGenomeSaverTests_SaveGenome_FrenchLocale_
  commentId: Overload:SharpNeat.Neat.Genome.IO.NeatGenomeSaverTests.SaveGenome_FrenchLocale
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.IO.NeatGenomeSaverTests.SaveGenome_FrenchLocale
  nameWithType: NeatGenomeSaverTests.SaveGenome_FrenchLocale
- uid: SharpNeat.Neat.Genome.IO.NeatGenomeSaverTests.SaveGenome*
  name: SaveGenome
  href: api/SharpNeat.Neat.Genome.IO.NeatGenomeSaverTests.html#SharpNeat_Neat_Genome_IO_NeatGenomeSaverTests_SaveGenome_
  commentId: Overload:SharpNeat.Neat.Genome.IO.NeatGenomeSaverTests.SaveGenome
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.IO.NeatGenomeSaverTests.SaveGenome
  nameWithType: NeatGenomeSaverTests.SaveGenome
- uid: SharpNeat.Neat.Genome.IO.NeatPopulationIOTests
  name: NeatPopulationIOTests
  href: api/SharpNeat.Neat.Genome.IO.NeatPopulationIOTests.html
  commentId: T:SharpNeat.Neat.Genome.IO.NeatPopulationIOTests
  fullName: SharpNeat.Neat.Genome.IO.NeatPopulationIOTests
  nameWithType: NeatPopulationIOTests
- uid: SharpNeat.Neat.Genome.IO.NeatPopulationIOTests.SaveAndLoadPopulationToFolder
  name: SaveAndLoadPopulationToFolder()
  href: api/SharpNeat.Neat.Genome.IO.NeatPopulationIOTests.html#SharpNeat_Neat_Genome_IO_NeatPopulationIOTests_SaveAndLoadPopulationToFolder
  commentId: M:SharpNeat.Neat.Genome.IO.NeatPopulationIOTests.SaveAndLoadPopulationToFolder
  fullName: SharpNeat.Neat.Genome.IO.NeatPopulationIOTests.SaveAndLoadPopulationToFolder()
  nameWithType: NeatPopulationIOTests.SaveAndLoadPopulationToFolder()
- uid: SharpNeat.Neat.Genome.IO.NeatPopulationIOTests.SaveAndLoadPopulationToFolder*
  name: SaveAndLoadPopulationToFolder
  href: api/SharpNeat.Neat.Genome.IO.NeatPopulationIOTests.html#SharpNeat_Neat_Genome_IO_NeatPopulationIOTests_SaveAndLoadPopulationToFolder_
  commentId: Overload:SharpNeat.Neat.Genome.IO.NeatPopulationIOTests.SaveAndLoadPopulationToFolder
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.IO.NeatPopulationIOTests.SaveAndLoadPopulationToFolder
  nameWithType: NeatPopulationIOTests.SaveAndLoadPopulationToFolder
- uid: SharpNeat.Neat.Genome.IO.NeatPopulationIOTests.SaveAndLoadPopulationToZipArchive
  name: SaveAndLoadPopulationToZipArchive()
  href: api/SharpNeat.Neat.Genome.IO.NeatPopulationIOTests.html#SharpNeat_Neat_Genome_IO_NeatPopulationIOTests_SaveAndLoadPopulationToZipArchive
  commentId: M:SharpNeat.Neat.Genome.IO.NeatPopulationIOTests.SaveAndLoadPopulationToZipArchive
  fullName: SharpNeat.Neat.Genome.IO.NeatPopulationIOTests.SaveAndLoadPopulationToZipArchive()
  nameWithType: NeatPopulationIOTests.SaveAndLoadPopulationToZipArchive()
- uid: SharpNeat.Neat.Genome.IO.NeatPopulationIOTests.SaveAndLoadPopulationToZipArchive*
  name: SaveAndLoadPopulationToZipArchive
  href: api/SharpNeat.Neat.Genome.IO.NeatPopulationIOTests.html#SharpNeat_Neat_Genome_IO_NeatPopulationIOTests_SaveAndLoadPopulationToZipArchive_
  commentId: Overload:SharpNeat.Neat.Genome.IO.NeatPopulationIOTests.SaveAndLoadPopulationToZipArchive
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.IO.NeatPopulationIOTests.SaveAndLoadPopulationToZipArchive
  nameWithType: NeatPopulationIOTests.SaveAndLoadPopulationToZipArchive
- uid: SharpNeat.Neat.Genome.IO.NeatPopulationLoader`1
  name: NeatPopulationLoader<T>
  href: api/SharpNeat.Neat.Genome.IO.NeatPopulationLoader-1.html
  commentId: T:SharpNeat.Neat.Genome.IO.NeatPopulationLoader`1
  name.vb: NeatPopulationLoader(Of T)
  fullName: SharpNeat.Neat.Genome.IO.NeatPopulationLoader<T>
  fullName.vb: SharpNeat.Neat.Genome.IO.NeatPopulationLoader(Of T)
  nameWithType: NeatPopulationLoader<T>
  nameWithType.vb: NeatPopulationLoader(Of T)
- uid: SharpNeat.Neat.Genome.IO.NeatPopulationLoader`1.#ctor(SharpNeat.Neat.Genome.MetaNeatGenome{`0})
  name: NeatPopulationLoader(MetaNeatGenome<T>)
  href: api/SharpNeat.Neat.Genome.IO.NeatPopulationLoader-1.html#SharpNeat_Neat_Genome_IO_NeatPopulationLoader_1__ctor_SharpNeat_Neat_Genome_MetaNeatGenome__0__
  commentId: M:SharpNeat.Neat.Genome.IO.NeatPopulationLoader`1.#ctor(SharpNeat.Neat.Genome.MetaNeatGenome{`0})
  name.vb: New(MetaNeatGenome(Of T))
  fullName: SharpNeat.Neat.Genome.IO.NeatPopulationLoader<T>.NeatPopulationLoader(SharpNeat.Neat.Genome.MetaNeatGenome<T>)
  fullName.vb: SharpNeat.Neat.Genome.IO.NeatPopulationLoader(Of T).New(SharpNeat.Neat.Genome.MetaNeatGenome(Of T))
  nameWithType: NeatPopulationLoader<T>.NeatPopulationLoader(MetaNeatGenome<T>)
  nameWithType.vb: NeatPopulationLoader(Of T).New(MetaNeatGenome(Of T))
- uid: SharpNeat.Neat.Genome.IO.NeatPopulationLoader`1.#ctor*
  name: NeatPopulationLoader
  href: api/SharpNeat.Neat.Genome.IO.NeatPopulationLoader-1.html#SharpNeat_Neat_Genome_IO_NeatPopulationLoader_1__ctor_
  commentId: Overload:SharpNeat.Neat.Genome.IO.NeatPopulationLoader`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Neat.Genome.IO.NeatPopulationLoader<T>.NeatPopulationLoader
  fullName.vb: SharpNeat.Neat.Genome.IO.NeatPopulationLoader(Of T).New
  nameWithType: NeatPopulationLoader<T>.NeatPopulationLoader
  nameWithType.vb: NeatPopulationLoader(Of T).New
- uid: SharpNeat.Neat.Genome.IO.NeatPopulationLoader`1.LoadFromFolder(System.String)
  name: LoadFromFolder(string)
  href: api/SharpNeat.Neat.Genome.IO.NeatPopulationLoader-1.html#SharpNeat_Neat_Genome_IO_NeatPopulationLoader_1_LoadFromFolder_System_String_
  commentId: M:SharpNeat.Neat.Genome.IO.NeatPopulationLoader`1.LoadFromFolder(System.String)
  name.vb: LoadFromFolder(String)
  fullName: SharpNeat.Neat.Genome.IO.NeatPopulationLoader<T>.LoadFromFolder(string)
  fullName.vb: SharpNeat.Neat.Genome.IO.NeatPopulationLoader(Of T).LoadFromFolder(String)
  nameWithType: NeatPopulationLoader<T>.LoadFromFolder(string)
  nameWithType.vb: NeatPopulationLoader(Of T).LoadFromFolder(String)
- uid: SharpNeat.Neat.Genome.IO.NeatPopulationLoader`1.LoadFromFolder*
  name: LoadFromFolder
  href: api/SharpNeat.Neat.Genome.IO.NeatPopulationLoader-1.html#SharpNeat_Neat_Genome_IO_NeatPopulationLoader_1_LoadFromFolder_
  commentId: Overload:SharpNeat.Neat.Genome.IO.NeatPopulationLoader`1.LoadFromFolder
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.IO.NeatPopulationLoader<T>.LoadFromFolder
  fullName.vb: SharpNeat.Neat.Genome.IO.NeatPopulationLoader(Of T).LoadFromFolder
  nameWithType: NeatPopulationLoader<T>.LoadFromFolder
  nameWithType.vb: NeatPopulationLoader(Of T).LoadFromFolder
- uid: SharpNeat.Neat.Genome.IO.NeatPopulationLoader`1.LoadFromZipArchive(System.String)
  name: LoadFromZipArchive(string)
  href: api/SharpNeat.Neat.Genome.IO.NeatPopulationLoader-1.html#SharpNeat_Neat_Genome_IO_NeatPopulationLoader_1_LoadFromZipArchive_System_String_
  commentId: M:SharpNeat.Neat.Genome.IO.NeatPopulationLoader`1.LoadFromZipArchive(System.String)
  name.vb: LoadFromZipArchive(String)
  fullName: SharpNeat.Neat.Genome.IO.NeatPopulationLoader<T>.LoadFromZipArchive(string)
  fullName.vb: SharpNeat.Neat.Genome.IO.NeatPopulationLoader(Of T).LoadFromZipArchive(String)
  nameWithType: NeatPopulationLoader<T>.LoadFromZipArchive(string)
  nameWithType.vb: NeatPopulationLoader(Of T).LoadFromZipArchive(String)
- uid: SharpNeat.Neat.Genome.IO.NeatPopulationLoader`1.LoadFromZipArchive*
  name: LoadFromZipArchive
  href: api/SharpNeat.Neat.Genome.IO.NeatPopulationLoader-1.html#SharpNeat_Neat_Genome_IO_NeatPopulationLoader_1_LoadFromZipArchive_
  commentId: Overload:SharpNeat.Neat.Genome.IO.NeatPopulationLoader`1.LoadFromZipArchive
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.IO.NeatPopulationLoader<T>.LoadFromZipArchive
  fullName.vb: SharpNeat.Neat.Genome.IO.NeatPopulationLoader(Of T).LoadFromZipArchive
  nameWithType: NeatPopulationLoader<T>.LoadFromZipArchive
  nameWithType.vb: NeatPopulationLoader(Of T).LoadFromZipArchive
- uid: SharpNeat.Neat.Genome.IO.NeatPopulationSaver
  name: NeatPopulationSaver
  href: api/SharpNeat.Neat.Genome.IO.NeatPopulationSaver.html
  commentId: T:SharpNeat.Neat.Genome.IO.NeatPopulationSaver
  fullName: SharpNeat.Neat.Genome.IO.NeatPopulationSaver
  nameWithType: NeatPopulationSaver
- uid: SharpNeat.Neat.Genome.IO.NeatPopulationSaver.SaveToFolder*
  name: SaveToFolder
  href: api/SharpNeat.Neat.Genome.IO.NeatPopulationSaver.html#SharpNeat_Neat_Genome_IO_NeatPopulationSaver_SaveToFolder_
  commentId: Overload:SharpNeat.Neat.Genome.IO.NeatPopulationSaver.SaveToFolder
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.IO.NeatPopulationSaver.SaveToFolder
  nameWithType: NeatPopulationSaver.SaveToFolder
- uid: SharpNeat.Neat.Genome.IO.NeatPopulationSaver.SaveToFolder``1(System.Collections.Generic.IList{SharpNeat.Neat.Genome.NeatGenome{``0}},System.String,System.String)
  name: SaveToFolder<T>(IList<NeatGenome<T>>, string, string)
  href: api/SharpNeat.Neat.Genome.IO.NeatPopulationSaver.html#SharpNeat_Neat_Genome_IO_NeatPopulationSaver_SaveToFolder__1_System_Collections_Generic_IList_SharpNeat_Neat_Genome_NeatGenome___0___System_String_System_String_
  commentId: M:SharpNeat.Neat.Genome.IO.NeatPopulationSaver.SaveToFolder``1(System.Collections.Generic.IList{SharpNeat.Neat.Genome.NeatGenome{``0}},System.String,System.String)
  name.vb: SaveToFolder(Of T)(IList(Of NeatGenome(Of T)), String, String)
  fullName: SharpNeat.Neat.Genome.IO.NeatPopulationSaver.SaveToFolder<T>(System.Collections.Generic.IList<SharpNeat.Neat.Genome.NeatGenome<T>>, string, string)
  fullName.vb: SharpNeat.Neat.Genome.IO.NeatPopulationSaver.SaveToFolder(Of T)(System.Collections.Generic.IList(Of SharpNeat.Neat.Genome.NeatGenome(Of T)), String, String)
  nameWithType: NeatPopulationSaver.SaveToFolder<T>(IList<NeatGenome<T>>, string, string)
  nameWithType.vb: NeatPopulationSaver.SaveToFolder(Of T)(IList(Of NeatGenome(Of T)), String, String)
- uid: SharpNeat.Neat.Genome.IO.NeatPopulationSaver.SaveToZipArchive*
  name: SaveToZipArchive
  href: api/SharpNeat.Neat.Genome.IO.NeatPopulationSaver.html#SharpNeat_Neat_Genome_IO_NeatPopulationSaver_SaveToZipArchive_
  commentId: Overload:SharpNeat.Neat.Genome.IO.NeatPopulationSaver.SaveToZipArchive
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.IO.NeatPopulationSaver.SaveToZipArchive
  nameWithType: NeatPopulationSaver.SaveToZipArchive
- uid: SharpNeat.Neat.Genome.IO.NeatPopulationSaver.SaveToZipArchive``1(System.Collections.Generic.IList{SharpNeat.Neat.Genome.NeatGenome{``0}},System.String,System.IO.Compression.CompressionLevel)
  name: SaveToZipArchive<T>(IList<NeatGenome<T>>, string, CompressionLevel)
  href: api/SharpNeat.Neat.Genome.IO.NeatPopulationSaver.html#SharpNeat_Neat_Genome_IO_NeatPopulationSaver_SaveToZipArchive__1_System_Collections_Generic_IList_SharpNeat_Neat_Genome_NeatGenome___0___System_String_System_IO_Compression_CompressionLevel_
  commentId: M:SharpNeat.Neat.Genome.IO.NeatPopulationSaver.SaveToZipArchive``1(System.Collections.Generic.IList{SharpNeat.Neat.Genome.NeatGenome{``0}},System.String,System.IO.Compression.CompressionLevel)
  name.vb: SaveToZipArchive(Of T)(IList(Of NeatGenome(Of T)), String, CompressionLevel)
  fullName: SharpNeat.Neat.Genome.IO.NeatPopulationSaver.SaveToZipArchive<T>(System.Collections.Generic.IList<SharpNeat.Neat.Genome.NeatGenome<T>>, string, System.IO.Compression.CompressionLevel)
  fullName.vb: SharpNeat.Neat.Genome.IO.NeatPopulationSaver.SaveToZipArchive(Of T)(System.Collections.Generic.IList(Of SharpNeat.Neat.Genome.NeatGenome(Of T)), String, System.IO.Compression.CompressionLevel)
  nameWithType: NeatPopulationSaver.SaveToZipArchive<T>(IList<NeatGenome<T>>, string, CompressionLevel)
  nameWithType.vb: NeatPopulationSaver.SaveToZipArchive(Of T)(IList(Of NeatGenome(Of T)), String, CompressionLevel)
- uid: SharpNeat.Neat.Genome.MetaNeatGenome`1
  name: MetaNeatGenome<T>
  href: api/SharpNeat.Neat.Genome.MetaNeatGenome-1.html
  commentId: T:SharpNeat.Neat.Genome.MetaNeatGenome`1
  name.vb: MetaNeatGenome(Of T)
  fullName: SharpNeat.Neat.Genome.MetaNeatGenome<T>
  fullName.vb: SharpNeat.Neat.Genome.MetaNeatGenome(Of T)
  nameWithType: MetaNeatGenome<T>
  nameWithType.vb: MetaNeatGenome(Of T)
- uid: SharpNeat.Neat.Genome.MetaNeatGenome`1.ActivationFn
  name: ActivationFn
  href: api/SharpNeat.Neat.Genome.MetaNeatGenome-1.html#SharpNeat_Neat_Genome_MetaNeatGenome_1_ActivationFn
  commentId: P:SharpNeat.Neat.Genome.MetaNeatGenome`1.ActivationFn
  fullName: SharpNeat.Neat.Genome.MetaNeatGenome<T>.ActivationFn
  fullName.vb: SharpNeat.Neat.Genome.MetaNeatGenome(Of T).ActivationFn
  nameWithType: MetaNeatGenome<T>.ActivationFn
  nameWithType.vb: MetaNeatGenome(Of T).ActivationFn
- uid: SharpNeat.Neat.Genome.MetaNeatGenome`1.ActivationFn*
  name: ActivationFn
  href: api/SharpNeat.Neat.Genome.MetaNeatGenome-1.html#SharpNeat_Neat_Genome_MetaNeatGenome_1_ActivationFn_
  commentId: Overload:SharpNeat.Neat.Genome.MetaNeatGenome`1.ActivationFn
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.MetaNeatGenome<T>.ActivationFn
  fullName.vb: SharpNeat.Neat.Genome.MetaNeatGenome(Of T).ActivationFn
  nameWithType: MetaNeatGenome<T>.ActivationFn
  nameWithType.vb: MetaNeatGenome(Of T).ActivationFn
- uid: SharpNeat.Neat.Genome.MetaNeatGenome`1.ConnectionWeightScale
  name: ConnectionWeightScale
  href: api/SharpNeat.Neat.Genome.MetaNeatGenome-1.html#SharpNeat_Neat_Genome_MetaNeatGenome_1_ConnectionWeightScale
  commentId: P:SharpNeat.Neat.Genome.MetaNeatGenome`1.ConnectionWeightScale
  fullName: SharpNeat.Neat.Genome.MetaNeatGenome<T>.ConnectionWeightScale
  fullName.vb: SharpNeat.Neat.Genome.MetaNeatGenome(Of T).ConnectionWeightScale
  nameWithType: MetaNeatGenome<T>.ConnectionWeightScale
  nameWithType.vb: MetaNeatGenome(Of T).ConnectionWeightScale
- uid: SharpNeat.Neat.Genome.MetaNeatGenome`1.ConnectionWeightScale*
  name: ConnectionWeightScale
  href: api/SharpNeat.Neat.Genome.MetaNeatGenome-1.html#SharpNeat_Neat_Genome_MetaNeatGenome_1_ConnectionWeightScale_
  commentId: Overload:SharpNeat.Neat.Genome.MetaNeatGenome`1.ConnectionWeightScale
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.MetaNeatGenome<T>.ConnectionWeightScale
  fullName.vb: SharpNeat.Neat.Genome.MetaNeatGenome(Of T).ConnectionWeightScale
  nameWithType: MetaNeatGenome<T>.ConnectionWeightScale
  nameWithType.vb: MetaNeatGenome(Of T).ConnectionWeightScale
- uid: SharpNeat.Neat.Genome.MetaNeatGenome`1.CreateAcyclic(System.Int32,System.Int32,SharpNeat.NeuralNets.IActivationFunction{`0},System.Double)
  name: CreateAcyclic(int, int, IActivationFunction<T>, double)
  href: api/SharpNeat.Neat.Genome.MetaNeatGenome-1.html#SharpNeat_Neat_Genome_MetaNeatGenome_1_CreateAcyclic_System_Int32_System_Int32_SharpNeat_NeuralNets_IActivationFunction__0__System_Double_
  commentId: M:SharpNeat.Neat.Genome.MetaNeatGenome`1.CreateAcyclic(System.Int32,System.Int32,SharpNeat.NeuralNets.IActivationFunction{`0},System.Double)
  name.vb: CreateAcyclic(Integer, Integer, IActivationFunction(Of T), Double)
  fullName: SharpNeat.Neat.Genome.MetaNeatGenome<T>.CreateAcyclic(int, int, SharpNeat.NeuralNets.IActivationFunction<T>, double)
  fullName.vb: SharpNeat.Neat.Genome.MetaNeatGenome(Of T).CreateAcyclic(Integer, Integer, SharpNeat.NeuralNets.IActivationFunction(Of T), Double)
  nameWithType: MetaNeatGenome<T>.CreateAcyclic(int, int, IActivationFunction<T>, double)
  nameWithType.vb: MetaNeatGenome(Of T).CreateAcyclic(Integer, Integer, IActivationFunction(Of T), Double)
- uid: SharpNeat.Neat.Genome.MetaNeatGenome`1.CreateAcyclic*
  name: CreateAcyclic
  href: api/SharpNeat.Neat.Genome.MetaNeatGenome-1.html#SharpNeat_Neat_Genome_MetaNeatGenome_1_CreateAcyclic_
  commentId: Overload:SharpNeat.Neat.Genome.MetaNeatGenome`1.CreateAcyclic
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.MetaNeatGenome<T>.CreateAcyclic
  fullName.vb: SharpNeat.Neat.Genome.MetaNeatGenome(Of T).CreateAcyclic
  nameWithType: MetaNeatGenome<T>.CreateAcyclic
  nameWithType.vb: MetaNeatGenome(Of T).CreateAcyclic
- uid: SharpNeat.Neat.Genome.MetaNeatGenome`1.CreateCyclic(System.Int32,System.Int32,System.Int32,SharpNeat.NeuralNets.IActivationFunction{`0},System.Double)
  name: CreateCyclic(int, int, int, IActivationFunction<T>, double)
  href: api/SharpNeat.Neat.Genome.MetaNeatGenome-1.html#SharpNeat_Neat_Genome_MetaNeatGenome_1_CreateCyclic_System_Int32_System_Int32_System_Int32_SharpNeat_NeuralNets_IActivationFunction__0__System_Double_
  commentId: M:SharpNeat.Neat.Genome.MetaNeatGenome`1.CreateCyclic(System.Int32,System.Int32,System.Int32,SharpNeat.NeuralNets.IActivationFunction{`0},System.Double)
  name.vb: CreateCyclic(Integer, Integer, Integer, IActivationFunction(Of T), Double)
  fullName: SharpNeat.Neat.Genome.MetaNeatGenome<T>.CreateCyclic(int, int, int, SharpNeat.NeuralNets.IActivationFunction<T>, double)
  fullName.vb: SharpNeat.Neat.Genome.MetaNeatGenome(Of T).CreateCyclic(Integer, Integer, Integer, SharpNeat.NeuralNets.IActivationFunction(Of T), Double)
  nameWithType: MetaNeatGenome<T>.CreateCyclic(int, int, int, IActivationFunction<T>, double)
  nameWithType.vb: MetaNeatGenome(Of T).CreateCyclic(Integer, Integer, Integer, IActivationFunction(Of T), Double)
- uid: SharpNeat.Neat.Genome.MetaNeatGenome`1.CreateCyclic*
  name: CreateCyclic
  href: api/SharpNeat.Neat.Genome.MetaNeatGenome-1.html#SharpNeat_Neat_Genome_MetaNeatGenome_1_CreateCyclic_
  commentId: Overload:SharpNeat.Neat.Genome.MetaNeatGenome`1.CreateCyclic
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.MetaNeatGenome<T>.CreateCyclic
  fullName.vb: SharpNeat.Neat.Genome.MetaNeatGenome(Of T).CreateCyclic
  nameWithType: MetaNeatGenome<T>.CreateCyclic
  nameWithType.vb: MetaNeatGenome(Of T).CreateCyclic
- uid: SharpNeat.Neat.Genome.MetaNeatGenome`1.CyclesPerActivation
  name: CyclesPerActivation
  href: api/SharpNeat.Neat.Genome.MetaNeatGenome-1.html#SharpNeat_Neat_Genome_MetaNeatGenome_1_CyclesPerActivation
  commentId: P:SharpNeat.Neat.Genome.MetaNeatGenome`1.CyclesPerActivation
  fullName: SharpNeat.Neat.Genome.MetaNeatGenome<T>.CyclesPerActivation
  fullName.vb: SharpNeat.Neat.Genome.MetaNeatGenome(Of T).CyclesPerActivation
  nameWithType: MetaNeatGenome<T>.CyclesPerActivation
  nameWithType.vb: MetaNeatGenome(Of T).CyclesPerActivation
- uid: SharpNeat.Neat.Genome.MetaNeatGenome`1.CyclesPerActivation*
  name: CyclesPerActivation
  href: api/SharpNeat.Neat.Genome.MetaNeatGenome-1.html#SharpNeat_Neat_Genome_MetaNeatGenome_1_CyclesPerActivation_
  commentId: Overload:SharpNeat.Neat.Genome.MetaNeatGenome`1.CyclesPerActivation
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.MetaNeatGenome<T>.CyclesPerActivation
  fullName.vb: SharpNeat.Neat.Genome.MetaNeatGenome(Of T).CyclesPerActivation
  nameWithType: MetaNeatGenome<T>.CyclesPerActivation
  nameWithType.vb: MetaNeatGenome(Of T).CyclesPerActivation
- uid: SharpNeat.Neat.Genome.MetaNeatGenome`1.InputNodeCount
  name: InputNodeCount
  href: api/SharpNeat.Neat.Genome.MetaNeatGenome-1.html#SharpNeat_Neat_Genome_MetaNeatGenome_1_InputNodeCount
  commentId: P:SharpNeat.Neat.Genome.MetaNeatGenome`1.InputNodeCount
  fullName: SharpNeat.Neat.Genome.MetaNeatGenome<T>.InputNodeCount
  fullName.vb: SharpNeat.Neat.Genome.MetaNeatGenome(Of T).InputNodeCount
  nameWithType: MetaNeatGenome<T>.InputNodeCount
  nameWithType.vb: MetaNeatGenome(Of T).InputNodeCount
- uid: SharpNeat.Neat.Genome.MetaNeatGenome`1.InputNodeCount*
  name: InputNodeCount
  href: api/SharpNeat.Neat.Genome.MetaNeatGenome-1.html#SharpNeat_Neat_Genome_MetaNeatGenome_1_InputNodeCount_
  commentId: Overload:SharpNeat.Neat.Genome.MetaNeatGenome`1.InputNodeCount
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.MetaNeatGenome<T>.InputNodeCount
  fullName.vb: SharpNeat.Neat.Genome.MetaNeatGenome(Of T).InputNodeCount
  nameWithType: MetaNeatGenome<T>.InputNodeCount
  nameWithType.vb: MetaNeatGenome(Of T).InputNodeCount
- uid: SharpNeat.Neat.Genome.MetaNeatGenome`1.InputOutputNodeCount
  name: InputOutputNodeCount
  href: api/SharpNeat.Neat.Genome.MetaNeatGenome-1.html#SharpNeat_Neat_Genome_MetaNeatGenome_1_InputOutputNodeCount
  commentId: P:SharpNeat.Neat.Genome.MetaNeatGenome`1.InputOutputNodeCount
  fullName: SharpNeat.Neat.Genome.MetaNeatGenome<T>.InputOutputNodeCount
  fullName.vb: SharpNeat.Neat.Genome.MetaNeatGenome(Of T).InputOutputNodeCount
  nameWithType: MetaNeatGenome<T>.InputOutputNodeCount
  nameWithType.vb: MetaNeatGenome(Of T).InputOutputNodeCount
- uid: SharpNeat.Neat.Genome.MetaNeatGenome`1.InputOutputNodeCount*
  name: InputOutputNodeCount
  href: api/SharpNeat.Neat.Genome.MetaNeatGenome-1.html#SharpNeat_Neat_Genome_MetaNeatGenome_1_InputOutputNodeCount_
  commentId: Overload:SharpNeat.Neat.Genome.MetaNeatGenome`1.InputOutputNodeCount
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.MetaNeatGenome<T>.InputOutputNodeCount
  fullName.vb: SharpNeat.Neat.Genome.MetaNeatGenome(Of T).InputOutputNodeCount
  nameWithType: MetaNeatGenome<T>.InputOutputNodeCount
  nameWithType.vb: MetaNeatGenome(Of T).InputOutputNodeCount
- uid: SharpNeat.Neat.Genome.MetaNeatGenome`1.IsAcyclic
  name: IsAcyclic
  href: api/SharpNeat.Neat.Genome.MetaNeatGenome-1.html#SharpNeat_Neat_Genome_MetaNeatGenome_1_IsAcyclic
  commentId: P:SharpNeat.Neat.Genome.MetaNeatGenome`1.IsAcyclic
  fullName: SharpNeat.Neat.Genome.MetaNeatGenome<T>.IsAcyclic
  fullName.vb: SharpNeat.Neat.Genome.MetaNeatGenome(Of T).IsAcyclic
  nameWithType: MetaNeatGenome<T>.IsAcyclic
  nameWithType.vb: MetaNeatGenome(Of T).IsAcyclic
- uid: SharpNeat.Neat.Genome.MetaNeatGenome`1.IsAcyclic*
  name: IsAcyclic
  href: api/SharpNeat.Neat.Genome.MetaNeatGenome-1.html#SharpNeat_Neat_Genome_MetaNeatGenome_1_IsAcyclic_
  commentId: Overload:SharpNeat.Neat.Genome.MetaNeatGenome`1.IsAcyclic
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.MetaNeatGenome<T>.IsAcyclic
  fullName.vb: SharpNeat.Neat.Genome.MetaNeatGenome(Of T).IsAcyclic
  nameWithType: MetaNeatGenome<T>.IsAcyclic
  nameWithType.vb: MetaNeatGenome(Of T).IsAcyclic
- uid: SharpNeat.Neat.Genome.MetaNeatGenome`1.OutputNodeCount
  name: OutputNodeCount
  href: api/SharpNeat.Neat.Genome.MetaNeatGenome-1.html#SharpNeat_Neat_Genome_MetaNeatGenome_1_OutputNodeCount
  commentId: P:SharpNeat.Neat.Genome.MetaNeatGenome`1.OutputNodeCount
  fullName: SharpNeat.Neat.Genome.MetaNeatGenome<T>.OutputNodeCount
  fullName.vb: SharpNeat.Neat.Genome.MetaNeatGenome(Of T).OutputNodeCount
  nameWithType: MetaNeatGenome<T>.OutputNodeCount
  nameWithType.vb: MetaNeatGenome(Of T).OutputNodeCount
- uid: SharpNeat.Neat.Genome.MetaNeatGenome`1.OutputNodeCount*
  name: OutputNodeCount
  href: api/SharpNeat.Neat.Genome.MetaNeatGenome-1.html#SharpNeat_Neat_Genome_MetaNeatGenome_1_OutputNodeCount_
  commentId: Overload:SharpNeat.Neat.Genome.MetaNeatGenome`1.OutputNodeCount
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.MetaNeatGenome<T>.OutputNodeCount
  fullName.vb: SharpNeat.Neat.Genome.MetaNeatGenome(Of T).OutputNodeCount
  nameWithType: MetaNeatGenome<T>.OutputNodeCount
  nameWithType.vb: MetaNeatGenome(Of T).OutputNodeCount
- uid: SharpNeat.Neat.Genome.NeatGenome`1
  name: NeatGenome<T>
  href: api/SharpNeat.Neat.Genome.NeatGenome-1.html
  commentId: T:SharpNeat.Neat.Genome.NeatGenome`1
  name.vb: NeatGenome(Of T)
  fullName: SharpNeat.Neat.Genome.NeatGenome<T>
  fullName.vb: SharpNeat.Neat.Genome.NeatGenome(Of T)
  nameWithType: NeatGenome<T>
  nameWithType.vb: NeatGenome(Of T)
- uid: SharpNeat.Neat.Genome.NeatGenome`1.BirthGeneration
  name: BirthGeneration
  href: api/SharpNeat.Neat.Genome.NeatGenome-1.html#SharpNeat_Neat_Genome_NeatGenome_1_BirthGeneration
  commentId: P:SharpNeat.Neat.Genome.NeatGenome`1.BirthGeneration
  fullName: SharpNeat.Neat.Genome.NeatGenome<T>.BirthGeneration
  fullName.vb: SharpNeat.Neat.Genome.NeatGenome(Of T).BirthGeneration
  nameWithType: NeatGenome<T>.BirthGeneration
  nameWithType.vb: NeatGenome(Of T).BirthGeneration
- uid: SharpNeat.Neat.Genome.NeatGenome`1.BirthGeneration*
  name: BirthGeneration
  href: api/SharpNeat.Neat.Genome.NeatGenome-1.html#SharpNeat_Neat_Genome_NeatGenome_1_BirthGeneration_
  commentId: Overload:SharpNeat.Neat.Genome.NeatGenome`1.BirthGeneration
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.NeatGenome<T>.BirthGeneration
  fullName.vb: SharpNeat.Neat.Genome.NeatGenome(Of T).BirthGeneration
  nameWithType: NeatGenome<T>.BirthGeneration
  nameWithType.vb: NeatGenome(Of T).BirthGeneration
- uid: SharpNeat.Neat.Genome.NeatGenome`1.Complexity
  name: Complexity
  href: api/SharpNeat.Neat.Genome.NeatGenome-1.html#SharpNeat_Neat_Genome_NeatGenome_1_Complexity
  commentId: P:SharpNeat.Neat.Genome.NeatGenome`1.Complexity
  fullName: SharpNeat.Neat.Genome.NeatGenome<T>.Complexity
  fullName.vb: SharpNeat.Neat.Genome.NeatGenome(Of T).Complexity
  nameWithType: NeatGenome<T>.Complexity
  nameWithType.vb: NeatGenome(Of T).Complexity
- uid: SharpNeat.Neat.Genome.NeatGenome`1.Complexity*
  name: Complexity
  href: api/SharpNeat.Neat.Genome.NeatGenome-1.html#SharpNeat_Neat_Genome_NeatGenome_1_Complexity_
  commentId: Overload:SharpNeat.Neat.Genome.NeatGenome`1.Complexity
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.NeatGenome<T>.Complexity
  fullName.vb: SharpNeat.Neat.Genome.NeatGenome(Of T).Complexity
  nameWithType: NeatGenome<T>.Complexity
  nameWithType.vb: NeatGenome(Of T).Complexity
- uid: SharpNeat.Neat.Genome.NeatGenome`1.ConnectionGenes
  name: ConnectionGenes
  href: api/SharpNeat.Neat.Genome.NeatGenome-1.html#SharpNeat_Neat_Genome_NeatGenome_1_ConnectionGenes
  commentId: P:SharpNeat.Neat.Genome.NeatGenome`1.ConnectionGenes
  fullName: SharpNeat.Neat.Genome.NeatGenome<T>.ConnectionGenes
  fullName.vb: SharpNeat.Neat.Genome.NeatGenome(Of T).ConnectionGenes
  nameWithType: NeatGenome<T>.ConnectionGenes
  nameWithType.vb: NeatGenome(Of T).ConnectionGenes
- uid: SharpNeat.Neat.Genome.NeatGenome`1.ConnectionGenes*
  name: ConnectionGenes
  href: api/SharpNeat.Neat.Genome.NeatGenome-1.html#SharpNeat_Neat_Genome_NeatGenome_1_ConnectionGenes_
  commentId: Overload:SharpNeat.Neat.Genome.NeatGenome`1.ConnectionGenes
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.NeatGenome<T>.ConnectionGenes
  fullName.vb: SharpNeat.Neat.Genome.NeatGenome(Of T).ConnectionGenes
  nameWithType: NeatGenome<T>.ConnectionGenes
  nameWithType.vb: NeatGenome(Of T).ConnectionGenes
- uid: SharpNeat.Neat.Genome.NeatGenome`1.ConnectionIndexMap
  name: ConnectionIndexMap
  href: api/SharpNeat.Neat.Genome.NeatGenome-1.html#SharpNeat_Neat_Genome_NeatGenome_1_ConnectionIndexMap
  commentId: P:SharpNeat.Neat.Genome.NeatGenome`1.ConnectionIndexMap
  fullName: SharpNeat.Neat.Genome.NeatGenome<T>.ConnectionIndexMap
  fullName.vb: SharpNeat.Neat.Genome.NeatGenome(Of T).ConnectionIndexMap
  nameWithType: NeatGenome<T>.ConnectionIndexMap
  nameWithType.vb: NeatGenome(Of T).ConnectionIndexMap
- uid: SharpNeat.Neat.Genome.NeatGenome`1.ConnectionIndexMap*
  name: ConnectionIndexMap
  href: api/SharpNeat.Neat.Genome.NeatGenome-1.html#SharpNeat_Neat_Genome_NeatGenome_1_ConnectionIndexMap_
  commentId: Overload:SharpNeat.Neat.Genome.NeatGenome`1.ConnectionIndexMap
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.NeatGenome<T>.ConnectionIndexMap
  fullName.vb: SharpNeat.Neat.Genome.NeatGenome(Of T).ConnectionIndexMap
  nameWithType: NeatGenome<T>.ConnectionIndexMap
  nameWithType.vb: NeatGenome(Of T).ConnectionIndexMap
- uid: SharpNeat.Neat.Genome.NeatGenome`1.ContainsHiddenNode(System.Int32)
  name: ContainsHiddenNode(int)
  href: api/SharpNeat.Neat.Genome.NeatGenome-1.html#SharpNeat_Neat_Genome_NeatGenome_1_ContainsHiddenNode_System_Int32_
  commentId: M:SharpNeat.Neat.Genome.NeatGenome`1.ContainsHiddenNode(System.Int32)
  name.vb: ContainsHiddenNode(Integer)
  fullName: SharpNeat.Neat.Genome.NeatGenome<T>.ContainsHiddenNode(int)
  fullName.vb: SharpNeat.Neat.Genome.NeatGenome(Of T).ContainsHiddenNode(Integer)
  nameWithType: NeatGenome<T>.ContainsHiddenNode(int)
  nameWithType.vb: NeatGenome(Of T).ContainsHiddenNode(Integer)
- uid: SharpNeat.Neat.Genome.NeatGenome`1.ContainsHiddenNode*
  name: ContainsHiddenNode
  href: api/SharpNeat.Neat.Genome.NeatGenome-1.html#SharpNeat_Neat_Genome_NeatGenome_1_ContainsHiddenNode_
  commentId: Overload:SharpNeat.Neat.Genome.NeatGenome`1.ContainsHiddenNode
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.NeatGenome<T>.ContainsHiddenNode
  fullName.vb: SharpNeat.Neat.Genome.NeatGenome(Of T).ContainsHiddenNode
  nameWithType: NeatGenome<T>.ContainsHiddenNode
  nameWithType.vb: NeatGenome(Of T).ContainsHiddenNode
- uid: SharpNeat.Neat.Genome.NeatGenome`1.DirectedGraph
  name: DirectedGraph
  href: api/SharpNeat.Neat.Genome.NeatGenome-1.html#SharpNeat_Neat_Genome_NeatGenome_1_DirectedGraph
  commentId: P:SharpNeat.Neat.Genome.NeatGenome`1.DirectedGraph
  fullName: SharpNeat.Neat.Genome.NeatGenome<T>.DirectedGraph
  fullName.vb: SharpNeat.Neat.Genome.NeatGenome(Of T).DirectedGraph
  nameWithType: NeatGenome<T>.DirectedGraph
  nameWithType.vb: NeatGenome(Of T).DirectedGraph
- uid: SharpNeat.Neat.Genome.NeatGenome`1.DirectedGraph*
  name: DirectedGraph
  href: api/SharpNeat.Neat.Genome.NeatGenome-1.html#SharpNeat_Neat_Genome_NeatGenome_1_DirectedGraph_
  commentId: Overload:SharpNeat.Neat.Genome.NeatGenome`1.DirectedGraph
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.NeatGenome<T>.DirectedGraph
  fullName.vb: SharpNeat.Neat.Genome.NeatGenome(Of T).DirectedGraph
  nameWithType: NeatGenome<T>.DirectedGraph
  nameWithType.vb: NeatGenome(Of T).DirectedGraph
- uid: SharpNeat.Neat.Genome.NeatGenome`1.FitnessInfo
  name: FitnessInfo
  href: api/SharpNeat.Neat.Genome.NeatGenome-1.html#SharpNeat_Neat_Genome_NeatGenome_1_FitnessInfo
  commentId: P:SharpNeat.Neat.Genome.NeatGenome`1.FitnessInfo
  fullName: SharpNeat.Neat.Genome.NeatGenome<T>.FitnessInfo
  fullName.vb: SharpNeat.Neat.Genome.NeatGenome(Of T).FitnessInfo
  nameWithType: NeatGenome<T>.FitnessInfo
  nameWithType.vb: NeatGenome(Of T).FitnessInfo
- uid: SharpNeat.Neat.Genome.NeatGenome`1.FitnessInfo*
  name: FitnessInfo
  href: api/SharpNeat.Neat.Genome.NeatGenome-1.html#SharpNeat_Neat_Genome_NeatGenome_1_FitnessInfo_
  commentId: Overload:SharpNeat.Neat.Genome.NeatGenome`1.FitnessInfo
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.NeatGenome<T>.FitnessInfo
  fullName.vb: SharpNeat.Neat.Genome.NeatGenome(Of T).FitnessInfo
  nameWithType: NeatGenome<T>.FitnessInfo
  nameWithType.vb: NeatGenome(Of T).FitnessInfo
- uid: SharpNeat.Neat.Genome.NeatGenome`1.GetDigraphWeightArray
  name: GetDigraphWeightArray()
  href: api/SharpNeat.Neat.Genome.NeatGenome-1.html#SharpNeat_Neat_Genome_NeatGenome_1_GetDigraphWeightArray
  commentId: M:SharpNeat.Neat.Genome.NeatGenome`1.GetDigraphWeightArray
  fullName: SharpNeat.Neat.Genome.NeatGenome<T>.GetDigraphWeightArray()
  fullName.vb: SharpNeat.Neat.Genome.NeatGenome(Of T).GetDigraphWeightArray()
  nameWithType: NeatGenome<T>.GetDigraphWeightArray()
  nameWithType.vb: NeatGenome(Of T).GetDigraphWeightArray()
- uid: SharpNeat.Neat.Genome.NeatGenome`1.GetDigraphWeightArray*
  name: GetDigraphWeightArray
  href: api/SharpNeat.Neat.Genome.NeatGenome-1.html#SharpNeat_Neat_Genome_NeatGenome_1_GetDigraphWeightArray_
  commentId: Overload:SharpNeat.Neat.Genome.NeatGenome`1.GetDigraphWeightArray
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.NeatGenome<T>.GetDigraphWeightArray
  fullName.vb: SharpNeat.Neat.Genome.NeatGenome(Of T).GetDigraphWeightArray
  nameWithType: NeatGenome<T>.GetDigraphWeightArray
  nameWithType.vb: NeatGenome(Of T).GetDigraphWeightArray
- uid: SharpNeat.Neat.Genome.NeatGenome`1.HiddenNodeIdArray
  name: HiddenNodeIdArray
  href: api/SharpNeat.Neat.Genome.NeatGenome-1.html#SharpNeat_Neat_Genome_NeatGenome_1_HiddenNodeIdArray
  commentId: P:SharpNeat.Neat.Genome.NeatGenome`1.HiddenNodeIdArray
  fullName: SharpNeat.Neat.Genome.NeatGenome<T>.HiddenNodeIdArray
  fullName.vb: SharpNeat.Neat.Genome.NeatGenome(Of T).HiddenNodeIdArray
  nameWithType: NeatGenome<T>.HiddenNodeIdArray
  nameWithType.vb: NeatGenome(Of T).HiddenNodeIdArray
- uid: SharpNeat.Neat.Genome.NeatGenome`1.HiddenNodeIdArray*
  name: HiddenNodeIdArray
  href: api/SharpNeat.Neat.Genome.NeatGenome-1.html#SharpNeat_Neat_Genome_NeatGenome_1_HiddenNodeIdArray_
  commentId: Overload:SharpNeat.Neat.Genome.NeatGenome`1.HiddenNodeIdArray
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.NeatGenome<T>.HiddenNodeIdArray
  fullName.vb: SharpNeat.Neat.Genome.NeatGenome(Of T).HiddenNodeIdArray
  nameWithType: NeatGenome<T>.HiddenNodeIdArray
  nameWithType.vb: NeatGenome(Of T).HiddenNodeIdArray
- uid: SharpNeat.Neat.Genome.NeatGenome`1.Id
  name: Id
  href: api/SharpNeat.Neat.Genome.NeatGenome-1.html#SharpNeat_Neat_Genome_NeatGenome_1_Id
  commentId: P:SharpNeat.Neat.Genome.NeatGenome`1.Id
  fullName: SharpNeat.Neat.Genome.NeatGenome<T>.Id
  fullName.vb: SharpNeat.Neat.Genome.NeatGenome(Of T).Id
  nameWithType: NeatGenome<T>.Id
  nameWithType.vb: NeatGenome(Of T).Id
- uid: SharpNeat.Neat.Genome.NeatGenome`1.Id*
  name: Id
  href: api/SharpNeat.Neat.Genome.NeatGenome-1.html#SharpNeat_Neat_Genome_NeatGenome_1_Id_
  commentId: Overload:SharpNeat.Neat.Genome.NeatGenome`1.Id
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.NeatGenome<T>.Id
  fullName.vb: SharpNeat.Neat.Genome.NeatGenome(Of T).Id
  nameWithType: NeatGenome<T>.Id
  nameWithType.vb: NeatGenome(Of T).Id
- uid: SharpNeat.Neat.Genome.NeatGenome`1.MetaNeatGenome
  name: MetaNeatGenome
  href: api/SharpNeat.Neat.Genome.NeatGenome-1.html#SharpNeat_Neat_Genome_NeatGenome_1_MetaNeatGenome
  commentId: P:SharpNeat.Neat.Genome.NeatGenome`1.MetaNeatGenome
  fullName: SharpNeat.Neat.Genome.NeatGenome<T>.MetaNeatGenome
  fullName.vb: SharpNeat.Neat.Genome.NeatGenome(Of T).MetaNeatGenome
  nameWithType: NeatGenome<T>.MetaNeatGenome
  nameWithType.vb: NeatGenome(Of T).MetaNeatGenome
- uid: SharpNeat.Neat.Genome.NeatGenome`1.MetaNeatGenome*
  name: MetaNeatGenome
  href: api/SharpNeat.Neat.Genome.NeatGenome-1.html#SharpNeat_Neat_Genome_NeatGenome_1_MetaNeatGenome_
  commentId: Overload:SharpNeat.Neat.Genome.NeatGenome`1.MetaNeatGenome
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.NeatGenome<T>.MetaNeatGenome
  fullName.vb: SharpNeat.Neat.Genome.NeatGenome(Of T).MetaNeatGenome
  nameWithType: NeatGenome<T>.MetaNeatGenome
  nameWithType.vb: NeatGenome(Of T).MetaNeatGenome
- uid: SharpNeat.Neat.Genome.NeatGenome`1.NodeIndexByIdMap
  name: NodeIndexByIdMap
  href: api/SharpNeat.Neat.Genome.NeatGenome-1.html#SharpNeat_Neat_Genome_NeatGenome_1_NodeIndexByIdMap
  commentId: P:SharpNeat.Neat.Genome.NeatGenome`1.NodeIndexByIdMap
  fullName: SharpNeat.Neat.Genome.NeatGenome<T>.NodeIndexByIdMap
  fullName.vb: SharpNeat.Neat.Genome.NeatGenome(Of T).NodeIndexByIdMap
  nameWithType: NeatGenome<T>.NodeIndexByIdMap
  nameWithType.vb: NeatGenome(Of T).NodeIndexByIdMap
- uid: SharpNeat.Neat.Genome.NeatGenome`1.NodeIndexByIdMap*
  name: NodeIndexByIdMap
  href: api/SharpNeat.Neat.Genome.NeatGenome-1.html#SharpNeat_Neat_Genome_NeatGenome_1_NodeIndexByIdMap_
  commentId: Overload:SharpNeat.Neat.Genome.NeatGenome`1.NodeIndexByIdMap
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.NeatGenome<T>.NodeIndexByIdMap
  fullName.vb: SharpNeat.Neat.Genome.NeatGenome(Of T).NodeIndexByIdMap
  nameWithType: NeatGenome<T>.NodeIndexByIdMap
  nameWithType.vb: NeatGenome(Of T).NodeIndexByIdMap
- uid: SharpNeat.Neat.Genome.NeatGenomeAcyclicBuilderTests
  name: NeatGenomeAcyclicBuilderTests
  href: api/SharpNeat.Neat.Genome.NeatGenomeAcyclicBuilderTests.html
  commentId: T:SharpNeat.Neat.Genome.NeatGenomeAcyclicBuilderTests
  fullName: SharpNeat.Neat.Genome.NeatGenomeAcyclicBuilderTests
  nameWithType: NeatGenomeAcyclicBuilderTests
- uid: SharpNeat.Neat.Genome.NeatGenomeAcyclicBuilderTests.DepthNodeReorderTest
  name: DepthNodeReorderTest()
  href: api/SharpNeat.Neat.Genome.NeatGenomeAcyclicBuilderTests.html#SharpNeat_Neat_Genome_NeatGenomeAcyclicBuilderTests_DepthNodeReorderTest
  commentId: M:SharpNeat.Neat.Genome.NeatGenomeAcyclicBuilderTests.DepthNodeReorderTest
  fullName: SharpNeat.Neat.Genome.NeatGenomeAcyclicBuilderTests.DepthNodeReorderTest()
  nameWithType: NeatGenomeAcyclicBuilderTests.DepthNodeReorderTest()
- uid: SharpNeat.Neat.Genome.NeatGenomeAcyclicBuilderTests.DepthNodeReorderTest*
  name: DepthNodeReorderTest
  href: api/SharpNeat.Neat.Genome.NeatGenomeAcyclicBuilderTests.html#SharpNeat_Neat_Genome_NeatGenomeAcyclicBuilderTests_DepthNodeReorderTest_
  commentId: Overload:SharpNeat.Neat.Genome.NeatGenomeAcyclicBuilderTests.DepthNodeReorderTest
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.NeatGenomeAcyclicBuilderTests.DepthNodeReorderTest
  nameWithType: NeatGenomeAcyclicBuilderTests.DepthNodeReorderTest
- uid: SharpNeat.Neat.Genome.NeatGenomeAcyclicBuilderTests.Simple
  name: Simple()
  href: api/SharpNeat.Neat.Genome.NeatGenomeAcyclicBuilderTests.html#SharpNeat_Neat_Genome_NeatGenomeAcyclicBuilderTests_Simple
  commentId: M:SharpNeat.Neat.Genome.NeatGenomeAcyclicBuilderTests.Simple
  fullName: SharpNeat.Neat.Genome.NeatGenomeAcyclicBuilderTests.Simple()
  nameWithType: NeatGenomeAcyclicBuilderTests.Simple()
- uid: SharpNeat.Neat.Genome.NeatGenomeAcyclicBuilderTests.Simple*
  name: Simple
  href: api/SharpNeat.Neat.Genome.NeatGenomeAcyclicBuilderTests.html#SharpNeat_Neat_Genome_NeatGenomeAcyclicBuilderTests_Simple_
  commentId: Overload:SharpNeat.Neat.Genome.NeatGenomeAcyclicBuilderTests.Simple
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.NeatGenomeAcyclicBuilderTests.Simple
  nameWithType: NeatGenomeAcyclicBuilderTests.Simple
- uid: SharpNeat.Neat.Genome.NeatGenomeBuilderAcyclic`1
  name: NeatGenomeBuilderAcyclic<T>
  href: api/SharpNeat.Neat.Genome.NeatGenomeBuilderAcyclic-1.html
  commentId: T:SharpNeat.Neat.Genome.NeatGenomeBuilderAcyclic`1
  name.vb: NeatGenomeBuilderAcyclic(Of T)
  fullName: SharpNeat.Neat.Genome.NeatGenomeBuilderAcyclic<T>
  fullName.vb: SharpNeat.Neat.Genome.NeatGenomeBuilderAcyclic(Of T)
  nameWithType: NeatGenomeBuilderAcyclic<T>
  nameWithType.vb: NeatGenomeBuilderAcyclic(Of T)
- uid: SharpNeat.Neat.Genome.NeatGenomeBuilderAcyclic`1.#ctor(SharpNeat.Neat.Genome.MetaNeatGenome{`0},System.Boolean)
  name: NeatGenomeBuilderAcyclic(MetaNeatGenome<T>, bool)
  href: api/SharpNeat.Neat.Genome.NeatGenomeBuilderAcyclic-1.html#SharpNeat_Neat_Genome_NeatGenomeBuilderAcyclic_1__ctor_SharpNeat_Neat_Genome_MetaNeatGenome__0__System_Boolean_
  commentId: M:SharpNeat.Neat.Genome.NeatGenomeBuilderAcyclic`1.#ctor(SharpNeat.Neat.Genome.MetaNeatGenome{`0},System.Boolean)
  name.vb: New(MetaNeatGenome(Of T), Boolean)
  fullName: SharpNeat.Neat.Genome.NeatGenomeBuilderAcyclic<T>.NeatGenomeBuilderAcyclic(SharpNeat.Neat.Genome.MetaNeatGenome<T>, bool)
  fullName.vb: SharpNeat.Neat.Genome.NeatGenomeBuilderAcyclic(Of T).New(SharpNeat.Neat.Genome.MetaNeatGenome(Of T), Boolean)
  nameWithType: NeatGenomeBuilderAcyclic<T>.NeatGenomeBuilderAcyclic(MetaNeatGenome<T>, bool)
  nameWithType.vb: NeatGenomeBuilderAcyclic(Of T).New(MetaNeatGenome(Of T), Boolean)
- uid: SharpNeat.Neat.Genome.NeatGenomeBuilderAcyclic`1.#ctor*
  name: NeatGenomeBuilderAcyclic
  href: api/SharpNeat.Neat.Genome.NeatGenomeBuilderAcyclic-1.html#SharpNeat_Neat_Genome_NeatGenomeBuilderAcyclic_1__ctor_
  commentId: Overload:SharpNeat.Neat.Genome.NeatGenomeBuilderAcyclic`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Neat.Genome.NeatGenomeBuilderAcyclic<T>.NeatGenomeBuilderAcyclic
  fullName.vb: SharpNeat.Neat.Genome.NeatGenomeBuilderAcyclic(Of T).New
  nameWithType: NeatGenomeBuilderAcyclic<T>.NeatGenomeBuilderAcyclic
  nameWithType.vb: NeatGenomeBuilderAcyclic(Of T).New
- uid: SharpNeat.Neat.Genome.NeatGenomeBuilderAcyclic`1.Create(System.Int32,System.Int32,SharpNeat.Neat.Genome.ConnectionGenes{`0},System.Int32[],SharpNeat.Graphs.INodeIdMap,SharpNeat.Graphs.DirectedGraph,System.Int32[])
  name: Create(int, int, ConnectionGenes<T>, int[], INodeIdMap, DirectedGraph, int[]?)
  href: api/SharpNeat.Neat.Genome.NeatGenomeBuilderAcyclic-1.html#SharpNeat_Neat_Genome_NeatGenomeBuilderAcyclic_1_Create_System_Int32_System_Int32_SharpNeat_Neat_Genome_ConnectionGenes__0__System_Int32___SharpNeat_Graphs_INodeIdMap_SharpNeat_Graphs_DirectedGraph_System_Int32___
  commentId: M:SharpNeat.Neat.Genome.NeatGenomeBuilderAcyclic`1.Create(System.Int32,System.Int32,SharpNeat.Neat.Genome.ConnectionGenes{`0},System.Int32[],SharpNeat.Graphs.INodeIdMap,SharpNeat.Graphs.DirectedGraph,System.Int32[])
  name.vb: Create(Integer, Integer, ConnectionGenes(Of T), Integer(), INodeIdMap, DirectedGraph, Integer())
  fullName: SharpNeat.Neat.Genome.NeatGenomeBuilderAcyclic<T>.Create(int, int, SharpNeat.Neat.Genome.ConnectionGenes<T>, int[], SharpNeat.Graphs.INodeIdMap, SharpNeat.Graphs.DirectedGraph, int[]?)
  fullName.vb: SharpNeat.Neat.Genome.NeatGenomeBuilderAcyclic(Of T).Create(Integer, Integer, SharpNeat.Neat.Genome.ConnectionGenes(Of T), Integer(), SharpNeat.Graphs.INodeIdMap, SharpNeat.Graphs.DirectedGraph, Integer())
  nameWithType: NeatGenomeBuilderAcyclic<T>.Create(int, int, ConnectionGenes<T>, int[], INodeIdMap, DirectedGraph, int[]?)
  nameWithType.vb: NeatGenomeBuilderAcyclic(Of T).Create(Integer, Integer, ConnectionGenes(Of T), Integer(), INodeIdMap, DirectedGraph, Integer())
- uid: SharpNeat.Neat.Genome.NeatGenomeBuilderAcyclic`1.Create(System.Int32,System.Int32,SharpNeat.Neat.Genome.ConnectionGenes{`0},System.Int32[],SharpNeat.Graphs.INodeIdMap)
  name: Create(int, int, ConnectionGenes<T>, int[], INodeIdMap)
  href: api/SharpNeat.Neat.Genome.NeatGenomeBuilderAcyclic-1.html#SharpNeat_Neat_Genome_NeatGenomeBuilderAcyclic_1_Create_System_Int32_System_Int32_SharpNeat_Neat_Genome_ConnectionGenes__0__System_Int32___SharpNeat_Graphs_INodeIdMap_
  commentId: M:SharpNeat.Neat.Genome.NeatGenomeBuilderAcyclic`1.Create(System.Int32,System.Int32,SharpNeat.Neat.Genome.ConnectionGenes{`0},System.Int32[],SharpNeat.Graphs.INodeIdMap)
  name.vb: Create(Integer, Integer, ConnectionGenes(Of T), Integer(), INodeIdMap)
  fullName: SharpNeat.Neat.Genome.NeatGenomeBuilderAcyclic<T>.Create(int, int, SharpNeat.Neat.Genome.ConnectionGenes<T>, int[], SharpNeat.Graphs.INodeIdMap)
  fullName.vb: SharpNeat.Neat.Genome.NeatGenomeBuilderAcyclic(Of T).Create(Integer, Integer, SharpNeat.Neat.Genome.ConnectionGenes(Of T), Integer(), SharpNeat.Graphs.INodeIdMap)
  nameWithType: NeatGenomeBuilderAcyclic<T>.Create(int, int, ConnectionGenes<T>, int[], INodeIdMap)
  nameWithType.vb: NeatGenomeBuilderAcyclic(Of T).Create(Integer, Integer, ConnectionGenes(Of T), Integer(), INodeIdMap)
- uid: SharpNeat.Neat.Genome.NeatGenomeBuilderAcyclic`1.Create(System.Int32,System.Int32,SharpNeat.Neat.Genome.ConnectionGenes{`0},System.Int32[])
  name: Create(int, int, ConnectionGenes<T>, int[])
  href: api/SharpNeat.Neat.Genome.NeatGenomeBuilderAcyclic-1.html#SharpNeat_Neat_Genome_NeatGenomeBuilderAcyclic_1_Create_System_Int32_System_Int32_SharpNeat_Neat_Genome_ConnectionGenes__0__System_Int32___
  commentId: M:SharpNeat.Neat.Genome.NeatGenomeBuilderAcyclic`1.Create(System.Int32,System.Int32,SharpNeat.Neat.Genome.ConnectionGenes{`0},System.Int32[])
  name.vb: Create(Integer, Integer, ConnectionGenes(Of T), Integer())
  fullName: SharpNeat.Neat.Genome.NeatGenomeBuilderAcyclic<T>.Create(int, int, SharpNeat.Neat.Genome.ConnectionGenes<T>, int[])
  fullName.vb: SharpNeat.Neat.Genome.NeatGenomeBuilderAcyclic(Of T).Create(Integer, Integer, SharpNeat.Neat.Genome.ConnectionGenes(Of T), Integer())
  nameWithType: NeatGenomeBuilderAcyclic<T>.Create(int, int, ConnectionGenes<T>, int[])
  nameWithType.vb: NeatGenomeBuilderAcyclic(Of T).Create(Integer, Integer, ConnectionGenes(Of T), Integer())
- uid: SharpNeat.Neat.Genome.NeatGenomeBuilderAcyclic`1.Create(System.Int32,System.Int32,SharpNeat.Neat.Genome.ConnectionGenes{`0})
  name: Create(int, int, ConnectionGenes<T>)
  href: api/SharpNeat.Neat.Genome.NeatGenomeBuilderAcyclic-1.html#SharpNeat_Neat_Genome_NeatGenomeBuilderAcyclic_1_Create_System_Int32_System_Int32_SharpNeat_Neat_Genome_ConnectionGenes__0__
  commentId: M:SharpNeat.Neat.Genome.NeatGenomeBuilderAcyclic`1.Create(System.Int32,System.Int32,SharpNeat.Neat.Genome.ConnectionGenes{`0})
  name.vb: Create(Integer, Integer, ConnectionGenes(Of T))
  fullName: SharpNeat.Neat.Genome.NeatGenomeBuilderAcyclic<T>.Create(int, int, SharpNeat.Neat.Genome.ConnectionGenes<T>)
  fullName.vb: SharpNeat.Neat.Genome.NeatGenomeBuilderAcyclic(Of T).Create(Integer, Integer, SharpNeat.Neat.Genome.ConnectionGenes(Of T))
  nameWithType: NeatGenomeBuilderAcyclic<T>.Create(int, int, ConnectionGenes<T>)
  nameWithType.vb: NeatGenomeBuilderAcyclic(Of T).Create(Integer, Integer, ConnectionGenes(Of T))
- uid: SharpNeat.Neat.Genome.NeatGenomeBuilderAcyclic`1.Create*
  name: Create
  href: api/SharpNeat.Neat.Genome.NeatGenomeBuilderAcyclic-1.html#SharpNeat_Neat_Genome_NeatGenomeBuilderAcyclic_1_Create_
  commentId: Overload:SharpNeat.Neat.Genome.NeatGenomeBuilderAcyclic`1.Create
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.NeatGenomeBuilderAcyclic<T>.Create
  fullName.vb: SharpNeat.Neat.Genome.NeatGenomeBuilderAcyclic(Of T).Create
  nameWithType: NeatGenomeBuilderAcyclic<T>.Create
  nameWithType.vb: NeatGenomeBuilderAcyclic(Of T).Create
- uid: SharpNeat.Neat.Genome.NeatGenomeBuilderCyclic`1
  name: NeatGenomeBuilderCyclic<T>
  href: api/SharpNeat.Neat.Genome.NeatGenomeBuilderCyclic-1.html
  commentId: T:SharpNeat.Neat.Genome.NeatGenomeBuilderCyclic`1
  name.vb: NeatGenomeBuilderCyclic(Of T)
  fullName: SharpNeat.Neat.Genome.NeatGenomeBuilderCyclic<T>
  fullName.vb: SharpNeat.Neat.Genome.NeatGenomeBuilderCyclic(Of T)
  nameWithType: NeatGenomeBuilderCyclic<T>
  nameWithType.vb: NeatGenomeBuilderCyclic(Of T)
- uid: SharpNeat.Neat.Genome.NeatGenomeBuilderCyclic`1.#ctor(SharpNeat.Neat.Genome.MetaNeatGenome{`0})
  name: NeatGenomeBuilderCyclic(MetaNeatGenome<T>)
  href: api/SharpNeat.Neat.Genome.NeatGenomeBuilderCyclic-1.html#SharpNeat_Neat_Genome_NeatGenomeBuilderCyclic_1__ctor_SharpNeat_Neat_Genome_MetaNeatGenome__0__
  commentId: M:SharpNeat.Neat.Genome.NeatGenomeBuilderCyclic`1.#ctor(SharpNeat.Neat.Genome.MetaNeatGenome{`0})
  name.vb: New(MetaNeatGenome(Of T))
  fullName: SharpNeat.Neat.Genome.NeatGenomeBuilderCyclic<T>.NeatGenomeBuilderCyclic(SharpNeat.Neat.Genome.MetaNeatGenome<T>)
  fullName.vb: SharpNeat.Neat.Genome.NeatGenomeBuilderCyclic(Of T).New(SharpNeat.Neat.Genome.MetaNeatGenome(Of T))
  nameWithType: NeatGenomeBuilderCyclic<T>.NeatGenomeBuilderCyclic(MetaNeatGenome<T>)
  nameWithType.vb: NeatGenomeBuilderCyclic(Of T).New(MetaNeatGenome(Of T))
- uid: SharpNeat.Neat.Genome.NeatGenomeBuilderCyclic`1.#ctor*
  name: NeatGenomeBuilderCyclic
  href: api/SharpNeat.Neat.Genome.NeatGenomeBuilderCyclic-1.html#SharpNeat_Neat_Genome_NeatGenomeBuilderCyclic_1__ctor_
  commentId: Overload:SharpNeat.Neat.Genome.NeatGenomeBuilderCyclic`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Neat.Genome.NeatGenomeBuilderCyclic<T>.NeatGenomeBuilderCyclic
  fullName.vb: SharpNeat.Neat.Genome.NeatGenomeBuilderCyclic(Of T).New
  nameWithType: NeatGenomeBuilderCyclic<T>.NeatGenomeBuilderCyclic
  nameWithType.vb: NeatGenomeBuilderCyclic(Of T).New
- uid: SharpNeat.Neat.Genome.NeatGenomeBuilderCyclic`1.Create(System.Int32,System.Int32,SharpNeat.Neat.Genome.ConnectionGenes{`0},System.Int32[],SharpNeat.Graphs.INodeIdMap,SharpNeat.Graphs.DirectedGraph,System.Int32[])
  name: Create(int, int, ConnectionGenes<T>, int[], INodeIdMap, DirectedGraph, int[]?)
  href: api/SharpNeat.Neat.Genome.NeatGenomeBuilderCyclic-1.html#SharpNeat_Neat_Genome_NeatGenomeBuilderCyclic_1_Create_System_Int32_System_Int32_SharpNeat_Neat_Genome_ConnectionGenes__0__System_Int32___SharpNeat_Graphs_INodeIdMap_SharpNeat_Graphs_DirectedGraph_System_Int32___
  commentId: M:SharpNeat.Neat.Genome.NeatGenomeBuilderCyclic`1.Create(System.Int32,System.Int32,SharpNeat.Neat.Genome.ConnectionGenes{`0},System.Int32[],SharpNeat.Graphs.INodeIdMap,SharpNeat.Graphs.DirectedGraph,System.Int32[])
  name.vb: Create(Integer, Integer, ConnectionGenes(Of T), Integer(), INodeIdMap, DirectedGraph, Integer())
  fullName: SharpNeat.Neat.Genome.NeatGenomeBuilderCyclic<T>.Create(int, int, SharpNeat.Neat.Genome.ConnectionGenes<T>, int[], SharpNeat.Graphs.INodeIdMap, SharpNeat.Graphs.DirectedGraph, int[]?)
  fullName.vb: SharpNeat.Neat.Genome.NeatGenomeBuilderCyclic(Of T).Create(Integer, Integer, SharpNeat.Neat.Genome.ConnectionGenes(Of T), Integer(), SharpNeat.Graphs.INodeIdMap, SharpNeat.Graphs.DirectedGraph, Integer())
  nameWithType: NeatGenomeBuilderCyclic<T>.Create(int, int, ConnectionGenes<T>, int[], INodeIdMap, DirectedGraph, int[]?)
  nameWithType.vb: NeatGenomeBuilderCyclic(Of T).Create(Integer, Integer, ConnectionGenes(Of T), Integer(), INodeIdMap, DirectedGraph, Integer())
- uid: SharpNeat.Neat.Genome.NeatGenomeBuilderCyclic`1.Create(System.Int32,System.Int32,SharpNeat.Neat.Genome.ConnectionGenes{`0},System.Int32[],SharpNeat.Graphs.INodeIdMap)
  name: Create(int, int, ConnectionGenes<T>, int[], INodeIdMap)
  href: api/SharpNeat.Neat.Genome.NeatGenomeBuilderCyclic-1.html#SharpNeat_Neat_Genome_NeatGenomeBuilderCyclic_1_Create_System_Int32_System_Int32_SharpNeat_Neat_Genome_ConnectionGenes__0__System_Int32___SharpNeat_Graphs_INodeIdMap_
  commentId: M:SharpNeat.Neat.Genome.NeatGenomeBuilderCyclic`1.Create(System.Int32,System.Int32,SharpNeat.Neat.Genome.ConnectionGenes{`0},System.Int32[],SharpNeat.Graphs.INodeIdMap)
  name.vb: Create(Integer, Integer, ConnectionGenes(Of T), Integer(), INodeIdMap)
  fullName: SharpNeat.Neat.Genome.NeatGenomeBuilderCyclic<T>.Create(int, int, SharpNeat.Neat.Genome.ConnectionGenes<T>, int[], SharpNeat.Graphs.INodeIdMap)
  fullName.vb: SharpNeat.Neat.Genome.NeatGenomeBuilderCyclic(Of T).Create(Integer, Integer, SharpNeat.Neat.Genome.ConnectionGenes(Of T), Integer(), SharpNeat.Graphs.INodeIdMap)
  nameWithType: NeatGenomeBuilderCyclic<T>.Create(int, int, ConnectionGenes<T>, int[], INodeIdMap)
  nameWithType.vb: NeatGenomeBuilderCyclic(Of T).Create(Integer, Integer, ConnectionGenes(Of T), Integer(), INodeIdMap)
- uid: SharpNeat.Neat.Genome.NeatGenomeBuilderCyclic`1.Create(System.Int32,System.Int32,SharpNeat.Neat.Genome.ConnectionGenes{`0},System.Int32[])
  name: Create(int, int, ConnectionGenes<T>, int[])
  href: api/SharpNeat.Neat.Genome.NeatGenomeBuilderCyclic-1.html#SharpNeat_Neat_Genome_NeatGenomeBuilderCyclic_1_Create_System_Int32_System_Int32_SharpNeat_Neat_Genome_ConnectionGenes__0__System_Int32___
  commentId: M:SharpNeat.Neat.Genome.NeatGenomeBuilderCyclic`1.Create(System.Int32,System.Int32,SharpNeat.Neat.Genome.ConnectionGenes{`0},System.Int32[])
  name.vb: Create(Integer, Integer, ConnectionGenes(Of T), Integer())
  fullName: SharpNeat.Neat.Genome.NeatGenomeBuilderCyclic<T>.Create(int, int, SharpNeat.Neat.Genome.ConnectionGenes<T>, int[])
  fullName.vb: SharpNeat.Neat.Genome.NeatGenomeBuilderCyclic(Of T).Create(Integer, Integer, SharpNeat.Neat.Genome.ConnectionGenes(Of T), Integer())
  nameWithType: NeatGenomeBuilderCyclic<T>.Create(int, int, ConnectionGenes<T>, int[])
  nameWithType.vb: NeatGenomeBuilderCyclic(Of T).Create(Integer, Integer, ConnectionGenes(Of T), Integer())
- uid: SharpNeat.Neat.Genome.NeatGenomeBuilderCyclic`1.Create(System.Int32,System.Int32,SharpNeat.Neat.Genome.ConnectionGenes{`0})
  name: Create(int, int, ConnectionGenes<T>)
  href: api/SharpNeat.Neat.Genome.NeatGenomeBuilderCyclic-1.html#SharpNeat_Neat_Genome_NeatGenomeBuilderCyclic_1_Create_System_Int32_System_Int32_SharpNeat_Neat_Genome_ConnectionGenes__0__
  commentId: M:SharpNeat.Neat.Genome.NeatGenomeBuilderCyclic`1.Create(System.Int32,System.Int32,SharpNeat.Neat.Genome.ConnectionGenes{`0})
  name.vb: Create(Integer, Integer, ConnectionGenes(Of T))
  fullName: SharpNeat.Neat.Genome.NeatGenomeBuilderCyclic<T>.Create(int, int, SharpNeat.Neat.Genome.ConnectionGenes<T>)
  fullName.vb: SharpNeat.Neat.Genome.NeatGenomeBuilderCyclic(Of T).Create(Integer, Integer, SharpNeat.Neat.Genome.ConnectionGenes(Of T))
  nameWithType: NeatGenomeBuilderCyclic<T>.Create(int, int, ConnectionGenes<T>)
  nameWithType.vb: NeatGenomeBuilderCyclic(Of T).Create(Integer, Integer, ConnectionGenes(Of T))
- uid: SharpNeat.Neat.Genome.NeatGenomeBuilderCyclic`1.Create*
  name: Create
  href: api/SharpNeat.Neat.Genome.NeatGenomeBuilderCyclic-1.html#SharpNeat_Neat_Genome_NeatGenomeBuilderCyclic_1_Create_
  commentId: Overload:SharpNeat.Neat.Genome.NeatGenomeBuilderCyclic`1.Create
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.NeatGenomeBuilderCyclic<T>.Create
  fullName.vb: SharpNeat.Neat.Genome.NeatGenomeBuilderCyclic(Of T).Create
  nameWithType: NeatGenomeBuilderCyclic<T>.Create
  nameWithType.vb: NeatGenomeBuilderCyclic(Of T).Create
- uid: SharpNeat.Neat.Genome.NeatGenomeBuilderFactory`1
  name: NeatGenomeBuilderFactory<T>
  href: api/SharpNeat.Neat.Genome.NeatGenomeBuilderFactory-1.html
  commentId: T:SharpNeat.Neat.Genome.NeatGenomeBuilderFactory`1
  name.vb: NeatGenomeBuilderFactory(Of T)
  fullName: SharpNeat.Neat.Genome.NeatGenomeBuilderFactory<T>
  fullName.vb: SharpNeat.Neat.Genome.NeatGenomeBuilderFactory(Of T)
  nameWithType: NeatGenomeBuilderFactory<T>
  nameWithType.vb: NeatGenomeBuilderFactory(Of T)
- uid: SharpNeat.Neat.Genome.NeatGenomeBuilderFactory`1.Create(SharpNeat.Neat.Genome.MetaNeatGenome{`0},System.Boolean)
  name: Create(MetaNeatGenome<T>, bool)
  href: api/SharpNeat.Neat.Genome.NeatGenomeBuilderFactory-1.html#SharpNeat_Neat_Genome_NeatGenomeBuilderFactory_1_Create_SharpNeat_Neat_Genome_MetaNeatGenome__0__System_Boolean_
  commentId: M:SharpNeat.Neat.Genome.NeatGenomeBuilderFactory`1.Create(SharpNeat.Neat.Genome.MetaNeatGenome{`0},System.Boolean)
  name.vb: Create(MetaNeatGenome(Of T), Boolean)
  fullName: SharpNeat.Neat.Genome.NeatGenomeBuilderFactory<T>.Create(SharpNeat.Neat.Genome.MetaNeatGenome<T>, bool)
  fullName.vb: SharpNeat.Neat.Genome.NeatGenomeBuilderFactory(Of T).Create(SharpNeat.Neat.Genome.MetaNeatGenome(Of T), Boolean)
  nameWithType: NeatGenomeBuilderFactory<T>.Create(MetaNeatGenome<T>, bool)
  nameWithType.vb: NeatGenomeBuilderFactory(Of T).Create(MetaNeatGenome(Of T), Boolean)
- uid: SharpNeat.Neat.Genome.NeatGenomeBuilderFactory`1.Create*
  name: Create
  href: api/SharpNeat.Neat.Genome.NeatGenomeBuilderFactory-1.html#SharpNeat_Neat_Genome_NeatGenomeBuilderFactory_1_Create_
  commentId: Overload:SharpNeat.Neat.Genome.NeatGenomeBuilderFactory`1.Create
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.NeatGenomeBuilderFactory<T>.Create
  fullName.vb: SharpNeat.Neat.Genome.NeatGenomeBuilderFactory(Of T).Create
  nameWithType: NeatGenomeBuilderFactory<T>.Create
  nameWithType.vb: NeatGenomeBuilderFactory(Of T).Create
- uid: SharpNeat.Neat.Genome.NeatGenomeBuilderTests
  name: NeatGenomeBuilderTests
  href: api/SharpNeat.Neat.Genome.NeatGenomeBuilderTests.html
  commentId: T:SharpNeat.Neat.Genome.NeatGenomeBuilderTests
  fullName: SharpNeat.Neat.Genome.NeatGenomeBuilderTests
  nameWithType: NeatGenomeBuilderTests
- uid: SharpNeat.Neat.Genome.NeatGenomeBuilderTests.Simple
  name: Simple()
  href: api/SharpNeat.Neat.Genome.NeatGenomeBuilderTests.html#SharpNeat_Neat_Genome_NeatGenomeBuilderTests_Simple
  commentId: M:SharpNeat.Neat.Genome.NeatGenomeBuilderTests.Simple
  fullName: SharpNeat.Neat.Genome.NeatGenomeBuilderTests.Simple()
  nameWithType: NeatGenomeBuilderTests.Simple()
- uid: SharpNeat.Neat.Genome.NeatGenomeBuilderTests.Simple_DefinedNodes
  name: Simple_DefinedNodes()
  href: api/SharpNeat.Neat.Genome.NeatGenomeBuilderTests.html#SharpNeat_Neat_Genome_NeatGenomeBuilderTests_Simple_DefinedNodes
  commentId: M:SharpNeat.Neat.Genome.NeatGenomeBuilderTests.Simple_DefinedNodes
  fullName: SharpNeat.Neat.Genome.NeatGenomeBuilderTests.Simple_DefinedNodes()
  nameWithType: NeatGenomeBuilderTests.Simple_DefinedNodes()
- uid: SharpNeat.Neat.Genome.NeatGenomeBuilderTests.Simple_DefinedNodes_NodeIdGap
  name: Simple_DefinedNodes_NodeIdGap()
  href: api/SharpNeat.Neat.Genome.NeatGenomeBuilderTests.html#SharpNeat_Neat_Genome_NeatGenomeBuilderTests_Simple_DefinedNodes_NodeIdGap
  commentId: M:SharpNeat.Neat.Genome.NeatGenomeBuilderTests.Simple_DefinedNodes_NodeIdGap
  fullName: SharpNeat.Neat.Genome.NeatGenomeBuilderTests.Simple_DefinedNodes_NodeIdGap()
  nameWithType: NeatGenomeBuilderTests.Simple_DefinedNodes_NodeIdGap()
- uid: SharpNeat.Neat.Genome.NeatGenomeBuilderTests.Simple_DefinedNodes_NodeIdGap*
  name: Simple_DefinedNodes_NodeIdGap
  href: api/SharpNeat.Neat.Genome.NeatGenomeBuilderTests.html#SharpNeat_Neat_Genome_NeatGenomeBuilderTests_Simple_DefinedNodes_NodeIdGap_
  commentId: Overload:SharpNeat.Neat.Genome.NeatGenomeBuilderTests.Simple_DefinedNodes_NodeIdGap
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.NeatGenomeBuilderTests.Simple_DefinedNodes_NodeIdGap
  nameWithType: NeatGenomeBuilderTests.Simple_DefinedNodes_NodeIdGap
- uid: SharpNeat.Neat.Genome.NeatGenomeBuilderTests.Simple_DefinedNodes*
  name: Simple_DefinedNodes
  href: api/SharpNeat.Neat.Genome.NeatGenomeBuilderTests.html#SharpNeat_Neat_Genome_NeatGenomeBuilderTests_Simple_DefinedNodes_
  commentId: Overload:SharpNeat.Neat.Genome.NeatGenomeBuilderTests.Simple_DefinedNodes
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.NeatGenomeBuilderTests.Simple_DefinedNodes
  nameWithType: NeatGenomeBuilderTests.Simple_DefinedNodes
- uid: SharpNeat.Neat.Genome.NeatGenomeBuilderTests.Simple*
  name: Simple
  href: api/SharpNeat.Neat.Genome.NeatGenomeBuilderTests.html#SharpNeat_Neat_Genome_NeatGenomeBuilderTests_Simple_
  commentId: Overload:SharpNeat.Neat.Genome.NeatGenomeBuilderTests.Simple
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.NeatGenomeBuilderTests.Simple
  nameWithType: NeatGenomeBuilderTests.Simple
- uid: SharpNeat.Neat.Genome.NestGenomeTestUtils
  name: NestGenomeTestUtils
  href: api/SharpNeat.Neat.Genome.NestGenomeTestUtils.html
  commentId: T:SharpNeat.Neat.Genome.NestGenomeTestUtils
  fullName: SharpNeat.Neat.Genome.NestGenomeTestUtils
  nameWithType: NestGenomeTestUtils
- uid: SharpNeat.Neat.Genome.NestGenomeTestUtils.CreateNeatGenome(SharpNeat.Neat.Genome.INeatGenomeBuilder{System.Double})
  name: CreateNeatGenome(INeatGenomeBuilder<double>)
  href: api/SharpNeat.Neat.Genome.NestGenomeTestUtils.html#SharpNeat_Neat_Genome_NestGenomeTestUtils_CreateNeatGenome_SharpNeat_Neat_Genome_INeatGenomeBuilder_System_Double__
  commentId: M:SharpNeat.Neat.Genome.NestGenomeTestUtils.CreateNeatGenome(SharpNeat.Neat.Genome.INeatGenomeBuilder{System.Double})
  name.vb: CreateNeatGenome(INeatGenomeBuilder(Of Double))
  fullName: SharpNeat.Neat.Genome.NestGenomeTestUtils.CreateNeatGenome(SharpNeat.Neat.Genome.INeatGenomeBuilder<double>)
  fullName.vb: SharpNeat.Neat.Genome.NestGenomeTestUtils.CreateNeatGenome(SharpNeat.Neat.Genome.INeatGenomeBuilder(Of Double))
  nameWithType: NestGenomeTestUtils.CreateNeatGenome(INeatGenomeBuilder<double>)
  nameWithType.vb: NestGenomeTestUtils.CreateNeatGenome(INeatGenomeBuilder(Of Double))
- uid: SharpNeat.Neat.Genome.NestGenomeTestUtils.CreateNeatGenome*
  name: CreateNeatGenome
  href: api/SharpNeat.Neat.Genome.NestGenomeTestUtils.html#SharpNeat_Neat_Genome_NestGenomeTestUtils_CreateNeatGenome_
  commentId: Overload:SharpNeat.Neat.Genome.NestGenomeTestUtils.CreateNeatGenome
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.NestGenomeTestUtils.CreateNeatGenome
  nameWithType: NestGenomeTestUtils.CreateNeatGenome
- uid: SharpNeat.Neat.Genome.NestGenomeTestUtils.CreateNeatGenome2(SharpNeat.Neat.Genome.INeatGenomeBuilder{System.Double})
  name: CreateNeatGenome2(INeatGenomeBuilder<double>)
  href: api/SharpNeat.Neat.Genome.NestGenomeTestUtils.html#SharpNeat_Neat_Genome_NestGenomeTestUtils_CreateNeatGenome2_SharpNeat_Neat_Genome_INeatGenomeBuilder_System_Double__
  commentId: M:SharpNeat.Neat.Genome.NestGenomeTestUtils.CreateNeatGenome2(SharpNeat.Neat.Genome.INeatGenomeBuilder{System.Double})
  name.vb: CreateNeatGenome2(INeatGenomeBuilder(Of Double))
  fullName: SharpNeat.Neat.Genome.NestGenomeTestUtils.CreateNeatGenome2(SharpNeat.Neat.Genome.INeatGenomeBuilder<double>)
  fullName.vb: SharpNeat.Neat.Genome.NestGenomeTestUtils.CreateNeatGenome2(SharpNeat.Neat.Genome.INeatGenomeBuilder(Of Double))
  nameWithType: NestGenomeTestUtils.CreateNeatGenome2(INeatGenomeBuilder<double>)
  nameWithType.vb: NestGenomeTestUtils.CreateNeatGenome2(INeatGenomeBuilder(Of Double))
- uid: SharpNeat.Neat.Genome.NestGenomeTestUtils.CreateNeatGenome2*
  name: CreateNeatGenome2
  href: api/SharpNeat.Neat.Genome.NestGenomeTestUtils.html#SharpNeat_Neat_Genome_NestGenomeTestUtils_CreateNeatGenome2_
  commentId: Overload:SharpNeat.Neat.Genome.NestGenomeTestUtils.CreateNeatGenome2
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.NestGenomeTestUtils.CreateNeatGenome2
  nameWithType: NestGenomeTestUtils.CreateNeatGenome2
- uid: SharpNeat.Neat.Genome.NestGenomeTestUtils.CreateNeatPopulation
  name: CreateNeatPopulation()
  href: api/SharpNeat.Neat.Genome.NestGenomeTestUtils.html#SharpNeat_Neat_Genome_NestGenomeTestUtils_CreateNeatPopulation
  commentId: M:SharpNeat.Neat.Genome.NestGenomeTestUtils.CreateNeatPopulation
  fullName: SharpNeat.Neat.Genome.NestGenomeTestUtils.CreateNeatPopulation()
  nameWithType: NestGenomeTestUtils.CreateNeatPopulation()
- uid: SharpNeat.Neat.Genome.NestGenomeTestUtils.CreateNeatPopulation*
  name: CreateNeatPopulation
  href: api/SharpNeat.Neat.Genome.NestGenomeTestUtils.html#SharpNeat_Neat_Genome_NestGenomeTestUtils_CreateNeatPopulation_
  commentId: Overload:SharpNeat.Neat.Genome.NestGenomeTestUtils.CreateNeatPopulation
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.NestGenomeTestUtils.CreateNeatPopulation
  nameWithType: NestGenomeTestUtils.CreateNeatPopulation
- uid: SharpNeat.Neat.Genome.NestGenomeTestUtils.GetDirectedConnectionSet(SharpNeat.Neat.Genome.NeatGenome{System.Double})
  name: GetDirectedConnectionSet(NeatGenome<double>)
  href: api/SharpNeat.Neat.Genome.NestGenomeTestUtils.html#SharpNeat_Neat_Genome_NestGenomeTestUtils_GetDirectedConnectionSet_SharpNeat_Neat_Genome_NeatGenome_System_Double__
  commentId: M:SharpNeat.Neat.Genome.NestGenomeTestUtils.GetDirectedConnectionSet(SharpNeat.Neat.Genome.NeatGenome{System.Double})
  name.vb: GetDirectedConnectionSet(NeatGenome(Of Double))
  fullName: SharpNeat.Neat.Genome.NestGenomeTestUtils.GetDirectedConnectionSet(SharpNeat.Neat.Genome.NeatGenome<double>)
  fullName.vb: SharpNeat.Neat.Genome.NestGenomeTestUtils.GetDirectedConnectionSet(SharpNeat.Neat.Genome.NeatGenome(Of Double))
  nameWithType: NestGenomeTestUtils.GetDirectedConnectionSet(NeatGenome<double>)
  nameWithType.vb: NestGenomeTestUtils.GetDirectedConnectionSet(NeatGenome(Of Double))
- uid: SharpNeat.Neat.Genome.NestGenomeTestUtils.GetDirectedConnectionSet*
  name: GetDirectedConnectionSet
  href: api/SharpNeat.Neat.Genome.NestGenomeTestUtils.html#SharpNeat_Neat_Genome_NestGenomeTestUtils_GetDirectedConnectionSet_
  commentId: Overload:SharpNeat.Neat.Genome.NestGenomeTestUtils.GetDirectedConnectionSet
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.NestGenomeTestUtils.GetDirectedConnectionSet
  nameWithType: NestGenomeTestUtils.GetDirectedConnectionSet
- uid: SharpNeat.Neat.Genome.NestGenomeTestUtils.GetNodeIdSet(SharpNeat.Neat.Genome.NeatGenome{System.Double})
  name: GetNodeIdSet(NeatGenome<double>)
  href: api/SharpNeat.Neat.Genome.NestGenomeTestUtils.html#SharpNeat_Neat_Genome_NestGenomeTestUtils_GetNodeIdSet_SharpNeat_Neat_Genome_NeatGenome_System_Double__
  commentId: M:SharpNeat.Neat.Genome.NestGenomeTestUtils.GetNodeIdSet(SharpNeat.Neat.Genome.NeatGenome{System.Double})
  name.vb: GetNodeIdSet(NeatGenome(Of Double))
  fullName: SharpNeat.Neat.Genome.NestGenomeTestUtils.GetNodeIdSet(SharpNeat.Neat.Genome.NeatGenome<double>)
  fullName.vb: SharpNeat.Neat.Genome.NestGenomeTestUtils.GetNodeIdSet(SharpNeat.Neat.Genome.NeatGenome(Of Double))
  nameWithType: NestGenomeTestUtils.GetNodeIdSet(NeatGenome<double>)
  nameWithType.vb: NestGenomeTestUtils.GetNodeIdSet(NeatGenome(Of Double))
- uid: SharpNeat.Neat.Genome.NestGenomeTestUtils.GetNodeIdSet*
  name: GetNodeIdSet
  href: api/SharpNeat.Neat.Genome.NestGenomeTestUtils.html#SharpNeat_Neat_Genome_NestGenomeTestUtils_GetNodeIdSet_
  commentId: Overload:SharpNeat.Neat.Genome.NestGenomeTestUtils.GetNodeIdSet
  isSpec: "True"
  fullName: SharpNeat.Neat.Genome.NestGenomeTestUtils.GetNodeIdSet
  nameWithType: NestGenomeTestUtils.GetNodeIdSet
- uid: SharpNeat.Neat.NeatPopulation`1
  name: NeatPopulation<T>
  href: api/SharpNeat.Neat.NeatPopulation-1.html
  commentId: T:SharpNeat.Neat.NeatPopulation`1
  name.vb: NeatPopulation(Of T)
  fullName: SharpNeat.Neat.NeatPopulation<T>
  fullName.vb: SharpNeat.Neat.NeatPopulation(Of T)
  nameWithType: NeatPopulation<T>
  nameWithType.vb: NeatPopulation(Of T)
- uid: SharpNeat.Neat.NeatPopulation`1.#ctor(SharpNeat.Neat.Genome.MetaNeatGenome{`0},SharpNeat.Neat.Genome.INeatGenomeBuilder{`0},System.Int32,System.Collections.Generic.List{SharpNeat.Neat.Genome.NeatGenome{`0}},Redzen.Structures.Int32Sequence,Redzen.Structures.Int32Sequence,System.Int32)
  name: NeatPopulation(MetaNeatGenome<T>, INeatGenomeBuilder<T>, int, List<NeatGenome<T>>, Int32Sequence, Int32Sequence, int)
  href: api/SharpNeat.Neat.NeatPopulation-1.html#SharpNeat_Neat_NeatPopulation_1__ctor_SharpNeat_Neat_Genome_MetaNeatGenome__0__SharpNeat_Neat_Genome_INeatGenomeBuilder__0__System_Int32_System_Collections_Generic_List_SharpNeat_Neat_Genome_NeatGenome__0___Redzen_Structures_Int32Sequence_Redzen_Structures_Int32Sequence_System_Int32_
  commentId: M:SharpNeat.Neat.NeatPopulation`1.#ctor(SharpNeat.Neat.Genome.MetaNeatGenome{`0},SharpNeat.Neat.Genome.INeatGenomeBuilder{`0},System.Int32,System.Collections.Generic.List{SharpNeat.Neat.Genome.NeatGenome{`0}},Redzen.Structures.Int32Sequence,Redzen.Structures.Int32Sequence,System.Int32)
  name.vb: New(MetaNeatGenome(Of T), INeatGenomeBuilder(Of T), Integer, List(Of NeatGenome(Of T)), Int32Sequence, Int32Sequence, Integer)
  fullName: SharpNeat.Neat.NeatPopulation<T>.NeatPopulation(SharpNeat.Neat.Genome.MetaNeatGenome<T>, SharpNeat.Neat.Genome.INeatGenomeBuilder<T>, int, System.Collections.Generic.List<SharpNeat.Neat.Genome.NeatGenome<T>>, Redzen.Structures.Int32Sequence, Redzen.Structures.Int32Sequence, int)
  fullName.vb: SharpNeat.Neat.NeatPopulation(Of T).New(SharpNeat.Neat.Genome.MetaNeatGenome(Of T), SharpNeat.Neat.Genome.INeatGenomeBuilder(Of T), Integer, System.Collections.Generic.List(Of SharpNeat.Neat.Genome.NeatGenome(Of T)), Redzen.Structures.Int32Sequence, Redzen.Structures.Int32Sequence, Integer)
  nameWithType: NeatPopulation<T>.NeatPopulation(MetaNeatGenome<T>, INeatGenomeBuilder<T>, int, List<NeatGenome<T>>, Int32Sequence, Int32Sequence, int)
  nameWithType.vb: NeatPopulation(Of T).New(MetaNeatGenome(Of T), INeatGenomeBuilder(Of T), Integer, List(Of NeatGenome(Of T)), Int32Sequence, Int32Sequence, Integer)
- uid: SharpNeat.Neat.NeatPopulation`1.#ctor(SharpNeat.Neat.Genome.MetaNeatGenome{`0},SharpNeat.Neat.Genome.INeatGenomeBuilder{`0},System.Int32,System.Collections.Generic.List{SharpNeat.Neat.Genome.NeatGenome{`0}},Redzen.Structures.Int32Sequence,Redzen.Structures.Int32Sequence)
  name: NeatPopulation(MetaNeatGenome<T>, INeatGenomeBuilder<T>, int, List<NeatGenome<T>>, Int32Sequence, Int32Sequence)
  href: api/SharpNeat.Neat.NeatPopulation-1.html#SharpNeat_Neat_NeatPopulation_1__ctor_SharpNeat_Neat_Genome_MetaNeatGenome__0__SharpNeat_Neat_Genome_INeatGenomeBuilder__0__System_Int32_System_Collections_Generic_List_SharpNeat_Neat_Genome_NeatGenome__0___Redzen_Structures_Int32Sequence_Redzen_Structures_Int32Sequence_
  commentId: M:SharpNeat.Neat.NeatPopulation`1.#ctor(SharpNeat.Neat.Genome.MetaNeatGenome{`0},SharpNeat.Neat.Genome.INeatGenomeBuilder{`0},System.Int32,System.Collections.Generic.List{SharpNeat.Neat.Genome.NeatGenome{`0}},Redzen.Structures.Int32Sequence,Redzen.Structures.Int32Sequence)
  name.vb: New(MetaNeatGenome(Of T), INeatGenomeBuilder(Of T), Integer, List(Of NeatGenome(Of T)), Int32Sequence, Int32Sequence)
  fullName: SharpNeat.Neat.NeatPopulation<T>.NeatPopulation(SharpNeat.Neat.Genome.MetaNeatGenome<T>, SharpNeat.Neat.Genome.INeatGenomeBuilder<T>, int, System.Collections.Generic.List<SharpNeat.Neat.Genome.NeatGenome<T>>, Redzen.Structures.Int32Sequence, Redzen.Structures.Int32Sequence)
  fullName.vb: SharpNeat.Neat.NeatPopulation(Of T).New(SharpNeat.Neat.Genome.MetaNeatGenome(Of T), SharpNeat.Neat.Genome.INeatGenomeBuilder(Of T), Integer, System.Collections.Generic.List(Of SharpNeat.Neat.Genome.NeatGenome(Of T)), Redzen.Structures.Int32Sequence, Redzen.Structures.Int32Sequence)
  nameWithType: NeatPopulation<T>.NeatPopulation(MetaNeatGenome<T>, INeatGenomeBuilder<T>, int, List<NeatGenome<T>>, Int32Sequence, Int32Sequence)
  nameWithType.vb: NeatPopulation(Of T).New(MetaNeatGenome(Of T), INeatGenomeBuilder(Of T), Integer, List(Of NeatGenome(Of T)), Int32Sequence, Int32Sequence)
- uid: SharpNeat.Neat.NeatPopulation`1.#ctor(SharpNeat.Neat.Genome.MetaNeatGenome{`0},SharpNeat.Neat.Genome.INeatGenomeBuilder{`0},System.Int32,System.Collections.Generic.List{SharpNeat.Neat.Genome.NeatGenome{`0}})
  name: NeatPopulation(MetaNeatGenome<T>, INeatGenomeBuilder<T>, int, List<NeatGenome<T>>)
  href: api/SharpNeat.Neat.NeatPopulation-1.html#SharpNeat_Neat_NeatPopulation_1__ctor_SharpNeat_Neat_Genome_MetaNeatGenome__0__SharpNeat_Neat_Genome_INeatGenomeBuilder__0__System_Int32_System_Collections_Generic_List_SharpNeat_Neat_Genome_NeatGenome__0___
  commentId: M:SharpNeat.Neat.NeatPopulation`1.#ctor(SharpNeat.Neat.Genome.MetaNeatGenome{`0},SharpNeat.Neat.Genome.INeatGenomeBuilder{`0},System.Int32,System.Collections.Generic.List{SharpNeat.Neat.Genome.NeatGenome{`0}})
  name.vb: New(MetaNeatGenome(Of T), INeatGenomeBuilder(Of T), Integer, List(Of NeatGenome(Of T)))
  fullName: SharpNeat.Neat.NeatPopulation<T>.NeatPopulation(SharpNeat.Neat.Genome.MetaNeatGenome<T>, SharpNeat.Neat.Genome.INeatGenomeBuilder<T>, int, System.Collections.Generic.List<SharpNeat.Neat.Genome.NeatGenome<T>>)
  fullName.vb: SharpNeat.Neat.NeatPopulation(Of T).New(SharpNeat.Neat.Genome.MetaNeatGenome(Of T), SharpNeat.Neat.Genome.INeatGenomeBuilder(Of T), Integer, System.Collections.Generic.List(Of SharpNeat.Neat.Genome.NeatGenome(Of T)))
  nameWithType: NeatPopulation<T>.NeatPopulation(MetaNeatGenome<T>, INeatGenomeBuilder<T>, int, List<NeatGenome<T>>)
  nameWithType.vb: NeatPopulation(Of T).New(MetaNeatGenome(Of T), INeatGenomeBuilder(Of T), Integer, List(Of NeatGenome(Of T)))
- uid: SharpNeat.Neat.NeatPopulation`1.#ctor*
  name: NeatPopulation
  href: api/SharpNeat.Neat.NeatPopulation-1.html#SharpNeat_Neat_NeatPopulation_1__ctor_
  commentId: Overload:SharpNeat.Neat.NeatPopulation`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Neat.NeatPopulation<T>.NeatPopulation
  fullName.vb: SharpNeat.Neat.NeatPopulation(Of T).New
  nameWithType: NeatPopulation<T>.NeatPopulation
  nameWithType.vb: NeatPopulation(Of T).New
- uid: SharpNeat.Neat.NeatPopulation`1.AddedNodeBuffer
  name: AddedNodeBuffer
  href: api/SharpNeat.Neat.NeatPopulation-1.html#SharpNeat_Neat_NeatPopulation_1_AddedNodeBuffer
  commentId: P:SharpNeat.Neat.NeatPopulation`1.AddedNodeBuffer
  fullName: SharpNeat.Neat.NeatPopulation<T>.AddedNodeBuffer
  fullName.vb: SharpNeat.Neat.NeatPopulation(Of T).AddedNodeBuffer
  nameWithType: NeatPopulation<T>.AddedNodeBuffer
  nameWithType.vb: NeatPopulation(Of T).AddedNodeBuffer
- uid: SharpNeat.Neat.NeatPopulation`1.AddedNodeBuffer*
  name: AddedNodeBuffer
  href: api/SharpNeat.Neat.NeatPopulation-1.html#SharpNeat_Neat_NeatPopulation_1_AddedNodeBuffer_
  commentId: Overload:SharpNeat.Neat.NeatPopulation`1.AddedNodeBuffer
  isSpec: "True"
  fullName: SharpNeat.Neat.NeatPopulation<T>.AddedNodeBuffer
  fullName.vb: SharpNeat.Neat.NeatPopulation(Of T).AddedNodeBuffer
  nameWithType: NeatPopulation<T>.AddedNodeBuffer
  nameWithType.vb: NeatPopulation(Of T).AddedNodeBuffer
- uid: SharpNeat.Neat.NeatPopulation`1.ClearAllSpecies
  name: ClearAllSpecies()
  href: api/SharpNeat.Neat.NeatPopulation-1.html#SharpNeat_Neat_NeatPopulation_1_ClearAllSpecies
  commentId: M:SharpNeat.Neat.NeatPopulation`1.ClearAllSpecies
  fullName: SharpNeat.Neat.NeatPopulation<T>.ClearAllSpecies()
  fullName.vb: SharpNeat.Neat.NeatPopulation(Of T).ClearAllSpecies()
  nameWithType: NeatPopulation<T>.ClearAllSpecies()
  nameWithType.vb: NeatPopulation(Of T).ClearAllSpecies()
- uid: SharpNeat.Neat.NeatPopulation`1.ClearAllSpecies*
  name: ClearAllSpecies
  href: api/SharpNeat.Neat.NeatPopulation-1.html#SharpNeat_Neat_NeatPopulation_1_ClearAllSpecies_
  commentId: Overload:SharpNeat.Neat.NeatPopulation`1.ClearAllSpecies
  isSpec: "True"
  fullName: SharpNeat.Neat.NeatPopulation<T>.ClearAllSpecies
  fullName.vb: SharpNeat.Neat.NeatPopulation(Of T).ClearAllSpecies
  nameWithType: NeatPopulation<T>.ClearAllSpecies
  nameWithType.vb: NeatPopulation(Of T).ClearAllSpecies
- uid: SharpNeat.Neat.NeatPopulation`1.ContainsEmptySpecies
  name: ContainsEmptySpecies()
  href: api/SharpNeat.Neat.NeatPopulation-1.html#SharpNeat_Neat_NeatPopulation_1_ContainsEmptySpecies
  commentId: M:SharpNeat.Neat.NeatPopulation`1.ContainsEmptySpecies
  fullName: SharpNeat.Neat.NeatPopulation<T>.ContainsEmptySpecies()
  fullName.vb: SharpNeat.Neat.NeatPopulation(Of T).ContainsEmptySpecies()
  nameWithType: NeatPopulation<T>.ContainsEmptySpecies()
  nameWithType.vb: NeatPopulation(Of T).ContainsEmptySpecies()
- uid: SharpNeat.Neat.NeatPopulation`1.ContainsEmptySpecies*
  name: ContainsEmptySpecies
  href: api/SharpNeat.Neat.NeatPopulation-1.html#SharpNeat_Neat_NeatPopulation_1_ContainsEmptySpecies_
  commentId: Overload:SharpNeat.Neat.NeatPopulation`1.ContainsEmptySpecies
  isSpec: "True"
  fullName: SharpNeat.Neat.NeatPopulation<T>.ContainsEmptySpecies
  fullName.vb: SharpNeat.Neat.NeatPopulation(Of T).ContainsEmptySpecies
  nameWithType: NeatPopulation<T>.ContainsEmptySpecies
  nameWithType.vb: NeatPopulation(Of T).ContainsEmptySpecies
- uid: SharpNeat.Neat.NeatPopulation`1.CreatePopulatonStats
  name: CreatePopulatonStats()
  href: api/SharpNeat.Neat.NeatPopulation-1.html#SharpNeat_Neat_NeatPopulation_1_CreatePopulatonStats
  commentId: M:SharpNeat.Neat.NeatPopulation`1.CreatePopulatonStats
  fullName: SharpNeat.Neat.NeatPopulation<T>.CreatePopulatonStats()
  fullName.vb: SharpNeat.Neat.NeatPopulation(Of T).CreatePopulatonStats()
  nameWithType: NeatPopulation<T>.CreatePopulatonStats()
  nameWithType.vb: NeatPopulation(Of T).CreatePopulatonStats()
- uid: SharpNeat.Neat.NeatPopulation`1.CreatePopulatonStats*
  name: CreatePopulatonStats
  href: api/SharpNeat.Neat.NeatPopulation-1.html#SharpNeat_Neat_NeatPopulation_1_CreatePopulatonStats_
  commentId: Overload:SharpNeat.Neat.NeatPopulation`1.CreatePopulatonStats
  isSpec: "True"
  fullName: SharpNeat.Neat.NeatPopulation<T>.CreatePopulatonStats
  fullName.vb: SharpNeat.Neat.NeatPopulation(Of T).CreatePopulatonStats
  nameWithType: NeatPopulation<T>.CreatePopulatonStats
  nameWithType.vb: NeatPopulation(Of T).CreatePopulatonStats
- uid: SharpNeat.Neat.NeatPopulation`1.GenomeBuilder
  name: GenomeBuilder
  href: api/SharpNeat.Neat.NeatPopulation-1.html#SharpNeat_Neat_NeatPopulation_1_GenomeBuilder
  commentId: P:SharpNeat.Neat.NeatPopulation`1.GenomeBuilder
  fullName: SharpNeat.Neat.NeatPopulation<T>.GenomeBuilder
  fullName.vb: SharpNeat.Neat.NeatPopulation(Of T).GenomeBuilder
  nameWithType: NeatPopulation<T>.GenomeBuilder
  nameWithType.vb: NeatPopulation(Of T).GenomeBuilder
- uid: SharpNeat.Neat.NeatPopulation`1.GenomeBuilder*
  name: GenomeBuilder
  href: api/SharpNeat.Neat.NeatPopulation-1.html#SharpNeat_Neat_NeatPopulation_1_GenomeBuilder_
  commentId: Overload:SharpNeat.Neat.NeatPopulation`1.GenomeBuilder
  isSpec: "True"
  fullName: SharpNeat.Neat.NeatPopulation<T>.GenomeBuilder
  fullName.vb: SharpNeat.Neat.NeatPopulation(Of T).GenomeBuilder
  nameWithType: NeatPopulation<T>.GenomeBuilder
  nameWithType.vb: NeatPopulation(Of T).GenomeBuilder
- uid: SharpNeat.Neat.NeatPopulation`1.GenomeIdSeq
  name: GenomeIdSeq
  href: api/SharpNeat.Neat.NeatPopulation-1.html#SharpNeat_Neat_NeatPopulation_1_GenomeIdSeq
  commentId: P:SharpNeat.Neat.NeatPopulation`1.GenomeIdSeq
  fullName: SharpNeat.Neat.NeatPopulation<T>.GenomeIdSeq
  fullName.vb: SharpNeat.Neat.NeatPopulation(Of T).GenomeIdSeq
  nameWithType: NeatPopulation<T>.GenomeIdSeq
  nameWithType.vb: NeatPopulation(Of T).GenomeIdSeq
- uid: SharpNeat.Neat.NeatPopulation`1.GenomeIdSeq*
  name: GenomeIdSeq
  href: api/SharpNeat.Neat.NeatPopulation-1.html#SharpNeat_Neat_NeatPopulation_1_GenomeIdSeq_
  commentId: Overload:SharpNeat.Neat.NeatPopulation`1.GenomeIdSeq
  isSpec: "True"
  fullName: SharpNeat.Neat.NeatPopulation<T>.GenomeIdSeq
  fullName.vb: SharpNeat.Neat.NeatPopulation(Of T).GenomeIdSeq
  nameWithType: NeatPopulation<T>.GenomeIdSeq
  nameWithType.vb: NeatPopulation(Of T).GenomeIdSeq
- uid: SharpNeat.Neat.NeatPopulation`1.InitialiseSpecies(SharpNeat.Neat.Speciation.ISpeciationStrategy{SharpNeat.Neat.Genome.NeatGenome{`0},`0},System.Int32,System.Collections.Generic.IComparer{SharpNeat.Neat.Genome.NeatGenome{`0}},Redzen.Random.IRandomSource)
  name: InitialiseSpecies(ISpeciationStrategy<NeatGenome<T>, T>, int, IComparer<NeatGenome<T>>, IRandomSource)
  href: api/SharpNeat.Neat.NeatPopulation-1.html#SharpNeat_Neat_NeatPopulation_1_InitialiseSpecies_SharpNeat_Neat_Speciation_ISpeciationStrategy_SharpNeat_Neat_Genome_NeatGenome__0___0__System_Int32_System_Collections_Generic_IComparer_SharpNeat_Neat_Genome_NeatGenome__0___Redzen_Random_IRandomSource_
  commentId: M:SharpNeat.Neat.NeatPopulation`1.InitialiseSpecies(SharpNeat.Neat.Speciation.ISpeciationStrategy{SharpNeat.Neat.Genome.NeatGenome{`0},`0},System.Int32,System.Collections.Generic.IComparer{SharpNeat.Neat.Genome.NeatGenome{`0}},Redzen.Random.IRandomSource)
  name.vb: InitialiseSpecies(ISpeciationStrategy(Of NeatGenome(Of T), T), Integer, IComparer(Of NeatGenome(Of T)), IRandomSource)
  fullName: SharpNeat.Neat.NeatPopulation<T>.InitialiseSpecies(SharpNeat.Neat.Speciation.ISpeciationStrategy<SharpNeat.Neat.Genome.NeatGenome<T>, T>, int, System.Collections.Generic.IComparer<SharpNeat.Neat.Genome.NeatGenome<T>>, Redzen.Random.IRandomSource)
  fullName.vb: SharpNeat.Neat.NeatPopulation(Of T).InitialiseSpecies(SharpNeat.Neat.Speciation.ISpeciationStrategy(Of SharpNeat.Neat.Genome.NeatGenome(Of T), T), Integer, System.Collections.Generic.IComparer(Of SharpNeat.Neat.Genome.NeatGenome(Of T)), Redzen.Random.IRandomSource)
  nameWithType: NeatPopulation<T>.InitialiseSpecies(ISpeciationStrategy<NeatGenome<T>, T>, int, IComparer<NeatGenome<T>>, IRandomSource)
  nameWithType.vb: NeatPopulation(Of T).InitialiseSpecies(ISpeciationStrategy(Of NeatGenome(Of T), T), Integer, IComparer(Of NeatGenome(Of T)), IRandomSource)
- uid: SharpNeat.Neat.NeatPopulation`1.InitialiseSpecies*
  name: InitialiseSpecies
  href: api/SharpNeat.Neat.NeatPopulation-1.html#SharpNeat_Neat_NeatPopulation_1_InitialiseSpecies_
  commentId: Overload:SharpNeat.Neat.NeatPopulation`1.InitialiseSpecies
  isSpec: "True"
  fullName: SharpNeat.Neat.NeatPopulation<T>.InitialiseSpecies
  fullName.vb: SharpNeat.Neat.NeatPopulation(Of T).InitialiseSpecies
  nameWithType: NeatPopulation<T>.InitialiseSpecies
  nameWithType.vb: NeatPopulation(Of T).InitialiseSpecies
- uid: SharpNeat.Neat.NeatPopulation`1.InnovationIdSeq
  name: InnovationIdSeq
  href: api/SharpNeat.Neat.NeatPopulation-1.html#SharpNeat_Neat_NeatPopulation_1_InnovationIdSeq
  commentId: P:SharpNeat.Neat.NeatPopulation`1.InnovationIdSeq
  fullName: SharpNeat.Neat.NeatPopulation<T>.InnovationIdSeq
  fullName.vb: SharpNeat.Neat.NeatPopulation(Of T).InnovationIdSeq
  nameWithType: NeatPopulation<T>.InnovationIdSeq
  nameWithType.vb: NeatPopulation(Of T).InnovationIdSeq
- uid: SharpNeat.Neat.NeatPopulation`1.InnovationIdSeq*
  name: InnovationIdSeq
  href: api/SharpNeat.Neat.NeatPopulation-1.html#SharpNeat_Neat_NeatPopulation_1_InnovationIdSeq_
  commentId: Overload:SharpNeat.Neat.NeatPopulation`1.InnovationIdSeq
  isSpec: "True"
  fullName: SharpNeat.Neat.NeatPopulation<T>.InnovationIdSeq
  fullName.vb: SharpNeat.Neat.NeatPopulation(Of T).InnovationIdSeq
  nameWithType: NeatPopulation<T>.InnovationIdSeq
  nameWithType.vb: NeatPopulation(Of T).InnovationIdSeq
- uid: SharpNeat.Neat.NeatPopulation`1.MetaNeatGenome
  name: MetaNeatGenome
  href: api/SharpNeat.Neat.NeatPopulation-1.html#SharpNeat_Neat_NeatPopulation_1_MetaNeatGenome
  commentId: P:SharpNeat.Neat.NeatPopulation`1.MetaNeatGenome
  fullName: SharpNeat.Neat.NeatPopulation<T>.MetaNeatGenome
  fullName.vb: SharpNeat.Neat.NeatPopulation(Of T).MetaNeatGenome
  nameWithType: NeatPopulation<T>.MetaNeatGenome
  nameWithType.vb: NeatPopulation(Of T).MetaNeatGenome
- uid: SharpNeat.Neat.NeatPopulation`1.MetaNeatGenome*
  name: MetaNeatGenome
  href: api/SharpNeat.Neat.NeatPopulation-1.html#SharpNeat_Neat_NeatPopulation_1_MetaNeatGenome_
  commentId: Overload:SharpNeat.Neat.NeatPopulation`1.MetaNeatGenome
  isSpec: "True"
  fullName: SharpNeat.Neat.NeatPopulation<T>.MetaNeatGenome
  fullName.vb: SharpNeat.Neat.NeatPopulation(Of T).MetaNeatGenome
  nameWithType: NeatPopulation<T>.MetaNeatGenome
  nameWithType.vb: NeatPopulation(Of T).MetaNeatGenome
- uid: SharpNeat.Neat.NeatPopulation`1.NeatPopulationStats
  name: NeatPopulationStats
  href: api/SharpNeat.Neat.NeatPopulation-1.html#SharpNeat_Neat_NeatPopulation_1_NeatPopulationStats
  commentId: P:SharpNeat.Neat.NeatPopulation`1.NeatPopulationStats
  fullName: SharpNeat.Neat.NeatPopulation<T>.NeatPopulationStats
  fullName.vb: SharpNeat.Neat.NeatPopulation(Of T).NeatPopulationStats
  nameWithType: NeatPopulation<T>.NeatPopulationStats
  nameWithType.vb: NeatPopulation(Of T).NeatPopulationStats
- uid: SharpNeat.Neat.NeatPopulation`1.NeatPopulationStats*
  name: NeatPopulationStats
  href: api/SharpNeat.Neat.NeatPopulation-1.html#SharpNeat_Neat_NeatPopulation_1_NeatPopulationStats_
  commentId: Overload:SharpNeat.Neat.NeatPopulation`1.NeatPopulationStats
  isSpec: "True"
  fullName: SharpNeat.Neat.NeatPopulation<T>.NeatPopulationStats
  fullName.vb: SharpNeat.Neat.NeatPopulation(Of T).NeatPopulationStats
  nameWithType: NeatPopulation<T>.NeatPopulationStats
  nameWithType.vb: NeatPopulation(Of T).NeatPopulationStats
- uid: SharpNeat.Neat.NeatPopulation`1.SpeciesArray
  name: SpeciesArray
  href: api/SharpNeat.Neat.NeatPopulation-1.html#SharpNeat_Neat_NeatPopulation_1_SpeciesArray
  commentId: P:SharpNeat.Neat.NeatPopulation`1.SpeciesArray
  fullName: SharpNeat.Neat.NeatPopulation<T>.SpeciesArray
  fullName.vb: SharpNeat.Neat.NeatPopulation(Of T).SpeciesArray
  nameWithType: NeatPopulation<T>.SpeciesArray
  nameWithType.vb: NeatPopulation(Of T).SpeciesArray
- uid: SharpNeat.Neat.NeatPopulation`1.SpeciesArray*
  name: SpeciesArray
  href: api/SharpNeat.Neat.NeatPopulation-1.html#SharpNeat_Neat_NeatPopulation_1_SpeciesArray_
  commentId: Overload:SharpNeat.Neat.NeatPopulation`1.SpeciesArray
  isSpec: "True"
  fullName: SharpNeat.Neat.NeatPopulation<T>.SpeciesArray
  fullName.vb: SharpNeat.Neat.NeatPopulation(Of T).SpeciesArray
  nameWithType: NeatPopulation<T>.SpeciesArray
  nameWithType.vb: NeatPopulation(Of T).SpeciesArray
- uid: SharpNeat.Neat.NeatPopulation`1.UpdateStats(System.Collections.Generic.IComparer{SharpNeat.Evaluation.FitnessInfo},Redzen.Random.IRandomSource)
  name: UpdateStats(IComparer<FitnessInfo>, IRandomSource)
  href: api/SharpNeat.Neat.NeatPopulation-1.html#SharpNeat_Neat_NeatPopulation_1_UpdateStats_System_Collections_Generic_IComparer_SharpNeat_Evaluation_FitnessInfo__Redzen_Random_IRandomSource_
  commentId: M:SharpNeat.Neat.NeatPopulation`1.UpdateStats(System.Collections.Generic.IComparer{SharpNeat.Evaluation.FitnessInfo},Redzen.Random.IRandomSource)
  name.vb: UpdateStats(IComparer(Of FitnessInfo), IRandomSource)
  fullName: SharpNeat.Neat.NeatPopulation<T>.UpdateStats(System.Collections.Generic.IComparer<SharpNeat.Evaluation.FitnessInfo>, Redzen.Random.IRandomSource)
  fullName.vb: SharpNeat.Neat.NeatPopulation(Of T).UpdateStats(System.Collections.Generic.IComparer(Of SharpNeat.Evaluation.FitnessInfo), Redzen.Random.IRandomSource)
  nameWithType: NeatPopulation<T>.UpdateStats(IComparer<FitnessInfo>, IRandomSource)
  nameWithType.vb: NeatPopulation(Of T).UpdateStats(IComparer(Of FitnessInfo), IRandomSource)
- uid: SharpNeat.Neat.NeatPopulation`1.UpdateStats*
  name: UpdateStats
  href: api/SharpNeat.Neat.NeatPopulation-1.html#SharpNeat_Neat_NeatPopulation_1_UpdateStats_
  commentId: Overload:SharpNeat.Neat.NeatPopulation`1.UpdateStats
  isSpec: "True"
  fullName: SharpNeat.Neat.NeatPopulation<T>.UpdateStats
  fullName.vb: SharpNeat.Neat.NeatPopulation(Of T).UpdateStats
  nameWithType: NeatPopulation<T>.UpdateStats
  nameWithType.vb: NeatPopulation(Of T).UpdateStats
- uid: SharpNeat.Neat.NeatPopulationFactory`1
  name: NeatPopulationFactory<T>
  href: api/SharpNeat.Neat.NeatPopulationFactory-1.html
  commentId: T:SharpNeat.Neat.NeatPopulationFactory`1
  name.vb: NeatPopulationFactory(Of T)
  fullName: SharpNeat.Neat.NeatPopulationFactory<T>
  fullName.vb: SharpNeat.Neat.NeatPopulationFactory(Of T)
  nameWithType: NeatPopulationFactory<T>
  nameWithType.vb: NeatPopulationFactory(Of T)
- uid: SharpNeat.Neat.NeatPopulationFactory`1.CreatePopulation(SharpNeat.Neat.Genome.MetaNeatGenome{`0},System.Double,System.Int32,Redzen.Random.IRandomSource)
  name: CreatePopulation(MetaNeatGenome<T>, double, int, IRandomSource?)
  href: api/SharpNeat.Neat.NeatPopulationFactory-1.html#SharpNeat_Neat_NeatPopulationFactory_1_CreatePopulation_SharpNeat_Neat_Genome_MetaNeatGenome__0__System_Double_System_Int32_Redzen_Random_IRandomSource_
  commentId: M:SharpNeat.Neat.NeatPopulationFactory`1.CreatePopulation(SharpNeat.Neat.Genome.MetaNeatGenome{`0},System.Double,System.Int32,Redzen.Random.IRandomSource)
  name.vb: CreatePopulation(MetaNeatGenome(Of T), Double, Integer, IRandomSource)
  fullName: SharpNeat.Neat.NeatPopulationFactory<T>.CreatePopulation(SharpNeat.Neat.Genome.MetaNeatGenome<T>, double, int, Redzen.Random.IRandomSource?)
  fullName.vb: SharpNeat.Neat.NeatPopulationFactory(Of T).CreatePopulation(SharpNeat.Neat.Genome.MetaNeatGenome(Of T), Double, Integer, Redzen.Random.IRandomSource)
  nameWithType: NeatPopulationFactory<T>.CreatePopulation(MetaNeatGenome<T>, double, int, IRandomSource?)
  nameWithType.vb: NeatPopulationFactory(Of T).CreatePopulation(MetaNeatGenome(Of T), Double, Integer, IRandomSource)
- uid: SharpNeat.Neat.NeatPopulationFactory`1.CreatePopulation(SharpNeat.Neat.Genome.MetaNeatGenome{`0},System.Int32,SharpNeat.Neat.Genome.NeatGenome{`0},SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings,SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationScheme{`0},Redzen.Random.IRandomSource)
  name: CreatePopulation(MetaNeatGenome<T>, int, NeatGenome<T>, NeatReproductionAsexualSettings, WeightMutationScheme<T>, IRandomSource?)
  href: api/SharpNeat.Neat.NeatPopulationFactory-1.html#SharpNeat_Neat_NeatPopulationFactory_1_CreatePopulation_SharpNeat_Neat_Genome_MetaNeatGenome__0__System_Int32_SharpNeat_Neat_Genome_NeatGenome__0__SharpNeat_Neat_Reproduction_Asexual_NeatReproductionAsexualSettings_SharpNeat_Neat_Reproduction_Asexual_WeightMutation_WeightMutationScheme__0__Redzen_Random_IRandomSource_
  commentId: M:SharpNeat.Neat.NeatPopulationFactory`1.CreatePopulation(SharpNeat.Neat.Genome.MetaNeatGenome{`0},System.Int32,SharpNeat.Neat.Genome.NeatGenome{`0},SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings,SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationScheme{`0},Redzen.Random.IRandomSource)
  name.vb: CreatePopulation(MetaNeatGenome(Of T), Integer, NeatGenome(Of T), NeatReproductionAsexualSettings, WeightMutationScheme(Of T), IRandomSource)
  fullName: SharpNeat.Neat.NeatPopulationFactory<T>.CreatePopulation(SharpNeat.Neat.Genome.MetaNeatGenome<T>, int, SharpNeat.Neat.Genome.NeatGenome<T>, SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings, SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationScheme<T>, Redzen.Random.IRandomSource?)
  fullName.vb: SharpNeat.Neat.NeatPopulationFactory(Of T).CreatePopulation(SharpNeat.Neat.Genome.MetaNeatGenome(Of T), Integer, SharpNeat.Neat.Genome.NeatGenome(Of T), SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings, SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationScheme(Of T), Redzen.Random.IRandomSource)
  nameWithType: NeatPopulationFactory<T>.CreatePopulation(MetaNeatGenome<T>, int, NeatGenome<T>, NeatReproductionAsexualSettings, WeightMutationScheme<T>, IRandomSource?)
  nameWithType.vb: NeatPopulationFactory(Of T).CreatePopulation(MetaNeatGenome(Of T), Integer, NeatGenome(Of T), NeatReproductionAsexualSettings, WeightMutationScheme(Of T), IRandomSource)
- uid: SharpNeat.Neat.NeatPopulationFactory`1.CreatePopulation(SharpNeat.Neat.Genome.MetaNeatGenome{`0},System.Int32,System.Collections.Generic.List{SharpNeat.Neat.Genome.NeatGenome{`0}},SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings,SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationScheme{`0},Redzen.Random.IRandomSource)
  name: CreatePopulation(MetaNeatGenome<T>, int, List<NeatGenome<T>>, NeatReproductionAsexualSettings, WeightMutationScheme<T>, IRandomSource?)
  href: api/SharpNeat.Neat.NeatPopulationFactory-1.html#SharpNeat_Neat_NeatPopulationFactory_1_CreatePopulation_SharpNeat_Neat_Genome_MetaNeatGenome__0__System_Int32_System_Collections_Generic_List_SharpNeat_Neat_Genome_NeatGenome__0___SharpNeat_Neat_Reproduction_Asexual_NeatReproductionAsexualSettings_SharpNeat_Neat_Reproduction_Asexual_WeightMutation_WeightMutationScheme__0__Redzen_Random_IRandomSource_
  commentId: M:SharpNeat.Neat.NeatPopulationFactory`1.CreatePopulation(SharpNeat.Neat.Genome.MetaNeatGenome{`0},System.Int32,System.Collections.Generic.List{SharpNeat.Neat.Genome.NeatGenome{`0}},SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings,SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationScheme{`0},Redzen.Random.IRandomSource)
  name.vb: CreatePopulation(MetaNeatGenome(Of T), Integer, List(Of NeatGenome(Of T)), NeatReproductionAsexualSettings, WeightMutationScheme(Of T), IRandomSource)
  fullName: SharpNeat.Neat.NeatPopulationFactory<T>.CreatePopulation(SharpNeat.Neat.Genome.MetaNeatGenome<T>, int, System.Collections.Generic.List<SharpNeat.Neat.Genome.NeatGenome<T>>, SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings, SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationScheme<T>, Redzen.Random.IRandomSource?)
  fullName.vb: SharpNeat.Neat.NeatPopulationFactory(Of T).CreatePopulation(SharpNeat.Neat.Genome.MetaNeatGenome(Of T), Integer, System.Collections.Generic.List(Of SharpNeat.Neat.Genome.NeatGenome(Of T)), SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings, SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationScheme(Of T), Redzen.Random.IRandomSource)
  nameWithType: NeatPopulationFactory<T>.CreatePopulation(MetaNeatGenome<T>, int, List<NeatGenome<T>>, NeatReproductionAsexualSettings, WeightMutationScheme<T>, IRandomSource?)
  nameWithType.vb: NeatPopulationFactory(Of T).CreatePopulation(MetaNeatGenome(Of T), Integer, List(Of NeatGenome(Of T)), NeatReproductionAsexualSettings, WeightMutationScheme(Of T), IRandomSource)
- uid: SharpNeat.Neat.NeatPopulationFactory`1.CreatePopulation*
  name: CreatePopulation
  href: api/SharpNeat.Neat.NeatPopulationFactory-1.html#SharpNeat_Neat_NeatPopulationFactory_1_CreatePopulation_
  commentId: Overload:SharpNeat.Neat.NeatPopulationFactory`1.CreatePopulation
  isSpec: "True"
  fullName: SharpNeat.Neat.NeatPopulationFactory<T>.CreatePopulation
  fullName.vb: SharpNeat.Neat.NeatPopulationFactory(Of T).CreatePopulation
  nameWithType: NeatPopulationFactory<T>.CreatePopulation
  nameWithType.vb: NeatPopulationFactory(Of T).CreatePopulation
- uid: SharpNeat.Neat.NeatPopulationStatistics
  name: NeatPopulationStatistics
  href: api/SharpNeat.Neat.NeatPopulationStatistics.html
  commentId: T:SharpNeat.Neat.NeatPopulationStatistics
  fullName: SharpNeat.Neat.NeatPopulationStatistics
  nameWithType: NeatPopulationStatistics
- uid: SharpNeat.Neat.NeatPopulationStatistics.AverageSpeciesBestFitness
  name: AverageSpeciesBestFitness
  href: api/SharpNeat.Neat.NeatPopulationStatistics.html#SharpNeat_Neat_NeatPopulationStatistics_AverageSpeciesBestFitness
  commentId: P:SharpNeat.Neat.NeatPopulationStatistics.AverageSpeciesBestFitness
  fullName: SharpNeat.Neat.NeatPopulationStatistics.AverageSpeciesBestFitness
  nameWithType: NeatPopulationStatistics.AverageSpeciesBestFitness
- uid: SharpNeat.Neat.NeatPopulationStatistics.AverageSpeciesBestFitness*
  name: AverageSpeciesBestFitness
  href: api/SharpNeat.Neat.NeatPopulationStatistics.html#SharpNeat_Neat_NeatPopulationStatistics_AverageSpeciesBestFitness_
  commentId: Overload:SharpNeat.Neat.NeatPopulationStatistics.AverageSpeciesBestFitness
  isSpec: "True"
  fullName: SharpNeat.Neat.NeatPopulationStatistics.AverageSpeciesBestFitness
  nameWithType: NeatPopulationStatistics.AverageSpeciesBestFitness
- uid: SharpNeat.Neat.NeatPopulationStatistics.BestGenomeSpeciesIdx
  name: BestGenomeSpeciesIdx
  href: api/SharpNeat.Neat.NeatPopulationStatistics.html#SharpNeat_Neat_NeatPopulationStatistics_BestGenomeSpeciesIdx
  commentId: P:SharpNeat.Neat.NeatPopulationStatistics.BestGenomeSpeciesIdx
  fullName: SharpNeat.Neat.NeatPopulationStatistics.BestGenomeSpeciesIdx
  nameWithType: NeatPopulationStatistics.BestGenomeSpeciesIdx
- uid: SharpNeat.Neat.NeatPopulationStatistics.BestGenomeSpeciesIdx*
  name: BestGenomeSpeciesIdx
  href: api/SharpNeat.Neat.NeatPopulationStatistics.html#SharpNeat_Neat_NeatPopulationStatistics_BestGenomeSpeciesIdx_
  commentId: Overload:SharpNeat.Neat.NeatPopulationStatistics.BestGenomeSpeciesIdx
  isSpec: "True"
  fullName: SharpNeat.Neat.NeatPopulationStatistics.BestGenomeSpeciesIdx
  nameWithType: NeatPopulationStatistics.BestGenomeSpeciesIdx
- uid: SharpNeat.Neat.NeatPopulationStatistics.SumSpeciesMeanFitness
  name: SumSpeciesMeanFitness
  href: api/SharpNeat.Neat.NeatPopulationStatistics.html#SharpNeat_Neat_NeatPopulationStatistics_SumSpeciesMeanFitness
  commentId: P:SharpNeat.Neat.NeatPopulationStatistics.SumSpeciesMeanFitness
  fullName: SharpNeat.Neat.NeatPopulationStatistics.SumSpeciesMeanFitness
  nameWithType: NeatPopulationStatistics.SumSpeciesMeanFitness
- uid: SharpNeat.Neat.NeatPopulationStatistics.SumSpeciesMeanFitness*
  name: SumSpeciesMeanFitness
  href: api/SharpNeat.Neat.NeatPopulationStatistics.html#SharpNeat_Neat_NeatPopulationStatistics_SumSpeciesMeanFitness_
  commentId: Overload:SharpNeat.Neat.NeatPopulationStatistics.SumSpeciesMeanFitness
  isSpec: "True"
  fullName: SharpNeat.Neat.NeatPopulationStatistics.SumSpeciesMeanFitness
  nameWithType: NeatPopulationStatistics.SumSpeciesMeanFitness
- uid: SharpNeat.Neat.NeatPopulationStatsTests
  name: NeatPopulationStatsTests
  href: api/SharpNeat.Neat.NeatPopulationStatsTests.html
  commentId: T:SharpNeat.Neat.NeatPopulationStatsTests
  fullName: SharpNeat.Neat.NeatPopulationStatsTests
  nameWithType: NeatPopulationStatsTests
- uid: SharpNeat.Neat.NeatPopulationStatsTests.VerifyNeatPopulationStats
  name: VerifyNeatPopulationStats()
  href: api/SharpNeat.Neat.NeatPopulationStatsTests.html#SharpNeat_Neat_NeatPopulationStatsTests_VerifyNeatPopulationStats
  commentId: M:SharpNeat.Neat.NeatPopulationStatsTests.VerifyNeatPopulationStats
  fullName: SharpNeat.Neat.NeatPopulationStatsTests.VerifyNeatPopulationStats()
  nameWithType: NeatPopulationStatsTests.VerifyNeatPopulationStats()
- uid: SharpNeat.Neat.NeatPopulationStatsTests.VerifyNeatPopulationStats*
  name: VerifyNeatPopulationStats
  href: api/SharpNeat.Neat.NeatPopulationStatsTests.html#SharpNeat_Neat_NeatPopulationStatsTests_VerifyNeatPopulationStats_
  commentId: Overload:SharpNeat.Neat.NeatPopulationStatsTests.VerifyNeatPopulationStats
  isSpec: "True"
  fullName: SharpNeat.Neat.NeatPopulationStatsTests.VerifyNeatPopulationStats
  nameWithType: NeatPopulationStatsTests.VerifyNeatPopulationStats
- uid: SharpNeat.Neat.NeatPopulationStatsTests.VerifyPopulationStats
  name: VerifyPopulationStats()
  href: api/SharpNeat.Neat.NeatPopulationStatsTests.html#SharpNeat_Neat_NeatPopulationStatsTests_VerifyPopulationStats
  commentId: M:SharpNeat.Neat.NeatPopulationStatsTests.VerifyPopulationStats
  fullName: SharpNeat.Neat.NeatPopulationStatsTests.VerifyPopulationStats()
  nameWithType: NeatPopulationStatsTests.VerifyPopulationStats()
- uid: SharpNeat.Neat.NeatPopulationStatsTests.VerifyPopulationStats*
  name: VerifyPopulationStats
  href: api/SharpNeat.Neat.NeatPopulationStatsTests.html#SharpNeat_Neat_NeatPopulationStatsTests_VerifyPopulationStats_
  commentId: Overload:SharpNeat.Neat.NeatPopulationStatsTests.VerifyPopulationStats
  isSpec: "True"
  fullName: SharpNeat.Neat.NeatPopulationStatsTests.VerifyPopulationStats
  nameWithType: NeatPopulationStatsTests.VerifyPopulationStats
- uid: SharpNeat.Neat.NeatPopulationTests
  name: NeatPopulationTests
  href: api/SharpNeat.Neat.NeatPopulationTests.html
  commentId: T:SharpNeat.Neat.NeatPopulationTests
  fullName: SharpNeat.Neat.NeatPopulationTests
  nameWithType: NeatPopulationTests
- uid: SharpNeat.Neat.NeatPopulationTests.CreatePopulation
  name: CreatePopulation()
  href: api/SharpNeat.Neat.NeatPopulationTests.html#SharpNeat_Neat_NeatPopulationTests_CreatePopulation
  commentId: M:SharpNeat.Neat.NeatPopulationTests.CreatePopulation
  fullName: SharpNeat.Neat.NeatPopulationTests.CreatePopulation()
  nameWithType: NeatPopulationTests.CreatePopulation()
- uid: SharpNeat.Neat.NeatPopulationTests.CreatePopulation*
  name: CreatePopulation
  href: api/SharpNeat.Neat.NeatPopulationTests.html#SharpNeat_Neat_NeatPopulationTests_CreatePopulation_
  commentId: Overload:SharpNeat.Neat.NeatPopulationTests.CreatePopulation
  isSpec: "True"
  fullName: SharpNeat.Neat.NeatPopulationTests.CreatePopulation
  nameWithType: NeatPopulationTests.CreatePopulation
- uid: SharpNeat.Neat.NeatPopulationTests.VerifyInitialConnections
  name: VerifyInitialConnections()
  href: api/SharpNeat.Neat.NeatPopulationTests.html#SharpNeat_Neat_NeatPopulationTests_VerifyInitialConnections
  commentId: M:SharpNeat.Neat.NeatPopulationTests.VerifyInitialConnections
  fullName: SharpNeat.Neat.NeatPopulationTests.VerifyInitialConnections()
  nameWithType: NeatPopulationTests.VerifyInitialConnections()
- uid: SharpNeat.Neat.NeatPopulationTests.VerifyInitialConnections*
  name: VerifyInitialConnections
  href: api/SharpNeat.Neat.NeatPopulationTests.html#SharpNeat_Neat_NeatPopulationTests_VerifyInitialConnections_
  commentId: Overload:SharpNeat.Neat.NeatPopulationTests.VerifyInitialConnections
  isSpec: "True"
  fullName: SharpNeat.Neat.NeatPopulationTests.VerifyInitialConnections
  nameWithType: NeatPopulationTests.VerifyInitialConnections
- uid: SharpNeat.Neat.NeatUtils
  name: NeatUtils
  href: api/SharpNeat.Neat.NeatUtils.html
  commentId: T:SharpNeat.Neat.NeatUtils
  fullName: SharpNeat.Neat.NeatUtils
  nameWithType: NeatUtils
- uid: SharpNeat.Neat.NeatUtils.CreateMetaNeatGenome(SharpNeat.Experiments.INeatExperiment{System.Double})
  name: CreateMetaNeatGenome(INeatExperiment<double>)
  href: api/SharpNeat.Neat.NeatUtils.html#SharpNeat_Neat_NeatUtils_CreateMetaNeatGenome_SharpNeat_Experiments_INeatExperiment_System_Double__
  commentId: M:SharpNeat.Neat.NeatUtils.CreateMetaNeatGenome(SharpNeat.Experiments.INeatExperiment{System.Double})
  name.vb: CreateMetaNeatGenome(INeatExperiment(Of Double))
  fullName: SharpNeat.Neat.NeatUtils.CreateMetaNeatGenome(SharpNeat.Experiments.INeatExperiment<double>)
  fullName.vb: SharpNeat.Neat.NeatUtils.CreateMetaNeatGenome(SharpNeat.Experiments.INeatExperiment(Of Double))
  nameWithType: NeatUtils.CreateMetaNeatGenome(INeatExperiment<double>)
  nameWithType.vb: NeatUtils.CreateMetaNeatGenome(INeatExperiment(Of Double))
- uid: SharpNeat.Neat.NeatUtils.CreateMetaNeatGenome*
  name: CreateMetaNeatGenome
  href: api/SharpNeat.Neat.NeatUtils.html#SharpNeat_Neat_NeatUtils_CreateMetaNeatGenome_
  commentId: Overload:SharpNeat.Neat.NeatUtils.CreateMetaNeatGenome
  isSpec: "True"
  fullName: SharpNeat.Neat.NeatUtils.CreateMetaNeatGenome
  nameWithType: NeatUtils.CreateMetaNeatGenome
- uid: SharpNeat.Neat.NeatUtils.CreateNeatEvolutionAlgorithm(SharpNeat.Experiments.INeatExperiment{System.Double},SharpNeat.Neat.NeatPopulation{System.Double})
  name: CreateNeatEvolutionAlgorithm(INeatExperiment<double>, NeatPopulation<double>)
  href: api/SharpNeat.Neat.NeatUtils.html#SharpNeat_Neat_NeatUtils_CreateNeatEvolutionAlgorithm_SharpNeat_Experiments_INeatExperiment_System_Double__SharpNeat_Neat_NeatPopulation_System_Double__
  commentId: M:SharpNeat.Neat.NeatUtils.CreateNeatEvolutionAlgorithm(SharpNeat.Experiments.INeatExperiment{System.Double},SharpNeat.Neat.NeatPopulation{System.Double})
  name.vb: CreateNeatEvolutionAlgorithm(INeatExperiment(Of Double), NeatPopulation(Of Double))
  fullName: SharpNeat.Neat.NeatUtils.CreateNeatEvolutionAlgorithm(SharpNeat.Experiments.INeatExperiment<double>, SharpNeat.Neat.NeatPopulation<double>)
  fullName.vb: SharpNeat.Neat.NeatUtils.CreateNeatEvolutionAlgorithm(SharpNeat.Experiments.INeatExperiment(Of Double), SharpNeat.Neat.NeatPopulation(Of Double))
  nameWithType: NeatUtils.CreateNeatEvolutionAlgorithm(INeatExperiment<double>, NeatPopulation<double>)
  nameWithType.vb: NeatUtils.CreateNeatEvolutionAlgorithm(INeatExperiment(Of Double), NeatPopulation(Of Double))
- uid: SharpNeat.Neat.NeatUtils.CreateNeatEvolutionAlgorithm(SharpNeat.Experiments.INeatExperiment{System.Double})
  name: CreateNeatEvolutionAlgorithm(INeatExperiment<double>)
  href: api/SharpNeat.Neat.NeatUtils.html#SharpNeat_Neat_NeatUtils_CreateNeatEvolutionAlgorithm_SharpNeat_Experiments_INeatExperiment_System_Double__
  commentId: M:SharpNeat.Neat.NeatUtils.CreateNeatEvolutionAlgorithm(SharpNeat.Experiments.INeatExperiment{System.Double})
  name.vb: CreateNeatEvolutionAlgorithm(INeatExperiment(Of Double))
  fullName: SharpNeat.Neat.NeatUtils.CreateNeatEvolutionAlgorithm(SharpNeat.Experiments.INeatExperiment<double>)
  fullName.vb: SharpNeat.Neat.NeatUtils.CreateNeatEvolutionAlgorithm(SharpNeat.Experiments.INeatExperiment(Of Double))
  nameWithType: NeatUtils.CreateNeatEvolutionAlgorithm(INeatExperiment<double>)
  nameWithType.vb: NeatUtils.CreateNeatEvolutionAlgorithm(INeatExperiment(Of Double))
- uid: SharpNeat.Neat.NeatUtils.CreateNeatEvolutionAlgorithm*
  name: CreateNeatEvolutionAlgorithm
  href: api/SharpNeat.Neat.NeatUtils.html#SharpNeat_Neat_NeatUtils_CreateNeatEvolutionAlgorithm_
  commentId: Overload:SharpNeat.Neat.NeatUtils.CreateNeatEvolutionAlgorithm
  isSpec: "True"
  fullName: SharpNeat.Neat.NeatUtils.CreateNeatEvolutionAlgorithm
  nameWithType: NeatUtils.CreateNeatEvolutionAlgorithm
- uid: SharpNeat.Neat.Reproduction.Asexual
  name: SharpNeat.Neat.Reproduction.Asexual
  href: api/SharpNeat.Neat.Reproduction.Asexual.html
  commentId: N:SharpNeat.Neat.Reproduction.Asexual
  fullName: SharpNeat.Neat.Reproduction.Asexual
  nameWithType: SharpNeat.Neat.Reproduction.Asexual
- uid: SharpNeat.Neat.Reproduction.Asexual.MutationType
  name: MutationType
  href: api/SharpNeat.Neat.Reproduction.Asexual.MutationType.html
  commentId: T:SharpNeat.Neat.Reproduction.Asexual.MutationType
  fullName: SharpNeat.Neat.Reproduction.Asexual.MutationType
  nameWithType: MutationType
- uid: SharpNeat.Neat.Reproduction.Asexual.MutationType.AddConnection
  name: AddConnection
  href: api/SharpNeat.Neat.Reproduction.Asexual.MutationType.html#SharpNeat_Neat_Reproduction_Asexual_MutationType_AddConnection
  commentId: F:SharpNeat.Neat.Reproduction.Asexual.MutationType.AddConnection
  fullName: SharpNeat.Neat.Reproduction.Asexual.MutationType.AddConnection
  nameWithType: MutationType.AddConnection
- uid: SharpNeat.Neat.Reproduction.Asexual.MutationType.AddNode
  name: AddNode
  href: api/SharpNeat.Neat.Reproduction.Asexual.MutationType.html#SharpNeat_Neat_Reproduction_Asexual_MutationType_AddNode
  commentId: F:SharpNeat.Neat.Reproduction.Asexual.MutationType.AddNode
  fullName: SharpNeat.Neat.Reproduction.Asexual.MutationType.AddNode
  nameWithType: MutationType.AddNode
- uid: SharpNeat.Neat.Reproduction.Asexual.MutationType.ConnectionWeight
  name: ConnectionWeight
  href: api/SharpNeat.Neat.Reproduction.Asexual.MutationType.html#SharpNeat_Neat_Reproduction_Asexual_MutationType_ConnectionWeight
  commentId: F:SharpNeat.Neat.Reproduction.Asexual.MutationType.ConnectionWeight
  fullName: SharpNeat.Neat.Reproduction.Asexual.MutationType.ConnectionWeight
  nameWithType: MutationType.ConnectionWeight
- uid: SharpNeat.Neat.Reproduction.Asexual.MutationType.DeleteConnection
  name: DeleteConnection
  href: api/SharpNeat.Neat.Reproduction.Asexual.MutationType.html#SharpNeat_Neat_Reproduction_Asexual_MutationType_DeleteConnection
  commentId: F:SharpNeat.Neat.Reproduction.Asexual.MutationType.DeleteConnection
  fullName: SharpNeat.Neat.Reproduction.Asexual.MutationType.DeleteConnection
  nameWithType: MutationType.DeleteConnection
- uid: SharpNeat.Neat.Reproduction.Asexual.MutationTypeDistributions
  name: MutationTypeDistributions
  href: api/SharpNeat.Neat.Reproduction.Asexual.MutationTypeDistributions.html
  commentId: T:SharpNeat.Neat.Reproduction.Asexual.MutationTypeDistributions
  fullName: SharpNeat.Neat.Reproduction.Asexual.MutationTypeDistributions
  nameWithType: MutationTypeDistributions
- uid: SharpNeat.Neat.Reproduction.Asexual.MutationTypeDistributions.#ctor(SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings)
  name: MutationTypeDistributions(NeatReproductionAsexualSettings)
  href: api/SharpNeat.Neat.Reproduction.Asexual.MutationTypeDistributions.html#SharpNeat_Neat_Reproduction_Asexual_MutationTypeDistributions__ctor_SharpNeat_Neat_Reproduction_Asexual_NeatReproductionAsexualSettings_
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.MutationTypeDistributions.#ctor(SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings)
  name.vb: New(NeatReproductionAsexualSettings)
  fullName: SharpNeat.Neat.Reproduction.Asexual.MutationTypeDistributions.MutationTypeDistributions(SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings)
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.MutationTypeDistributions.New(SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings)
  nameWithType: MutationTypeDistributions.MutationTypeDistributions(NeatReproductionAsexualSettings)
  nameWithType.vb: MutationTypeDistributions.New(NeatReproductionAsexualSettings)
- uid: SharpNeat.Neat.Reproduction.Asexual.MutationTypeDistributions.#ctor*
  name: MutationTypeDistributions
  href: api/SharpNeat.Neat.Reproduction.Asexual.MutationTypeDistributions.html#SharpNeat_Neat_Reproduction_Asexual_MutationTypeDistributions__ctor_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.MutationTypeDistributions.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Neat.Reproduction.Asexual.MutationTypeDistributions.MutationTypeDistributions
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.MutationTypeDistributions.New
  nameWithType: MutationTypeDistributions.MutationTypeDistributions
  nameWithType.vb: MutationTypeDistributions.New
- uid: SharpNeat.Neat.Reproduction.Asexual.MutationTypeDistributions.MutationTypeDistribution
  name: MutationTypeDistribution
  href: api/SharpNeat.Neat.Reproduction.Asexual.MutationTypeDistributions.html#SharpNeat_Neat_Reproduction_Asexual_MutationTypeDistributions_MutationTypeDistribution
  commentId: P:SharpNeat.Neat.Reproduction.Asexual.MutationTypeDistributions.MutationTypeDistribution
  fullName: SharpNeat.Neat.Reproduction.Asexual.MutationTypeDistributions.MutationTypeDistribution
  nameWithType: MutationTypeDistributions.MutationTypeDistribution
- uid: SharpNeat.Neat.Reproduction.Asexual.MutationTypeDistributions.MutationTypeDistribution*
  name: MutationTypeDistribution
  href: api/SharpNeat.Neat.Reproduction.Asexual.MutationTypeDistributions.html#SharpNeat_Neat_Reproduction_Asexual_MutationTypeDistributions_MutationTypeDistribution_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.MutationTypeDistributions.MutationTypeDistribution
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Asexual.MutationTypeDistributions.MutationTypeDistribution
  nameWithType: MutationTypeDistributions.MutationTypeDistribution
- uid: SharpNeat.Neat.Reproduction.Asexual.MutationTypeDistributions.MutationTypeDistributionNonDestructive
  name: MutationTypeDistributionNonDestructive
  href: api/SharpNeat.Neat.Reproduction.Asexual.MutationTypeDistributions.html#SharpNeat_Neat_Reproduction_Asexual_MutationTypeDistributions_MutationTypeDistributionNonDestructive
  commentId: P:SharpNeat.Neat.Reproduction.Asexual.MutationTypeDistributions.MutationTypeDistributionNonDestructive
  fullName: SharpNeat.Neat.Reproduction.Asexual.MutationTypeDistributions.MutationTypeDistributionNonDestructive
  nameWithType: MutationTypeDistributions.MutationTypeDistributionNonDestructive
- uid: SharpNeat.Neat.Reproduction.Asexual.MutationTypeDistributions.MutationTypeDistributionNonDestructive*
  name: MutationTypeDistributionNonDestructive
  href: api/SharpNeat.Neat.Reproduction.Asexual.MutationTypeDistributions.html#SharpNeat_Neat_Reproduction_Asexual_MutationTypeDistributions_MutationTypeDistributionNonDestructive_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.MutationTypeDistributions.MutationTypeDistributionNonDestructive
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Asexual.MutationTypeDistributions.MutationTypeDistributionNonDestructive
  nameWithType: MutationTypeDistributions.MutationTypeDistributionNonDestructive
- uid: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexual`1
  name: NeatReproductionAsexual<T>
  href: api/SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexual-1.html
  commentId: T:SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexual`1
  name.vb: NeatReproductionAsexual(Of T)
  fullName: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexual<T>
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexual(Of T)
  nameWithType: NeatReproductionAsexual<T>
  nameWithType.vb: NeatReproductionAsexual(Of T)
- uid: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexual`1.#ctor(SharpNeat.Neat.Genome.MetaNeatGenome{`0},SharpNeat.Neat.Genome.INeatGenomeBuilder{`0},Redzen.Structures.Int32Sequence,Redzen.Structures.Int32Sequence,Redzen.Structures.Int32Sequence,SharpNeat.Neat.AddedNodeBuffer,SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings,SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationScheme{`0})
  name: NeatReproductionAsexual(MetaNeatGenome<T>, INeatGenomeBuilder<T>, Int32Sequence, Int32Sequence, Int32Sequence, AddedNodeBuffer, NeatReproductionAsexualSettings, WeightMutationScheme<T>)
  href: api/SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexual-1.html#SharpNeat_Neat_Reproduction_Asexual_NeatReproductionAsexual_1__ctor_SharpNeat_Neat_Genome_MetaNeatGenome__0__SharpNeat_Neat_Genome_INeatGenomeBuilder__0__Redzen_Structures_Int32Sequence_Redzen_Structures_Int32Sequence_Redzen_Structures_Int32Sequence_SharpNeat_Neat_AddedNodeBuffer_SharpNeat_Neat_Reproduction_Asexual_NeatReproductionAsexualSettings_SharpNeat_Neat_Reproduction_Asexual_WeightMutation_WeightMutationScheme__0__
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexual`1.#ctor(SharpNeat.Neat.Genome.MetaNeatGenome{`0},SharpNeat.Neat.Genome.INeatGenomeBuilder{`0},Redzen.Structures.Int32Sequence,Redzen.Structures.Int32Sequence,Redzen.Structures.Int32Sequence,SharpNeat.Neat.AddedNodeBuffer,SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings,SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationScheme{`0})
  name.vb: New(MetaNeatGenome(Of T), INeatGenomeBuilder(Of T), Int32Sequence, Int32Sequence, Int32Sequence, AddedNodeBuffer, NeatReproductionAsexualSettings, WeightMutationScheme(Of T))
  fullName: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexual<T>.NeatReproductionAsexual(SharpNeat.Neat.Genome.MetaNeatGenome<T>, SharpNeat.Neat.Genome.INeatGenomeBuilder<T>, Redzen.Structures.Int32Sequence, Redzen.Structures.Int32Sequence, Redzen.Structures.Int32Sequence, SharpNeat.Neat.AddedNodeBuffer, SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings, SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationScheme<T>)
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexual(Of T).New(SharpNeat.Neat.Genome.MetaNeatGenome(Of T), SharpNeat.Neat.Genome.INeatGenomeBuilder(Of T), Redzen.Structures.Int32Sequence, Redzen.Structures.Int32Sequence, Redzen.Structures.Int32Sequence, SharpNeat.Neat.AddedNodeBuffer, SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings, SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationScheme(Of T))
  nameWithType: NeatReproductionAsexual<T>.NeatReproductionAsexual(MetaNeatGenome<T>, INeatGenomeBuilder<T>, Int32Sequence, Int32Sequence, Int32Sequence, AddedNodeBuffer, NeatReproductionAsexualSettings, WeightMutationScheme<T>)
  nameWithType.vb: NeatReproductionAsexual(Of T).New(MetaNeatGenome(Of T), INeatGenomeBuilder(Of T), Int32Sequence, Int32Sequence, Int32Sequence, AddedNodeBuffer, NeatReproductionAsexualSettings, WeightMutationScheme(Of T))
- uid: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexual`1.#ctor*
  name: NeatReproductionAsexual
  href: api/SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexual-1.html#SharpNeat_Neat_Reproduction_Asexual_NeatReproductionAsexual_1__ctor_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexual`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexual<T>.NeatReproductionAsexual
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexual(Of T).New
  nameWithType: NeatReproductionAsexual<T>.NeatReproductionAsexual
  nameWithType.vb: NeatReproductionAsexual(Of T).New
- uid: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexual`1.CreateChildGenome(SharpNeat.Neat.Genome.NeatGenome{`0},Redzen.Random.IRandomSource)
  name: CreateChildGenome(NeatGenome<T>, IRandomSource)
  href: api/SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexual-1.html#SharpNeat_Neat_Reproduction_Asexual_NeatReproductionAsexual_1_CreateChildGenome_SharpNeat_Neat_Genome_NeatGenome__0__Redzen_Random_IRandomSource_
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexual`1.CreateChildGenome(SharpNeat.Neat.Genome.NeatGenome{`0},Redzen.Random.IRandomSource)
  name.vb: CreateChildGenome(NeatGenome(Of T), IRandomSource)
  fullName: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexual<T>.CreateChildGenome(SharpNeat.Neat.Genome.NeatGenome<T>, Redzen.Random.IRandomSource)
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexual(Of T).CreateChildGenome(SharpNeat.Neat.Genome.NeatGenome(Of T), Redzen.Random.IRandomSource)
  nameWithType: NeatReproductionAsexual<T>.CreateChildGenome(NeatGenome<T>, IRandomSource)
  nameWithType.vb: NeatReproductionAsexual(Of T).CreateChildGenome(NeatGenome(Of T), IRandomSource)
- uid: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexual`1.CreateChildGenome*
  name: CreateChildGenome
  href: api/SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexual-1.html#SharpNeat_Neat_Reproduction_Asexual_NeatReproductionAsexual_1_CreateChildGenome_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexual`1.CreateChildGenome
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexual<T>.CreateChildGenome
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexual(Of T).CreateChildGenome
  nameWithType: NeatReproductionAsexual<T>.CreateChildGenome
  nameWithType.vb: NeatReproductionAsexual(Of T).CreateChildGenome
- uid: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexual`1.NotifyComplexityRegulationMode(SharpNeat.Neat.ComplexityRegulation.ComplexityRegulationMode)
  name: NotifyComplexityRegulationMode(ComplexityRegulationMode)
  href: api/SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexual-1.html#SharpNeat_Neat_Reproduction_Asexual_NeatReproductionAsexual_1_NotifyComplexityRegulationMode_SharpNeat_Neat_ComplexityRegulation_ComplexityRegulationMode_
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexual`1.NotifyComplexityRegulationMode(SharpNeat.Neat.ComplexityRegulation.ComplexityRegulationMode)
  fullName: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexual<T>.NotifyComplexityRegulationMode(SharpNeat.Neat.ComplexityRegulation.ComplexityRegulationMode)
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexual(Of T).NotifyComplexityRegulationMode(SharpNeat.Neat.ComplexityRegulation.ComplexityRegulationMode)
  nameWithType: NeatReproductionAsexual<T>.NotifyComplexityRegulationMode(ComplexityRegulationMode)
  nameWithType.vb: NeatReproductionAsexual(Of T).NotifyComplexityRegulationMode(ComplexityRegulationMode)
- uid: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexual`1.NotifyComplexityRegulationMode*
  name: NotifyComplexityRegulationMode
  href: api/SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexual-1.html#SharpNeat_Neat_Reproduction_Asexual_NeatReproductionAsexual_1_NotifyComplexityRegulationMode_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexual`1.NotifyComplexityRegulationMode
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexual<T>.NotifyComplexityRegulationMode
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexual(Of T).NotifyComplexityRegulationMode
  nameWithType: NeatReproductionAsexual<T>.NotifyComplexityRegulationMode
  nameWithType.vb: NeatReproductionAsexual(Of T).NotifyComplexityRegulationMode
- uid: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings
  name: NeatReproductionAsexualSettings
  href: api/SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.html
  commentId: T:SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings
  fullName: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings
  nameWithType: NeatReproductionAsexualSettings
- uid: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.#ctor
  name: NeatReproductionAsexualSettings()
  href: api/SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.html#SharpNeat_Neat_Reproduction_Asexual_NeatReproductionAsexualSettings__ctor
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.#ctor
  name.vb: New()
  fullName: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.NeatReproductionAsexualSettings()
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.New()
  nameWithType: NeatReproductionAsexualSettings.NeatReproductionAsexualSettings()
  nameWithType.vb: NeatReproductionAsexualSettings.New()
- uid: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.#ctor(SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings)
  name: NeatReproductionAsexualSettings(NeatReproductionAsexualSettings)
  href: api/SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.html#SharpNeat_Neat_Reproduction_Asexual_NeatReproductionAsexualSettings__ctor_SharpNeat_Neat_Reproduction_Asexual_NeatReproductionAsexualSettings_
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.#ctor(SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings)
  name.vb: New(NeatReproductionAsexualSettings)
  fullName: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.NeatReproductionAsexualSettings(SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings)
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.New(SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings)
  nameWithType: NeatReproductionAsexualSettings.NeatReproductionAsexualSettings(NeatReproductionAsexualSettings)
  nameWithType.vb: NeatReproductionAsexualSettings.New(NeatReproductionAsexualSettings)
- uid: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.#ctor*
  name: NeatReproductionAsexualSettings
  href: api/SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.html#SharpNeat_Neat_Reproduction_Asexual_NeatReproductionAsexualSettings__ctor_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.NeatReproductionAsexualSettings
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.New
  nameWithType: NeatReproductionAsexualSettings.NeatReproductionAsexualSettings
  nameWithType.vb: NeatReproductionAsexualSettings.New
- uid: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.AddConnectionMutationProbability
  name: AddConnectionMutationProbability
  href: api/SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.html#SharpNeat_Neat_Reproduction_Asexual_NeatReproductionAsexualSettings_AddConnectionMutationProbability
  commentId: P:SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.AddConnectionMutationProbability
  fullName: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.AddConnectionMutationProbability
  nameWithType: NeatReproductionAsexualSettings.AddConnectionMutationProbability
- uid: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.AddConnectionMutationProbability*
  name: AddConnectionMutationProbability
  href: api/SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.html#SharpNeat_Neat_Reproduction_Asexual_NeatReproductionAsexualSettings_AddConnectionMutationProbability_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.AddConnectionMutationProbability
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.AddConnectionMutationProbability
  nameWithType: NeatReproductionAsexualSettings.AddConnectionMutationProbability
- uid: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.AddNodeMutationProbability
  name: AddNodeMutationProbability
  href: api/SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.html#SharpNeat_Neat_Reproduction_Asexual_NeatReproductionAsexualSettings_AddNodeMutationProbability
  commentId: P:SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.AddNodeMutationProbability
  fullName: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.AddNodeMutationProbability
  nameWithType: NeatReproductionAsexualSettings.AddNodeMutationProbability
- uid: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.AddNodeMutationProbability*
  name: AddNodeMutationProbability
  href: api/SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.html#SharpNeat_Neat_Reproduction_Asexual_NeatReproductionAsexualSettings_AddNodeMutationProbability_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.AddNodeMutationProbability
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.AddNodeMutationProbability
  nameWithType: NeatReproductionAsexualSettings.AddNodeMutationProbability
- uid: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.ConnectionWeightMutationProbability
  name: ConnectionWeightMutationProbability
  href: api/SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.html#SharpNeat_Neat_Reproduction_Asexual_NeatReproductionAsexualSettings_ConnectionWeightMutationProbability
  commentId: P:SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.ConnectionWeightMutationProbability
  fullName: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.ConnectionWeightMutationProbability
  nameWithType: NeatReproductionAsexualSettings.ConnectionWeightMutationProbability
- uid: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.ConnectionWeightMutationProbability*
  name: ConnectionWeightMutationProbability
  href: api/SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.html#SharpNeat_Neat_Reproduction_Asexual_NeatReproductionAsexualSettings_ConnectionWeightMutationProbability_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.ConnectionWeightMutationProbability
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.ConnectionWeightMutationProbability
  nameWithType: NeatReproductionAsexualSettings.ConnectionWeightMutationProbability
- uid: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.CreateSimplifyingSettings
  name: CreateSimplifyingSettings()
  href: api/SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.html#SharpNeat_Neat_Reproduction_Asexual_NeatReproductionAsexualSettings_CreateSimplifyingSettings
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.CreateSimplifyingSettings
  fullName: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.CreateSimplifyingSettings()
  nameWithType: NeatReproductionAsexualSettings.CreateSimplifyingSettings()
- uid: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.CreateSimplifyingSettings*
  name: CreateSimplifyingSettings
  href: api/SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.html#SharpNeat_Neat_Reproduction_Asexual_NeatReproductionAsexualSettings_CreateSimplifyingSettings_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.CreateSimplifyingSettings
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.CreateSimplifyingSettings
  nameWithType: NeatReproductionAsexualSettings.CreateSimplifyingSettings
- uid: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.DeleteConnectionMutationProbability
  name: DeleteConnectionMutationProbability
  href: api/SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.html#SharpNeat_Neat_Reproduction_Asexual_NeatReproductionAsexualSettings_DeleteConnectionMutationProbability
  commentId: P:SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.DeleteConnectionMutationProbability
  fullName: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.DeleteConnectionMutationProbability
  nameWithType: NeatReproductionAsexualSettings.DeleteConnectionMutationProbability
- uid: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.DeleteConnectionMutationProbability*
  name: DeleteConnectionMutationProbability
  href: api/SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.html#SharpNeat_Neat_Reproduction_Asexual_NeatReproductionAsexualSettings_DeleteConnectionMutationProbability_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.DeleteConnectionMutationProbability
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.DeleteConnectionMutationProbability
  nameWithType: NeatReproductionAsexualSettings.DeleteConnectionMutationProbability
- uid: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.Validate
  name: Validate()
  href: api/SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.html#SharpNeat_Neat_Reproduction_Asexual_NeatReproductionAsexualSettings_Validate
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.Validate
  fullName: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.Validate()
  nameWithType: NeatReproductionAsexualSettings.Validate()
- uid: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.Validate*
  name: Validate
  href: api/SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.html#SharpNeat_Neat_Reproduction_Asexual_NeatReproductionAsexualSettings_Validate_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.Validate
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Asexual.NeatReproductionAsexualSettings.Validate
  nameWithType: NeatReproductionAsexualSettings.Validate
- uid: SharpNeat.Neat.Reproduction.Asexual.Strategy
  name: SharpNeat.Neat.Reproduction.Asexual.Strategy
  href: api/SharpNeat.Neat.Reproduction.Asexual.Strategy.html
  commentId: N:SharpNeat.Neat.Reproduction.Asexual.Strategy
  fullName: SharpNeat.Neat.Reproduction.Asexual.Strategy
  nameWithType: SharpNeat.Neat.Reproduction.Asexual.Strategy
- uid: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddAcyclicConnectionStrategy`1
  name: AddAcyclicConnectionStrategy<T>
  href: api/SharpNeat.Neat.Reproduction.Asexual.Strategy.AddAcyclicConnectionStrategy-1.html
  commentId: T:SharpNeat.Neat.Reproduction.Asexual.Strategy.AddAcyclicConnectionStrategy`1
  name.vb: AddAcyclicConnectionStrategy(Of T)
  fullName: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddAcyclicConnectionStrategy<T>
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddAcyclicConnectionStrategy(Of T)
  nameWithType: AddAcyclicConnectionStrategy<T>
  nameWithType.vb: AddAcyclicConnectionStrategy(Of T)
- uid: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddAcyclicConnectionStrategy`1.#ctor(SharpNeat.Neat.Genome.MetaNeatGenome{`0},SharpNeat.Neat.Genome.INeatGenomeBuilder{`0},Redzen.Structures.Int32Sequence,Redzen.Structures.Int32Sequence)
  name: AddAcyclicConnectionStrategy(MetaNeatGenome<T>, INeatGenomeBuilder<T>, Int32Sequence, Int32Sequence)
  href: api/SharpNeat.Neat.Reproduction.Asexual.Strategy.AddAcyclicConnectionStrategy-1.html#SharpNeat_Neat_Reproduction_Asexual_Strategy_AddAcyclicConnectionStrategy_1__ctor_SharpNeat_Neat_Genome_MetaNeatGenome__0__SharpNeat_Neat_Genome_INeatGenomeBuilder__0__Redzen_Structures_Int32Sequence_Redzen_Structures_Int32Sequence_
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.Strategy.AddAcyclicConnectionStrategy`1.#ctor(SharpNeat.Neat.Genome.MetaNeatGenome{`0},SharpNeat.Neat.Genome.INeatGenomeBuilder{`0},Redzen.Structures.Int32Sequence,Redzen.Structures.Int32Sequence)
  name.vb: New(MetaNeatGenome(Of T), INeatGenomeBuilder(Of T), Int32Sequence, Int32Sequence)
  fullName: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddAcyclicConnectionStrategy<T>.AddAcyclicConnectionStrategy(SharpNeat.Neat.Genome.MetaNeatGenome<T>, SharpNeat.Neat.Genome.INeatGenomeBuilder<T>, Redzen.Structures.Int32Sequence, Redzen.Structures.Int32Sequence)
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddAcyclicConnectionStrategy(Of T).New(SharpNeat.Neat.Genome.MetaNeatGenome(Of T), SharpNeat.Neat.Genome.INeatGenomeBuilder(Of T), Redzen.Structures.Int32Sequence, Redzen.Structures.Int32Sequence)
  nameWithType: AddAcyclicConnectionStrategy<T>.AddAcyclicConnectionStrategy(MetaNeatGenome<T>, INeatGenomeBuilder<T>, Int32Sequence, Int32Sequence)
  nameWithType.vb: AddAcyclicConnectionStrategy(Of T).New(MetaNeatGenome(Of T), INeatGenomeBuilder(Of T), Int32Sequence, Int32Sequence)
- uid: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddAcyclicConnectionStrategy`1.#ctor*
  name: AddAcyclicConnectionStrategy
  href: api/SharpNeat.Neat.Reproduction.Asexual.Strategy.AddAcyclicConnectionStrategy-1.html#SharpNeat_Neat_Reproduction_Asexual_Strategy_AddAcyclicConnectionStrategy_1__ctor_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.Strategy.AddAcyclicConnectionStrategy`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddAcyclicConnectionStrategy<T>.AddAcyclicConnectionStrategy
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddAcyclicConnectionStrategy(Of T).New
  nameWithType: AddAcyclicConnectionStrategy<T>.AddAcyclicConnectionStrategy
  nameWithType.vb: AddAcyclicConnectionStrategy(Of T).New
- uid: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddAcyclicConnectionStrategy`1.CreateChildGenome(SharpNeat.Neat.Genome.NeatGenome{`0},Redzen.Random.IRandomSource)
  name: CreateChildGenome(NeatGenome<T>, IRandomSource)
  href: api/SharpNeat.Neat.Reproduction.Asexual.Strategy.AddAcyclicConnectionStrategy-1.html#SharpNeat_Neat_Reproduction_Asexual_Strategy_AddAcyclicConnectionStrategy_1_CreateChildGenome_SharpNeat_Neat_Genome_NeatGenome__0__Redzen_Random_IRandomSource_
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.Strategy.AddAcyclicConnectionStrategy`1.CreateChildGenome(SharpNeat.Neat.Genome.NeatGenome{`0},Redzen.Random.IRandomSource)
  name.vb: CreateChildGenome(NeatGenome(Of T), IRandomSource)
  fullName: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddAcyclicConnectionStrategy<T>.CreateChildGenome(SharpNeat.Neat.Genome.NeatGenome<T>, Redzen.Random.IRandomSource)
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddAcyclicConnectionStrategy(Of T).CreateChildGenome(SharpNeat.Neat.Genome.NeatGenome(Of T), Redzen.Random.IRandomSource)
  nameWithType: AddAcyclicConnectionStrategy<T>.CreateChildGenome(NeatGenome<T>, IRandomSource)
  nameWithType.vb: AddAcyclicConnectionStrategy(Of T).CreateChildGenome(NeatGenome(Of T), IRandomSource)
- uid: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddAcyclicConnectionStrategy`1.CreateChildGenome*
  name: CreateChildGenome
  href: api/SharpNeat.Neat.Reproduction.Asexual.Strategy.AddAcyclicConnectionStrategy-1.html#SharpNeat_Neat_Reproduction_Asexual_Strategy_AddAcyclicConnectionStrategy_1_CreateChildGenome_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.Strategy.AddAcyclicConnectionStrategy`1.CreateChildGenome
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddAcyclicConnectionStrategy<T>.CreateChildGenome
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddAcyclicConnectionStrategy(Of T).CreateChildGenome
  nameWithType: AddAcyclicConnectionStrategy<T>.CreateChildGenome
  nameWithType.vb: AddAcyclicConnectionStrategy(Of T).CreateChildGenome
- uid: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddAcyclicConnectionStrategyTests
  name: AddAcyclicConnectionStrategyTests
  href: api/SharpNeat.Neat.Reproduction.Asexual.Strategy.AddAcyclicConnectionStrategyTests.html
  commentId: T:SharpNeat.Neat.Reproduction.Asexual.Strategy.AddAcyclicConnectionStrategyTests
  fullName: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddAcyclicConnectionStrategyTests
  nameWithType: AddAcyclicConnectionStrategyTests
- uid: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddAcyclicConnectionStrategyTests.AddAcyclicConnection
  name: AddAcyclicConnection()
  href: api/SharpNeat.Neat.Reproduction.Asexual.Strategy.AddAcyclicConnectionStrategyTests.html#SharpNeat_Neat_Reproduction_Asexual_Strategy_AddAcyclicConnectionStrategyTests_AddAcyclicConnection
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.Strategy.AddAcyclicConnectionStrategyTests.AddAcyclicConnection
  fullName: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddAcyclicConnectionStrategyTests.AddAcyclicConnection()
  nameWithType: AddAcyclicConnectionStrategyTests.AddAcyclicConnection()
- uid: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddAcyclicConnectionStrategyTests.AddAcyclicConnection_CumulativeAdditions
  name: AddAcyclicConnection_CumulativeAdditions()
  href: api/SharpNeat.Neat.Reproduction.Asexual.Strategy.AddAcyclicConnectionStrategyTests.html#SharpNeat_Neat_Reproduction_Asexual_Strategy_AddAcyclicConnectionStrategyTests_AddAcyclicConnection_CumulativeAdditions
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.Strategy.AddAcyclicConnectionStrategyTests.AddAcyclicConnection_CumulativeAdditions
  fullName: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddAcyclicConnectionStrategyTests.AddAcyclicConnection_CumulativeAdditions()
  nameWithType: AddAcyclicConnectionStrategyTests.AddAcyclicConnection_CumulativeAdditions()
- uid: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddAcyclicConnectionStrategyTests.AddAcyclicConnection_CumulativeAdditions*
  name: AddAcyclicConnection_CumulativeAdditions
  href: api/SharpNeat.Neat.Reproduction.Asexual.Strategy.AddAcyclicConnectionStrategyTests.html#SharpNeat_Neat_Reproduction_Asexual_Strategy_AddAcyclicConnectionStrategyTests_AddAcyclicConnection_CumulativeAdditions_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.Strategy.AddAcyclicConnectionStrategyTests.AddAcyclicConnection_CumulativeAdditions
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddAcyclicConnectionStrategyTests.AddAcyclicConnection_CumulativeAdditions
  nameWithType: AddAcyclicConnectionStrategyTests.AddAcyclicConnection_CumulativeAdditions
- uid: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddAcyclicConnectionStrategyTests.AddAcyclicConnection*
  name: AddAcyclicConnection
  href: api/SharpNeat.Neat.Reproduction.Asexual.Strategy.AddAcyclicConnectionStrategyTests.html#SharpNeat_Neat_Reproduction_Asexual_Strategy_AddAcyclicConnectionStrategyTests_AddAcyclicConnection_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.Strategy.AddAcyclicConnectionStrategyTests.AddAcyclicConnection
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddAcyclicConnectionStrategyTests.AddAcyclicConnection
  nameWithType: AddAcyclicConnectionStrategyTests.AddAcyclicConnection
- uid: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddCyclicConnectionStrategy`1
  name: AddCyclicConnectionStrategy<T>
  href: api/SharpNeat.Neat.Reproduction.Asexual.Strategy.AddCyclicConnectionStrategy-1.html
  commentId: T:SharpNeat.Neat.Reproduction.Asexual.Strategy.AddCyclicConnectionStrategy`1
  name.vb: AddCyclicConnectionStrategy(Of T)
  fullName: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddCyclicConnectionStrategy<T>
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddCyclicConnectionStrategy(Of T)
  nameWithType: AddCyclicConnectionStrategy<T>
  nameWithType.vb: AddCyclicConnectionStrategy(Of T)
- uid: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddCyclicConnectionStrategy`1.#ctor(SharpNeat.Neat.Genome.MetaNeatGenome{`0},SharpNeat.Neat.Genome.INeatGenomeBuilder{`0},Redzen.Structures.Int32Sequence,Redzen.Structures.Int32Sequence)
  name: AddCyclicConnectionStrategy(MetaNeatGenome<T>, INeatGenomeBuilder<T>, Int32Sequence, Int32Sequence)
  href: api/SharpNeat.Neat.Reproduction.Asexual.Strategy.AddCyclicConnectionStrategy-1.html#SharpNeat_Neat_Reproduction_Asexual_Strategy_AddCyclicConnectionStrategy_1__ctor_SharpNeat_Neat_Genome_MetaNeatGenome__0__SharpNeat_Neat_Genome_INeatGenomeBuilder__0__Redzen_Structures_Int32Sequence_Redzen_Structures_Int32Sequence_
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.Strategy.AddCyclicConnectionStrategy`1.#ctor(SharpNeat.Neat.Genome.MetaNeatGenome{`0},SharpNeat.Neat.Genome.INeatGenomeBuilder{`0},Redzen.Structures.Int32Sequence,Redzen.Structures.Int32Sequence)
  name.vb: New(MetaNeatGenome(Of T), INeatGenomeBuilder(Of T), Int32Sequence, Int32Sequence)
  fullName: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddCyclicConnectionStrategy<T>.AddCyclicConnectionStrategy(SharpNeat.Neat.Genome.MetaNeatGenome<T>, SharpNeat.Neat.Genome.INeatGenomeBuilder<T>, Redzen.Structures.Int32Sequence, Redzen.Structures.Int32Sequence)
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddCyclicConnectionStrategy(Of T).New(SharpNeat.Neat.Genome.MetaNeatGenome(Of T), SharpNeat.Neat.Genome.INeatGenomeBuilder(Of T), Redzen.Structures.Int32Sequence, Redzen.Structures.Int32Sequence)
  nameWithType: AddCyclicConnectionStrategy<T>.AddCyclicConnectionStrategy(MetaNeatGenome<T>, INeatGenomeBuilder<T>, Int32Sequence, Int32Sequence)
  nameWithType.vb: AddCyclicConnectionStrategy(Of T).New(MetaNeatGenome(Of T), INeatGenomeBuilder(Of T), Int32Sequence, Int32Sequence)
- uid: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddCyclicConnectionStrategy`1.#ctor*
  name: AddCyclicConnectionStrategy
  href: api/SharpNeat.Neat.Reproduction.Asexual.Strategy.AddCyclicConnectionStrategy-1.html#SharpNeat_Neat_Reproduction_Asexual_Strategy_AddCyclicConnectionStrategy_1__ctor_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.Strategy.AddCyclicConnectionStrategy`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddCyclicConnectionStrategy<T>.AddCyclicConnectionStrategy
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddCyclicConnectionStrategy(Of T).New
  nameWithType: AddCyclicConnectionStrategy<T>.AddCyclicConnectionStrategy
  nameWithType.vb: AddCyclicConnectionStrategy(Of T).New
- uid: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddCyclicConnectionStrategy`1.CreateChildGenome(SharpNeat.Neat.Genome.NeatGenome{`0},Redzen.Random.IRandomSource)
  name: CreateChildGenome(NeatGenome<T>, IRandomSource)
  href: api/SharpNeat.Neat.Reproduction.Asexual.Strategy.AddCyclicConnectionStrategy-1.html#SharpNeat_Neat_Reproduction_Asexual_Strategy_AddCyclicConnectionStrategy_1_CreateChildGenome_SharpNeat_Neat_Genome_NeatGenome__0__Redzen_Random_IRandomSource_
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.Strategy.AddCyclicConnectionStrategy`1.CreateChildGenome(SharpNeat.Neat.Genome.NeatGenome{`0},Redzen.Random.IRandomSource)
  name.vb: CreateChildGenome(NeatGenome(Of T), IRandomSource)
  fullName: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddCyclicConnectionStrategy<T>.CreateChildGenome(SharpNeat.Neat.Genome.NeatGenome<T>, Redzen.Random.IRandomSource)
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddCyclicConnectionStrategy(Of T).CreateChildGenome(SharpNeat.Neat.Genome.NeatGenome(Of T), Redzen.Random.IRandomSource)
  nameWithType: AddCyclicConnectionStrategy<T>.CreateChildGenome(NeatGenome<T>, IRandomSource)
  nameWithType.vb: AddCyclicConnectionStrategy(Of T).CreateChildGenome(NeatGenome(Of T), IRandomSource)
- uid: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddCyclicConnectionStrategy`1.CreateChildGenome*
  name: CreateChildGenome
  href: api/SharpNeat.Neat.Reproduction.Asexual.Strategy.AddCyclicConnectionStrategy-1.html#SharpNeat_Neat_Reproduction_Asexual_Strategy_AddCyclicConnectionStrategy_1_CreateChildGenome_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.Strategy.AddCyclicConnectionStrategy`1.CreateChildGenome
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddCyclicConnectionStrategy<T>.CreateChildGenome
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddCyclicConnectionStrategy(Of T).CreateChildGenome
  nameWithType: AddCyclicConnectionStrategy<T>.CreateChildGenome
  nameWithType.vb: AddCyclicConnectionStrategy(Of T).CreateChildGenome
- uid: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddCyclicConnectionStrategyTests
  name: AddCyclicConnectionStrategyTests
  href: api/SharpNeat.Neat.Reproduction.Asexual.Strategy.AddCyclicConnectionStrategyTests.html
  commentId: T:SharpNeat.Neat.Reproduction.Asexual.Strategy.AddCyclicConnectionStrategyTests
  fullName: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddCyclicConnectionStrategyTests
  nameWithType: AddCyclicConnectionStrategyTests
- uid: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddCyclicConnectionStrategyTests.AddCyclicConnection
  name: AddCyclicConnection()
  href: api/SharpNeat.Neat.Reproduction.Asexual.Strategy.AddCyclicConnectionStrategyTests.html#SharpNeat_Neat_Reproduction_Asexual_Strategy_AddCyclicConnectionStrategyTests_AddCyclicConnection
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.Strategy.AddCyclicConnectionStrategyTests.AddCyclicConnection
  fullName: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddCyclicConnectionStrategyTests.AddCyclicConnection()
  nameWithType: AddCyclicConnectionStrategyTests.AddCyclicConnection()
- uid: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddCyclicConnectionStrategyTests.AddCyclicConnection*
  name: AddCyclicConnection
  href: api/SharpNeat.Neat.Reproduction.Asexual.Strategy.AddCyclicConnectionStrategyTests.html#SharpNeat_Neat_Reproduction_Asexual_Strategy_AddCyclicConnectionStrategyTests_AddCyclicConnection_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.Strategy.AddCyclicConnectionStrategyTests.AddCyclicConnection
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddCyclicConnectionStrategyTests.AddCyclicConnection
  nameWithType: AddCyclicConnectionStrategyTests.AddCyclicConnection
- uid: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategy`1
  name: AddNodeStrategy<T>
  href: api/SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategy-1.html
  commentId: T:SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategy`1
  name.vb: AddNodeStrategy(Of T)
  fullName: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategy<T>
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategy(Of T)
  nameWithType: AddNodeStrategy<T>
  nameWithType.vb: AddNodeStrategy(Of T)
- uid: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategy`1.#ctor(SharpNeat.Neat.Genome.MetaNeatGenome{`0},SharpNeat.Neat.Genome.INeatGenomeBuilder{`0},Redzen.Structures.Int32Sequence,Redzen.Structures.Int32Sequence,Redzen.Structures.Int32Sequence,SharpNeat.Neat.AddedNodeBuffer)
  name: AddNodeStrategy(MetaNeatGenome<T>, INeatGenomeBuilder<T>, Int32Sequence, Int32Sequence, Int32Sequence, AddedNodeBuffer)
  href: api/SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategy-1.html#SharpNeat_Neat_Reproduction_Asexual_Strategy_AddNodeStrategy_1__ctor_SharpNeat_Neat_Genome_MetaNeatGenome__0__SharpNeat_Neat_Genome_INeatGenomeBuilder__0__Redzen_Structures_Int32Sequence_Redzen_Structures_Int32Sequence_Redzen_Structures_Int32Sequence_SharpNeat_Neat_AddedNodeBuffer_
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategy`1.#ctor(SharpNeat.Neat.Genome.MetaNeatGenome{`0},SharpNeat.Neat.Genome.INeatGenomeBuilder{`0},Redzen.Structures.Int32Sequence,Redzen.Structures.Int32Sequence,Redzen.Structures.Int32Sequence,SharpNeat.Neat.AddedNodeBuffer)
  name.vb: New(MetaNeatGenome(Of T), INeatGenomeBuilder(Of T), Int32Sequence, Int32Sequence, Int32Sequence, AddedNodeBuffer)
  fullName: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategy<T>.AddNodeStrategy(SharpNeat.Neat.Genome.MetaNeatGenome<T>, SharpNeat.Neat.Genome.INeatGenomeBuilder<T>, Redzen.Structures.Int32Sequence, Redzen.Structures.Int32Sequence, Redzen.Structures.Int32Sequence, SharpNeat.Neat.AddedNodeBuffer)
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategy(Of T).New(SharpNeat.Neat.Genome.MetaNeatGenome(Of T), SharpNeat.Neat.Genome.INeatGenomeBuilder(Of T), Redzen.Structures.Int32Sequence, Redzen.Structures.Int32Sequence, Redzen.Structures.Int32Sequence, SharpNeat.Neat.AddedNodeBuffer)
  nameWithType: AddNodeStrategy<T>.AddNodeStrategy(MetaNeatGenome<T>, INeatGenomeBuilder<T>, Int32Sequence, Int32Sequence, Int32Sequence, AddedNodeBuffer)
  nameWithType.vb: AddNodeStrategy(Of T).New(MetaNeatGenome(Of T), INeatGenomeBuilder(Of T), Int32Sequence, Int32Sequence, Int32Sequence, AddedNodeBuffer)
- uid: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategy`1.#ctor*
  name: AddNodeStrategy
  href: api/SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategy-1.html#SharpNeat_Neat_Reproduction_Asexual_Strategy_AddNodeStrategy_1__ctor_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategy`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategy<T>.AddNodeStrategy
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategy(Of T).New
  nameWithType: AddNodeStrategy<T>.AddNodeStrategy
  nameWithType.vb: AddNodeStrategy(Of T).New
- uid: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategy`1.CreateChildGenome(SharpNeat.Neat.Genome.NeatGenome{`0},Redzen.Random.IRandomSource)
  name: CreateChildGenome(NeatGenome<T>, IRandomSource)
  href: api/SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategy-1.html#SharpNeat_Neat_Reproduction_Asexual_Strategy_AddNodeStrategy_1_CreateChildGenome_SharpNeat_Neat_Genome_NeatGenome__0__Redzen_Random_IRandomSource_
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategy`1.CreateChildGenome(SharpNeat.Neat.Genome.NeatGenome{`0},Redzen.Random.IRandomSource)
  name.vb: CreateChildGenome(NeatGenome(Of T), IRandomSource)
  fullName: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategy<T>.CreateChildGenome(SharpNeat.Neat.Genome.NeatGenome<T>, Redzen.Random.IRandomSource)
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategy(Of T).CreateChildGenome(SharpNeat.Neat.Genome.NeatGenome(Of T), Redzen.Random.IRandomSource)
  nameWithType: AddNodeStrategy<T>.CreateChildGenome(NeatGenome<T>, IRandomSource)
  nameWithType.vb: AddNodeStrategy(Of T).CreateChildGenome(NeatGenome(Of T), IRandomSource)
- uid: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategy`1.CreateChildGenome*
  name: CreateChildGenome
  href: api/SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategy-1.html#SharpNeat_Neat_Reproduction_Asexual_Strategy_AddNodeStrategy_1_CreateChildGenome_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategy`1.CreateChildGenome
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategy<T>.CreateChildGenome
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategy(Of T).CreateChildGenome
  nameWithType: AddNodeStrategy<T>.CreateChildGenome
  nameWithType.vb: AddNodeStrategy(Of T).CreateChildGenome
- uid: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategyTests
  name: AddNodeStrategyTests
  href: api/SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategyTests.html
  commentId: T:SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategyTests
  fullName: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategyTests
  nameWithType: AddNodeStrategyTests
- uid: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategyTests.AddNode1
  name: AddNode1()
  href: api/SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategyTests.html#SharpNeat_Neat_Reproduction_Asexual_Strategy_AddNodeStrategyTests_AddNode1
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategyTests.AddNode1
  fullName: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategyTests.AddNode1()
  nameWithType: AddNodeStrategyTests.AddNode1()
- uid: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategyTests.AddNode1*
  name: AddNode1
  href: api/SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategyTests.html#SharpNeat_Neat_Reproduction_Asexual_Strategy_AddNodeStrategyTests_AddNode1_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategyTests.AddNode1
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategyTests.AddNode1
  nameWithType: AddNodeStrategyTests.AddNode1
- uid: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategyTests.AddNode2
  name: AddNode2()
  href: api/SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategyTests.html#SharpNeat_Neat_Reproduction_Asexual_Strategy_AddNodeStrategyTests_AddNode2
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategyTests.AddNode2
  fullName: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategyTests.AddNode2()
  nameWithType: AddNodeStrategyTests.AddNode2()
- uid: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategyTests.AddNode2*
  name: AddNode2
  href: api/SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategyTests.html#SharpNeat_Neat_Reproduction_Asexual_Strategy_AddNodeStrategyTests_AddNode2_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategyTests.AddNode2
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategyTests.AddNode2
  nameWithType: AddNodeStrategyTests.AddNode2
- uid: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategyTests.AddNode3
  name: AddNode3()
  href: api/SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategyTests.html#SharpNeat_Neat_Reproduction_Asexual_Strategy_AddNodeStrategyTests_AddNode3
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategyTests.AddNode3
  fullName: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategyTests.AddNode3()
  nameWithType: AddNodeStrategyTests.AddNode3()
- uid: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategyTests.AddNode3*
  name: AddNode3
  href: api/SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategyTests.html#SharpNeat_Neat_Reproduction_Asexual_Strategy_AddNodeStrategyTests_AddNode3_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategyTests.AddNode3
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Asexual.Strategy.AddNodeStrategyTests.AddNode3
  nameWithType: AddNodeStrategyTests.AddNode3
- uid: SharpNeat.Neat.Reproduction.Asexual.Strategy.DeleteConnectionStrategy`1
  name: DeleteConnectionStrategy<T>
  href: api/SharpNeat.Neat.Reproduction.Asexual.Strategy.DeleteConnectionStrategy-1.html
  commentId: T:SharpNeat.Neat.Reproduction.Asexual.Strategy.DeleteConnectionStrategy`1
  name.vb: DeleteConnectionStrategy(Of T)
  fullName: SharpNeat.Neat.Reproduction.Asexual.Strategy.DeleteConnectionStrategy<T>
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.Strategy.DeleteConnectionStrategy(Of T)
  nameWithType: DeleteConnectionStrategy<T>
  nameWithType.vb: DeleteConnectionStrategy(Of T)
- uid: SharpNeat.Neat.Reproduction.Asexual.Strategy.DeleteConnectionStrategy`1.#ctor(SharpNeat.Neat.Genome.INeatGenomeBuilder{`0},Redzen.Structures.Int32Sequence,Redzen.Structures.Int32Sequence)
  name: DeleteConnectionStrategy(INeatGenomeBuilder<T>, Int32Sequence, Int32Sequence)
  href: api/SharpNeat.Neat.Reproduction.Asexual.Strategy.DeleteConnectionStrategy-1.html#SharpNeat_Neat_Reproduction_Asexual_Strategy_DeleteConnectionStrategy_1__ctor_SharpNeat_Neat_Genome_INeatGenomeBuilder__0__Redzen_Structures_Int32Sequence_Redzen_Structures_Int32Sequence_
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.Strategy.DeleteConnectionStrategy`1.#ctor(SharpNeat.Neat.Genome.INeatGenomeBuilder{`0},Redzen.Structures.Int32Sequence,Redzen.Structures.Int32Sequence)
  name.vb: New(INeatGenomeBuilder(Of T), Int32Sequence, Int32Sequence)
  fullName: SharpNeat.Neat.Reproduction.Asexual.Strategy.DeleteConnectionStrategy<T>.DeleteConnectionStrategy(SharpNeat.Neat.Genome.INeatGenomeBuilder<T>, Redzen.Structures.Int32Sequence, Redzen.Structures.Int32Sequence)
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.Strategy.DeleteConnectionStrategy(Of T).New(SharpNeat.Neat.Genome.INeatGenomeBuilder(Of T), Redzen.Structures.Int32Sequence, Redzen.Structures.Int32Sequence)
  nameWithType: DeleteConnectionStrategy<T>.DeleteConnectionStrategy(INeatGenomeBuilder<T>, Int32Sequence, Int32Sequence)
  nameWithType.vb: DeleteConnectionStrategy(Of T).New(INeatGenomeBuilder(Of T), Int32Sequence, Int32Sequence)
- uid: SharpNeat.Neat.Reproduction.Asexual.Strategy.DeleteConnectionStrategy`1.#ctor*
  name: DeleteConnectionStrategy
  href: api/SharpNeat.Neat.Reproduction.Asexual.Strategy.DeleteConnectionStrategy-1.html#SharpNeat_Neat_Reproduction_Asexual_Strategy_DeleteConnectionStrategy_1__ctor_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.Strategy.DeleteConnectionStrategy`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Neat.Reproduction.Asexual.Strategy.DeleteConnectionStrategy<T>.DeleteConnectionStrategy
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.Strategy.DeleteConnectionStrategy(Of T).New
  nameWithType: DeleteConnectionStrategy<T>.DeleteConnectionStrategy
  nameWithType.vb: DeleteConnectionStrategy(Of T).New
- uid: SharpNeat.Neat.Reproduction.Asexual.Strategy.DeleteConnectionStrategy`1.CreateChildGenome(SharpNeat.Neat.Genome.NeatGenome{`0},Redzen.Random.IRandomSource)
  name: CreateChildGenome(NeatGenome<T>, IRandomSource)
  href: api/SharpNeat.Neat.Reproduction.Asexual.Strategy.DeleteConnectionStrategy-1.html#SharpNeat_Neat_Reproduction_Asexual_Strategy_DeleteConnectionStrategy_1_CreateChildGenome_SharpNeat_Neat_Genome_NeatGenome__0__Redzen_Random_IRandomSource_
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.Strategy.DeleteConnectionStrategy`1.CreateChildGenome(SharpNeat.Neat.Genome.NeatGenome{`0},Redzen.Random.IRandomSource)
  name.vb: CreateChildGenome(NeatGenome(Of T), IRandomSource)
  fullName: SharpNeat.Neat.Reproduction.Asexual.Strategy.DeleteConnectionStrategy<T>.CreateChildGenome(SharpNeat.Neat.Genome.NeatGenome<T>, Redzen.Random.IRandomSource)
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.Strategy.DeleteConnectionStrategy(Of T).CreateChildGenome(SharpNeat.Neat.Genome.NeatGenome(Of T), Redzen.Random.IRandomSource)
  nameWithType: DeleteConnectionStrategy<T>.CreateChildGenome(NeatGenome<T>, IRandomSource)
  nameWithType.vb: DeleteConnectionStrategy(Of T).CreateChildGenome(NeatGenome(Of T), IRandomSource)
- uid: SharpNeat.Neat.Reproduction.Asexual.Strategy.DeleteConnectionStrategy`1.CreateChildGenome*
  name: CreateChildGenome
  href: api/SharpNeat.Neat.Reproduction.Asexual.Strategy.DeleteConnectionStrategy-1.html#SharpNeat_Neat_Reproduction_Asexual_Strategy_DeleteConnectionStrategy_1_CreateChildGenome_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.Strategy.DeleteConnectionStrategy`1.CreateChildGenome
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Asexual.Strategy.DeleteConnectionStrategy<T>.CreateChildGenome
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.Strategy.DeleteConnectionStrategy(Of T).CreateChildGenome
  nameWithType: DeleteConnectionStrategy<T>.CreateChildGenome
  nameWithType.vb: DeleteConnectionStrategy(Of T).CreateChildGenome
- uid: SharpNeat.Neat.Reproduction.Asexual.Strategy.DeleteConnectionStrategyTests
  name: DeleteConnectionStrategyTests
  href: api/SharpNeat.Neat.Reproduction.Asexual.Strategy.DeleteConnectionStrategyTests.html
  commentId: T:SharpNeat.Neat.Reproduction.Asexual.Strategy.DeleteConnectionStrategyTests
  fullName: SharpNeat.Neat.Reproduction.Asexual.Strategy.DeleteConnectionStrategyTests
  nameWithType: DeleteConnectionStrategyTests
- uid: SharpNeat.Neat.Reproduction.Asexual.Strategy.DeleteConnectionStrategyTests.DeleteConnection
  name: DeleteConnection()
  href: api/SharpNeat.Neat.Reproduction.Asexual.Strategy.DeleteConnectionStrategyTests.html#SharpNeat_Neat_Reproduction_Asexual_Strategy_DeleteConnectionStrategyTests_DeleteConnection
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.Strategy.DeleteConnectionStrategyTests.DeleteConnection
  fullName: SharpNeat.Neat.Reproduction.Asexual.Strategy.DeleteConnectionStrategyTests.DeleteConnection()
  nameWithType: DeleteConnectionStrategyTests.DeleteConnection()
- uid: SharpNeat.Neat.Reproduction.Asexual.Strategy.DeleteConnectionStrategyTests.DeleteConnection*
  name: DeleteConnection
  href: api/SharpNeat.Neat.Reproduction.Asexual.Strategy.DeleteConnectionStrategyTests.html#SharpNeat_Neat_Reproduction_Asexual_Strategy_DeleteConnectionStrategyTests_DeleteConnection_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.Strategy.DeleteConnectionStrategyTests.DeleteConnection
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Asexual.Strategy.DeleteConnectionStrategyTests.DeleteConnection
  nameWithType: DeleteConnectionStrategyTests.DeleteConnection
- uid: SharpNeat.Neat.Reproduction.Asexual.Strategy.IAsexualReproductionStrategy`1
  name: IAsexualReproductionStrategy<T>
  href: api/SharpNeat.Neat.Reproduction.Asexual.Strategy.IAsexualReproductionStrategy-1.html
  commentId: T:SharpNeat.Neat.Reproduction.Asexual.Strategy.IAsexualReproductionStrategy`1
  name.vb: IAsexualReproductionStrategy(Of T)
  fullName: SharpNeat.Neat.Reproduction.Asexual.Strategy.IAsexualReproductionStrategy<T>
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.Strategy.IAsexualReproductionStrategy(Of T)
  nameWithType: IAsexualReproductionStrategy<T>
  nameWithType.vb: IAsexualReproductionStrategy(Of T)
- uid: SharpNeat.Neat.Reproduction.Asexual.Strategy.IAsexualReproductionStrategy`1.CreateChildGenome(SharpNeat.Neat.Genome.NeatGenome{`0},Redzen.Random.IRandomSource)
  name: CreateChildGenome(NeatGenome<T>, IRandomSource)
  href: api/SharpNeat.Neat.Reproduction.Asexual.Strategy.IAsexualReproductionStrategy-1.html#SharpNeat_Neat_Reproduction_Asexual_Strategy_IAsexualReproductionStrategy_1_CreateChildGenome_SharpNeat_Neat_Genome_NeatGenome__0__Redzen_Random_IRandomSource_
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.Strategy.IAsexualReproductionStrategy`1.CreateChildGenome(SharpNeat.Neat.Genome.NeatGenome{`0},Redzen.Random.IRandomSource)
  name.vb: CreateChildGenome(NeatGenome(Of T), IRandomSource)
  fullName: SharpNeat.Neat.Reproduction.Asexual.Strategy.IAsexualReproductionStrategy<T>.CreateChildGenome(SharpNeat.Neat.Genome.NeatGenome<T>, Redzen.Random.IRandomSource)
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.Strategy.IAsexualReproductionStrategy(Of T).CreateChildGenome(SharpNeat.Neat.Genome.NeatGenome(Of T), Redzen.Random.IRandomSource)
  nameWithType: IAsexualReproductionStrategy<T>.CreateChildGenome(NeatGenome<T>, IRandomSource)
  nameWithType.vb: IAsexualReproductionStrategy(Of T).CreateChildGenome(NeatGenome(Of T), IRandomSource)
- uid: SharpNeat.Neat.Reproduction.Asexual.Strategy.IAsexualReproductionStrategy`1.CreateChildGenome*
  name: CreateChildGenome
  href: api/SharpNeat.Neat.Reproduction.Asexual.Strategy.IAsexualReproductionStrategy-1.html#SharpNeat_Neat_Reproduction_Asexual_Strategy_IAsexualReproductionStrategy_1_CreateChildGenome_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.Strategy.IAsexualReproductionStrategy`1.CreateChildGenome
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Asexual.Strategy.IAsexualReproductionStrategy<T>.CreateChildGenome
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.Strategy.IAsexualReproductionStrategy(Of T).CreateChildGenome
  nameWithType: IAsexualReproductionStrategy<T>.CreateChildGenome
  nameWithType.vb: IAsexualReproductionStrategy(Of T).CreateChildGenome
- uid: SharpNeat.Neat.Reproduction.Asexual.Strategy.MutateWeightsStrategy`1
  name: MutateWeightsStrategy<T>
  href: api/SharpNeat.Neat.Reproduction.Asexual.Strategy.MutateWeightsStrategy-1.html
  commentId: T:SharpNeat.Neat.Reproduction.Asexual.Strategy.MutateWeightsStrategy`1
  name.vb: MutateWeightsStrategy(Of T)
  fullName: SharpNeat.Neat.Reproduction.Asexual.Strategy.MutateWeightsStrategy<T>
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.Strategy.MutateWeightsStrategy(Of T)
  nameWithType: MutateWeightsStrategy<T>
  nameWithType.vb: MutateWeightsStrategy(Of T)
- uid: SharpNeat.Neat.Reproduction.Asexual.Strategy.MutateWeightsStrategy`1.#ctor(SharpNeat.Neat.Genome.INeatGenomeBuilder{`0},Redzen.Structures.Int32Sequence,Redzen.Structures.Int32Sequence,SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationScheme{`0})
  name: MutateWeightsStrategy(INeatGenomeBuilder<T>, Int32Sequence, Int32Sequence, WeightMutationScheme<T>)
  href: api/SharpNeat.Neat.Reproduction.Asexual.Strategy.MutateWeightsStrategy-1.html#SharpNeat_Neat_Reproduction_Asexual_Strategy_MutateWeightsStrategy_1__ctor_SharpNeat_Neat_Genome_INeatGenomeBuilder__0__Redzen_Structures_Int32Sequence_Redzen_Structures_Int32Sequence_SharpNeat_Neat_Reproduction_Asexual_WeightMutation_WeightMutationScheme__0__
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.Strategy.MutateWeightsStrategy`1.#ctor(SharpNeat.Neat.Genome.INeatGenomeBuilder{`0},Redzen.Structures.Int32Sequence,Redzen.Structures.Int32Sequence,SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationScheme{`0})
  name.vb: New(INeatGenomeBuilder(Of T), Int32Sequence, Int32Sequence, WeightMutationScheme(Of T))
  fullName: SharpNeat.Neat.Reproduction.Asexual.Strategy.MutateWeightsStrategy<T>.MutateWeightsStrategy(SharpNeat.Neat.Genome.INeatGenomeBuilder<T>, Redzen.Structures.Int32Sequence, Redzen.Structures.Int32Sequence, SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationScheme<T>)
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.Strategy.MutateWeightsStrategy(Of T).New(SharpNeat.Neat.Genome.INeatGenomeBuilder(Of T), Redzen.Structures.Int32Sequence, Redzen.Structures.Int32Sequence, SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationScheme(Of T))
  nameWithType: MutateWeightsStrategy<T>.MutateWeightsStrategy(INeatGenomeBuilder<T>, Int32Sequence, Int32Sequence, WeightMutationScheme<T>)
  nameWithType.vb: MutateWeightsStrategy(Of T).New(INeatGenomeBuilder(Of T), Int32Sequence, Int32Sequence, WeightMutationScheme(Of T))
- uid: SharpNeat.Neat.Reproduction.Asexual.Strategy.MutateWeightsStrategy`1.#ctor*
  name: MutateWeightsStrategy
  href: api/SharpNeat.Neat.Reproduction.Asexual.Strategy.MutateWeightsStrategy-1.html#SharpNeat_Neat_Reproduction_Asexual_Strategy_MutateWeightsStrategy_1__ctor_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.Strategy.MutateWeightsStrategy`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Neat.Reproduction.Asexual.Strategy.MutateWeightsStrategy<T>.MutateWeightsStrategy
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.Strategy.MutateWeightsStrategy(Of T).New
  nameWithType: MutateWeightsStrategy<T>.MutateWeightsStrategy
  nameWithType.vb: MutateWeightsStrategy(Of T).New
- uid: SharpNeat.Neat.Reproduction.Asexual.Strategy.MutateWeightsStrategy`1.CreateChildGenome(SharpNeat.Neat.Genome.NeatGenome{`0},Redzen.Random.IRandomSource)
  name: CreateChildGenome(NeatGenome<T>, IRandomSource)
  href: api/SharpNeat.Neat.Reproduction.Asexual.Strategy.MutateWeightsStrategy-1.html#SharpNeat_Neat_Reproduction_Asexual_Strategy_MutateWeightsStrategy_1_CreateChildGenome_SharpNeat_Neat_Genome_NeatGenome__0__Redzen_Random_IRandomSource_
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.Strategy.MutateWeightsStrategy`1.CreateChildGenome(SharpNeat.Neat.Genome.NeatGenome{`0},Redzen.Random.IRandomSource)
  name.vb: CreateChildGenome(NeatGenome(Of T), IRandomSource)
  fullName: SharpNeat.Neat.Reproduction.Asexual.Strategy.MutateWeightsStrategy<T>.CreateChildGenome(SharpNeat.Neat.Genome.NeatGenome<T>, Redzen.Random.IRandomSource)
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.Strategy.MutateWeightsStrategy(Of T).CreateChildGenome(SharpNeat.Neat.Genome.NeatGenome(Of T), Redzen.Random.IRandomSource)
  nameWithType: MutateWeightsStrategy<T>.CreateChildGenome(NeatGenome<T>, IRandomSource)
  nameWithType.vb: MutateWeightsStrategy(Of T).CreateChildGenome(NeatGenome(Of T), IRandomSource)
- uid: SharpNeat.Neat.Reproduction.Asexual.Strategy.MutateWeightsStrategy`1.CreateChildGenome*
  name: CreateChildGenome
  href: api/SharpNeat.Neat.Reproduction.Asexual.Strategy.MutateWeightsStrategy-1.html#SharpNeat_Neat_Reproduction_Asexual_Strategy_MutateWeightsStrategy_1_CreateChildGenome_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.Strategy.MutateWeightsStrategy`1.CreateChildGenome
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Asexual.Strategy.MutateWeightsStrategy<T>.CreateChildGenome
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.Strategy.MutateWeightsStrategy(Of T).CreateChildGenome
  nameWithType: MutateWeightsStrategy<T>.CreateChildGenome
  nameWithType.vb: MutateWeightsStrategy(Of T).CreateChildGenome
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation
  name: SharpNeat.Neat.Reproduction.Asexual.WeightMutation
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.html
  commentId: N:SharpNeat.Neat.Reproduction.Asexual.WeightMutation
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation
  nameWithType: SharpNeat.Neat.Reproduction.Asexual.WeightMutation
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double
  name: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.html
  commentId: N:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double
  nameWithType: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategy
  name: DeltaWeightMutationStrategy
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategy.html
  commentId: T:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategy
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategy
  nameWithType: DeltaWeightMutationStrategy
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategy.#ctor(SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ISubsetSelectionStrategy,Redzen.Numerics.Distributions.IStatelessSampler{System.Double})
  name: DeltaWeightMutationStrategy(ISubsetSelectionStrategy, IStatelessSampler<double>)
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategy.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_Double_DeltaWeightMutationStrategy__ctor_SharpNeat_Neat_Reproduction_Asexual_WeightMutation_Selection_ISubsetSelectionStrategy_Redzen_Numerics_Distributions_IStatelessSampler_System_Double__
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategy.#ctor(SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ISubsetSelectionStrategy,Redzen.Numerics.Distributions.IStatelessSampler{System.Double})
  name.vb: New(ISubsetSelectionStrategy, IStatelessSampler(Of Double))
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategy.DeltaWeightMutationStrategy(SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ISubsetSelectionStrategy, Redzen.Numerics.Distributions.IStatelessSampler<double>)
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategy.New(SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ISubsetSelectionStrategy, Redzen.Numerics.Distributions.IStatelessSampler(Of Double))
  nameWithType: DeltaWeightMutationStrategy.DeltaWeightMutationStrategy(ISubsetSelectionStrategy, IStatelessSampler<double>)
  nameWithType.vb: DeltaWeightMutationStrategy.New(ISubsetSelectionStrategy, IStatelessSampler(Of Double))
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategy.#ctor*
  name: DeltaWeightMutationStrategy
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategy.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_Double_DeltaWeightMutationStrategy__ctor_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategy.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategy.DeltaWeightMutationStrategy
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategy.New
  nameWithType: DeltaWeightMutationStrategy.DeltaWeightMutationStrategy
  nameWithType.vb: DeltaWeightMutationStrategy.New
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategy.CreateGaussianDeltaStrategy(SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ISubsetSelectionStrategy,System.Double)
  name: CreateGaussianDeltaStrategy(ISubsetSelectionStrategy, double)
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategy.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_Double_DeltaWeightMutationStrategy_CreateGaussianDeltaStrategy_SharpNeat_Neat_Reproduction_Asexual_WeightMutation_Selection_ISubsetSelectionStrategy_System_Double_
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategy.CreateGaussianDeltaStrategy(SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ISubsetSelectionStrategy,System.Double)
  name.vb: CreateGaussianDeltaStrategy(ISubsetSelectionStrategy, Double)
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategy.CreateGaussianDeltaStrategy(SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ISubsetSelectionStrategy, double)
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategy.CreateGaussianDeltaStrategy(SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ISubsetSelectionStrategy, Double)
  nameWithType: DeltaWeightMutationStrategy.CreateGaussianDeltaStrategy(ISubsetSelectionStrategy, double)
  nameWithType.vb: DeltaWeightMutationStrategy.CreateGaussianDeltaStrategy(ISubsetSelectionStrategy, Double)
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategy.CreateGaussianDeltaStrategy*
  name: CreateGaussianDeltaStrategy
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategy.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_Double_DeltaWeightMutationStrategy_CreateGaussianDeltaStrategy_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategy.CreateGaussianDeltaStrategy
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategy.CreateGaussianDeltaStrategy
  nameWithType: DeltaWeightMutationStrategy.CreateGaussianDeltaStrategy
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategy.CreateUniformDeltaStrategy(SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ISubsetSelectionStrategy,System.Double)
  name: CreateUniformDeltaStrategy(ISubsetSelectionStrategy, double)
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategy.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_Double_DeltaWeightMutationStrategy_CreateUniformDeltaStrategy_SharpNeat_Neat_Reproduction_Asexual_WeightMutation_Selection_ISubsetSelectionStrategy_System_Double_
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategy.CreateUniformDeltaStrategy(SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ISubsetSelectionStrategy,System.Double)
  name.vb: CreateUniformDeltaStrategy(ISubsetSelectionStrategy, Double)
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategy.CreateUniformDeltaStrategy(SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ISubsetSelectionStrategy, double)
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategy.CreateUniformDeltaStrategy(SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ISubsetSelectionStrategy, Double)
  nameWithType: DeltaWeightMutationStrategy.CreateUniformDeltaStrategy(ISubsetSelectionStrategy, double)
  nameWithType.vb: DeltaWeightMutationStrategy.CreateUniformDeltaStrategy(ISubsetSelectionStrategy, Double)
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategy.CreateUniformDeltaStrategy*
  name: CreateUniformDeltaStrategy
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategy.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_Double_DeltaWeightMutationStrategy_CreateUniformDeltaStrategy_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategy.CreateUniformDeltaStrategy
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategy.CreateUniformDeltaStrategy
  nameWithType: DeltaWeightMutationStrategy.CreateUniformDeltaStrategy
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategy.Invoke(System.Double[],Redzen.Random.IRandomSource)
  name: Invoke(double[], IRandomSource)
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategy.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_Double_DeltaWeightMutationStrategy_Invoke_System_Double___Redzen_Random_IRandomSource_
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategy.Invoke(System.Double[],Redzen.Random.IRandomSource)
  name.vb: Invoke(Double(), IRandomSource)
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategy.Invoke(double[], Redzen.Random.IRandomSource)
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategy.Invoke(Double(), Redzen.Random.IRandomSource)
  nameWithType: DeltaWeightMutationStrategy.Invoke(double[], IRandomSource)
  nameWithType.vb: DeltaWeightMutationStrategy.Invoke(Double(), IRandomSource)
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategy.Invoke*
  name: Invoke
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategy.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_Double_DeltaWeightMutationStrategy_Invoke_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategy.Invoke
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategy.Invoke
  nameWithType: DeltaWeightMutationStrategy.Invoke
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategyTests
  name: DeltaWeightMutationStrategyTests
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategyTests.html
  commentId: T:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategyTests
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategyTests
  nameWithType: DeltaWeightMutationStrategyTests
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategyTests.GaussianDelta
  name: GaussianDelta()
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategyTests.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_Double_DeltaWeightMutationStrategyTests_GaussianDelta
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategyTests.GaussianDelta
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategyTests.GaussianDelta()
  nameWithType: DeltaWeightMutationStrategyTests.GaussianDelta()
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategyTests.GaussianDelta*
  name: GaussianDelta
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategyTests.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_Double_DeltaWeightMutationStrategyTests_GaussianDelta_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategyTests.GaussianDelta
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategyTests.GaussianDelta
  nameWithType: DeltaWeightMutationStrategyTests.GaussianDelta
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategyTests.UniformDelta
  name: UniformDelta()
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategyTests.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_Double_DeltaWeightMutationStrategyTests_UniformDelta
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategyTests.UniformDelta
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategyTests.UniformDelta()
  nameWithType: DeltaWeightMutationStrategyTests.UniformDelta()
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategyTests.UniformDelta*
  name: UniformDelta
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategyTests.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_Double_DeltaWeightMutationStrategyTests_UniformDelta_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategyTests.UniformDelta
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Double.DeltaWeightMutationStrategyTests.UniformDelta
  nameWithType: DeltaWeightMutationStrategyTests.UniformDelta
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.IWeightMutationStrategy`1
  name: IWeightMutationStrategy<T>
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.IWeightMutationStrategy-1.html
  commentId: T:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.IWeightMutationStrategy`1
  name.vb: IWeightMutationStrategy(Of T)
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.IWeightMutationStrategy<T>
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.IWeightMutationStrategy(Of T)
  nameWithType: IWeightMutationStrategy<T>
  nameWithType.vb: IWeightMutationStrategy(Of T)
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.IWeightMutationStrategy`1.Invoke(`0[],Redzen.Random.IRandomSource)
  name: Invoke(T[], IRandomSource)
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.IWeightMutationStrategy-1.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_IWeightMutationStrategy_1_Invoke__0___Redzen_Random_IRandomSource_
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.IWeightMutationStrategy`1.Invoke(`0[],Redzen.Random.IRandomSource)
  name.vb: Invoke(T(), IRandomSource)
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.IWeightMutationStrategy<T>.Invoke(T[], Redzen.Random.IRandomSource)
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.IWeightMutationStrategy(Of T).Invoke(T(), Redzen.Random.IRandomSource)
  nameWithType: IWeightMutationStrategy<T>.Invoke(T[], IRandomSource)
  nameWithType.vb: IWeightMutationStrategy(Of T).Invoke(T(), IRandomSource)
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.IWeightMutationStrategy`1.Invoke*
  name: Invoke
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.IWeightMutationStrategy-1.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_IWeightMutationStrategy_1_Invoke_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.IWeightMutationStrategy`1.Invoke
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.IWeightMutationStrategy<T>.Invoke
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.IWeightMutationStrategy(Of T).Invoke
  nameWithType: IWeightMutationStrategy<T>.Invoke
  nameWithType.vb: IWeightMutationStrategy(Of T).Invoke
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategy`1
  name: ResetWeightMutationStrategy<T>
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategy-1.html
  commentId: T:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategy`1
  name.vb: ResetWeightMutationStrategy(Of T)
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategy<T>
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategy(Of T)
  nameWithType: ResetWeightMutationStrategy<T>
  nameWithType.vb: ResetWeightMutationStrategy(Of T)
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategy`1.#ctor(SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ISubsetSelectionStrategy,Redzen.Numerics.Distributions.IStatelessSampler{`0})
  name: ResetWeightMutationStrategy(ISubsetSelectionStrategy, IStatelessSampler<T>)
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategy-1.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_ResetWeightMutationStrategy_1__ctor_SharpNeat_Neat_Reproduction_Asexual_WeightMutation_Selection_ISubsetSelectionStrategy_Redzen_Numerics_Distributions_IStatelessSampler__0__
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategy`1.#ctor(SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ISubsetSelectionStrategy,Redzen.Numerics.Distributions.IStatelessSampler{`0})
  name.vb: New(ISubsetSelectionStrategy, IStatelessSampler(Of T))
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategy<T>.ResetWeightMutationStrategy(SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ISubsetSelectionStrategy, Redzen.Numerics.Distributions.IStatelessSampler<T>)
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategy(Of T).New(SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ISubsetSelectionStrategy, Redzen.Numerics.Distributions.IStatelessSampler(Of T))
  nameWithType: ResetWeightMutationStrategy<T>.ResetWeightMutationStrategy(ISubsetSelectionStrategy, IStatelessSampler<T>)
  nameWithType.vb: ResetWeightMutationStrategy(Of T).New(ISubsetSelectionStrategy, IStatelessSampler(Of T))
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategy`1.#ctor*
  name: ResetWeightMutationStrategy
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategy-1.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_ResetWeightMutationStrategy_1__ctor_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategy`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategy<T>.ResetWeightMutationStrategy
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategy(Of T).New
  nameWithType: ResetWeightMutationStrategy<T>.ResetWeightMutationStrategy
  nameWithType.vb: ResetWeightMutationStrategy(Of T).New
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategy`1.CreateGaussianResetStrategy(SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ISubsetSelectionStrategy,System.Double)
  name: CreateGaussianResetStrategy(ISubsetSelectionStrategy, double)
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategy-1.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_ResetWeightMutationStrategy_1_CreateGaussianResetStrategy_SharpNeat_Neat_Reproduction_Asexual_WeightMutation_Selection_ISubsetSelectionStrategy_System_Double_
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategy`1.CreateGaussianResetStrategy(SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ISubsetSelectionStrategy,System.Double)
  name.vb: CreateGaussianResetStrategy(ISubsetSelectionStrategy, Double)
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategy<T>.CreateGaussianResetStrategy(SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ISubsetSelectionStrategy, double)
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategy(Of T).CreateGaussianResetStrategy(SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ISubsetSelectionStrategy, Double)
  nameWithType: ResetWeightMutationStrategy<T>.CreateGaussianResetStrategy(ISubsetSelectionStrategy, double)
  nameWithType.vb: ResetWeightMutationStrategy(Of T).CreateGaussianResetStrategy(ISubsetSelectionStrategy, Double)
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategy`1.CreateGaussianResetStrategy*
  name: CreateGaussianResetStrategy
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategy-1.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_ResetWeightMutationStrategy_1_CreateGaussianResetStrategy_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategy`1.CreateGaussianResetStrategy
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategy<T>.CreateGaussianResetStrategy
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategy(Of T).CreateGaussianResetStrategy
  nameWithType: ResetWeightMutationStrategy<T>.CreateGaussianResetStrategy
  nameWithType.vb: ResetWeightMutationStrategy(Of T).CreateGaussianResetStrategy
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategy`1.CreateUniformResetStrategy(SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ISubsetSelectionStrategy,System.Double)
  name: CreateUniformResetStrategy(ISubsetSelectionStrategy, double)
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategy-1.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_ResetWeightMutationStrategy_1_CreateUniformResetStrategy_SharpNeat_Neat_Reproduction_Asexual_WeightMutation_Selection_ISubsetSelectionStrategy_System_Double_
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategy`1.CreateUniformResetStrategy(SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ISubsetSelectionStrategy,System.Double)
  name.vb: CreateUniformResetStrategy(ISubsetSelectionStrategy, Double)
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategy<T>.CreateUniformResetStrategy(SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ISubsetSelectionStrategy, double)
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategy(Of T).CreateUniformResetStrategy(SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ISubsetSelectionStrategy, Double)
  nameWithType: ResetWeightMutationStrategy<T>.CreateUniformResetStrategy(ISubsetSelectionStrategy, double)
  nameWithType.vb: ResetWeightMutationStrategy(Of T).CreateUniformResetStrategy(ISubsetSelectionStrategy, Double)
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategy`1.CreateUniformResetStrategy*
  name: CreateUniformResetStrategy
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategy-1.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_ResetWeightMutationStrategy_1_CreateUniformResetStrategy_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategy`1.CreateUniformResetStrategy
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategy<T>.CreateUniformResetStrategy
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategy(Of T).CreateUniformResetStrategy
  nameWithType: ResetWeightMutationStrategy<T>.CreateUniformResetStrategy
  nameWithType.vb: ResetWeightMutationStrategy(Of T).CreateUniformResetStrategy
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategy`1.Invoke(`0[],Redzen.Random.IRandomSource)
  name: Invoke(T[], IRandomSource)
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategy-1.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_ResetWeightMutationStrategy_1_Invoke__0___Redzen_Random_IRandomSource_
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategy`1.Invoke(`0[],Redzen.Random.IRandomSource)
  name.vb: Invoke(T(), IRandomSource)
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategy<T>.Invoke(T[], Redzen.Random.IRandomSource)
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategy(Of T).Invoke(T(), Redzen.Random.IRandomSource)
  nameWithType: ResetWeightMutationStrategy<T>.Invoke(T[], IRandomSource)
  nameWithType.vb: ResetWeightMutationStrategy(Of T).Invoke(T(), IRandomSource)
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategy`1.Invoke*
  name: Invoke
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategy-1.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_ResetWeightMutationStrategy_1_Invoke_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategy`1.Invoke
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategy<T>.Invoke
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategy(Of T).Invoke
  nameWithType: ResetWeightMutationStrategy<T>.Invoke
  nameWithType.vb: ResetWeightMutationStrategy(Of T).Invoke
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategyTests
  name: ResetWeightMutationStrategyTests
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategyTests.html
  commentId: T:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategyTests
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategyTests
  nameWithType: ResetWeightMutationStrategyTests
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategyTests.GaussianReset
  name: GaussianReset()
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategyTests.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_ResetWeightMutationStrategyTests_GaussianReset
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategyTests.GaussianReset
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategyTests.GaussianReset()
  nameWithType: ResetWeightMutationStrategyTests.GaussianReset()
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategyTests.GaussianReset*
  name: GaussianReset
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategyTests.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_ResetWeightMutationStrategyTests_GaussianReset_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategyTests.GaussianReset
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategyTests.GaussianReset
  nameWithType: ResetWeightMutationStrategyTests.GaussianReset
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategyTests.UniformReset
  name: UniformReset()
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategyTests.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_ResetWeightMutationStrategyTests_UniformReset
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategyTests.UniformReset
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategyTests.UniformReset()
  nameWithType: ResetWeightMutationStrategyTests.UniformReset()
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategyTests.UniformReset*
  name: UniformReset
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategyTests.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_ResetWeightMutationStrategyTests_UniformReset_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategyTests.UniformReset
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.ResetWeightMutationStrategyTests.UniformReset
  nameWithType: ResetWeightMutationStrategyTests.UniformReset
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection
  name: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.html
  commentId: N:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection
  nameWithType: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.CardinalSubsetSelectionStrategy
  name: CardinalSubsetSelectionStrategy
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.CardinalSubsetSelectionStrategy.html
  commentId: T:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.CardinalSubsetSelectionStrategy
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.CardinalSubsetSelectionStrategy
  nameWithType: CardinalSubsetSelectionStrategy
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.CardinalSubsetSelectionStrategy.#ctor(System.Int32)
  name: CardinalSubsetSelectionStrategy(int)
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.CardinalSubsetSelectionStrategy.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_Selection_CardinalSubsetSelectionStrategy__ctor_System_Int32_
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.CardinalSubsetSelectionStrategy.#ctor(System.Int32)
  name.vb: New(Integer)
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.CardinalSubsetSelectionStrategy.CardinalSubsetSelectionStrategy(int)
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.CardinalSubsetSelectionStrategy.New(Integer)
  nameWithType: CardinalSubsetSelectionStrategy.CardinalSubsetSelectionStrategy(int)
  nameWithType.vb: CardinalSubsetSelectionStrategy.New(Integer)
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.CardinalSubsetSelectionStrategy.#ctor*
  name: CardinalSubsetSelectionStrategy
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.CardinalSubsetSelectionStrategy.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_Selection_CardinalSubsetSelectionStrategy__ctor_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.CardinalSubsetSelectionStrategy.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.CardinalSubsetSelectionStrategy.CardinalSubsetSelectionStrategy
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.CardinalSubsetSelectionStrategy.New
  nameWithType: CardinalSubsetSelectionStrategy.CardinalSubsetSelectionStrategy
  nameWithType.vb: CardinalSubsetSelectionStrategy.New
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.CardinalSubsetSelectionStrategy.SelectSubset(System.Int32,Redzen.Random.IRandomSource)
  name: SelectSubset(int, IRandomSource)
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.CardinalSubsetSelectionStrategy.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_Selection_CardinalSubsetSelectionStrategy_SelectSubset_System_Int32_Redzen_Random_IRandomSource_
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.CardinalSubsetSelectionStrategy.SelectSubset(System.Int32,Redzen.Random.IRandomSource)
  name.vb: SelectSubset(Integer, IRandomSource)
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.CardinalSubsetSelectionStrategy.SelectSubset(int, Redzen.Random.IRandomSource)
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.CardinalSubsetSelectionStrategy.SelectSubset(Integer, Redzen.Random.IRandomSource)
  nameWithType: CardinalSubsetSelectionStrategy.SelectSubset(int, IRandomSource)
  nameWithType.vb: CardinalSubsetSelectionStrategy.SelectSubset(Integer, IRandomSource)
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.CardinalSubsetSelectionStrategy.SelectSubset*
  name: SelectSubset
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.CardinalSubsetSelectionStrategy.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_Selection_CardinalSubsetSelectionStrategy_SelectSubset_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.CardinalSubsetSelectionStrategy.SelectSubset
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.CardinalSubsetSelectionStrategy.SelectSubset
  nameWithType: CardinalSubsetSelectionStrategy.SelectSubset
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.CardinalSubsetSelectionStrategyTests
  name: CardinalSubsetSelectionStrategyTests
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.CardinalSubsetSelectionStrategyTests.html
  commentId: T:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.CardinalSubsetSelectionStrategyTests
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.CardinalSubsetSelectionStrategyTests
  nameWithType: CardinalSubsetSelectionStrategyTests
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.CardinalSubsetSelectionStrategyTests.SelectSubset_Cardinality
  name: SelectSubset_Cardinality()
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.CardinalSubsetSelectionStrategyTests.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_Selection_CardinalSubsetSelectionStrategyTests_SelectSubset_Cardinality
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.CardinalSubsetSelectionStrategyTests.SelectSubset_Cardinality
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.CardinalSubsetSelectionStrategyTests.SelectSubset_Cardinality()
  nameWithType: CardinalSubsetSelectionStrategyTests.SelectSubset_Cardinality()
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.CardinalSubsetSelectionStrategyTests.SelectSubset_Cardinality*
  name: SelectSubset_Cardinality
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.CardinalSubsetSelectionStrategyTests.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_Selection_CardinalSubsetSelectionStrategyTests_SelectSubset_Cardinality_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.CardinalSubsetSelectionStrategyTests.SelectSubset_Cardinality
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.CardinalSubsetSelectionStrategyTests.SelectSubset_Cardinality
  nameWithType: CardinalSubsetSelectionStrategyTests.SelectSubset_Cardinality
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.CardinalSubsetSelectionStrategyTests.SelectSubset_Uniqueness
  name: SelectSubset_Uniqueness()
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.CardinalSubsetSelectionStrategyTests.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_Selection_CardinalSubsetSelectionStrategyTests_SelectSubset_Uniqueness
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.CardinalSubsetSelectionStrategyTests.SelectSubset_Uniqueness
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.CardinalSubsetSelectionStrategyTests.SelectSubset_Uniqueness()
  nameWithType: CardinalSubsetSelectionStrategyTests.SelectSubset_Uniqueness()
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.CardinalSubsetSelectionStrategyTests.SelectSubset_Uniqueness*
  name: SelectSubset_Uniqueness
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.CardinalSubsetSelectionStrategyTests.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_Selection_CardinalSubsetSelectionStrategyTests_SelectSubset_Uniqueness_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.CardinalSubsetSelectionStrategyTests.SelectSubset_Uniqueness
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.CardinalSubsetSelectionStrategyTests.SelectSubset_Uniqueness
  nameWithType: CardinalSubsetSelectionStrategyTests.SelectSubset_Uniqueness
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ISubsetSelectionStrategy
  name: ISubsetSelectionStrategy
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ISubsetSelectionStrategy.html
  commentId: T:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ISubsetSelectionStrategy
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ISubsetSelectionStrategy
  nameWithType: ISubsetSelectionStrategy
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ISubsetSelectionStrategy.SelectSubset(System.Int32,Redzen.Random.IRandomSource)
  name: SelectSubset(int, IRandomSource)
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ISubsetSelectionStrategy.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_Selection_ISubsetSelectionStrategy_SelectSubset_System_Int32_Redzen_Random_IRandomSource_
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ISubsetSelectionStrategy.SelectSubset(System.Int32,Redzen.Random.IRandomSource)
  name.vb: SelectSubset(Integer, IRandomSource)
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ISubsetSelectionStrategy.SelectSubset(int, Redzen.Random.IRandomSource)
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ISubsetSelectionStrategy.SelectSubset(Integer, Redzen.Random.IRandomSource)
  nameWithType: ISubsetSelectionStrategy.SelectSubset(int, IRandomSource)
  nameWithType.vb: ISubsetSelectionStrategy.SelectSubset(Integer, IRandomSource)
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ISubsetSelectionStrategy.SelectSubset*
  name: SelectSubset
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ISubsetSelectionStrategy.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_Selection_ISubsetSelectionStrategy_SelectSubset_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ISubsetSelectionStrategy.SelectSubset
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ISubsetSelectionStrategy.SelectSubset
  nameWithType: ISubsetSelectionStrategy.SelectSubset
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ProportionSubsetSelectionStrategy
  name: ProportionSubsetSelectionStrategy
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ProportionSubsetSelectionStrategy.html
  commentId: T:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ProportionSubsetSelectionStrategy
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ProportionSubsetSelectionStrategy
  nameWithType: ProportionSubsetSelectionStrategy
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ProportionSubsetSelectionStrategy.#ctor(System.Double)
  name: ProportionSubsetSelectionStrategy(double)
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ProportionSubsetSelectionStrategy.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_Selection_ProportionSubsetSelectionStrategy__ctor_System_Double_
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ProportionSubsetSelectionStrategy.#ctor(System.Double)
  name.vb: New(Double)
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ProportionSubsetSelectionStrategy.ProportionSubsetSelectionStrategy(double)
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ProportionSubsetSelectionStrategy.New(Double)
  nameWithType: ProportionSubsetSelectionStrategy.ProportionSubsetSelectionStrategy(double)
  nameWithType.vb: ProportionSubsetSelectionStrategy.New(Double)
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ProportionSubsetSelectionStrategy.#ctor*
  name: ProportionSubsetSelectionStrategy
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ProportionSubsetSelectionStrategy.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_Selection_ProportionSubsetSelectionStrategy__ctor_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ProportionSubsetSelectionStrategy.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ProportionSubsetSelectionStrategy.ProportionSubsetSelectionStrategy
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ProportionSubsetSelectionStrategy.New
  nameWithType: ProportionSubsetSelectionStrategy.ProportionSubsetSelectionStrategy
  nameWithType.vb: ProportionSubsetSelectionStrategy.New
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ProportionSubsetSelectionStrategy.SelectSubset(System.Int32,Redzen.Random.IRandomSource)
  name: SelectSubset(int, IRandomSource)
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ProportionSubsetSelectionStrategy.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_Selection_ProportionSubsetSelectionStrategy_SelectSubset_System_Int32_Redzen_Random_IRandomSource_
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ProportionSubsetSelectionStrategy.SelectSubset(System.Int32,Redzen.Random.IRandomSource)
  name.vb: SelectSubset(Integer, IRandomSource)
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ProportionSubsetSelectionStrategy.SelectSubset(int, Redzen.Random.IRandomSource)
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ProportionSubsetSelectionStrategy.SelectSubset(Integer, Redzen.Random.IRandomSource)
  nameWithType: ProportionSubsetSelectionStrategy.SelectSubset(int, IRandomSource)
  nameWithType.vb: ProportionSubsetSelectionStrategy.SelectSubset(Integer, IRandomSource)
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ProportionSubsetSelectionStrategy.SelectSubset*
  name: SelectSubset
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ProportionSubsetSelectionStrategy.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_Selection_ProportionSubsetSelectionStrategy_SelectSubset_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ProportionSubsetSelectionStrategy.SelectSubset
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ProportionSubsetSelectionStrategy.SelectSubset
  nameWithType: ProportionSubsetSelectionStrategy.SelectSubset
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ProportionSubsetSelectionStrategyTests
  name: ProportionSubsetSelectionStrategyTests
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ProportionSubsetSelectionStrategyTests.html
  commentId: T:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ProportionSubsetSelectionStrategyTests
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ProportionSubsetSelectionStrategyTests
  nameWithType: ProportionSubsetSelectionStrategyTests
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ProportionSubsetSelectionStrategyTests.SelectSubset_Cardinality
  name: SelectSubset_Cardinality()
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ProportionSubsetSelectionStrategyTests.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_Selection_ProportionSubsetSelectionStrategyTests_SelectSubset_Cardinality
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ProportionSubsetSelectionStrategyTests.SelectSubset_Cardinality
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ProportionSubsetSelectionStrategyTests.SelectSubset_Cardinality()
  nameWithType: ProportionSubsetSelectionStrategyTests.SelectSubset_Cardinality()
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ProportionSubsetSelectionStrategyTests.SelectSubset_Cardinality*
  name: SelectSubset_Cardinality
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ProportionSubsetSelectionStrategyTests.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_Selection_ProportionSubsetSelectionStrategyTests_SelectSubset_Cardinality_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ProportionSubsetSelectionStrategyTests.SelectSubset_Cardinality
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ProportionSubsetSelectionStrategyTests.SelectSubset_Cardinality
  nameWithType: ProportionSubsetSelectionStrategyTests.SelectSubset_Cardinality
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ProportionSubsetSelectionStrategyTests.SelectSubset_Uniqueness
  name: SelectSubset_Uniqueness()
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ProportionSubsetSelectionStrategyTests.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_Selection_ProportionSubsetSelectionStrategyTests_SelectSubset_Uniqueness
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ProportionSubsetSelectionStrategyTests.SelectSubset_Uniqueness
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ProportionSubsetSelectionStrategyTests.SelectSubset_Uniqueness()
  nameWithType: ProportionSubsetSelectionStrategyTests.SelectSubset_Uniqueness()
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ProportionSubsetSelectionStrategyTests.SelectSubset_Uniqueness*
  name: SelectSubset_Uniqueness
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ProportionSubsetSelectionStrategyTests.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_Selection_ProportionSubsetSelectionStrategyTests_SelectSubset_Uniqueness_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ProportionSubsetSelectionStrategyTests.SelectSubset_Uniqueness
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.ProportionSubsetSelectionStrategyTests.SelectSubset_Uniqueness
  nameWithType: ProportionSubsetSelectionStrategyTests.SelectSubset_Uniqueness
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.SelectAllStrategy
  name: SelectAllStrategy
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.SelectAllStrategy.html
  commentId: T:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.SelectAllStrategy
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.SelectAllStrategy
  nameWithType: SelectAllStrategy
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.SelectAllStrategy.SelectSubset(System.Int32,Redzen.Random.IRandomSource)
  name: SelectSubset(int, IRandomSource)
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.SelectAllStrategy.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_Selection_SelectAllStrategy_SelectSubset_System_Int32_Redzen_Random_IRandomSource_
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.SelectAllStrategy.SelectSubset(System.Int32,Redzen.Random.IRandomSource)
  name.vb: SelectSubset(Integer, IRandomSource)
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.SelectAllStrategy.SelectSubset(int, Redzen.Random.IRandomSource)
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.SelectAllStrategy.SelectSubset(Integer, Redzen.Random.IRandomSource)
  nameWithType: SelectAllStrategy.SelectSubset(int, IRandomSource)
  nameWithType.vb: SelectAllStrategy.SelectSubset(Integer, IRandomSource)
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.SelectAllStrategy.SelectSubset*
  name: SelectSubset
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.SelectAllStrategy.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_Selection_SelectAllStrategy_SelectSubset_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.SelectAllStrategy.SelectSubset
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.Selection.SelectAllStrategy.SelectSubset
  nameWithType: SelectAllStrategy.SelectSubset
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationScheme`1
  name: WeightMutationScheme<T>
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationScheme-1.html
  commentId: T:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationScheme`1
  name.vb: WeightMutationScheme(Of T)
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationScheme<T>
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationScheme(Of T)
  nameWithType: WeightMutationScheme<T>
  nameWithType.vb: WeightMutationScheme(Of T)
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationScheme`1.#ctor(System.Double[],SharpNeat.Neat.Reproduction.Asexual.WeightMutation.IWeightMutationStrategy{`0}[])
  name: WeightMutationScheme(double[], IWeightMutationStrategy<T>[])
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationScheme-1.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_WeightMutationScheme_1__ctor_System_Double___SharpNeat_Neat_Reproduction_Asexual_WeightMutation_IWeightMutationStrategy__0____
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationScheme`1.#ctor(System.Double[],SharpNeat.Neat.Reproduction.Asexual.WeightMutation.IWeightMutationStrategy{`0}[])
  name.vb: New(Double(), IWeightMutationStrategy(Of T)())
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationScheme<T>.WeightMutationScheme(double[], SharpNeat.Neat.Reproduction.Asexual.WeightMutation.IWeightMutationStrategy<T>[])
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationScheme(Of T).New(Double(), SharpNeat.Neat.Reproduction.Asexual.WeightMutation.IWeightMutationStrategy(Of T)())
  nameWithType: WeightMutationScheme<T>.WeightMutationScheme(double[], IWeightMutationStrategy<T>[])
  nameWithType.vb: WeightMutationScheme(Of T).New(Double(), IWeightMutationStrategy(Of T)())
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationScheme`1.#ctor*
  name: WeightMutationScheme
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationScheme-1.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_WeightMutationScheme_1__ctor_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationScheme`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationScheme<T>.WeightMutationScheme
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationScheme(Of T).New
  nameWithType: WeightMutationScheme<T>.WeightMutationScheme
  nameWithType.vb: WeightMutationScheme(Of T).New
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationScheme`1.MutateWeights(`0[],Redzen.Random.IRandomSource)
  name: MutateWeights(T[], IRandomSource)
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationScheme-1.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_WeightMutationScheme_1_MutateWeights__0___Redzen_Random_IRandomSource_
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationScheme`1.MutateWeights(`0[],Redzen.Random.IRandomSource)
  name.vb: MutateWeights(T(), IRandomSource)
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationScheme<T>.MutateWeights(T[], Redzen.Random.IRandomSource)
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationScheme(Of T).MutateWeights(T(), Redzen.Random.IRandomSource)
  nameWithType: WeightMutationScheme<T>.MutateWeights(T[], IRandomSource)
  nameWithType.vb: WeightMutationScheme(Of T).MutateWeights(T(), IRandomSource)
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationScheme`1.MutateWeights*
  name: MutateWeights
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationScheme-1.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_WeightMutationScheme_1_MutateWeights_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationScheme`1.MutateWeights
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationScheme<T>.MutateWeights
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationScheme(Of T).MutateWeights
  nameWithType: WeightMutationScheme<T>.MutateWeights
  nameWithType.vb: WeightMutationScheme(Of T).MutateWeights
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationSchemeFactory
  name: WeightMutationSchemeFactory
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationSchemeFactory.html
  commentId: T:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationSchemeFactory
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationSchemeFactory
  nameWithType: WeightMutationSchemeFactory
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationSchemeFactory.CreateDefaultScheme(System.Double)
  name: CreateDefaultScheme(double)
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationSchemeFactory.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_WeightMutationSchemeFactory_CreateDefaultScheme_System_Double_
  commentId: M:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationSchemeFactory.CreateDefaultScheme(System.Double)
  name.vb: CreateDefaultScheme(Double)
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationSchemeFactory.CreateDefaultScheme(double)
  fullName.vb: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationSchemeFactory.CreateDefaultScheme(Double)
  nameWithType: WeightMutationSchemeFactory.CreateDefaultScheme(double)
  nameWithType.vb: WeightMutationSchemeFactory.CreateDefaultScheme(Double)
- uid: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationSchemeFactory.CreateDefaultScheme*
  name: CreateDefaultScheme
  href: api/SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationSchemeFactory.html#SharpNeat_Neat_Reproduction_Asexual_WeightMutation_WeightMutationSchemeFactory_CreateDefaultScheme_
  commentId: Overload:SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationSchemeFactory.CreateDefaultScheme
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Asexual.WeightMutation.WeightMutationSchemeFactory.CreateDefaultScheme
  nameWithType: WeightMutationSchemeFactory.CreateDefaultScheme
- uid: SharpNeat.Neat.Reproduction.Sexual
  name: SharpNeat.Neat.Reproduction.Sexual
  href: api/SharpNeat.Neat.Reproduction.Sexual.html
  commentId: N:SharpNeat.Neat.Reproduction.Sexual
  fullName: SharpNeat.Neat.Reproduction.Sexual
  nameWithType: SharpNeat.Neat.Reproduction.Sexual
- uid: SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexual`1
  name: NeatReproductionSexual<T>
  href: api/SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexual-1.html
  commentId: T:SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexual`1
  name.vb: NeatReproductionSexual(Of T)
  fullName: SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexual<T>
  fullName.vb: SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexual(Of T)
  nameWithType: NeatReproductionSexual<T>
  nameWithType.vb: NeatReproductionSexual(Of T)
- uid: SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexual`1.#ctor(SharpNeat.Neat.Genome.MetaNeatGenome{`0},SharpNeat.Neat.Genome.INeatGenomeBuilder{`0},Redzen.Structures.Int32Sequence,Redzen.Structures.Int32Sequence,SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexualSettings)
  name: NeatReproductionSexual(MetaNeatGenome<T>, INeatGenomeBuilder<T>, Int32Sequence, Int32Sequence, NeatReproductionSexualSettings)
  href: api/SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexual-1.html#SharpNeat_Neat_Reproduction_Sexual_NeatReproductionSexual_1__ctor_SharpNeat_Neat_Genome_MetaNeatGenome__0__SharpNeat_Neat_Genome_INeatGenomeBuilder__0__Redzen_Structures_Int32Sequence_Redzen_Structures_Int32Sequence_SharpNeat_Neat_Reproduction_Sexual_NeatReproductionSexualSettings_
  commentId: M:SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexual`1.#ctor(SharpNeat.Neat.Genome.MetaNeatGenome{`0},SharpNeat.Neat.Genome.INeatGenomeBuilder{`0},Redzen.Structures.Int32Sequence,Redzen.Structures.Int32Sequence,SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexualSettings)
  name.vb: New(MetaNeatGenome(Of T), INeatGenomeBuilder(Of T), Int32Sequence, Int32Sequence, NeatReproductionSexualSettings)
  fullName: SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexual<T>.NeatReproductionSexual(SharpNeat.Neat.Genome.MetaNeatGenome<T>, SharpNeat.Neat.Genome.INeatGenomeBuilder<T>, Redzen.Structures.Int32Sequence, Redzen.Structures.Int32Sequence, SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexualSettings)
  fullName.vb: SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexual(Of T).New(SharpNeat.Neat.Genome.MetaNeatGenome(Of T), SharpNeat.Neat.Genome.INeatGenomeBuilder(Of T), Redzen.Structures.Int32Sequence, Redzen.Structures.Int32Sequence, SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexualSettings)
  nameWithType: NeatReproductionSexual<T>.NeatReproductionSexual(MetaNeatGenome<T>, INeatGenomeBuilder<T>, Int32Sequence, Int32Sequence, NeatReproductionSexualSettings)
  nameWithType.vb: NeatReproductionSexual(Of T).New(MetaNeatGenome(Of T), INeatGenomeBuilder(Of T), Int32Sequence, Int32Sequence, NeatReproductionSexualSettings)
- uid: SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexual`1.#ctor*
  name: NeatReproductionSexual
  href: api/SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexual-1.html#SharpNeat_Neat_Reproduction_Sexual_NeatReproductionSexual_1__ctor_
  commentId: Overload:SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexual`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexual<T>.NeatReproductionSexual
  fullName.vb: SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexual(Of T).New
  nameWithType: NeatReproductionSexual<T>.NeatReproductionSexual
  nameWithType.vb: NeatReproductionSexual(Of T).New
- uid: SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexual`1.CreateGenome(SharpNeat.Neat.Genome.NeatGenome{`0},SharpNeat.Neat.Genome.NeatGenome{`0},Redzen.Random.IRandomSource)
  name: CreateGenome(NeatGenome<T>, NeatGenome<T>, IRandomSource)
  href: api/SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexual-1.html#SharpNeat_Neat_Reproduction_Sexual_NeatReproductionSexual_1_CreateGenome_SharpNeat_Neat_Genome_NeatGenome__0__SharpNeat_Neat_Genome_NeatGenome__0__Redzen_Random_IRandomSource_
  commentId: M:SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexual`1.CreateGenome(SharpNeat.Neat.Genome.NeatGenome{`0},SharpNeat.Neat.Genome.NeatGenome{`0},Redzen.Random.IRandomSource)
  name.vb: CreateGenome(NeatGenome(Of T), NeatGenome(Of T), IRandomSource)
  fullName: SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexual<T>.CreateGenome(SharpNeat.Neat.Genome.NeatGenome<T>, SharpNeat.Neat.Genome.NeatGenome<T>, Redzen.Random.IRandomSource)
  fullName.vb: SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexual(Of T).CreateGenome(SharpNeat.Neat.Genome.NeatGenome(Of T), SharpNeat.Neat.Genome.NeatGenome(Of T), Redzen.Random.IRandomSource)
  nameWithType: NeatReproductionSexual<T>.CreateGenome(NeatGenome<T>, NeatGenome<T>, IRandomSource)
  nameWithType.vb: NeatReproductionSexual(Of T).CreateGenome(NeatGenome(Of T), NeatGenome(Of T), IRandomSource)
- uid: SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexual`1.CreateGenome*
  name: CreateGenome
  href: api/SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexual-1.html#SharpNeat_Neat_Reproduction_Sexual_NeatReproductionSexual_1_CreateGenome_
  commentId: Overload:SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexual`1.CreateGenome
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexual<T>.CreateGenome
  fullName.vb: SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexual(Of T).CreateGenome
  nameWithType: NeatReproductionSexual<T>.CreateGenome
  nameWithType.vb: NeatReproductionSexual(Of T).CreateGenome
- uid: SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexualSettings
  name: NeatReproductionSexualSettings
  href: api/SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexualSettings.html
  commentId: T:SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexualSettings
  fullName: SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexualSettings
  nameWithType: NeatReproductionSexualSettings
- uid: SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexualSettings.SecondaryParentGeneProbability
  name: SecondaryParentGeneProbability
  href: api/SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexualSettings.html#SharpNeat_Neat_Reproduction_Sexual_NeatReproductionSexualSettings_SecondaryParentGeneProbability
  commentId: P:SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexualSettings.SecondaryParentGeneProbability
  fullName: SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexualSettings.SecondaryParentGeneProbability
  nameWithType: NeatReproductionSexualSettings.SecondaryParentGeneProbability
- uid: SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexualSettings.SecondaryParentGeneProbability*
  name: SecondaryParentGeneProbability
  href: api/SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexualSettings.html#SharpNeat_Neat_Reproduction_Sexual_NeatReproductionSexualSettings_SecondaryParentGeneProbability_
  commentId: Overload:SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexualSettings.SecondaryParentGeneProbability
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexualSettings.SecondaryParentGeneProbability
  nameWithType: NeatReproductionSexualSettings.SecondaryParentGeneProbability
- uid: SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexualSettings.Validate
  name: Validate()
  href: api/SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexualSettings.html#SharpNeat_Neat_Reproduction_Sexual_NeatReproductionSexualSettings_Validate
  commentId: M:SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexualSettings.Validate
  fullName: SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexualSettings.Validate()
  nameWithType: NeatReproductionSexualSettings.Validate()
- uid: SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexualSettings.Validate*
  name: Validate
  href: api/SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexualSettings.html#SharpNeat_Neat_Reproduction_Sexual_NeatReproductionSexualSettings_Validate_
  commentId: Overload:SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexualSettings.Validate
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Sexual.NeatReproductionSexualSettings.Validate
  nameWithType: NeatReproductionSexualSettings.Validate
- uid: SharpNeat.Neat.Reproduction.Sexual.Strategy
  name: SharpNeat.Neat.Reproduction.Sexual.Strategy
  href: api/SharpNeat.Neat.Reproduction.Sexual.Strategy.html
  commentId: N:SharpNeat.Neat.Reproduction.Sexual.Strategy
  fullName: SharpNeat.Neat.Reproduction.Sexual.Strategy
  nameWithType: SharpNeat.Neat.Reproduction.Sexual.Strategy
- uid: SharpNeat.Neat.Reproduction.Sexual.Strategy.ISexualReproductionStrategy`1
  name: ISexualReproductionStrategy<T>
  href: api/SharpNeat.Neat.Reproduction.Sexual.Strategy.ISexualReproductionStrategy-1.html
  commentId: T:SharpNeat.Neat.Reproduction.Sexual.Strategy.ISexualReproductionStrategy`1
  name.vb: ISexualReproductionStrategy(Of T)
  fullName: SharpNeat.Neat.Reproduction.Sexual.Strategy.ISexualReproductionStrategy<T>
  fullName.vb: SharpNeat.Neat.Reproduction.Sexual.Strategy.ISexualReproductionStrategy(Of T)
  nameWithType: ISexualReproductionStrategy<T>
  nameWithType.vb: ISexualReproductionStrategy(Of T)
- uid: SharpNeat.Neat.Reproduction.Sexual.Strategy.ISexualReproductionStrategy`1.CreateGenome(SharpNeat.Neat.Genome.NeatGenome{`0},SharpNeat.Neat.Genome.NeatGenome{`0},Redzen.Random.IRandomSource)
  name: CreateGenome(NeatGenome<T>, NeatGenome<T>, IRandomSource)
  href: api/SharpNeat.Neat.Reproduction.Sexual.Strategy.ISexualReproductionStrategy-1.html#SharpNeat_Neat_Reproduction_Sexual_Strategy_ISexualReproductionStrategy_1_CreateGenome_SharpNeat_Neat_Genome_NeatGenome__0__SharpNeat_Neat_Genome_NeatGenome__0__Redzen_Random_IRandomSource_
  commentId: M:SharpNeat.Neat.Reproduction.Sexual.Strategy.ISexualReproductionStrategy`1.CreateGenome(SharpNeat.Neat.Genome.NeatGenome{`0},SharpNeat.Neat.Genome.NeatGenome{`0},Redzen.Random.IRandomSource)
  name.vb: CreateGenome(NeatGenome(Of T), NeatGenome(Of T), IRandomSource)
  fullName: SharpNeat.Neat.Reproduction.Sexual.Strategy.ISexualReproductionStrategy<T>.CreateGenome(SharpNeat.Neat.Genome.NeatGenome<T>, SharpNeat.Neat.Genome.NeatGenome<T>, Redzen.Random.IRandomSource)
  fullName.vb: SharpNeat.Neat.Reproduction.Sexual.Strategy.ISexualReproductionStrategy(Of T).CreateGenome(SharpNeat.Neat.Genome.NeatGenome(Of T), SharpNeat.Neat.Genome.NeatGenome(Of T), Redzen.Random.IRandomSource)
  nameWithType: ISexualReproductionStrategy<T>.CreateGenome(NeatGenome<T>, NeatGenome<T>, IRandomSource)
  nameWithType.vb: ISexualReproductionStrategy(Of T).CreateGenome(NeatGenome(Of T), NeatGenome(Of T), IRandomSource)
- uid: SharpNeat.Neat.Reproduction.Sexual.Strategy.ISexualReproductionStrategy`1.CreateGenome*
  name: CreateGenome
  href: api/SharpNeat.Neat.Reproduction.Sexual.Strategy.ISexualReproductionStrategy-1.html#SharpNeat_Neat_Reproduction_Sexual_Strategy_ISexualReproductionStrategy_1_CreateGenome_
  commentId: Overload:SharpNeat.Neat.Reproduction.Sexual.Strategy.ISexualReproductionStrategy`1.CreateGenome
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Sexual.Strategy.ISexualReproductionStrategy<T>.CreateGenome
  fullName.vb: SharpNeat.Neat.Reproduction.Sexual.Strategy.ISexualReproductionStrategy(Of T).CreateGenome
  nameWithType: ISexualReproductionStrategy<T>.CreateGenome
  nameWithType.vb: ISexualReproductionStrategy(Of T).CreateGenome
- uid: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover
  name: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover
  href: api/SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.html
  commentId: N:SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover
  fullName: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover
  nameWithType: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover
- uid: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.CyclicConnectionCheck
  name: CyclicConnectionCheck
  href: api/SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.CyclicConnectionCheck.html
  commentId: T:SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.CyclicConnectionCheck
  fullName: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.CyclicConnectionCheck
  nameWithType: CyclicConnectionCheck
- uid: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.CyclicConnectionCheck.IsConnectionCyclic(System.Span{SharpNeat.Graphs.DirectedConnection},SharpNeat.Graphs.DirectedConnection@)
  name: IsConnectionCyclic(Span<DirectedConnection>, in DirectedConnection)
  href: api/SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.CyclicConnectionCheck.html#SharpNeat_Neat_Reproduction_Sexual_Strategy_UniformCrossover_CyclicConnectionCheck_IsConnectionCyclic_System_Span_SharpNeat_Graphs_DirectedConnection__SharpNeat_Graphs_DirectedConnection__
  commentId: M:SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.CyclicConnectionCheck.IsConnectionCyclic(System.Span{SharpNeat.Graphs.DirectedConnection},SharpNeat.Graphs.DirectedConnection@)
  name.vb: IsConnectionCyclic(Span(Of DirectedConnection), DirectedConnection)
  fullName: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.CyclicConnectionCheck.IsConnectionCyclic(System.Span<SharpNeat.Graphs.DirectedConnection>, in SharpNeat.Graphs.DirectedConnection)
  fullName.vb: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.CyclicConnectionCheck.IsConnectionCyclic(System.Span(Of SharpNeat.Graphs.DirectedConnection), SharpNeat.Graphs.DirectedConnection)
  nameWithType: CyclicConnectionCheck.IsConnectionCyclic(Span<DirectedConnection>, in DirectedConnection)
  nameWithType.vb: CyclicConnectionCheck.IsConnectionCyclic(Span(Of DirectedConnection), DirectedConnection)
- uid: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.CyclicConnectionCheck.IsConnectionCyclic*
  name: IsConnectionCyclic
  href: api/SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.CyclicConnectionCheck.html#SharpNeat_Neat_Reproduction_Sexual_Strategy_UniformCrossover_CyclicConnectionCheck_IsConnectionCyclic_
  commentId: Overload:SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.CyclicConnectionCheck.IsConnectionCyclic
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.CyclicConnectionCheck.IsConnectionCyclic
  nameWithType: CyclicConnectionCheck.IsConnectionCyclic
- uid: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.EnumerateParentGenesTests
  name: EnumerateParentGenesTests
  href: api/SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.EnumerateParentGenesTests.html
  commentId: T:SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.EnumerateParentGenesTests
  fullName: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.EnumerateParentGenesTests
  nameWithType: EnumerateParentGenesTests
- uid: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.EnumerateParentGenesTests.EnumerateParentGenes_CompareWithSelf
  name: EnumerateParentGenes_CompareWithSelf()
  href: api/SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.EnumerateParentGenesTests.html#SharpNeat_Neat_Reproduction_Sexual_Strategy_UniformCrossover_EnumerateParentGenesTests_EnumerateParentGenes_CompareWithSelf
  commentId: M:SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.EnumerateParentGenesTests.EnumerateParentGenes_CompareWithSelf
  fullName: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.EnumerateParentGenesTests.EnumerateParentGenes_CompareWithSelf()
  nameWithType: EnumerateParentGenesTests.EnumerateParentGenes_CompareWithSelf()
- uid: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.EnumerateParentGenesTests.EnumerateParentGenes_CompareWithSelf*
  name: EnumerateParentGenes_CompareWithSelf
  href: api/SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.EnumerateParentGenesTests.html#SharpNeat_Neat_Reproduction_Sexual_Strategy_UniformCrossover_EnumerateParentGenesTests_EnumerateParentGenes_CompareWithSelf_
  commentId: Overload:SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.EnumerateParentGenesTests.EnumerateParentGenes_CompareWithSelf
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.EnumerateParentGenesTests.EnumerateParentGenes_CompareWithSelf
  nameWithType: EnumerateParentGenesTests.EnumerateParentGenes_CompareWithSelf
- uid: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.EnumerateParentGenesTests.EnumerateParentGenes_ExcessGeneInParent1
  name: EnumerateParentGenes_ExcessGeneInParent1()
  href: api/SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.EnumerateParentGenesTests.html#SharpNeat_Neat_Reproduction_Sexual_Strategy_UniformCrossover_EnumerateParentGenesTests_EnumerateParentGenes_ExcessGeneInParent1
  commentId: M:SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.EnumerateParentGenesTests.EnumerateParentGenes_ExcessGeneInParent1
  fullName: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.EnumerateParentGenesTests.EnumerateParentGenes_ExcessGeneInParent1()
  nameWithType: EnumerateParentGenesTests.EnumerateParentGenes_ExcessGeneInParent1()
- uid: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.EnumerateParentGenesTests.EnumerateParentGenes_ExcessGeneInParent1*
  name: EnumerateParentGenes_ExcessGeneInParent1
  href: api/SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.EnumerateParentGenesTests.html#SharpNeat_Neat_Reproduction_Sexual_Strategy_UniformCrossover_EnumerateParentGenesTests_EnumerateParentGenes_ExcessGeneInParent1_
  commentId: Overload:SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.EnumerateParentGenesTests.EnumerateParentGenes_ExcessGeneInParent1
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.EnumerateParentGenesTests.EnumerateParentGenes_ExcessGeneInParent1
  nameWithType: EnumerateParentGenesTests.EnumerateParentGenes_ExcessGeneInParent1
- uid: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.EnumerateParentGenesTests.EnumerateParentGenes_ExcessGeneInParent2
  name: EnumerateParentGenes_ExcessGeneInParent2()
  href: api/SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.EnumerateParentGenesTests.html#SharpNeat_Neat_Reproduction_Sexual_Strategy_UniformCrossover_EnumerateParentGenesTests_EnumerateParentGenes_ExcessGeneInParent2
  commentId: M:SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.EnumerateParentGenesTests.EnumerateParentGenes_ExcessGeneInParent2
  fullName: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.EnumerateParentGenesTests.EnumerateParentGenes_ExcessGeneInParent2()
  nameWithType: EnumerateParentGenesTests.EnumerateParentGenes_ExcessGeneInParent2()
- uid: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.EnumerateParentGenesTests.EnumerateParentGenes_ExcessGeneInParent2*
  name: EnumerateParentGenes_ExcessGeneInParent2
  href: api/SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.EnumerateParentGenesTests.html#SharpNeat_Neat_Reproduction_Sexual_Strategy_UniformCrossover_EnumerateParentGenesTests_EnumerateParentGenes_ExcessGeneInParent2_
  commentId: Overload:SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.EnumerateParentGenesTests.EnumerateParentGenes_ExcessGeneInParent2
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.EnumerateParentGenesTests.EnumerateParentGenes_ExcessGeneInParent2
  nameWithType: EnumerateParentGenesTests.EnumerateParentGenes_ExcessGeneInParent2
- uid: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategy`1
  name: UniformCrossoverReproductionStrategy<T>
  href: api/SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategy-1.html
  commentId: T:SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategy`1
  name.vb: UniformCrossoverReproductionStrategy(Of T)
  fullName: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategy<T>
  fullName.vb: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategy(Of T)
  nameWithType: UniformCrossoverReproductionStrategy<T>
  nameWithType.vb: UniformCrossoverReproductionStrategy(Of T)
- uid: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategy`1.#ctor(System.Boolean,System.Double,SharpNeat.Neat.Genome.INeatGenomeBuilder{`0},Redzen.Structures.Int32Sequence,Redzen.Structures.Int32Sequence)
  name: UniformCrossoverReproductionStrategy(bool, double, INeatGenomeBuilder<T>, Int32Sequence, Int32Sequence)
  href: api/SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategy-1.html#SharpNeat_Neat_Reproduction_Sexual_Strategy_UniformCrossover_UniformCrossoverReproductionStrategy_1__ctor_System_Boolean_System_Double_SharpNeat_Neat_Genome_INeatGenomeBuilder__0__Redzen_Structures_Int32Sequence_Redzen_Structures_Int32Sequence_
  commentId: M:SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategy`1.#ctor(System.Boolean,System.Double,SharpNeat.Neat.Genome.INeatGenomeBuilder{`0},Redzen.Structures.Int32Sequence,Redzen.Structures.Int32Sequence)
  name.vb: New(Boolean, Double, INeatGenomeBuilder(Of T), Int32Sequence, Int32Sequence)
  fullName: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategy<T>.UniformCrossoverReproductionStrategy(bool, double, SharpNeat.Neat.Genome.INeatGenomeBuilder<T>, Redzen.Structures.Int32Sequence, Redzen.Structures.Int32Sequence)
  fullName.vb: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategy(Of T).New(Boolean, Double, SharpNeat.Neat.Genome.INeatGenomeBuilder(Of T), Redzen.Structures.Int32Sequence, Redzen.Structures.Int32Sequence)
  nameWithType: UniformCrossoverReproductionStrategy<T>.UniformCrossoverReproductionStrategy(bool, double, INeatGenomeBuilder<T>, Int32Sequence, Int32Sequence)
  nameWithType.vb: UniformCrossoverReproductionStrategy(Of T).New(Boolean, Double, INeatGenomeBuilder(Of T), Int32Sequence, Int32Sequence)
- uid: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategy`1.#ctor*
  name: UniformCrossoverReproductionStrategy
  href: api/SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategy-1.html#SharpNeat_Neat_Reproduction_Sexual_Strategy_UniformCrossover_UniformCrossoverReproductionStrategy_1__ctor_
  commentId: Overload:SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategy`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategy<T>.UniformCrossoverReproductionStrategy
  fullName.vb: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategy(Of T).New
  nameWithType: UniformCrossoverReproductionStrategy<T>.UniformCrossoverReproductionStrategy
  nameWithType.vb: UniformCrossoverReproductionStrategy(Of T).New
- uid: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategy`1.CreateGenome(SharpNeat.Neat.Genome.NeatGenome{`0},SharpNeat.Neat.Genome.NeatGenome{`0},Redzen.Random.IRandomSource)
  name: CreateGenome(NeatGenome<T>, NeatGenome<T>, IRandomSource)
  href: api/SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategy-1.html#SharpNeat_Neat_Reproduction_Sexual_Strategy_UniformCrossover_UniformCrossoverReproductionStrategy_1_CreateGenome_SharpNeat_Neat_Genome_NeatGenome__0__SharpNeat_Neat_Genome_NeatGenome__0__Redzen_Random_IRandomSource_
  commentId: M:SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategy`1.CreateGenome(SharpNeat.Neat.Genome.NeatGenome{`0},SharpNeat.Neat.Genome.NeatGenome{`0},Redzen.Random.IRandomSource)
  name.vb: CreateGenome(NeatGenome(Of T), NeatGenome(Of T), IRandomSource)
  fullName: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategy<T>.CreateGenome(SharpNeat.Neat.Genome.NeatGenome<T>, SharpNeat.Neat.Genome.NeatGenome<T>, Redzen.Random.IRandomSource)
  fullName.vb: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategy(Of T).CreateGenome(SharpNeat.Neat.Genome.NeatGenome(Of T), SharpNeat.Neat.Genome.NeatGenome(Of T), Redzen.Random.IRandomSource)
  nameWithType: UniformCrossoverReproductionStrategy<T>.CreateGenome(NeatGenome<T>, NeatGenome<T>, IRandomSource)
  nameWithType.vb: UniformCrossoverReproductionStrategy(Of T).CreateGenome(NeatGenome(Of T), NeatGenome(Of T), IRandomSource)
- uid: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategy`1.CreateGenome*
  name: CreateGenome
  href: api/SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategy-1.html#SharpNeat_Neat_Reproduction_Sexual_Strategy_UniformCrossover_UniformCrossoverReproductionStrategy_1_CreateGenome_
  commentId: Overload:SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategy`1.CreateGenome
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategy<T>.CreateGenome
  fullName.vb: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategy(Of T).CreateGenome
  nameWithType: UniformCrossoverReproductionStrategy<T>.CreateGenome
  nameWithType.vb: UniformCrossoverReproductionStrategy(Of T).CreateGenome
- uid: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategyTests
  name: UniformCrossoverReproductionStrategyTests
  href: api/SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategyTests.html
  commentId: T:SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategyTests
  fullName: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategyTests
  nameWithType: UniformCrossoverReproductionStrategyTests
- uid: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategyTests.CreateGenome
  name: CreateGenome()
  href: api/SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategyTests.html#SharpNeat_Neat_Reproduction_Sexual_Strategy_UniformCrossover_UniformCrossoverReproductionStrategyTests_CreateGenome
  commentId: M:SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategyTests.CreateGenome
  fullName: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategyTests.CreateGenome()
  nameWithType: UniformCrossoverReproductionStrategyTests.CreateGenome()
- uid: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategyTests.CreateGenome*
  name: CreateGenome
  href: api/SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategyTests.html#SharpNeat_Neat_Reproduction_Sexual_Strategy_UniformCrossover_UniformCrossoverReproductionStrategyTests_CreateGenome_
  commentId: Overload:SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategyTests.CreateGenome
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategyTests.CreateGenome
  nameWithType: UniformCrossoverReproductionStrategyTests.CreateGenome
- uid: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategyTestsUtils
  name: UniformCrossoverReproductionStrategyTestsUtils
  href: api/SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategyTestsUtils.html
  commentId: T:SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategyTestsUtils
  fullName: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategyTestsUtils
  nameWithType: UniformCrossoverReproductionStrategyTestsUtils
- uid: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategyTestsUtils.CreateNeatPopulation(System.Int32)
  name: CreateNeatPopulation(int)
  href: api/SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategyTestsUtils.html#SharpNeat_Neat_Reproduction_Sexual_Strategy_UniformCrossover_UniformCrossoverReproductionStrategyTestsUtils_CreateNeatPopulation_System_Int32_
  commentId: M:SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategyTestsUtils.CreateNeatPopulation(System.Int32)
  name.vb: CreateNeatPopulation(Integer)
  fullName: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategyTestsUtils.CreateNeatPopulation(int)
  fullName.vb: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategyTestsUtils.CreateNeatPopulation(Integer)
  nameWithType: UniformCrossoverReproductionStrategyTestsUtils.CreateNeatPopulation(int)
  nameWithType.vb: UniformCrossoverReproductionStrategyTestsUtils.CreateNeatPopulation(Integer)
- uid: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategyTestsUtils.CreateNeatPopulation*
  name: CreateNeatPopulation
  href: api/SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategyTestsUtils.html#SharpNeat_Neat_Reproduction_Sexual_Strategy_UniformCrossover_UniformCrossoverReproductionStrategyTestsUtils_CreateNeatPopulation_
  commentId: Overload:SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategyTestsUtils.CreateNeatPopulation
  isSpec: "True"
  fullName: SharpNeat.Neat.Reproduction.Sexual.Strategy.UniformCrossover.UniformCrossoverReproductionStrategyTestsUtils.CreateNeatPopulation
  nameWithType: UniformCrossoverReproductionStrategyTestsUtils.CreateNeatPopulation
- uid: SharpNeat.Neat.Speciation
  name: SharpNeat.Neat.Speciation
  href: api/SharpNeat.Neat.Speciation.html
  commentId: N:SharpNeat.Neat.Speciation
  fullName: SharpNeat.Neat.Speciation
  nameWithType: SharpNeat.Neat.Speciation
- uid: SharpNeat.Neat.Speciation.GeneticKMeans
  name: SharpNeat.Neat.Speciation.GeneticKMeans
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.html
  commentId: N:SharpNeat.Neat.Speciation.GeneticKMeans
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans
  nameWithType: SharpNeat.Neat.Speciation.GeneticKMeans
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategy`1
  name: GeneticKMeansSpeciationStrategy<T>
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategy-1.html
  commentId: T:SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategy`1
  name.vb: GeneticKMeansSpeciationStrategy(Of T)
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategy<T>
  fullName.vb: SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategy(Of T)
  nameWithType: GeneticKMeansSpeciationStrategy<T>
  nameWithType.vb: GeneticKMeansSpeciationStrategy(Of T)
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategy`1.#ctor(SharpNeat.Neat.DistanceMetrics.IDistanceMetric{`0},System.Int32)
  name: GeneticKMeansSpeciationStrategy(IDistanceMetric<T>, int)
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategy-1.html#SharpNeat_Neat_Speciation_GeneticKMeans_GeneticKMeansSpeciationStrategy_1__ctor_SharpNeat_Neat_DistanceMetrics_IDistanceMetric__0__System_Int32_
  commentId: M:SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategy`1.#ctor(SharpNeat.Neat.DistanceMetrics.IDistanceMetric{`0},System.Int32)
  name.vb: New(IDistanceMetric(Of T), Integer)
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategy<T>.GeneticKMeansSpeciationStrategy(SharpNeat.Neat.DistanceMetrics.IDistanceMetric<T>, int)
  fullName.vb: SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategy(Of T).New(SharpNeat.Neat.DistanceMetrics.IDistanceMetric(Of T), Integer)
  nameWithType: GeneticKMeansSpeciationStrategy<T>.GeneticKMeansSpeciationStrategy(IDistanceMetric<T>, int)
  nameWithType.vb: GeneticKMeansSpeciationStrategy(Of T).New(IDistanceMetric(Of T), Integer)
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategy`1.#ctor*
  name: GeneticKMeansSpeciationStrategy
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategy-1.html#SharpNeat_Neat_Speciation_GeneticKMeans_GeneticKMeansSpeciationStrategy_1__ctor_
  commentId: Overload:SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategy`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategy<T>.GeneticKMeansSpeciationStrategy
  fullName.vb: SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategy(Of T).New
  nameWithType: GeneticKMeansSpeciationStrategy<T>.GeneticKMeansSpeciationStrategy
  nameWithType.vb: GeneticKMeansSpeciationStrategy(Of T).New
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategy`1.SpeciateAdd(System.Collections.Generic.IList{SharpNeat.Neat.Genome.NeatGenome{`0}},SharpNeat.Neat.Speciation.Species{`0}[],Redzen.Random.IRandomSource)
  name: SpeciateAdd(IList<NeatGenome<T>>, Species<T>[], IRandomSource)
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategy-1.html#SharpNeat_Neat_Speciation_GeneticKMeans_GeneticKMeansSpeciationStrategy_1_SpeciateAdd_System_Collections_Generic_IList_SharpNeat_Neat_Genome_NeatGenome__0___SharpNeat_Neat_Speciation_Species__0____Redzen_Random_IRandomSource_
  commentId: M:SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategy`1.SpeciateAdd(System.Collections.Generic.IList{SharpNeat.Neat.Genome.NeatGenome{`0}},SharpNeat.Neat.Speciation.Species{`0}[],Redzen.Random.IRandomSource)
  name.vb: SpeciateAdd(IList(Of NeatGenome(Of T)), Species(Of T)(), IRandomSource)
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategy<T>.SpeciateAdd(System.Collections.Generic.IList<SharpNeat.Neat.Genome.NeatGenome<T>>, SharpNeat.Neat.Speciation.Species<T>[], Redzen.Random.IRandomSource)
  fullName.vb: SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategy(Of T).SpeciateAdd(System.Collections.Generic.IList(Of SharpNeat.Neat.Genome.NeatGenome(Of T)), SharpNeat.Neat.Speciation.Species(Of T)(), Redzen.Random.IRandomSource)
  nameWithType: GeneticKMeansSpeciationStrategy<T>.SpeciateAdd(IList<NeatGenome<T>>, Species<T>[], IRandomSource)
  nameWithType.vb: GeneticKMeansSpeciationStrategy(Of T).SpeciateAdd(IList(Of NeatGenome(Of T)), Species(Of T)(), IRandomSource)
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategy`1.SpeciateAdd*
  name: SpeciateAdd
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategy-1.html#SharpNeat_Neat_Speciation_GeneticKMeans_GeneticKMeansSpeciationStrategy_1_SpeciateAdd_
  commentId: Overload:SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategy`1.SpeciateAdd
  isSpec: "True"
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategy<T>.SpeciateAdd
  fullName.vb: SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategy(Of T).SpeciateAdd
  nameWithType: GeneticKMeansSpeciationStrategy<T>.SpeciateAdd
  nameWithType.vb: GeneticKMeansSpeciationStrategy(Of T).SpeciateAdd
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategy`1.SpeciateAll(System.Collections.Generic.IList{SharpNeat.Neat.Genome.NeatGenome{`0}},System.Int32,Redzen.Random.IRandomSource)
  name: SpeciateAll(IList<NeatGenome<T>>, int, IRandomSource)
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategy-1.html#SharpNeat_Neat_Speciation_GeneticKMeans_GeneticKMeansSpeciationStrategy_1_SpeciateAll_System_Collections_Generic_IList_SharpNeat_Neat_Genome_NeatGenome__0___System_Int32_Redzen_Random_IRandomSource_
  commentId: M:SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategy`1.SpeciateAll(System.Collections.Generic.IList{SharpNeat.Neat.Genome.NeatGenome{`0}},System.Int32,Redzen.Random.IRandomSource)
  name.vb: SpeciateAll(IList(Of NeatGenome(Of T)), Integer, IRandomSource)
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategy<T>.SpeciateAll(System.Collections.Generic.IList<SharpNeat.Neat.Genome.NeatGenome<T>>, int, Redzen.Random.IRandomSource)
  fullName.vb: SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategy(Of T).SpeciateAll(System.Collections.Generic.IList(Of SharpNeat.Neat.Genome.NeatGenome(Of T)), Integer, Redzen.Random.IRandomSource)
  nameWithType: GeneticKMeansSpeciationStrategy<T>.SpeciateAll(IList<NeatGenome<T>>, int, IRandomSource)
  nameWithType.vb: GeneticKMeansSpeciationStrategy(Of T).SpeciateAll(IList(Of NeatGenome(Of T)), Integer, IRandomSource)
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategy`1.SpeciateAll*
  name: SpeciateAll
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategy-1.html#SharpNeat_Neat_Speciation_GeneticKMeans_GeneticKMeansSpeciationStrategy_1_SpeciateAll_
  commentId: Overload:SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategy`1.SpeciateAll
  isSpec: "True"
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategy<T>.SpeciateAll
  fullName.vb: SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategy(Of T).SpeciateAll
  nameWithType: GeneticKMeansSpeciationStrategy<T>.SpeciateAll
  nameWithType.vb: GeneticKMeansSpeciationStrategy(Of T).SpeciateAll
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategyTests
  name: GeneticKMeansSpeciationStrategyTests
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategyTests.html
  commentId: T:SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategyTests
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategyTests
  nameWithType: GeneticKMeansSpeciationStrategyTests
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategyTests.SpeciateAdd_Euclidean
  name: SpeciateAdd_Euclidean()
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategyTests.html#SharpNeat_Neat_Speciation_GeneticKMeans_GeneticKMeansSpeciationStrategyTests_SpeciateAdd_Euclidean
  commentId: M:SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategyTests.SpeciateAdd_Euclidean
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategyTests.SpeciateAdd_Euclidean()
  nameWithType: GeneticKMeansSpeciationStrategyTests.SpeciateAdd_Euclidean()
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategyTests.SpeciateAdd_Euclidean*
  name: SpeciateAdd_Euclidean
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategyTests.html#SharpNeat_Neat_Speciation_GeneticKMeans_GeneticKMeansSpeciationStrategyTests_SpeciateAdd_Euclidean_
  commentId: Overload:SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategyTests.SpeciateAdd_Euclidean
  isSpec: "True"
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategyTests.SpeciateAdd_Euclidean
  nameWithType: GeneticKMeansSpeciationStrategyTests.SpeciateAdd_Euclidean
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategyTests.SpeciateAdd_Manhattan
  name: SpeciateAdd_Manhattan()
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategyTests.html#SharpNeat_Neat_Speciation_GeneticKMeans_GeneticKMeansSpeciationStrategyTests_SpeciateAdd_Manhattan
  commentId: M:SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategyTests.SpeciateAdd_Manhattan
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategyTests.SpeciateAdd_Manhattan()
  nameWithType: GeneticKMeansSpeciationStrategyTests.SpeciateAdd_Manhattan()
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategyTests.SpeciateAdd_Manhattan*
  name: SpeciateAdd_Manhattan
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategyTests.html#SharpNeat_Neat_Speciation_GeneticKMeans_GeneticKMeansSpeciationStrategyTests_SpeciateAdd_Manhattan_
  commentId: Overload:SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategyTests.SpeciateAdd_Manhattan
  isSpec: "True"
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategyTests.SpeciateAdd_Manhattan
  nameWithType: GeneticKMeansSpeciationStrategyTests.SpeciateAdd_Manhattan
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategyTests.SpeciateAll_Euclidean
  name: SpeciateAll_Euclidean()
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategyTests.html#SharpNeat_Neat_Speciation_GeneticKMeans_GeneticKMeansSpeciationStrategyTests_SpeciateAll_Euclidean
  commentId: M:SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategyTests.SpeciateAll_Euclidean
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategyTests.SpeciateAll_Euclidean()
  nameWithType: GeneticKMeansSpeciationStrategyTests.SpeciateAll_Euclidean()
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategyTests.SpeciateAll_Euclidean*
  name: SpeciateAll_Euclidean
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategyTests.html#SharpNeat_Neat_Speciation_GeneticKMeans_GeneticKMeansSpeciationStrategyTests_SpeciateAll_Euclidean_
  commentId: Overload:SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategyTests.SpeciateAll_Euclidean
  isSpec: "True"
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategyTests.SpeciateAll_Euclidean
  nameWithType: GeneticKMeansSpeciationStrategyTests.SpeciateAll_Euclidean
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategyTests.SpeciateAll_Manhattan
  name: SpeciateAll_Manhattan()
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategyTests.html#SharpNeat_Neat_Speciation_GeneticKMeans_GeneticKMeansSpeciationStrategyTests_SpeciateAll_Manhattan
  commentId: M:SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategyTests.SpeciateAll_Manhattan
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategyTests.SpeciateAll_Manhattan()
  nameWithType: GeneticKMeansSpeciationStrategyTests.SpeciateAll_Manhattan()
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategyTests.SpeciateAll_Manhattan*
  name: SpeciateAll_Manhattan
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategyTests.html#SharpNeat_Neat_Speciation_GeneticKMeans_GeneticKMeansSpeciationStrategyTests_SpeciateAll_Manhattan_
  commentId: Overload:SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategyTests.SpeciateAll_Manhattan
  isSpec: "True"
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.GeneticKMeansSpeciationStrategyTests.SpeciateAll_Manhattan
  nameWithType: GeneticKMeansSpeciationStrategyTests.SpeciateAll_Manhattan
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized
  name: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.html
  commentId: N:SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized
  nameWithType: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategy`1
  name: GeneticKMeansSpeciationStrategy<T>
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategy-1.html
  commentId: T:SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategy`1
  name.vb: GeneticKMeansSpeciationStrategy(Of T)
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategy<T>
  fullName.vb: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategy(Of T)
  nameWithType: GeneticKMeansSpeciationStrategy<T>
  nameWithType.vb: GeneticKMeansSpeciationStrategy(Of T)
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategy`1.#ctor(SharpNeat.Neat.DistanceMetrics.IDistanceMetric{`0},System.Int32,System.Int32)
  name: GeneticKMeansSpeciationStrategy(IDistanceMetric<T>, int, int)
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategy-1.html#SharpNeat_Neat_Speciation_GeneticKMeans_Parallelized_GeneticKMeansSpeciationStrategy_1__ctor_SharpNeat_Neat_DistanceMetrics_IDistanceMetric__0__System_Int32_System_Int32_
  commentId: M:SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategy`1.#ctor(SharpNeat.Neat.DistanceMetrics.IDistanceMetric{`0},System.Int32,System.Int32)
  name.vb: New(IDistanceMetric(Of T), Integer, Integer)
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategy<T>.GeneticKMeansSpeciationStrategy(SharpNeat.Neat.DistanceMetrics.IDistanceMetric<T>, int, int)
  fullName.vb: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategy(Of T).New(SharpNeat.Neat.DistanceMetrics.IDistanceMetric(Of T), Integer, Integer)
  nameWithType: GeneticKMeansSpeciationStrategy<T>.GeneticKMeansSpeciationStrategy(IDistanceMetric<T>, int, int)
  nameWithType.vb: GeneticKMeansSpeciationStrategy(Of T).New(IDistanceMetric(Of T), Integer, Integer)
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategy`1.#ctor*
  name: GeneticKMeansSpeciationStrategy
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategy-1.html#SharpNeat_Neat_Speciation_GeneticKMeans_Parallelized_GeneticKMeansSpeciationStrategy_1__ctor_
  commentId: Overload:SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategy`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategy<T>.GeneticKMeansSpeciationStrategy
  fullName.vb: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategy(Of T).New
  nameWithType: GeneticKMeansSpeciationStrategy<T>.GeneticKMeansSpeciationStrategy
  nameWithType.vb: GeneticKMeansSpeciationStrategy(Of T).New
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategy`1.SpeciateAdd(System.Collections.Generic.IList{SharpNeat.Neat.Genome.NeatGenome{`0}},SharpNeat.Neat.Speciation.Species{`0}[],Redzen.Random.IRandomSource)
  name: SpeciateAdd(IList<NeatGenome<T>>, Species<T>[], IRandomSource)
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategy-1.html#SharpNeat_Neat_Speciation_GeneticKMeans_Parallelized_GeneticKMeansSpeciationStrategy_1_SpeciateAdd_System_Collections_Generic_IList_SharpNeat_Neat_Genome_NeatGenome__0___SharpNeat_Neat_Speciation_Species__0____Redzen_Random_IRandomSource_
  commentId: M:SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategy`1.SpeciateAdd(System.Collections.Generic.IList{SharpNeat.Neat.Genome.NeatGenome{`0}},SharpNeat.Neat.Speciation.Species{`0}[],Redzen.Random.IRandomSource)
  name.vb: SpeciateAdd(IList(Of NeatGenome(Of T)), Species(Of T)(), IRandomSource)
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategy<T>.SpeciateAdd(System.Collections.Generic.IList<SharpNeat.Neat.Genome.NeatGenome<T>>, SharpNeat.Neat.Speciation.Species<T>[], Redzen.Random.IRandomSource)
  fullName.vb: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategy(Of T).SpeciateAdd(System.Collections.Generic.IList(Of SharpNeat.Neat.Genome.NeatGenome(Of T)), SharpNeat.Neat.Speciation.Species(Of T)(), Redzen.Random.IRandomSource)
  nameWithType: GeneticKMeansSpeciationStrategy<T>.SpeciateAdd(IList<NeatGenome<T>>, Species<T>[], IRandomSource)
  nameWithType.vb: GeneticKMeansSpeciationStrategy(Of T).SpeciateAdd(IList(Of NeatGenome(Of T)), Species(Of T)(), IRandomSource)
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategy`1.SpeciateAdd*
  name: SpeciateAdd
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategy-1.html#SharpNeat_Neat_Speciation_GeneticKMeans_Parallelized_GeneticKMeansSpeciationStrategy_1_SpeciateAdd_
  commentId: Overload:SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategy`1.SpeciateAdd
  isSpec: "True"
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategy<T>.SpeciateAdd
  fullName.vb: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategy(Of T).SpeciateAdd
  nameWithType: GeneticKMeansSpeciationStrategy<T>.SpeciateAdd
  nameWithType.vb: GeneticKMeansSpeciationStrategy(Of T).SpeciateAdd
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategy`1.SpeciateAll(System.Collections.Generic.IList{SharpNeat.Neat.Genome.NeatGenome{`0}},System.Int32,Redzen.Random.IRandomSource)
  name: SpeciateAll(IList<NeatGenome<T>>, int, IRandomSource)
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategy-1.html#SharpNeat_Neat_Speciation_GeneticKMeans_Parallelized_GeneticKMeansSpeciationStrategy_1_SpeciateAll_System_Collections_Generic_IList_SharpNeat_Neat_Genome_NeatGenome__0___System_Int32_Redzen_Random_IRandomSource_
  commentId: M:SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategy`1.SpeciateAll(System.Collections.Generic.IList{SharpNeat.Neat.Genome.NeatGenome{`0}},System.Int32,Redzen.Random.IRandomSource)
  name.vb: SpeciateAll(IList(Of NeatGenome(Of T)), Integer, IRandomSource)
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategy<T>.SpeciateAll(System.Collections.Generic.IList<SharpNeat.Neat.Genome.NeatGenome<T>>, int, Redzen.Random.IRandomSource)
  fullName.vb: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategy(Of T).SpeciateAll(System.Collections.Generic.IList(Of SharpNeat.Neat.Genome.NeatGenome(Of T)), Integer, Redzen.Random.IRandomSource)
  nameWithType: GeneticKMeansSpeciationStrategy<T>.SpeciateAll(IList<NeatGenome<T>>, int, IRandomSource)
  nameWithType.vb: GeneticKMeansSpeciationStrategy(Of T).SpeciateAll(IList(Of NeatGenome(Of T)), Integer, IRandomSource)
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategy`1.SpeciateAll*
  name: SpeciateAll
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategy-1.html#SharpNeat_Neat_Speciation_GeneticKMeans_Parallelized_GeneticKMeansSpeciationStrategy_1_SpeciateAll_
  commentId: Overload:SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategy`1.SpeciateAll
  isSpec: "True"
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategy<T>.SpeciateAll
  fullName.vb: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategy(Of T).SpeciateAll
  nameWithType: GeneticKMeansSpeciationStrategy<T>.SpeciateAll
  nameWithType.vb: GeneticKMeansSpeciationStrategy(Of T).SpeciateAll
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategyTests
  name: GeneticKMeansSpeciationStrategyTests
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategyTests.html
  commentId: T:SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategyTests
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategyTests
  nameWithType: GeneticKMeansSpeciationStrategyTests
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategyTests.SpeciateAdd_Euclidean
  name: SpeciateAdd_Euclidean()
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategyTests.html#SharpNeat_Neat_Speciation_GeneticKMeans_Parallelized_GeneticKMeansSpeciationStrategyTests_SpeciateAdd_Euclidean
  commentId: M:SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategyTests.SpeciateAdd_Euclidean
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategyTests.SpeciateAdd_Euclidean()
  nameWithType: GeneticKMeansSpeciationStrategyTests.SpeciateAdd_Euclidean()
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategyTests.SpeciateAdd_Euclidean*
  name: SpeciateAdd_Euclidean
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategyTests.html#SharpNeat_Neat_Speciation_GeneticKMeans_Parallelized_GeneticKMeansSpeciationStrategyTests_SpeciateAdd_Euclidean_
  commentId: Overload:SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategyTests.SpeciateAdd_Euclidean
  isSpec: "True"
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategyTests.SpeciateAdd_Euclidean
  nameWithType: GeneticKMeansSpeciationStrategyTests.SpeciateAdd_Euclidean
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategyTests.SpeciateAdd_Manhattan
  name: SpeciateAdd_Manhattan()
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategyTests.html#SharpNeat_Neat_Speciation_GeneticKMeans_Parallelized_GeneticKMeansSpeciationStrategyTests_SpeciateAdd_Manhattan
  commentId: M:SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategyTests.SpeciateAdd_Manhattan
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategyTests.SpeciateAdd_Manhattan()
  nameWithType: GeneticKMeansSpeciationStrategyTests.SpeciateAdd_Manhattan()
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategyTests.SpeciateAdd_Manhattan*
  name: SpeciateAdd_Manhattan
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategyTests.html#SharpNeat_Neat_Speciation_GeneticKMeans_Parallelized_GeneticKMeansSpeciationStrategyTests_SpeciateAdd_Manhattan_
  commentId: Overload:SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategyTests.SpeciateAdd_Manhattan
  isSpec: "True"
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategyTests.SpeciateAdd_Manhattan
  nameWithType: GeneticKMeansSpeciationStrategyTests.SpeciateAdd_Manhattan
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategyTests.SpeciateAll_Euclidean
  name: SpeciateAll_Euclidean()
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategyTests.html#SharpNeat_Neat_Speciation_GeneticKMeans_Parallelized_GeneticKMeansSpeciationStrategyTests_SpeciateAll_Euclidean
  commentId: M:SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategyTests.SpeciateAll_Euclidean
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategyTests.SpeciateAll_Euclidean()
  nameWithType: GeneticKMeansSpeciationStrategyTests.SpeciateAll_Euclidean()
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategyTests.SpeciateAll_Euclidean*
  name: SpeciateAll_Euclidean
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategyTests.html#SharpNeat_Neat_Speciation_GeneticKMeans_Parallelized_GeneticKMeansSpeciationStrategyTests_SpeciateAll_Euclidean_
  commentId: Overload:SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategyTests.SpeciateAll_Euclidean
  isSpec: "True"
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategyTests.SpeciateAll_Euclidean
  nameWithType: GeneticKMeansSpeciationStrategyTests.SpeciateAll_Euclidean
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategyTests.SpeciateAll_Manhattan
  name: SpeciateAll_Manhattan()
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategyTests.html#SharpNeat_Neat_Speciation_GeneticKMeans_Parallelized_GeneticKMeansSpeciationStrategyTests_SpeciateAll_Manhattan
  commentId: M:SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategyTests.SpeciateAll_Manhattan
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategyTests.SpeciateAll_Manhattan()
  nameWithType: GeneticKMeansSpeciationStrategyTests.SpeciateAll_Manhattan()
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategyTests.SpeciateAll_Manhattan*
  name: SpeciateAll_Manhattan
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategyTests.html#SharpNeat_Neat_Speciation_GeneticKMeans_Parallelized_GeneticKMeansSpeciationStrategyTests_SpeciateAll_Manhattan_
  commentId: Overload:SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategyTests.SpeciateAll_Manhattan
  isSpec: "True"
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.GeneticKMeansSpeciationStrategyTests.SpeciateAll_Manhattan
  nameWithType: GeneticKMeansSpeciationStrategyTests.SpeciateAll_Manhattan
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategy`1
  name: RegularizedGeneticKMeansSpeciationStrategy<T>
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategy-1.html
  commentId: T:SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategy`1
  name.vb: RegularizedGeneticKMeansSpeciationStrategy(Of T)
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategy<T>
  fullName.vb: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategy(Of T)
  nameWithType: RegularizedGeneticKMeansSpeciationStrategy<T>
  nameWithType.vb: RegularizedGeneticKMeansSpeciationStrategy(Of T)
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategy`1.#ctor(SharpNeat.Neat.DistanceMetrics.IDistanceMetric{`0},System.Int32,System.Double,System.Int32)
  name: RegularizedGeneticKMeansSpeciationStrategy(IDistanceMetric<T>, int, double, int)
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategy-1.html#SharpNeat_Neat_Speciation_GeneticKMeans_Parallelized_RegularizedGeneticKMeansSpeciationStrategy_1__ctor_SharpNeat_Neat_DistanceMetrics_IDistanceMetric__0__System_Int32_System_Double_System_Int32_
  commentId: M:SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategy`1.#ctor(SharpNeat.Neat.DistanceMetrics.IDistanceMetric{`0},System.Int32,System.Double,System.Int32)
  name.vb: New(IDistanceMetric(Of T), Integer, Double, Integer)
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategy<T>.RegularizedGeneticKMeansSpeciationStrategy(SharpNeat.Neat.DistanceMetrics.IDistanceMetric<T>, int, double, int)
  fullName.vb: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategy(Of T).New(SharpNeat.Neat.DistanceMetrics.IDistanceMetric(Of T), Integer, Double, Integer)
  nameWithType: RegularizedGeneticKMeansSpeciationStrategy<T>.RegularizedGeneticKMeansSpeciationStrategy(IDistanceMetric<T>, int, double, int)
  nameWithType.vb: RegularizedGeneticKMeansSpeciationStrategy(Of T).New(IDistanceMetric(Of T), Integer, Double, Integer)
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategy`1.#ctor*
  name: RegularizedGeneticKMeansSpeciationStrategy
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategy-1.html#SharpNeat_Neat_Speciation_GeneticKMeans_Parallelized_RegularizedGeneticKMeansSpeciationStrategy_1__ctor_
  commentId: Overload:SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategy`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategy<T>.RegularizedGeneticKMeansSpeciationStrategy
  fullName.vb: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategy(Of T).New
  nameWithType: RegularizedGeneticKMeansSpeciationStrategy<T>.RegularizedGeneticKMeansSpeciationStrategy
  nameWithType.vb: RegularizedGeneticKMeansSpeciationStrategy(Of T).New
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategy`1.SpeciateAdd(System.Collections.Generic.IList{SharpNeat.Neat.Genome.NeatGenome{`0}},SharpNeat.Neat.Speciation.Species{`0}[],Redzen.Random.IRandomSource)
  name: SpeciateAdd(IList<NeatGenome<T>>, Species<T>[], IRandomSource)
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategy-1.html#SharpNeat_Neat_Speciation_GeneticKMeans_Parallelized_RegularizedGeneticKMeansSpeciationStrategy_1_SpeciateAdd_System_Collections_Generic_IList_SharpNeat_Neat_Genome_NeatGenome__0___SharpNeat_Neat_Speciation_Species__0____Redzen_Random_IRandomSource_
  commentId: M:SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategy`1.SpeciateAdd(System.Collections.Generic.IList{SharpNeat.Neat.Genome.NeatGenome{`0}},SharpNeat.Neat.Speciation.Species{`0}[],Redzen.Random.IRandomSource)
  name.vb: SpeciateAdd(IList(Of NeatGenome(Of T)), Species(Of T)(), IRandomSource)
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategy<T>.SpeciateAdd(System.Collections.Generic.IList<SharpNeat.Neat.Genome.NeatGenome<T>>, SharpNeat.Neat.Speciation.Species<T>[], Redzen.Random.IRandomSource)
  fullName.vb: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategy(Of T).SpeciateAdd(System.Collections.Generic.IList(Of SharpNeat.Neat.Genome.NeatGenome(Of T)), SharpNeat.Neat.Speciation.Species(Of T)(), Redzen.Random.IRandomSource)
  nameWithType: RegularizedGeneticKMeansSpeciationStrategy<T>.SpeciateAdd(IList<NeatGenome<T>>, Species<T>[], IRandomSource)
  nameWithType.vb: RegularizedGeneticKMeansSpeciationStrategy(Of T).SpeciateAdd(IList(Of NeatGenome(Of T)), Species(Of T)(), IRandomSource)
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategy`1.SpeciateAdd*
  name: SpeciateAdd
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategy-1.html#SharpNeat_Neat_Speciation_GeneticKMeans_Parallelized_RegularizedGeneticKMeansSpeciationStrategy_1_SpeciateAdd_
  commentId: Overload:SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategy`1.SpeciateAdd
  isSpec: "True"
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategy<T>.SpeciateAdd
  fullName.vb: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategy(Of T).SpeciateAdd
  nameWithType: RegularizedGeneticKMeansSpeciationStrategy<T>.SpeciateAdd
  nameWithType.vb: RegularizedGeneticKMeansSpeciationStrategy(Of T).SpeciateAdd
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategy`1.SpeciateAll(System.Collections.Generic.IList{SharpNeat.Neat.Genome.NeatGenome{`0}},System.Int32,Redzen.Random.IRandomSource)
  name: SpeciateAll(IList<NeatGenome<T>>, int, IRandomSource)
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategy-1.html#SharpNeat_Neat_Speciation_GeneticKMeans_Parallelized_RegularizedGeneticKMeansSpeciationStrategy_1_SpeciateAll_System_Collections_Generic_IList_SharpNeat_Neat_Genome_NeatGenome__0___System_Int32_Redzen_Random_IRandomSource_
  commentId: M:SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategy`1.SpeciateAll(System.Collections.Generic.IList{SharpNeat.Neat.Genome.NeatGenome{`0}},System.Int32,Redzen.Random.IRandomSource)
  name.vb: SpeciateAll(IList(Of NeatGenome(Of T)), Integer, IRandomSource)
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategy<T>.SpeciateAll(System.Collections.Generic.IList<SharpNeat.Neat.Genome.NeatGenome<T>>, int, Redzen.Random.IRandomSource)
  fullName.vb: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategy(Of T).SpeciateAll(System.Collections.Generic.IList(Of SharpNeat.Neat.Genome.NeatGenome(Of T)), Integer, Redzen.Random.IRandomSource)
  nameWithType: RegularizedGeneticKMeansSpeciationStrategy<T>.SpeciateAll(IList<NeatGenome<T>>, int, IRandomSource)
  nameWithType.vb: RegularizedGeneticKMeansSpeciationStrategy(Of T).SpeciateAll(IList(Of NeatGenome(Of T)), Integer, IRandomSource)
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategy`1.SpeciateAll*
  name: SpeciateAll
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategy-1.html#SharpNeat_Neat_Speciation_GeneticKMeans_Parallelized_RegularizedGeneticKMeansSpeciationStrategy_1_SpeciateAll_
  commentId: Overload:SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategy`1.SpeciateAll
  isSpec: "True"
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategy<T>.SpeciateAll
  fullName.vb: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategy(Of T).SpeciateAll
  nameWithType: RegularizedGeneticKMeansSpeciationStrategy<T>.SpeciateAll
  nameWithType.vb: RegularizedGeneticKMeansSpeciationStrategy(Of T).SpeciateAll
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategyTests
  name: RegularizedGeneticKMeansSpeciationStrategyTests
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategyTests.html
  commentId: T:SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategyTests
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategyTests
  nameWithType: RegularizedGeneticKMeansSpeciationStrategyTests
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAdd_Euclidean
  name: SpeciateAdd_Euclidean()
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategyTests.html#SharpNeat_Neat_Speciation_GeneticKMeans_Parallelized_RegularizedGeneticKMeansSpeciationStrategyTests_SpeciateAdd_Euclidean
  commentId: M:SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAdd_Euclidean
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAdd_Euclidean()
  nameWithType: RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAdd_Euclidean()
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAdd_Euclidean*
  name: SpeciateAdd_Euclidean
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategyTests.html#SharpNeat_Neat_Speciation_GeneticKMeans_Parallelized_RegularizedGeneticKMeansSpeciationStrategyTests_SpeciateAdd_Euclidean_
  commentId: Overload:SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAdd_Euclidean
  isSpec: "True"
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAdd_Euclidean
  nameWithType: RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAdd_Euclidean
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAdd_Manhattan
  name: SpeciateAdd_Manhattan()
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategyTests.html#SharpNeat_Neat_Speciation_GeneticKMeans_Parallelized_RegularizedGeneticKMeansSpeciationStrategyTests_SpeciateAdd_Manhattan
  commentId: M:SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAdd_Manhattan
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAdd_Manhattan()
  nameWithType: RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAdd_Manhattan()
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAdd_Manhattan*
  name: SpeciateAdd_Manhattan
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategyTests.html#SharpNeat_Neat_Speciation_GeneticKMeans_Parallelized_RegularizedGeneticKMeansSpeciationStrategyTests_SpeciateAdd_Manhattan_
  commentId: Overload:SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAdd_Manhattan
  isSpec: "True"
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAdd_Manhattan
  nameWithType: RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAdd_Manhattan
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAll_Euclidean
  name: SpeciateAll_Euclidean()
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategyTests.html#SharpNeat_Neat_Speciation_GeneticKMeans_Parallelized_RegularizedGeneticKMeansSpeciationStrategyTests_SpeciateAll_Euclidean
  commentId: M:SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAll_Euclidean
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAll_Euclidean()
  nameWithType: RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAll_Euclidean()
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAll_Euclidean*
  name: SpeciateAll_Euclidean
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategyTests.html#SharpNeat_Neat_Speciation_GeneticKMeans_Parallelized_RegularizedGeneticKMeansSpeciationStrategyTests_SpeciateAll_Euclidean_
  commentId: Overload:SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAll_Euclidean
  isSpec: "True"
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAll_Euclidean
  nameWithType: RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAll_Euclidean
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAll_Manhattan
  name: SpeciateAll_Manhattan()
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategyTests.html#SharpNeat_Neat_Speciation_GeneticKMeans_Parallelized_RegularizedGeneticKMeansSpeciationStrategyTests_SpeciateAll_Manhattan
  commentId: M:SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAll_Manhattan
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAll_Manhattan()
  nameWithType: RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAll_Manhattan()
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAll_Manhattan*
  name: SpeciateAll_Manhattan
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategyTests.html#SharpNeat_Neat_Speciation_GeneticKMeans_Parallelized_RegularizedGeneticKMeansSpeciationStrategyTests_SpeciateAll_Manhattan_
  commentId: Overload:SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAll_Manhattan
  isSpec: "True"
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.Parallelized.RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAll_Manhattan
  nameWithType: RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAll_Manhattan
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategy`1
  name: RegularizedGeneticKMeansSpeciationStrategy<T>
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategy-1.html
  commentId: T:SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategy`1
  name.vb: RegularizedGeneticKMeansSpeciationStrategy(Of T)
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategy<T>
  fullName.vb: SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategy(Of T)
  nameWithType: RegularizedGeneticKMeansSpeciationStrategy<T>
  nameWithType.vb: RegularizedGeneticKMeansSpeciationStrategy(Of T)
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategy`1.#ctor(SharpNeat.Neat.DistanceMetrics.IDistanceMetric{`0},System.Int32,System.Double)
  name: RegularizedGeneticKMeansSpeciationStrategy(IDistanceMetric<T>, int, double)
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategy-1.html#SharpNeat_Neat_Speciation_GeneticKMeans_RegularizedGeneticKMeansSpeciationStrategy_1__ctor_SharpNeat_Neat_DistanceMetrics_IDistanceMetric__0__System_Int32_System_Double_
  commentId: M:SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategy`1.#ctor(SharpNeat.Neat.DistanceMetrics.IDistanceMetric{`0},System.Int32,System.Double)
  name.vb: New(IDistanceMetric(Of T), Integer, Double)
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategy<T>.RegularizedGeneticKMeansSpeciationStrategy(SharpNeat.Neat.DistanceMetrics.IDistanceMetric<T>, int, double)
  fullName.vb: SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategy(Of T).New(SharpNeat.Neat.DistanceMetrics.IDistanceMetric(Of T), Integer, Double)
  nameWithType: RegularizedGeneticKMeansSpeciationStrategy<T>.RegularizedGeneticKMeansSpeciationStrategy(IDistanceMetric<T>, int, double)
  nameWithType.vb: RegularizedGeneticKMeansSpeciationStrategy(Of T).New(IDistanceMetric(Of T), Integer, Double)
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategy`1.#ctor*
  name: RegularizedGeneticKMeansSpeciationStrategy
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategy-1.html#SharpNeat_Neat_Speciation_GeneticKMeans_RegularizedGeneticKMeansSpeciationStrategy_1__ctor_
  commentId: Overload:SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategy`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategy<T>.RegularizedGeneticKMeansSpeciationStrategy
  fullName.vb: SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategy(Of T).New
  nameWithType: RegularizedGeneticKMeansSpeciationStrategy<T>.RegularizedGeneticKMeansSpeciationStrategy
  nameWithType.vb: RegularizedGeneticKMeansSpeciationStrategy(Of T).New
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategy`1.SpeciateAdd(System.Collections.Generic.IList{SharpNeat.Neat.Genome.NeatGenome{`0}},SharpNeat.Neat.Speciation.Species{`0}[],Redzen.Random.IRandomSource)
  name: SpeciateAdd(IList<NeatGenome<T>>, Species<T>[], IRandomSource)
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategy-1.html#SharpNeat_Neat_Speciation_GeneticKMeans_RegularizedGeneticKMeansSpeciationStrategy_1_SpeciateAdd_System_Collections_Generic_IList_SharpNeat_Neat_Genome_NeatGenome__0___SharpNeat_Neat_Speciation_Species__0____Redzen_Random_IRandomSource_
  commentId: M:SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategy`1.SpeciateAdd(System.Collections.Generic.IList{SharpNeat.Neat.Genome.NeatGenome{`0}},SharpNeat.Neat.Speciation.Species{`0}[],Redzen.Random.IRandomSource)
  name.vb: SpeciateAdd(IList(Of NeatGenome(Of T)), Species(Of T)(), IRandomSource)
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategy<T>.SpeciateAdd(System.Collections.Generic.IList<SharpNeat.Neat.Genome.NeatGenome<T>>, SharpNeat.Neat.Speciation.Species<T>[], Redzen.Random.IRandomSource)
  fullName.vb: SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategy(Of T).SpeciateAdd(System.Collections.Generic.IList(Of SharpNeat.Neat.Genome.NeatGenome(Of T)), SharpNeat.Neat.Speciation.Species(Of T)(), Redzen.Random.IRandomSource)
  nameWithType: RegularizedGeneticKMeansSpeciationStrategy<T>.SpeciateAdd(IList<NeatGenome<T>>, Species<T>[], IRandomSource)
  nameWithType.vb: RegularizedGeneticKMeansSpeciationStrategy(Of T).SpeciateAdd(IList(Of NeatGenome(Of T)), Species(Of T)(), IRandomSource)
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategy`1.SpeciateAdd*
  name: SpeciateAdd
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategy-1.html#SharpNeat_Neat_Speciation_GeneticKMeans_RegularizedGeneticKMeansSpeciationStrategy_1_SpeciateAdd_
  commentId: Overload:SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategy`1.SpeciateAdd
  isSpec: "True"
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategy<T>.SpeciateAdd
  fullName.vb: SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategy(Of T).SpeciateAdd
  nameWithType: RegularizedGeneticKMeansSpeciationStrategy<T>.SpeciateAdd
  nameWithType.vb: RegularizedGeneticKMeansSpeciationStrategy(Of T).SpeciateAdd
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategy`1.SpeciateAll(System.Collections.Generic.IList{SharpNeat.Neat.Genome.NeatGenome{`0}},System.Int32,Redzen.Random.IRandomSource)
  name: SpeciateAll(IList<NeatGenome<T>>, int, IRandomSource)
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategy-1.html#SharpNeat_Neat_Speciation_GeneticKMeans_RegularizedGeneticKMeansSpeciationStrategy_1_SpeciateAll_System_Collections_Generic_IList_SharpNeat_Neat_Genome_NeatGenome__0___System_Int32_Redzen_Random_IRandomSource_
  commentId: M:SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategy`1.SpeciateAll(System.Collections.Generic.IList{SharpNeat.Neat.Genome.NeatGenome{`0}},System.Int32,Redzen.Random.IRandomSource)
  name.vb: SpeciateAll(IList(Of NeatGenome(Of T)), Integer, IRandomSource)
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategy<T>.SpeciateAll(System.Collections.Generic.IList<SharpNeat.Neat.Genome.NeatGenome<T>>, int, Redzen.Random.IRandomSource)
  fullName.vb: SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategy(Of T).SpeciateAll(System.Collections.Generic.IList(Of SharpNeat.Neat.Genome.NeatGenome(Of T)), Integer, Redzen.Random.IRandomSource)
  nameWithType: RegularizedGeneticKMeansSpeciationStrategy<T>.SpeciateAll(IList<NeatGenome<T>>, int, IRandomSource)
  nameWithType.vb: RegularizedGeneticKMeansSpeciationStrategy(Of T).SpeciateAll(IList(Of NeatGenome(Of T)), Integer, IRandomSource)
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategy`1.SpeciateAll*
  name: SpeciateAll
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategy-1.html#SharpNeat_Neat_Speciation_GeneticKMeans_RegularizedGeneticKMeansSpeciationStrategy_1_SpeciateAll_
  commentId: Overload:SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategy`1.SpeciateAll
  isSpec: "True"
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategy<T>.SpeciateAll
  fullName.vb: SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategy(Of T).SpeciateAll
  nameWithType: RegularizedGeneticKMeansSpeciationStrategy<T>.SpeciateAll
  nameWithType.vb: RegularizedGeneticKMeansSpeciationStrategy(Of T).SpeciateAll
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategyTests
  name: RegularizedGeneticKMeansSpeciationStrategyTests
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategyTests.html
  commentId: T:SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategyTests
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategyTests
  nameWithType: RegularizedGeneticKMeansSpeciationStrategyTests
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAdd_Euclidean
  name: SpeciateAdd_Euclidean()
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategyTests.html#SharpNeat_Neat_Speciation_GeneticKMeans_RegularizedGeneticKMeansSpeciationStrategyTests_SpeciateAdd_Euclidean
  commentId: M:SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAdd_Euclidean
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAdd_Euclidean()
  nameWithType: RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAdd_Euclidean()
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAdd_Euclidean*
  name: SpeciateAdd_Euclidean
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategyTests.html#SharpNeat_Neat_Speciation_GeneticKMeans_RegularizedGeneticKMeansSpeciationStrategyTests_SpeciateAdd_Euclidean_
  commentId: Overload:SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAdd_Euclidean
  isSpec: "True"
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAdd_Euclidean
  nameWithType: RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAdd_Euclidean
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAdd_Manhattan
  name: SpeciateAdd_Manhattan()
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategyTests.html#SharpNeat_Neat_Speciation_GeneticKMeans_RegularizedGeneticKMeansSpeciationStrategyTests_SpeciateAdd_Manhattan
  commentId: M:SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAdd_Manhattan
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAdd_Manhattan()
  nameWithType: RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAdd_Manhattan()
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAdd_Manhattan*
  name: SpeciateAdd_Manhattan
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategyTests.html#SharpNeat_Neat_Speciation_GeneticKMeans_RegularizedGeneticKMeansSpeciationStrategyTests_SpeciateAdd_Manhattan_
  commentId: Overload:SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAdd_Manhattan
  isSpec: "True"
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAdd_Manhattan
  nameWithType: RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAdd_Manhattan
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAll_Euclidean
  name: SpeciateAll_Euclidean()
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategyTests.html#SharpNeat_Neat_Speciation_GeneticKMeans_RegularizedGeneticKMeansSpeciationStrategyTests_SpeciateAll_Euclidean
  commentId: M:SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAll_Euclidean
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAll_Euclidean()
  nameWithType: RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAll_Euclidean()
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAll_Euclidean*
  name: SpeciateAll_Euclidean
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategyTests.html#SharpNeat_Neat_Speciation_GeneticKMeans_RegularizedGeneticKMeansSpeciationStrategyTests_SpeciateAll_Euclidean_
  commentId: Overload:SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAll_Euclidean
  isSpec: "True"
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAll_Euclidean
  nameWithType: RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAll_Euclidean
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAll_Manhattan
  name: SpeciateAll_Manhattan()
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategyTests.html#SharpNeat_Neat_Speciation_GeneticKMeans_RegularizedGeneticKMeansSpeciationStrategyTests_SpeciateAll_Manhattan
  commentId: M:SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAll_Manhattan
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAll_Manhattan()
  nameWithType: RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAll_Manhattan()
- uid: SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAll_Manhattan*
  name: SpeciateAll_Manhattan
  href: api/SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategyTests.html#SharpNeat_Neat_Speciation_GeneticKMeans_RegularizedGeneticKMeansSpeciationStrategyTests_SpeciateAll_Manhattan_
  commentId: Overload:SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAll_Manhattan
  isSpec: "True"
  fullName: SharpNeat.Neat.Speciation.GeneticKMeans.RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAll_Manhattan
  nameWithType: RegularizedGeneticKMeansSpeciationStrategyTests.SpeciateAll_Manhattan
- uid: SharpNeat.Neat.Speciation.ISpeciationStrategy`2
  name: ISpeciationStrategy<TGenome, TWeight>
  href: api/SharpNeat.Neat.Speciation.ISpeciationStrategy-2.html
  commentId: T:SharpNeat.Neat.Speciation.ISpeciationStrategy`2
  name.vb: ISpeciationStrategy(Of TGenome, TWeight)
  fullName: SharpNeat.Neat.Speciation.ISpeciationStrategy<TGenome, TWeight>
  fullName.vb: SharpNeat.Neat.Speciation.ISpeciationStrategy(Of TGenome, TWeight)
  nameWithType: ISpeciationStrategy<TGenome, TWeight>
  nameWithType.vb: ISpeciationStrategy(Of TGenome, TWeight)
- uid: SharpNeat.Neat.Speciation.ISpeciationStrategy`2.SpeciateAdd(System.Collections.Generic.IList{`0},SharpNeat.Neat.Speciation.Species{`1}[],Redzen.Random.IRandomSource)
  name: SpeciateAdd(IList<TGenome>, Species<TWeight>[], IRandomSource)
  href: api/SharpNeat.Neat.Speciation.ISpeciationStrategy-2.html#SharpNeat_Neat_Speciation_ISpeciationStrategy_2_SpeciateAdd_System_Collections_Generic_IList__0__SharpNeat_Neat_Speciation_Species__1____Redzen_Random_IRandomSource_
  commentId: M:SharpNeat.Neat.Speciation.ISpeciationStrategy`2.SpeciateAdd(System.Collections.Generic.IList{`0},SharpNeat.Neat.Speciation.Species{`1}[],Redzen.Random.IRandomSource)
  name.vb: SpeciateAdd(IList(Of TGenome), Species(Of TWeight)(), IRandomSource)
  fullName: SharpNeat.Neat.Speciation.ISpeciationStrategy<TGenome, TWeight>.SpeciateAdd(System.Collections.Generic.IList<TGenome>, SharpNeat.Neat.Speciation.Species<TWeight>[], Redzen.Random.IRandomSource)
  fullName.vb: SharpNeat.Neat.Speciation.ISpeciationStrategy(Of TGenome, TWeight).SpeciateAdd(System.Collections.Generic.IList(Of TGenome), SharpNeat.Neat.Speciation.Species(Of TWeight)(), Redzen.Random.IRandomSource)
  nameWithType: ISpeciationStrategy<TGenome, TWeight>.SpeciateAdd(IList<TGenome>, Species<TWeight>[], IRandomSource)
  nameWithType.vb: ISpeciationStrategy(Of TGenome, TWeight).SpeciateAdd(IList(Of TGenome), Species(Of TWeight)(), IRandomSource)
- uid: SharpNeat.Neat.Speciation.ISpeciationStrategy`2.SpeciateAdd*
  name: SpeciateAdd
  href: api/SharpNeat.Neat.Speciation.ISpeciationStrategy-2.html#SharpNeat_Neat_Speciation_ISpeciationStrategy_2_SpeciateAdd_
  commentId: Overload:SharpNeat.Neat.Speciation.ISpeciationStrategy`2.SpeciateAdd
  isSpec: "True"
  fullName: SharpNeat.Neat.Speciation.ISpeciationStrategy<TGenome, TWeight>.SpeciateAdd
  fullName.vb: SharpNeat.Neat.Speciation.ISpeciationStrategy(Of TGenome, TWeight).SpeciateAdd
  nameWithType: ISpeciationStrategy<TGenome, TWeight>.SpeciateAdd
  nameWithType.vb: ISpeciationStrategy(Of TGenome, TWeight).SpeciateAdd
- uid: SharpNeat.Neat.Speciation.ISpeciationStrategy`2.SpeciateAll(System.Collections.Generic.IList{`0},System.Int32,Redzen.Random.IRandomSource)
  name: SpeciateAll(IList<TGenome>, int, IRandomSource)
  href: api/SharpNeat.Neat.Speciation.ISpeciationStrategy-2.html#SharpNeat_Neat_Speciation_ISpeciationStrategy_2_SpeciateAll_System_Collections_Generic_IList__0__System_Int32_Redzen_Random_IRandomSource_
  commentId: M:SharpNeat.Neat.Speciation.ISpeciationStrategy`2.SpeciateAll(System.Collections.Generic.IList{`0},System.Int32,Redzen.Random.IRandomSource)
  name.vb: SpeciateAll(IList(Of TGenome), Integer, IRandomSource)
  fullName: SharpNeat.Neat.Speciation.ISpeciationStrategy<TGenome, TWeight>.SpeciateAll(System.Collections.Generic.IList<TGenome>, int, Redzen.Random.IRandomSource)
  fullName.vb: SharpNeat.Neat.Speciation.ISpeciationStrategy(Of TGenome, TWeight).SpeciateAll(System.Collections.Generic.IList(Of TGenome), Integer, Redzen.Random.IRandomSource)
  nameWithType: ISpeciationStrategy<TGenome, TWeight>.SpeciateAll(IList<TGenome>, int, IRandomSource)
  nameWithType.vb: ISpeciationStrategy(Of TGenome, TWeight).SpeciateAll(IList(Of TGenome), Integer, IRandomSource)
- uid: SharpNeat.Neat.Speciation.ISpeciationStrategy`2.SpeciateAll*
  name: SpeciateAll
  href: api/SharpNeat.Neat.Speciation.ISpeciationStrategy-2.html#SharpNeat_Neat_Speciation_ISpeciationStrategy_2_SpeciateAll_
  commentId: Overload:SharpNeat.Neat.Speciation.ISpeciationStrategy`2.SpeciateAll
  isSpec: "True"
  fullName: SharpNeat.Neat.Speciation.ISpeciationStrategy<TGenome, TWeight>.SpeciateAll
  fullName.vb: SharpNeat.Neat.Speciation.ISpeciationStrategy(Of TGenome, TWeight).SpeciateAll
  nameWithType: ISpeciationStrategy<TGenome, TWeight>.SpeciateAll
  nameWithType.vb: ISpeciationStrategy(Of TGenome, TWeight).SpeciateAll
- uid: SharpNeat.Neat.Speciation.SpeciationUtils
  name: SpeciationUtils
  href: api/SharpNeat.Neat.Speciation.SpeciationUtils.html
  commentId: T:SharpNeat.Neat.Speciation.SpeciationUtils
  fullName: SharpNeat.Neat.Speciation.SpeciationUtils
  nameWithType: SpeciationUtils
- uid: SharpNeat.Neat.Speciation.SpeciationUtils.ExtractConnectionGenes*
  name: ExtractConnectionGenes
  href: api/SharpNeat.Neat.Speciation.SpeciationUtils.html#SharpNeat_Neat_Speciation_SpeciationUtils_ExtractConnectionGenes_
  commentId: Overload:SharpNeat.Neat.Speciation.SpeciationUtils.ExtractConnectionGenes
  isSpec: "True"
  fullName: SharpNeat.Neat.Speciation.SpeciationUtils.ExtractConnectionGenes
  nameWithType: SpeciationUtils.ExtractConnectionGenes
- uid: SharpNeat.Neat.Speciation.SpeciationUtils.ExtractConnectionGenes``1(System.Collections.Generic.List{SharpNeat.Neat.Genome.ConnectionGenes{``0}},System.Collections.Generic.Dictionary{System.Int32,SharpNeat.Neat.Genome.NeatGenome{``0}})
  name: ExtractConnectionGenes<T>(List<ConnectionGenes<T>>, Dictionary<int, NeatGenome<T>>)
  href: api/SharpNeat.Neat.Speciation.SpeciationUtils.html#SharpNeat_Neat_Speciation_SpeciationUtils_ExtractConnectionGenes__1_System_Collections_Generic_List_SharpNeat_Neat_Genome_ConnectionGenes___0___System_Collections_Generic_Dictionary_System_Int32_SharpNeat_Neat_Genome_NeatGenome___0___
  commentId: M:SharpNeat.Neat.Speciation.SpeciationUtils.ExtractConnectionGenes``1(System.Collections.Generic.List{SharpNeat.Neat.Genome.ConnectionGenes{``0}},System.Collections.Generic.Dictionary{System.Int32,SharpNeat.Neat.Genome.NeatGenome{``0}})
  name.vb: ExtractConnectionGenes(Of T)(List(Of ConnectionGenes(Of T)), Dictionary(Of Integer, NeatGenome(Of T)))
  fullName: SharpNeat.Neat.Speciation.SpeciationUtils.ExtractConnectionGenes<T>(System.Collections.Generic.List<SharpNeat.Neat.Genome.ConnectionGenes<T>>, System.Collections.Generic.Dictionary<int, SharpNeat.Neat.Genome.NeatGenome<T>>)
  fullName.vb: SharpNeat.Neat.Speciation.SpeciationUtils.ExtractConnectionGenes(Of T)(System.Collections.Generic.List(Of SharpNeat.Neat.Genome.ConnectionGenes(Of T)), System.Collections.Generic.Dictionary(Of Integer, SharpNeat.Neat.Genome.NeatGenome(Of T)))
  nameWithType: SpeciationUtils.ExtractConnectionGenes<T>(List<ConnectionGenes<T>>, Dictionary<int, NeatGenome<T>>)
  nameWithType.vb: SpeciationUtils.ExtractConnectionGenes(Of T)(List(Of ConnectionGenes(Of T)), Dictionary(Of Integer, NeatGenome(Of T)))
- uid: SharpNeat.Neat.Speciation.SpeciationUtils.ExtractConnectionGenes``1(System.Collections.Generic.List{SharpNeat.Neat.Genome.ConnectionGenes{``0}},System.Collections.Generic.List{SharpNeat.Neat.Genome.NeatGenome{``0}})
  name: ExtractConnectionGenes<T>(List<ConnectionGenes<T>>, List<NeatGenome<T>>)
  href: api/SharpNeat.Neat.Speciation.SpeciationUtils.html#SharpNeat_Neat_Speciation_SpeciationUtils_ExtractConnectionGenes__1_System_Collections_Generic_List_SharpNeat_Neat_Genome_ConnectionGenes___0___System_Collections_Generic_List_SharpNeat_Neat_Genome_NeatGenome___0___
  commentId: M:SharpNeat.Neat.Speciation.SpeciationUtils.ExtractConnectionGenes``1(System.Collections.Generic.List{SharpNeat.Neat.Genome.ConnectionGenes{``0}},System.Collections.Generic.List{SharpNeat.Neat.Genome.NeatGenome{``0}})
  name.vb: ExtractConnectionGenes(Of T)(List(Of ConnectionGenes(Of T)), List(Of NeatGenome(Of T)))
  fullName: SharpNeat.Neat.Speciation.SpeciationUtils.ExtractConnectionGenes<T>(System.Collections.Generic.List<SharpNeat.Neat.Genome.ConnectionGenes<T>>, System.Collections.Generic.List<SharpNeat.Neat.Genome.NeatGenome<T>>)
  fullName.vb: SharpNeat.Neat.Speciation.SpeciationUtils.ExtractConnectionGenes(Of T)(System.Collections.Generic.List(Of SharpNeat.Neat.Genome.ConnectionGenes(Of T)), System.Collections.Generic.List(Of SharpNeat.Neat.Genome.NeatGenome(Of T)))
  nameWithType: SpeciationUtils.ExtractConnectionGenes<T>(List<ConnectionGenes<T>>, List<NeatGenome<T>>)
  nameWithType.vb: SpeciationUtils.ExtractConnectionGenes(Of T)(List(Of ConnectionGenes(Of T)), List(Of NeatGenome(Of T)))
- uid: SharpNeat.Neat.Speciation.SpeciationUtils.GetNearestSpecies*
  name: GetNearestSpecies
  href: api/SharpNeat.Neat.Speciation.SpeciationUtils.html#SharpNeat_Neat_Speciation_SpeciationUtils_GetNearestSpecies_
  commentId: Overload:SharpNeat.Neat.Speciation.SpeciationUtils.GetNearestSpecies
  isSpec: "True"
  fullName: SharpNeat.Neat.Speciation.SpeciationUtils.GetNearestSpecies
  nameWithType: SpeciationUtils.GetNearestSpecies
- uid: SharpNeat.Neat.Speciation.SpeciationUtils.GetNearestSpecies``1(SharpNeat.Neat.DistanceMetrics.IDistanceMetric{``0},SharpNeat.Neat.Genome.NeatGenome{``0},SharpNeat.Neat.Speciation.Species{``0}[])
  name: GetNearestSpecies<T>(IDistanceMetric<T>, NeatGenome<T>, Species<T>[])
  href: api/SharpNeat.Neat.Speciation.SpeciationUtils.html#SharpNeat_Neat_Speciation_SpeciationUtils_GetNearestSpecies__1_SharpNeat_Neat_DistanceMetrics_IDistanceMetric___0__SharpNeat_Neat_Genome_NeatGenome___0__SharpNeat_Neat_Speciation_Species___0____
  commentId: M:SharpNeat.Neat.Speciation.SpeciationUtils.GetNearestSpecies``1(SharpNeat.Neat.DistanceMetrics.IDistanceMetric{``0},SharpNeat.Neat.Genome.NeatGenome{``0},SharpNeat.Neat.Speciation.Species{``0}[])
  name.vb: GetNearestSpecies(Of T)(IDistanceMetric(Of T), NeatGenome(Of T), Species(Of T)())
  fullName: SharpNeat.Neat.Speciation.SpeciationUtils.GetNearestSpecies<T>(SharpNeat.Neat.DistanceMetrics.IDistanceMetric<T>, SharpNeat.Neat.Genome.NeatGenome<T>, SharpNeat.Neat.Speciation.Species<T>[])
  fullName.vb: SharpNeat.Neat.Speciation.SpeciationUtils.GetNearestSpecies(Of T)(SharpNeat.Neat.DistanceMetrics.IDistanceMetric(Of T), SharpNeat.Neat.Genome.NeatGenome(Of T), SharpNeat.Neat.Speciation.Species(Of T)())
  nameWithType: SpeciationUtils.GetNearestSpecies<T>(IDistanceMetric<T>, NeatGenome<T>, Species<T>[])
  nameWithType.vb: SpeciationUtils.GetNearestSpecies(Of T)(IDistanceMetric(Of T), NeatGenome(Of T), Species(Of T)())
- uid: SharpNeat.Neat.Speciation.SpeciationUtils.PopulateEmptySpecies*
  name: PopulateEmptySpecies
  href: api/SharpNeat.Neat.Speciation.SpeciationUtils.html#SharpNeat_Neat_Speciation_SpeciationUtils_PopulateEmptySpecies_
  commentId: Overload:SharpNeat.Neat.Speciation.SpeciationUtils.PopulateEmptySpecies
  isSpec: "True"
  fullName: SharpNeat.Neat.Speciation.SpeciationUtils.PopulateEmptySpecies
  nameWithType: SpeciationUtils.PopulateEmptySpecies
- uid: SharpNeat.Neat.Speciation.SpeciationUtils.PopulateEmptySpecies``1(SharpNeat.Neat.DistanceMetrics.IDistanceMetric{``0},SharpNeat.Neat.Speciation.Species{``0}[],SharpNeat.Neat.Speciation.Species{``0}[])
  name: PopulateEmptySpecies<T>(IDistanceMetric<T>, Species<T>[], Species<T>[])
  href: api/SharpNeat.Neat.Speciation.SpeciationUtils.html#SharpNeat_Neat_Speciation_SpeciationUtils_PopulateEmptySpecies__1_SharpNeat_Neat_DistanceMetrics_IDistanceMetric___0__SharpNeat_Neat_Speciation_Species___0____SharpNeat_Neat_Speciation_Species___0____
  commentId: M:SharpNeat.Neat.Speciation.SpeciationUtils.PopulateEmptySpecies``1(SharpNeat.Neat.DistanceMetrics.IDistanceMetric{``0},SharpNeat.Neat.Speciation.Species{``0}[],SharpNeat.Neat.Speciation.Species{``0}[])
  name.vb: PopulateEmptySpecies(Of T)(IDistanceMetric(Of T), Species(Of T)(), Species(Of T)())
  fullName: SharpNeat.Neat.Speciation.SpeciationUtils.PopulateEmptySpecies<T>(SharpNeat.Neat.DistanceMetrics.IDistanceMetric<T>, SharpNeat.Neat.Speciation.Species<T>[], SharpNeat.Neat.Speciation.Species<T>[])
  fullName.vb: SharpNeat.Neat.Speciation.SpeciationUtils.PopulateEmptySpecies(Of T)(SharpNeat.Neat.DistanceMetrics.IDistanceMetric(Of T), SharpNeat.Neat.Speciation.Species(Of T)(), SharpNeat.Neat.Speciation.Species(Of T)())
  nameWithType: SpeciationUtils.PopulateEmptySpecies<T>(IDistanceMetric<T>, Species<T>[], Species<T>[])
  nameWithType.vb: SpeciationUtils.PopulateEmptySpecies(Of T)(IDistanceMetric(Of T), Species(Of T)(), Species(Of T)())
- uid: SharpNeat.Neat.Speciation.Species`1
  name: Species<T>
  href: api/SharpNeat.Neat.Speciation.Species-1.html
  commentId: T:SharpNeat.Neat.Speciation.Species`1
  name.vb: Species(Of T)
  fullName: SharpNeat.Neat.Speciation.Species<T>
  fullName.vb: SharpNeat.Neat.Speciation.Species(Of T)
  nameWithType: Species<T>
  nameWithType.vb: Species(Of T)
- uid: SharpNeat.Neat.Speciation.Species`1.#ctor(System.Int32,SharpNeat.Neat.Genome.ConnectionGenes{`0},System.Int32)
  name: Species(int, ConnectionGenes<T>, int)
  href: api/SharpNeat.Neat.Speciation.Species-1.html#SharpNeat_Neat_Speciation_Species_1__ctor_System_Int32_SharpNeat_Neat_Genome_ConnectionGenes__0__System_Int32_
  commentId: M:SharpNeat.Neat.Speciation.Species`1.#ctor(System.Int32,SharpNeat.Neat.Genome.ConnectionGenes{`0},System.Int32)
  name.vb: New(Integer, ConnectionGenes(Of T), Integer)
  fullName: SharpNeat.Neat.Speciation.Species<T>.Species(int, SharpNeat.Neat.Genome.ConnectionGenes<T>, int)
  fullName.vb: SharpNeat.Neat.Speciation.Species(Of T).New(Integer, SharpNeat.Neat.Genome.ConnectionGenes(Of T), Integer)
  nameWithType: Species<T>.Species(int, ConnectionGenes<T>, int)
  nameWithType.vb: Species(Of T).New(Integer, ConnectionGenes(Of T), Integer)
- uid: SharpNeat.Neat.Speciation.Species`1.#ctor*
  name: Species
  href: api/SharpNeat.Neat.Speciation.Species-1.html#SharpNeat_Neat_Speciation_Species_1__ctor_
  commentId: Overload:SharpNeat.Neat.Speciation.Species`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Neat.Speciation.Species<T>.Species
  fullName.vb: SharpNeat.Neat.Speciation.Species(Of T).New
  nameWithType: Species<T>.Species
  nameWithType.vb: Species(Of T).New
- uid: SharpNeat.Neat.Speciation.Species`1.CalcMeanComplexity
  name: CalcMeanComplexity()
  href: api/SharpNeat.Neat.Speciation.Species-1.html#SharpNeat_Neat_Speciation_Species_1_CalcMeanComplexity
  commentId: M:SharpNeat.Neat.Speciation.Species`1.CalcMeanComplexity
  fullName: SharpNeat.Neat.Speciation.Species<T>.CalcMeanComplexity()
  fullName.vb: SharpNeat.Neat.Speciation.Species(Of T).CalcMeanComplexity()
  nameWithType: Species<T>.CalcMeanComplexity()
  nameWithType.vb: Species(Of T).CalcMeanComplexity()
- uid: SharpNeat.Neat.Speciation.Species`1.CalcMeanComplexity*
  name: CalcMeanComplexity
  href: api/SharpNeat.Neat.Speciation.Species-1.html#SharpNeat_Neat_Speciation_Species_1_CalcMeanComplexity_
  commentId: Overload:SharpNeat.Neat.Speciation.Species`1.CalcMeanComplexity
  isSpec: "True"
  fullName: SharpNeat.Neat.Speciation.Species<T>.CalcMeanComplexity
  fullName.vb: SharpNeat.Neat.Speciation.Species(Of T).CalcMeanComplexity
  nameWithType: Species<T>.CalcMeanComplexity
  nameWithType.vb: Species(Of T).CalcMeanComplexity
- uid: SharpNeat.Neat.Speciation.Species`1.CalcTotalComplexity
  name: CalcTotalComplexity()
  href: api/SharpNeat.Neat.Speciation.Species-1.html#SharpNeat_Neat_Speciation_Species_1_CalcTotalComplexity
  commentId: M:SharpNeat.Neat.Speciation.Species`1.CalcTotalComplexity
  fullName: SharpNeat.Neat.Speciation.Species<T>.CalcTotalComplexity()
  fullName.vb: SharpNeat.Neat.Speciation.Species(Of T).CalcTotalComplexity()
  nameWithType: Species<T>.CalcTotalComplexity()
  nameWithType.vb: Species(Of T).CalcTotalComplexity()
- uid: SharpNeat.Neat.Speciation.Species`1.CalcTotalComplexity*
  name: CalcTotalComplexity
  href: api/SharpNeat.Neat.Speciation.Species-1.html#SharpNeat_Neat_Speciation_Species_1_CalcTotalComplexity_
  commentId: Overload:SharpNeat.Neat.Speciation.Species`1.CalcTotalComplexity
  isSpec: "True"
  fullName: SharpNeat.Neat.Speciation.Species<T>.CalcTotalComplexity
  fullName.vb: SharpNeat.Neat.Speciation.Species(Of T).CalcTotalComplexity
  nameWithType: Species<T>.CalcTotalComplexity
  nameWithType.vb: Species(Of T).CalcTotalComplexity
- uid: SharpNeat.Neat.Speciation.Species`1.Centroid
  name: Centroid
  href: api/SharpNeat.Neat.Speciation.Species-1.html#SharpNeat_Neat_Speciation_Species_1_Centroid
  commentId: P:SharpNeat.Neat.Speciation.Species`1.Centroid
  fullName: SharpNeat.Neat.Speciation.Species<T>.Centroid
  fullName.vb: SharpNeat.Neat.Speciation.Species(Of T).Centroid
  nameWithType: Species<T>.Centroid
  nameWithType.vb: Species(Of T).Centroid
- uid: SharpNeat.Neat.Speciation.Species`1.Centroid*
  name: Centroid
  href: api/SharpNeat.Neat.Speciation.Species-1.html#SharpNeat_Neat_Speciation_Species_1_Centroid_
  commentId: Overload:SharpNeat.Neat.Speciation.Species`1.Centroid
  isSpec: "True"
  fullName: SharpNeat.Neat.Speciation.Species<T>.Centroid
  fullName.vb: SharpNeat.Neat.Speciation.Species(Of T).Centroid
  nameWithType: Species<T>.Centroid
  nameWithType.vb: Species(Of T).Centroid
- uid: SharpNeat.Neat.Speciation.Species`1.CompletePendingMoves
  name: CompletePendingMoves()
  href: api/SharpNeat.Neat.Speciation.Species-1.html#SharpNeat_Neat_Speciation_Species_1_CompletePendingMoves
  commentId: M:SharpNeat.Neat.Speciation.Species`1.CompletePendingMoves
  fullName: SharpNeat.Neat.Speciation.Species<T>.CompletePendingMoves()
  fullName.vb: SharpNeat.Neat.Speciation.Species(Of T).CompletePendingMoves()
  nameWithType: Species<T>.CompletePendingMoves()
  nameWithType.vb: Species(Of T).CompletePendingMoves()
- uid: SharpNeat.Neat.Speciation.Species`1.CompletePendingMoves*
  name: CompletePendingMoves
  href: api/SharpNeat.Neat.Speciation.Species-1.html#SharpNeat_Neat_Speciation_Species_1_CompletePendingMoves_
  commentId: Overload:SharpNeat.Neat.Speciation.Species`1.CompletePendingMoves
  isSpec: "True"
  fullName: SharpNeat.Neat.Speciation.Species<T>.CompletePendingMoves
  fullName.vb: SharpNeat.Neat.Speciation.Species(Of T).CompletePendingMoves
  nameWithType: Species<T>.CompletePendingMoves
  nameWithType.vb: Species(Of T).CompletePendingMoves
- uid: SharpNeat.Neat.Speciation.Species`1.FlushWorkingDictionary
  name: FlushWorkingDictionary()
  href: api/SharpNeat.Neat.Speciation.Species-1.html#SharpNeat_Neat_Speciation_Species_1_FlushWorkingDictionary
  commentId: M:SharpNeat.Neat.Speciation.Species`1.FlushWorkingDictionary
  fullName: SharpNeat.Neat.Speciation.Species<T>.FlushWorkingDictionary()
  fullName.vb: SharpNeat.Neat.Speciation.Species(Of T).FlushWorkingDictionary()
  nameWithType: Species<T>.FlushWorkingDictionary()
  nameWithType.vb: Species(Of T).FlushWorkingDictionary()
- uid: SharpNeat.Neat.Speciation.Species`1.FlushWorkingDictionary*
  name: FlushWorkingDictionary
  href: api/SharpNeat.Neat.Speciation.Species-1.html#SharpNeat_Neat_Speciation_Species_1_FlushWorkingDictionary_
  commentId: Overload:SharpNeat.Neat.Speciation.Species`1.FlushWorkingDictionary
  isSpec: "True"
  fullName: SharpNeat.Neat.Speciation.Species<T>.FlushWorkingDictionary
  fullName.vb: SharpNeat.Neat.Speciation.Species(Of T).FlushWorkingDictionary
  nameWithType: Species<T>.FlushWorkingDictionary
  nameWithType.vb: Species(Of T).FlushWorkingDictionary
- uid: SharpNeat.Neat.Speciation.Species`1.GenomeById
  name: GenomeById
  href: api/SharpNeat.Neat.Speciation.Species-1.html#SharpNeat_Neat_Speciation_Species_1_GenomeById
  commentId: P:SharpNeat.Neat.Speciation.Species`1.GenomeById
  fullName: SharpNeat.Neat.Speciation.Species<T>.GenomeById
  fullName.vb: SharpNeat.Neat.Speciation.Species(Of T).GenomeById
  nameWithType: Species<T>.GenomeById
  nameWithType.vb: Species(Of T).GenomeById
- uid: SharpNeat.Neat.Speciation.Species`1.GenomeById*
  name: GenomeById
  href: api/SharpNeat.Neat.Speciation.Species-1.html#SharpNeat_Neat_Speciation_Species_1_GenomeById_
  commentId: Overload:SharpNeat.Neat.Speciation.Species`1.GenomeById
  isSpec: "True"
  fullName: SharpNeat.Neat.Speciation.Species<T>.GenomeById
  fullName.vb: SharpNeat.Neat.Speciation.Species(Of T).GenomeById
  nameWithType: Species<T>.GenomeById
  nameWithType.vb: Species(Of T).GenomeById
- uid: SharpNeat.Neat.Speciation.Species`1.GenomeList
  name: GenomeList
  href: api/SharpNeat.Neat.Speciation.Species-1.html#SharpNeat_Neat_Speciation_Species_1_GenomeList
  commentId: P:SharpNeat.Neat.Speciation.Species`1.GenomeList
  fullName: SharpNeat.Neat.Speciation.Species<T>.GenomeList
  fullName.vb: SharpNeat.Neat.Speciation.Species(Of T).GenomeList
  nameWithType: Species<T>.GenomeList
  nameWithType.vb: Species(Of T).GenomeList
- uid: SharpNeat.Neat.Speciation.Species`1.GenomeList*
  name: GenomeList
  href: api/SharpNeat.Neat.Speciation.Species-1.html#SharpNeat_Neat_Speciation_Species_1_GenomeList_
  commentId: Overload:SharpNeat.Neat.Speciation.Species`1.GenomeList
  isSpec: "True"
  fullName: SharpNeat.Neat.Speciation.Species<T>.GenomeList
  fullName.vb: SharpNeat.Neat.Speciation.Species(Of T).GenomeList
  nameWithType: Species<T>.GenomeList
  nameWithType.vb: Species(Of T).GenomeList
- uid: SharpNeat.Neat.Speciation.Species`1.Id
  name: Id
  href: api/SharpNeat.Neat.Speciation.Species-1.html#SharpNeat_Neat_Speciation_Species_1_Id
  commentId: P:SharpNeat.Neat.Speciation.Species`1.Id
  fullName: SharpNeat.Neat.Speciation.Species<T>.Id
  fullName.vb: SharpNeat.Neat.Speciation.Species(Of T).Id
  nameWithType: Species<T>.Id
  nameWithType.vb: Species(Of T).Id
- uid: SharpNeat.Neat.Speciation.Species`1.Id*
  name: Id
  href: api/SharpNeat.Neat.Speciation.Species-1.html#SharpNeat_Neat_Speciation_Species_1_Id_
  commentId: Overload:SharpNeat.Neat.Speciation.Species`1.Id
  isSpec: "True"
  fullName: SharpNeat.Neat.Speciation.Species<T>.Id
  fullName.vb: SharpNeat.Neat.Speciation.Species(Of T).Id
  nameWithType: Species<T>.Id
  nameWithType.vb: Species(Of T).Id
- uid: SharpNeat.Neat.Speciation.Species`1.LoadWorkingDictionary
  name: LoadWorkingDictionary()
  href: api/SharpNeat.Neat.Speciation.Species-1.html#SharpNeat_Neat_Speciation_Species_1_LoadWorkingDictionary
  commentId: M:SharpNeat.Neat.Speciation.Species`1.LoadWorkingDictionary
  fullName: SharpNeat.Neat.Speciation.Species<T>.LoadWorkingDictionary()
  fullName.vb: SharpNeat.Neat.Speciation.Species(Of T).LoadWorkingDictionary()
  nameWithType: Species<T>.LoadWorkingDictionary()
  nameWithType.vb: Species(Of T).LoadWorkingDictionary()
- uid: SharpNeat.Neat.Speciation.Species`1.LoadWorkingDictionary*
  name: LoadWorkingDictionary
  href: api/SharpNeat.Neat.Speciation.Species-1.html#SharpNeat_Neat_Speciation_Species_1_LoadWorkingDictionary_
  commentId: Overload:SharpNeat.Neat.Speciation.Species`1.LoadWorkingDictionary
  isSpec: "True"
  fullName: SharpNeat.Neat.Speciation.Species<T>.LoadWorkingDictionary
  fullName.vb: SharpNeat.Neat.Speciation.Species(Of T).LoadWorkingDictionary
  nameWithType: Species<T>.LoadWorkingDictionary
  nameWithType.vb: Species(Of T).LoadWorkingDictionary
- uid: SharpNeat.Neat.Speciation.Species`1.PendingAddsList
  name: PendingAddsList
  href: api/SharpNeat.Neat.Speciation.Species-1.html#SharpNeat_Neat_Speciation_Species_1_PendingAddsList
  commentId: P:SharpNeat.Neat.Speciation.Species`1.PendingAddsList
  fullName: SharpNeat.Neat.Speciation.Species<T>.PendingAddsList
  fullName.vb: SharpNeat.Neat.Speciation.Species(Of T).PendingAddsList
  nameWithType: Species<T>.PendingAddsList
  nameWithType.vb: Species(Of T).PendingAddsList
- uid: SharpNeat.Neat.Speciation.Species`1.PendingAddsList*
  name: PendingAddsList
  href: api/SharpNeat.Neat.Speciation.Species-1.html#SharpNeat_Neat_Speciation_Species_1_PendingAddsList_
  commentId: Overload:SharpNeat.Neat.Speciation.Species`1.PendingAddsList
  isSpec: "True"
  fullName: SharpNeat.Neat.Speciation.Species<T>.PendingAddsList
  fullName.vb: SharpNeat.Neat.Speciation.Species(Of T).PendingAddsList
  nameWithType: Species<T>.PendingAddsList
  nameWithType.vb: Species(Of T).PendingAddsList
- uid: SharpNeat.Neat.Speciation.Species`1.PendingRemovesList
  name: PendingRemovesList
  href: api/SharpNeat.Neat.Speciation.Species-1.html#SharpNeat_Neat_Speciation_Species_1_PendingRemovesList
  commentId: P:SharpNeat.Neat.Speciation.Species`1.PendingRemovesList
  fullName: SharpNeat.Neat.Speciation.Species<T>.PendingRemovesList
  fullName.vb: SharpNeat.Neat.Speciation.Species(Of T).PendingRemovesList
  nameWithType: Species<T>.PendingRemovesList
  nameWithType.vb: Species(Of T).PendingRemovesList
- uid: SharpNeat.Neat.Speciation.Species`1.PendingRemovesList*
  name: PendingRemovesList
  href: api/SharpNeat.Neat.Speciation.Species-1.html#SharpNeat_Neat_Speciation_Species_1_PendingRemovesList_
  commentId: Overload:SharpNeat.Neat.Speciation.Species`1.PendingRemovesList
  isSpec: "True"
  fullName: SharpNeat.Neat.Speciation.Species<T>.PendingRemovesList
  fullName.vb: SharpNeat.Neat.Speciation.Species(Of T).PendingRemovesList
  nameWithType: Species<T>.PendingRemovesList
  nameWithType.vb: Species(Of T).PendingRemovesList
- uid: SharpNeat.Neat.Speciation.Species`1.Stats
  name: Stats
  href: api/SharpNeat.Neat.Speciation.Species-1.html#SharpNeat_Neat_Speciation_Species_1_Stats
  commentId: P:SharpNeat.Neat.Speciation.Species`1.Stats
  fullName: SharpNeat.Neat.Speciation.Species<T>.Stats
  fullName.vb: SharpNeat.Neat.Speciation.Species(Of T).Stats
  nameWithType: Species<T>.Stats
  nameWithType.vb: Species(Of T).Stats
- uid: SharpNeat.Neat.Speciation.Species`1.Stats*
  name: Stats
  href: api/SharpNeat.Neat.Speciation.Species-1.html#SharpNeat_Neat_Speciation_Species_1_Stats_
  commentId: Overload:SharpNeat.Neat.Speciation.Species`1.Stats
  isSpec: "True"
  fullName: SharpNeat.Neat.Speciation.Species<T>.Stats
  fullName.vb: SharpNeat.Neat.Speciation.Species(Of T).Stats
  nameWithType: Species<T>.Stats
  nameWithType.vb: Species(Of T).Stats
- uid: SharpNeat.Neat.Speciation.SpeciesStats
  name: SpeciesStats
  href: api/SharpNeat.Neat.Speciation.SpeciesStats.html
  commentId: T:SharpNeat.Neat.Speciation.SpeciesStats
  fullName: SharpNeat.Neat.Speciation.SpeciesStats
  nameWithType: SpeciesStats
- uid: SharpNeat.Neat.Speciation.SpeciesStats.EliteSizeInt
  name: EliteSizeInt
  href: api/SharpNeat.Neat.Speciation.SpeciesStats.html#SharpNeat_Neat_Speciation_SpeciesStats_EliteSizeInt
  commentId: F:SharpNeat.Neat.Speciation.SpeciesStats.EliteSizeInt
  fullName: SharpNeat.Neat.Speciation.SpeciesStats.EliteSizeInt
  nameWithType: SpeciesStats.EliteSizeInt
- uid: SharpNeat.Neat.Speciation.SpeciesStats.MeanFitness
  name: MeanFitness
  href: api/SharpNeat.Neat.Speciation.SpeciesStats.html#SharpNeat_Neat_Speciation_SpeciesStats_MeanFitness
  commentId: F:SharpNeat.Neat.Speciation.SpeciesStats.MeanFitness
  fullName: SharpNeat.Neat.Speciation.SpeciesStats.MeanFitness
  nameWithType: SpeciesStats.MeanFitness
- uid: SharpNeat.Neat.Speciation.SpeciesStats.OffspringAsexualCount
  name: OffspringAsexualCount
  href: api/SharpNeat.Neat.Speciation.SpeciesStats.html#SharpNeat_Neat_Speciation_SpeciesStats_OffspringAsexualCount
  commentId: F:SharpNeat.Neat.Speciation.SpeciesStats.OffspringAsexualCount
  fullName: SharpNeat.Neat.Speciation.SpeciesStats.OffspringAsexualCount
  nameWithType: SpeciesStats.OffspringAsexualCount
- uid: SharpNeat.Neat.Speciation.SpeciesStats.OffspringCount
  name: OffspringCount
  href: api/SharpNeat.Neat.Speciation.SpeciesStats.html#SharpNeat_Neat_Speciation_SpeciesStats_OffspringCount
  commentId: F:SharpNeat.Neat.Speciation.SpeciesStats.OffspringCount
  fullName: SharpNeat.Neat.Speciation.SpeciesStats.OffspringCount
  nameWithType: SpeciesStats.OffspringCount
- uid: SharpNeat.Neat.Speciation.SpeciesStats.OffspringSexualCount
  name: OffspringSexualCount
  href: api/SharpNeat.Neat.Speciation.SpeciesStats.html#SharpNeat_Neat_Speciation_SpeciesStats_OffspringSexualCount
  commentId: F:SharpNeat.Neat.Speciation.SpeciesStats.OffspringSexualCount
  fullName: SharpNeat.Neat.Speciation.SpeciesStats.OffspringSexualCount
  nameWithType: SpeciesStats.OffspringSexualCount
- uid: SharpNeat.Neat.Speciation.SpeciesStats.SelectionSizeInt
  name: SelectionSizeInt
  href: api/SharpNeat.Neat.Speciation.SpeciesStats.html#SharpNeat_Neat_Speciation_SpeciesStats_SelectionSizeInt
  commentId: F:SharpNeat.Neat.Speciation.SpeciesStats.SelectionSizeInt
  fullName: SharpNeat.Neat.Speciation.SpeciesStats.SelectionSizeInt
  nameWithType: SpeciesStats.SelectionSizeInt
- uid: SharpNeat.Neat.Speciation.SpeciesStats.TargetSizeInt
  name: TargetSizeInt
  href: api/SharpNeat.Neat.Speciation.SpeciesStats.html#SharpNeat_Neat_Speciation_SpeciesStats_TargetSizeInt
  commentId: F:SharpNeat.Neat.Speciation.SpeciesStats.TargetSizeInt
  fullName: SharpNeat.Neat.Speciation.SpeciesStats.TargetSizeInt
  nameWithType: SpeciesStats.TargetSizeInt
- uid: SharpNeat.Neat.Speciation.SpeciesStats.TargetSizeReal
  name: TargetSizeReal
  href: api/SharpNeat.Neat.Speciation.SpeciesStats.html#SharpNeat_Neat_Speciation_SpeciesStats_TargetSizeReal
  commentId: F:SharpNeat.Neat.Speciation.SpeciesStats.TargetSizeReal
  fullName: SharpNeat.Neat.Speciation.SpeciesStats.TargetSizeReal
  nameWithType: SpeciesStats.TargetSizeReal
- uid: SharpNeat.Neat.Speciation.SpeciesTests
  name: SpeciesTests
  href: api/SharpNeat.Neat.Speciation.SpeciesTests.html
  commentId: T:SharpNeat.Neat.Speciation.SpeciesTests
  fullName: SharpNeat.Neat.Speciation.SpeciesTests
  nameWithType: SpeciesTests
- uid: SharpNeat.Neat.Speciation.SpeciesTests.SortByPrimaryFitness
  name: SortByPrimaryFitness()
  href: api/SharpNeat.Neat.Speciation.SpeciesTests.html#SharpNeat_Neat_Speciation_SpeciesTests_SortByPrimaryFitness
  commentId: M:SharpNeat.Neat.Speciation.SpeciesTests.SortByPrimaryFitness
  fullName: SharpNeat.Neat.Speciation.SpeciesTests.SortByPrimaryFitness()
  nameWithType: SpeciesTests.SortByPrimaryFitness()
- uid: SharpNeat.Neat.Speciation.SpeciesTests.SortByPrimaryFitness*
  name: SortByPrimaryFitness
  href: api/SharpNeat.Neat.Speciation.SpeciesTests.html#SharpNeat_Neat_Speciation_SpeciesTests_SortByPrimaryFitness_
  commentId: Overload:SharpNeat.Neat.Speciation.SpeciesTests.SortByPrimaryFitness
  isSpec: "True"
  fullName: SharpNeat.Neat.Speciation.SpeciesTests.SortByPrimaryFitness
  nameWithType: SpeciesTests.SortByPrimaryFitness
- uid: SharpNeat.Neat.SpeciesAllocationCalcsTests
  name: SpeciesAllocationCalcsTests
  href: api/SharpNeat.Neat.SpeciesAllocationCalcsTests.html
  commentId: T:SharpNeat.Neat.SpeciesAllocationCalcsTests
  fullName: SharpNeat.Neat.SpeciesAllocationCalcsTests
  nameWithType: SpeciesAllocationCalcsTests
- uid: SharpNeat.Neat.SpeciesAllocationCalcsTests.UpdateSpeciesAllocationSizes
  name: UpdateSpeciesAllocationSizes()
  href: api/SharpNeat.Neat.SpeciesAllocationCalcsTests.html#SharpNeat_Neat_SpeciesAllocationCalcsTests_UpdateSpeciesAllocationSizes
  commentId: M:SharpNeat.Neat.SpeciesAllocationCalcsTests.UpdateSpeciesAllocationSizes
  fullName: SharpNeat.Neat.SpeciesAllocationCalcsTests.UpdateSpeciesAllocationSizes()
  nameWithType: SpeciesAllocationCalcsTests.UpdateSpeciesAllocationSizes()
- uid: SharpNeat.Neat.SpeciesAllocationCalcsTests.UpdateSpeciesAllocationSizes*
  name: UpdateSpeciesAllocationSizes
  href: api/SharpNeat.Neat.SpeciesAllocationCalcsTests.html#SharpNeat_Neat_SpeciesAllocationCalcsTests_UpdateSpeciesAllocationSizes_
  commentId: Overload:SharpNeat.Neat.SpeciesAllocationCalcsTests.UpdateSpeciesAllocationSizes
  isSpec: "True"
  fullName: SharpNeat.Neat.SpeciesAllocationCalcsTests.UpdateSpeciesAllocationSizes
  nameWithType: SpeciesAllocationCalcsTests.UpdateSpeciesAllocationSizes
- uid: SharpNeat.NeuralNets
  name: SharpNeat.NeuralNets
  href: api/SharpNeat.NeuralNets.html
  commentId: N:SharpNeat.NeuralNets
  fullName: SharpNeat.NeuralNets
  nameWithType: SharpNeat.NeuralNets
- uid: SharpNeat.NeuralNets.ActivationFunctionId
  name: ActivationFunctionId
  href: api/SharpNeat.NeuralNets.ActivationFunctionId.html
  commentId: T:SharpNeat.NeuralNets.ActivationFunctionId
  fullName: SharpNeat.NeuralNets.ActivationFunctionId
  nameWithType: ActivationFunctionId
- uid: SharpNeat.NeuralNets.ActivationFunctionId.ArcSinH
  name: ArcSinH
  href: api/SharpNeat.NeuralNets.ActivationFunctionId.html#SharpNeat_NeuralNets_ActivationFunctionId_ArcSinH
  commentId: F:SharpNeat.NeuralNets.ActivationFunctionId.ArcSinH
  fullName: SharpNeat.NeuralNets.ActivationFunctionId.ArcSinH
  nameWithType: ActivationFunctionId.ArcSinH
- uid: SharpNeat.NeuralNets.ActivationFunctionId.ArcTan
  name: ArcTan
  href: api/SharpNeat.NeuralNets.ActivationFunctionId.html#SharpNeat_NeuralNets_ActivationFunctionId_ArcTan
  commentId: F:SharpNeat.NeuralNets.ActivationFunctionId.ArcTan
  fullName: SharpNeat.NeuralNets.ActivationFunctionId.ArcTan
  nameWithType: ActivationFunctionId.ArcTan
- uid: SharpNeat.NeuralNets.ActivationFunctionId.LeakyReLU
  name: LeakyReLU
  href: api/SharpNeat.NeuralNets.ActivationFunctionId.html#SharpNeat_NeuralNets_ActivationFunctionId_LeakyReLU
  commentId: F:SharpNeat.NeuralNets.ActivationFunctionId.LeakyReLU
  fullName: SharpNeat.NeuralNets.ActivationFunctionId.LeakyReLU
  nameWithType: ActivationFunctionId.LeakyReLU
- uid: SharpNeat.NeuralNets.ActivationFunctionId.LeakyReLUShifted
  name: LeakyReLUShifted
  href: api/SharpNeat.NeuralNets.ActivationFunctionId.html#SharpNeat_NeuralNets_ActivationFunctionId_LeakyReLUShifted
  commentId: F:SharpNeat.NeuralNets.ActivationFunctionId.LeakyReLUShifted
  fullName: SharpNeat.NeuralNets.ActivationFunctionId.LeakyReLUShifted
  nameWithType: ActivationFunctionId.LeakyReLUShifted
- uid: SharpNeat.NeuralNets.ActivationFunctionId.Logistic
  name: Logistic
  href: api/SharpNeat.NeuralNets.ActivationFunctionId.html#SharpNeat_NeuralNets_ActivationFunctionId_Logistic
  commentId: F:SharpNeat.NeuralNets.ActivationFunctionId.Logistic
  fullName: SharpNeat.NeuralNets.ActivationFunctionId.Logistic
  nameWithType: ActivationFunctionId.Logistic
- uid: SharpNeat.NeuralNets.ActivationFunctionId.LogisticApproximantSteep
  name: LogisticApproximantSteep
  href: api/SharpNeat.NeuralNets.ActivationFunctionId.html#SharpNeat_NeuralNets_ActivationFunctionId_LogisticApproximantSteep
  commentId: F:SharpNeat.NeuralNets.ActivationFunctionId.LogisticApproximantSteep
  fullName: SharpNeat.NeuralNets.ActivationFunctionId.LogisticApproximantSteep
  nameWithType: ActivationFunctionId.LogisticApproximantSteep
- uid: SharpNeat.NeuralNets.ActivationFunctionId.LogisticSteep
  name: LogisticSteep
  href: api/SharpNeat.NeuralNets.ActivationFunctionId.html#SharpNeat_NeuralNets_ActivationFunctionId_LogisticSteep
  commentId: F:SharpNeat.NeuralNets.ActivationFunctionId.LogisticSteep
  fullName: SharpNeat.NeuralNets.ActivationFunctionId.LogisticSteep
  nameWithType: ActivationFunctionId.LogisticSteep
- uid: SharpNeat.NeuralNets.ActivationFunctionId.MaxMinusOne
  name: MaxMinusOne
  href: api/SharpNeat.NeuralNets.ActivationFunctionId.html#SharpNeat_NeuralNets_ActivationFunctionId_MaxMinusOne
  commentId: F:SharpNeat.NeuralNets.ActivationFunctionId.MaxMinusOne
  fullName: SharpNeat.NeuralNets.ActivationFunctionId.MaxMinusOne
  nameWithType: ActivationFunctionId.MaxMinusOne
- uid: SharpNeat.NeuralNets.ActivationFunctionId.NullFn
  name: NullFn
  href: api/SharpNeat.NeuralNets.ActivationFunctionId.html#SharpNeat_NeuralNets_ActivationFunctionId_NullFn
  commentId: F:SharpNeat.NeuralNets.ActivationFunctionId.NullFn
  fullName: SharpNeat.NeuralNets.ActivationFunctionId.NullFn
  nameWithType: ActivationFunctionId.NullFn
- uid: SharpNeat.NeuralNets.ActivationFunctionId.PolynomialApproximantSteep
  name: PolynomialApproximantSteep
  href: api/SharpNeat.NeuralNets.ActivationFunctionId.html#SharpNeat_NeuralNets_ActivationFunctionId_PolynomialApproximantSteep
  commentId: F:SharpNeat.NeuralNets.ActivationFunctionId.PolynomialApproximantSteep
  fullName: SharpNeat.NeuralNets.ActivationFunctionId.PolynomialApproximantSteep
  nameWithType: ActivationFunctionId.PolynomialApproximantSteep
- uid: SharpNeat.NeuralNets.ActivationFunctionId.QuadraticSigmoid
  name: QuadraticSigmoid
  href: api/SharpNeat.NeuralNets.ActivationFunctionId.html#SharpNeat_NeuralNets_ActivationFunctionId_QuadraticSigmoid
  commentId: F:SharpNeat.NeuralNets.ActivationFunctionId.QuadraticSigmoid
  fullName: SharpNeat.NeuralNets.ActivationFunctionId.QuadraticSigmoid
  nameWithType: ActivationFunctionId.QuadraticSigmoid
- uid: SharpNeat.NeuralNets.ActivationFunctionId.ReLU
  name: ReLU
  href: api/SharpNeat.NeuralNets.ActivationFunctionId.html#SharpNeat_NeuralNets_ActivationFunctionId_ReLU
  commentId: F:SharpNeat.NeuralNets.ActivationFunctionId.ReLU
  fullName: SharpNeat.NeuralNets.ActivationFunctionId.ReLU
  nameWithType: ActivationFunctionId.ReLU
- uid: SharpNeat.NeuralNets.ActivationFunctionId.ScaledELU
  name: ScaledELU
  href: api/SharpNeat.NeuralNets.ActivationFunctionId.html#SharpNeat_NeuralNets_ActivationFunctionId_ScaledELU
  commentId: F:SharpNeat.NeuralNets.ActivationFunctionId.ScaledELU
  fullName: SharpNeat.NeuralNets.ActivationFunctionId.ScaledELU
  nameWithType: ActivationFunctionId.ScaledELU
- uid: SharpNeat.NeuralNets.ActivationFunctionId.SoftSignSteep
  name: SoftSignSteep
  href: api/SharpNeat.NeuralNets.ActivationFunctionId.html#SharpNeat_NeuralNets_ActivationFunctionId_SoftSignSteep
  commentId: F:SharpNeat.NeuralNets.ActivationFunctionId.SoftSignSteep
  fullName: SharpNeat.NeuralNets.ActivationFunctionId.SoftSignSteep
  nameWithType: ActivationFunctionId.SoftSignSteep
- uid: SharpNeat.NeuralNets.ActivationFunctionId.SReLU
  name: SReLU
  href: api/SharpNeat.NeuralNets.ActivationFunctionId.html#SharpNeat_NeuralNets_ActivationFunctionId_SReLU
  commentId: F:SharpNeat.NeuralNets.ActivationFunctionId.SReLU
  fullName: SharpNeat.NeuralNets.ActivationFunctionId.SReLU
  nameWithType: ActivationFunctionId.SReLU
- uid: SharpNeat.NeuralNets.ActivationFunctionId.SReLUShifted
  name: SReLUShifted
  href: api/SharpNeat.NeuralNets.ActivationFunctionId.html#SharpNeat_NeuralNets_ActivationFunctionId_SReLUShifted
  commentId: F:SharpNeat.NeuralNets.ActivationFunctionId.SReLUShifted
  fullName: SharpNeat.NeuralNets.ActivationFunctionId.SReLUShifted
  nameWithType: ActivationFunctionId.SReLUShifted
- uid: SharpNeat.NeuralNets.ActivationFunctionId.TanH
  name: TanH
  href: api/SharpNeat.NeuralNets.ActivationFunctionId.html#SharpNeat_NeuralNets_ActivationFunctionId_TanH
  commentId: F:SharpNeat.NeuralNets.ActivationFunctionId.TanH
  fullName: SharpNeat.NeuralNets.ActivationFunctionId.TanH
  nameWithType: ActivationFunctionId.TanH
- uid: SharpNeat.NeuralNets.DefaultActivationFunctionFactory`1
  name: DefaultActivationFunctionFactory<T>
  href: api/SharpNeat.NeuralNets.DefaultActivationFunctionFactory-1.html
  commentId: T:SharpNeat.NeuralNets.DefaultActivationFunctionFactory`1
  name.vb: DefaultActivationFunctionFactory(Of T)
  fullName: SharpNeat.NeuralNets.DefaultActivationFunctionFactory<T>
  fullName.vb: SharpNeat.NeuralNets.DefaultActivationFunctionFactory(Of T)
  nameWithType: DefaultActivationFunctionFactory<T>
  nameWithType.vb: DefaultActivationFunctionFactory(Of T)
- uid: SharpNeat.NeuralNets.DefaultActivationFunctionFactory`1.#ctor(System.Boolean)
  name: DefaultActivationFunctionFactory(bool)
  href: api/SharpNeat.NeuralNets.DefaultActivationFunctionFactory-1.html#SharpNeat_NeuralNets_DefaultActivationFunctionFactory_1__ctor_System_Boolean_
  commentId: M:SharpNeat.NeuralNets.DefaultActivationFunctionFactory`1.#ctor(System.Boolean)
  name.vb: New(Boolean)
  fullName: SharpNeat.NeuralNets.DefaultActivationFunctionFactory<T>.DefaultActivationFunctionFactory(bool)
  fullName.vb: SharpNeat.NeuralNets.DefaultActivationFunctionFactory(Of T).New(Boolean)
  nameWithType: DefaultActivationFunctionFactory<T>.DefaultActivationFunctionFactory(bool)
  nameWithType.vb: DefaultActivationFunctionFactory(Of T).New(Boolean)
- uid: SharpNeat.NeuralNets.DefaultActivationFunctionFactory`1.#ctor*
  name: DefaultActivationFunctionFactory
  href: api/SharpNeat.NeuralNets.DefaultActivationFunctionFactory-1.html#SharpNeat_NeuralNets_DefaultActivationFunctionFactory_1__ctor_
  commentId: Overload:SharpNeat.NeuralNets.DefaultActivationFunctionFactory`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.NeuralNets.DefaultActivationFunctionFactory<T>.DefaultActivationFunctionFactory
  fullName.vb: SharpNeat.NeuralNets.DefaultActivationFunctionFactory(Of T).New
  nameWithType: DefaultActivationFunctionFactory<T>.DefaultActivationFunctionFactory
  nameWithType.vb: DefaultActivationFunctionFactory(Of T).New
- uid: SharpNeat.NeuralNets.DefaultActivationFunctionFactory`1.GetActivationFunction(System.String)
  name: GetActivationFunction(string)
  href: api/SharpNeat.NeuralNets.DefaultActivationFunctionFactory-1.html#SharpNeat_NeuralNets_DefaultActivationFunctionFactory_1_GetActivationFunction_System_String_
  commentId: M:SharpNeat.NeuralNets.DefaultActivationFunctionFactory`1.GetActivationFunction(System.String)
  name.vb: GetActivationFunction(String)
  fullName: SharpNeat.NeuralNets.DefaultActivationFunctionFactory<T>.GetActivationFunction(string)
  fullName.vb: SharpNeat.NeuralNets.DefaultActivationFunctionFactory(Of T).GetActivationFunction(String)
  nameWithType: DefaultActivationFunctionFactory<T>.GetActivationFunction(string)
  nameWithType.vb: DefaultActivationFunctionFactory(Of T).GetActivationFunction(String)
- uid: SharpNeat.NeuralNets.DefaultActivationFunctionFactory`1.GetActivationFunction*
  name: GetActivationFunction
  href: api/SharpNeat.NeuralNets.DefaultActivationFunctionFactory-1.html#SharpNeat_NeuralNets_DefaultActivationFunctionFactory_1_GetActivationFunction_
  commentId: Overload:SharpNeat.NeuralNets.DefaultActivationFunctionFactory`1.GetActivationFunction
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.DefaultActivationFunctionFactory<T>.GetActivationFunction
  fullName.vb: SharpNeat.NeuralNets.DefaultActivationFunctionFactory(Of T).GetActivationFunction
  nameWithType: DefaultActivationFunctionFactory<T>.GetActivationFunction
  nameWithType.vb: DefaultActivationFunctionFactory(Of T).GetActivationFunction
- uid: SharpNeat.NeuralNets.Double
  name: SharpNeat.NeuralNets.Double
  href: api/SharpNeat.NeuralNets.Double.html
  commentId: N:SharpNeat.NeuralNets.Double
  fullName: SharpNeat.NeuralNets.Double
  nameWithType: SharpNeat.NeuralNets.Double
- uid: SharpNeat.NeuralNets.Double.ActivationFunctionFactoryTests
  name: ActivationFunctionFactoryTests
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctionFactoryTests.html
  commentId: T:SharpNeat.NeuralNets.Double.ActivationFunctionFactoryTests
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctionFactoryTests
  nameWithType: ActivationFunctionFactoryTests
- uid: SharpNeat.NeuralNets.Double.ActivationFunctionFactoryTests.GetActivationFunction
  name: GetActivationFunction()
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctionFactoryTests.html#SharpNeat_NeuralNets_Double_ActivationFunctionFactoryTests_GetActivationFunction
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctionFactoryTests.GetActivationFunction
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctionFactoryTests.GetActivationFunction()
  nameWithType: ActivationFunctionFactoryTests.GetActivationFunction()
- uid: SharpNeat.NeuralNets.Double.ActivationFunctionFactoryTests.GetActivationFunction_Cppn
  name: GetActivationFunction_Cppn()
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctionFactoryTests.html#SharpNeat_NeuralNets_Double_ActivationFunctionFactoryTests_GetActivationFunction_Cppn
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctionFactoryTests.GetActivationFunction_Cppn
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctionFactoryTests.GetActivationFunction_Cppn()
  nameWithType: ActivationFunctionFactoryTests.GetActivationFunction_Cppn()
- uid: SharpNeat.NeuralNets.Double.ActivationFunctionFactoryTests.GetActivationFunction_Cppn*
  name: GetActivationFunction_Cppn
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctionFactoryTests.html#SharpNeat_NeuralNets_Double_ActivationFunctionFactoryTests_GetActivationFunction_Cppn_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctionFactoryTests.GetActivationFunction_Cppn
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctionFactoryTests.GetActivationFunction_Cppn
  nameWithType: ActivationFunctionFactoryTests.GetActivationFunction_Cppn
- uid: SharpNeat.NeuralNets.Double.ActivationFunctionFactoryTests.GetActivationFunction_Vectorized
  name: GetActivationFunction_Vectorized()
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctionFactoryTests.html#SharpNeat_NeuralNets_Double_ActivationFunctionFactoryTests_GetActivationFunction_Vectorized
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctionFactoryTests.GetActivationFunction_Vectorized
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctionFactoryTests.GetActivationFunction_Vectorized()
  nameWithType: ActivationFunctionFactoryTests.GetActivationFunction_Vectorized()
- uid: SharpNeat.NeuralNets.Double.ActivationFunctionFactoryTests.GetActivationFunction_Vectorized*
  name: GetActivationFunction_Vectorized
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctionFactoryTests.html#SharpNeat_NeuralNets_Double_ActivationFunctionFactoryTests_GetActivationFunction_Vectorized_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctionFactoryTests.GetActivationFunction_Vectorized
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctionFactoryTests.GetActivationFunction_Vectorized
  nameWithType: ActivationFunctionFactoryTests.GetActivationFunction_Vectorized
- uid: SharpNeat.NeuralNets.Double.ActivationFunctionFactoryTests.GetActivationFunction*
  name: GetActivationFunction
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctionFactoryTests.html#SharpNeat_NeuralNets_Double_ActivationFunctionFactoryTests_GetActivationFunction_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctionFactoryTests.GetActivationFunction
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctionFactoryTests.GetActivationFunction
  nameWithType: ActivationFunctionFactoryTests.GetActivationFunction
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions
  name: SharpNeat.NeuralNets.Double.ActivationFunctions
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.html
  commentId: N:SharpNeat.NeuralNets.Double.ActivationFunctions
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions
  nameWithType: SharpNeat.NeuralNets.Double.ActivationFunctions
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.ActivationFunctionMonotonicityTests
  name: ActivationFunctionMonotonicityTests
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.ActivationFunctionMonotonicityTests.html
  commentId: T:SharpNeat.NeuralNets.Double.ActivationFunctions.ActivationFunctionMonotonicityTests
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.ActivationFunctionMonotonicityTests
  nameWithType: ActivationFunctionMonotonicityTests
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.ActivationFunctionMonotonicityTests.TestMonotonicity
  name: TestMonotonicity()
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.ActivationFunctionMonotonicityTests.html#SharpNeat_NeuralNets_Double_ActivationFunctions_ActivationFunctionMonotonicityTests_TestMonotonicity
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.ActivationFunctionMonotonicityTests.TestMonotonicity
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.ActivationFunctionMonotonicityTests.TestMonotonicity()
  nameWithType: ActivationFunctionMonotonicityTests.TestMonotonicity()
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.ActivationFunctionMonotonicityTests.TestMonotonicity*
  name: TestMonotonicity
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.ActivationFunctionMonotonicityTests.html#SharpNeat_NeuralNets_Double_ActivationFunctions_ActivationFunctionMonotonicityTests_TestMonotonicity_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.ActivationFunctionMonotonicityTests.TestMonotonicity
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.ActivationFunctionMonotonicityTests.TestMonotonicity
  nameWithType: ActivationFunctionMonotonicityTests.TestMonotonicity
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.ActivationFunctionOverloadTests
  name: ActivationFunctionOverloadTests
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.ActivationFunctionOverloadTests.html
  commentId: T:SharpNeat.NeuralNets.Double.ActivationFunctions.ActivationFunctionOverloadTests
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.ActivationFunctionOverloadTests
  nameWithType: ActivationFunctionOverloadTests
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.ActivationFunctionOverloadTests.Fn_Overloads
  name: Fn_Overloads()
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.ActivationFunctionOverloadTests.html#SharpNeat_NeuralNets_Double_ActivationFunctions_ActivationFunctionOverloadTests_Fn_Overloads
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.ActivationFunctionOverloadTests.Fn_Overloads
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.ActivationFunctionOverloadTests.Fn_Overloads()
  nameWithType: ActivationFunctionOverloadTests.Fn_Overloads()
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.ActivationFunctionOverloadTests.Fn_Overloads*
  name: Fn_Overloads
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.ActivationFunctionOverloadTests.html#SharpNeat_NeuralNets_Double_ActivationFunctions_ActivationFunctionOverloadTests_Fn_Overloads_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.ActivationFunctionOverloadTests.Fn_Overloads
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.ActivationFunctionOverloadTests.Fn_Overloads
  nameWithType: ActivationFunctionOverloadTests.Fn_Overloads
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.ArcSinH
  name: ArcSinH
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.ArcSinH.html
  commentId: T:SharpNeat.NeuralNets.Double.ActivationFunctions.ArcSinH
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.ArcSinH
  nameWithType: ArcSinH
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.ArcSinH.Fn(System.Double@,System.Double@,System.Int32)
  name: Fn(ref double, ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.ArcSinH.html#SharpNeat_NeuralNets_Double_ActivationFunctions_ArcSinH_Fn_System_Double__System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.ArcSinH.Fn(System.Double@,System.Double@,System.Int32)
  name.vb: Fn(Double, Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.ArcSinH.Fn(ref double, ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.ArcSinH.Fn(Double, Double, Integer)
  nameWithType: ArcSinH.Fn(ref double, ref double, int)
  nameWithType.vb: ArcSinH.Fn(Double, Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.ArcSinH.Fn(System.Double@,System.Double@)
  name: Fn(ref double, ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.ArcSinH.html#SharpNeat_NeuralNets_Double_ActivationFunctions_ArcSinH_Fn_System_Double__System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.ArcSinH.Fn(System.Double@,System.Double@)
  name.vb: Fn(Double, Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.ArcSinH.Fn(ref double, ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.ArcSinH.Fn(Double, Double)
  nameWithType: ArcSinH.Fn(ref double, ref double)
  nameWithType.vb: ArcSinH.Fn(Double, Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.ArcSinH.Fn(System.Double@,System.Int32)
  name: Fn(ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.ArcSinH.html#SharpNeat_NeuralNets_Double_ActivationFunctions_ArcSinH_Fn_System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.ArcSinH.Fn(System.Double@,System.Int32)
  name.vb: Fn(Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.ArcSinH.Fn(ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.ArcSinH.Fn(Double, Integer)
  nameWithType: ArcSinH.Fn(ref double, int)
  nameWithType.vb: ArcSinH.Fn(Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.ArcSinH.Fn(System.Double@)
  name: Fn(ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.ArcSinH.html#SharpNeat_NeuralNets_Double_ActivationFunctions_ArcSinH_Fn_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.ArcSinH.Fn(System.Double@)
  name.vb: Fn(Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.ArcSinH.Fn(ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.ArcSinH.Fn(Double)
  nameWithType: ArcSinH.Fn(ref double)
  nameWithType.vb: ArcSinH.Fn(Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.ArcSinH.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name: Fn(ReadOnlySpan<double>, Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.ArcSinH.html#SharpNeat_NeuralNets_Double_ActivationFunctions_ArcSinH_Fn_System_ReadOnlySpan_System_Double__System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.ArcSinH.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name.vb: Fn(ReadOnlySpan(Of Double), Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.ArcSinH.Fn(System.ReadOnlySpan<double>, System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.ArcSinH.Fn(System.ReadOnlySpan(Of Double), System.Span(Of Double))
  nameWithType: ArcSinH.Fn(ReadOnlySpan<double>, Span<double>)
  nameWithType.vb: ArcSinH.Fn(ReadOnlySpan(Of Double), Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.ArcSinH.Fn(System.Span{System.Double})
  name: Fn(Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.ArcSinH.html#SharpNeat_NeuralNets_Double_ActivationFunctions_ArcSinH_Fn_System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.ArcSinH.Fn(System.Span{System.Double})
  name.vb: Fn(Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.ArcSinH.Fn(System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.ArcSinH.Fn(System.Span(Of Double))
  nameWithType: ArcSinH.Fn(Span<double>)
  nameWithType.vb: ArcSinH.Fn(Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.ArcSinH.Fn*
  name: Fn
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.ArcSinH.html#SharpNeat_NeuralNets_Double_ActivationFunctions_ArcSinH_Fn_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.ArcSinH.Fn
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.ArcSinH.Fn
  nameWithType: ArcSinH.Fn
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.ArcTan
  name: ArcTan
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.ArcTan.html
  commentId: T:SharpNeat.NeuralNets.Double.ActivationFunctions.ArcTan
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.ArcTan
  nameWithType: ArcTan
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.ArcTan.Fn(System.Double@,System.Double@,System.Int32)
  name: Fn(ref double, ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.ArcTan.html#SharpNeat_NeuralNets_Double_ActivationFunctions_ArcTan_Fn_System_Double__System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.ArcTan.Fn(System.Double@,System.Double@,System.Int32)
  name.vb: Fn(Double, Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.ArcTan.Fn(ref double, ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.ArcTan.Fn(Double, Double, Integer)
  nameWithType: ArcTan.Fn(ref double, ref double, int)
  nameWithType.vb: ArcTan.Fn(Double, Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.ArcTan.Fn(System.Double@,System.Double@)
  name: Fn(ref double, ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.ArcTan.html#SharpNeat_NeuralNets_Double_ActivationFunctions_ArcTan_Fn_System_Double__System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.ArcTan.Fn(System.Double@,System.Double@)
  name.vb: Fn(Double, Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.ArcTan.Fn(ref double, ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.ArcTan.Fn(Double, Double)
  nameWithType: ArcTan.Fn(ref double, ref double)
  nameWithType.vb: ArcTan.Fn(Double, Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.ArcTan.Fn(System.Double@,System.Int32)
  name: Fn(ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.ArcTan.html#SharpNeat_NeuralNets_Double_ActivationFunctions_ArcTan_Fn_System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.ArcTan.Fn(System.Double@,System.Int32)
  name.vb: Fn(Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.ArcTan.Fn(ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.ArcTan.Fn(Double, Integer)
  nameWithType: ArcTan.Fn(ref double, int)
  nameWithType.vb: ArcTan.Fn(Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.ArcTan.Fn(System.Double@)
  name: Fn(ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.ArcTan.html#SharpNeat_NeuralNets_Double_ActivationFunctions_ArcTan_Fn_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.ArcTan.Fn(System.Double@)
  name.vb: Fn(Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.ArcTan.Fn(ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.ArcTan.Fn(Double)
  nameWithType: ArcTan.Fn(ref double)
  nameWithType.vb: ArcTan.Fn(Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.ArcTan.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name: Fn(ReadOnlySpan<double>, Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.ArcTan.html#SharpNeat_NeuralNets_Double_ActivationFunctions_ArcTan_Fn_System_ReadOnlySpan_System_Double__System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.ArcTan.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name.vb: Fn(ReadOnlySpan(Of Double), Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.ArcTan.Fn(System.ReadOnlySpan<double>, System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.ArcTan.Fn(System.ReadOnlySpan(Of Double), System.Span(Of Double))
  nameWithType: ArcTan.Fn(ReadOnlySpan<double>, Span<double>)
  nameWithType.vb: ArcTan.Fn(ReadOnlySpan(Of Double), Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.ArcTan.Fn(System.Span{System.Double})
  name: Fn(Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.ArcTan.html#SharpNeat_NeuralNets_Double_ActivationFunctions_ArcTan_Fn_System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.ArcTan.Fn(System.Span{System.Double})
  name.vb: Fn(Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.ArcTan.Fn(System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.ArcTan.Fn(System.Span(Of Double))
  nameWithType: ArcTan.Fn(Span<double>)
  nameWithType.vb: ArcTan.Fn(Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.ArcTan.Fn*
  name: Fn
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.ArcTan.html#SharpNeat_NeuralNets_Double_ActivationFunctions_ArcTan_Fn_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.ArcTan.Fn
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.ArcTan.Fn
  nameWithType: ArcTan.Fn
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks
  name: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.html
  commentId: N:SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks
  nameWithType: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks
  name: ActivationFunctionsBenchmarks
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.html
  commentId: T:SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks
  nameWithType: ActivationFunctionsBenchmarks
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.#ctor
  name: ActivationFunctionsBenchmarks()
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Benchmarks_ActivationFunctionsBenchmarks__ctor
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.#ctor
  name.vb: New()
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.ActivationFunctionsBenchmarks()
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.New()
  nameWithType: ActivationFunctionsBenchmarks.ActivationFunctionsBenchmarks()
  nameWithType.vb: ActivationFunctionsBenchmarks.New()
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.#ctor*
  name: ActivationFunctionsBenchmarks
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Benchmarks_ActivationFunctionsBenchmarks__ctor_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.ActivationFunctionsBenchmarks
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.New
  nameWithType: ActivationFunctionsBenchmarks.ActivationFunctionsBenchmarks
  nameWithType.vb: ActivationFunctionsBenchmarks.New
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.ArcSinH
  name: ArcSinH()
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Benchmarks_ActivationFunctionsBenchmarks_ArcSinH
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.ArcSinH
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.ArcSinH()
  nameWithType: ActivationFunctionsBenchmarks.ArcSinH()
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.ArcSinH*
  name: ArcSinH
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Benchmarks_ActivationFunctionsBenchmarks_ArcSinH_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.ArcSinH
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.ArcSinH
  nameWithType: ActivationFunctionsBenchmarks.ArcSinH
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.ArcTan
  name: ArcTan()
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Benchmarks_ActivationFunctionsBenchmarks_ArcTan
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.ArcTan
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.ArcTan()
  nameWithType: ActivationFunctionsBenchmarks.ArcTan()
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.ArcTan*
  name: ArcTan
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Benchmarks_ActivationFunctionsBenchmarks_ArcTan_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.ArcTan
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.ArcTan
  nameWithType: ActivationFunctionsBenchmarks.ArcTan
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.LeakyReLU
  name: LeakyReLU()
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Benchmarks_ActivationFunctionsBenchmarks_LeakyReLU
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.LeakyReLU
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.LeakyReLU()
  nameWithType: ActivationFunctionsBenchmarks.LeakyReLU()
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.LeakyReLU*
  name: LeakyReLU
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Benchmarks_ActivationFunctionsBenchmarks_LeakyReLU_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.LeakyReLU
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.LeakyReLU
  nameWithType: ActivationFunctionsBenchmarks.LeakyReLU
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.LeakyReLUShifted
  name: LeakyReLUShifted()
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Benchmarks_ActivationFunctionsBenchmarks_LeakyReLUShifted
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.LeakyReLUShifted
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.LeakyReLUShifted()
  nameWithType: ActivationFunctionsBenchmarks.LeakyReLUShifted()
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.LeakyReLUShifted*
  name: LeakyReLUShifted
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Benchmarks_ActivationFunctionsBenchmarks_LeakyReLUShifted_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.LeakyReLUShifted
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.LeakyReLUShifted
  nameWithType: ActivationFunctionsBenchmarks.LeakyReLUShifted
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.Logistic
  name: Logistic()
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Benchmarks_ActivationFunctionsBenchmarks_Logistic
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.Logistic
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.Logistic()
  nameWithType: ActivationFunctionsBenchmarks.Logistic()
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.Logistic*
  name: Logistic
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Benchmarks_ActivationFunctionsBenchmarks_Logistic_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.Logistic
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.Logistic
  nameWithType: ActivationFunctionsBenchmarks.Logistic
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.LogisticApproximantSteep
  name: LogisticApproximantSteep()
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Benchmarks_ActivationFunctionsBenchmarks_LogisticApproximantSteep
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.LogisticApproximantSteep
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.LogisticApproximantSteep()
  nameWithType: ActivationFunctionsBenchmarks.LogisticApproximantSteep()
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.LogisticApproximantSteep*
  name: LogisticApproximantSteep
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Benchmarks_ActivationFunctionsBenchmarks_LogisticApproximantSteep_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.LogisticApproximantSteep
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.LogisticApproximantSteep
  nameWithType: ActivationFunctionsBenchmarks.LogisticApproximantSteep
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.LogisticSteep
  name: LogisticSteep()
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Benchmarks_ActivationFunctionsBenchmarks_LogisticSteep
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.LogisticSteep
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.LogisticSteep()
  nameWithType: ActivationFunctionsBenchmarks.LogisticSteep()
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.LogisticSteep*
  name: LogisticSteep
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Benchmarks_ActivationFunctionsBenchmarks_LogisticSteep_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.LogisticSteep
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.LogisticSteep
  nameWithType: ActivationFunctionsBenchmarks.LogisticSteep
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.MaxMinusOne
  name: MaxMinusOne()
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Benchmarks_ActivationFunctionsBenchmarks_MaxMinusOne
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.MaxMinusOne
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.MaxMinusOne()
  nameWithType: ActivationFunctionsBenchmarks.MaxMinusOne()
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.MaxMinusOne*
  name: MaxMinusOne
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Benchmarks_ActivationFunctionsBenchmarks_MaxMinusOne_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.MaxMinusOne
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.MaxMinusOne
  nameWithType: ActivationFunctionsBenchmarks.MaxMinusOne
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.NullFn
  name: NullFn()
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Benchmarks_ActivationFunctionsBenchmarks_NullFn
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.NullFn
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.NullFn()
  nameWithType: ActivationFunctionsBenchmarks.NullFn()
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.NullFn*
  name: NullFn
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Benchmarks_ActivationFunctionsBenchmarks_NullFn_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.NullFn
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.NullFn
  nameWithType: ActivationFunctionsBenchmarks.NullFn
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.PolynomialApproximantSteep
  name: PolynomialApproximantSteep()
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Benchmarks_ActivationFunctionsBenchmarks_PolynomialApproximantSteep
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.PolynomialApproximantSteep
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.PolynomialApproximantSteep()
  nameWithType: ActivationFunctionsBenchmarks.PolynomialApproximantSteep()
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.PolynomialApproximantSteep*
  name: PolynomialApproximantSteep
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Benchmarks_ActivationFunctionsBenchmarks_PolynomialApproximantSteep_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.PolynomialApproximantSteep
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.PolynomialApproximantSteep
  nameWithType: ActivationFunctionsBenchmarks.PolynomialApproximantSteep
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.QuadraticSigmoid
  name: QuadraticSigmoid()
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Benchmarks_ActivationFunctionsBenchmarks_QuadraticSigmoid
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.QuadraticSigmoid
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.QuadraticSigmoid()
  nameWithType: ActivationFunctionsBenchmarks.QuadraticSigmoid()
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.QuadraticSigmoid*
  name: QuadraticSigmoid
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Benchmarks_ActivationFunctionsBenchmarks_QuadraticSigmoid_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.QuadraticSigmoid
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.QuadraticSigmoid
  nameWithType: ActivationFunctionsBenchmarks.QuadraticSigmoid
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.ReLU
  name: ReLU()
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Benchmarks_ActivationFunctionsBenchmarks_ReLU
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.ReLU
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.ReLU()
  nameWithType: ActivationFunctionsBenchmarks.ReLU()
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.ReLU*
  name: ReLU
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Benchmarks_ActivationFunctionsBenchmarks_ReLU_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.ReLU
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.ReLU
  nameWithType: ActivationFunctionsBenchmarks.ReLU
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.ScaledELU
  name: ScaledELU()
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Benchmarks_ActivationFunctionsBenchmarks_ScaledELU
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.ScaledELU
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.ScaledELU()
  nameWithType: ActivationFunctionsBenchmarks.ScaledELU()
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.ScaledELU*
  name: ScaledELU
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Benchmarks_ActivationFunctionsBenchmarks_ScaledELU_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.ScaledELU
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.ScaledELU
  nameWithType: ActivationFunctionsBenchmarks.ScaledELU
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.SoftSignSteep
  name: SoftSignSteep()
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Benchmarks_ActivationFunctionsBenchmarks_SoftSignSteep
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.SoftSignSteep
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.SoftSignSteep()
  nameWithType: ActivationFunctionsBenchmarks.SoftSignSteep()
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.SoftSignSteep*
  name: SoftSignSteep
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Benchmarks_ActivationFunctionsBenchmarks_SoftSignSteep_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.SoftSignSteep
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.SoftSignSteep
  nameWithType: ActivationFunctionsBenchmarks.SoftSignSteep
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.SReLU
  name: SReLU()
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Benchmarks_ActivationFunctionsBenchmarks_SReLU
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.SReLU
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.SReLU()
  nameWithType: ActivationFunctionsBenchmarks.SReLU()
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.SReLU*
  name: SReLU
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Benchmarks_ActivationFunctionsBenchmarks_SReLU_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.SReLU
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.SReLU
  nameWithType: ActivationFunctionsBenchmarks.SReLU
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.SReLUShifted
  name: SReLUShifted()
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Benchmarks_ActivationFunctionsBenchmarks_SReLUShifted
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.SReLUShifted
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.SReLUShifted()
  nameWithType: ActivationFunctionsBenchmarks.SReLUShifted()
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.SReLUShifted*
  name: SReLUShifted
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Benchmarks_ActivationFunctionsBenchmarks_SReLUShifted_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.SReLUShifted
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.SReLUShifted
  nameWithType: ActivationFunctionsBenchmarks.SReLUShifted
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.TanH
  name: TanH()
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Benchmarks_ActivationFunctionsBenchmarks_TanH
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.TanH
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.TanH()
  nameWithType: ActivationFunctionsBenchmarks.TanH()
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.TanH*
  name: TanH
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Benchmarks_ActivationFunctionsBenchmarks_TanH_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.TanH
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Benchmarks.ActivationFunctionsBenchmarks.TanH
  nameWithType: ActivationFunctionsBenchmarks.TanH
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn
  name: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.html
  commentId: N:SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn
  nameWithType: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarGaussian
  name: BipolarGaussian
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarGaussian.html
  commentId: T:SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarGaussian
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarGaussian
  nameWithType: BipolarGaussian
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarGaussian.Fn(System.Double@,System.Double@,System.Int32)
  name: Fn(ref double, ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarGaussian.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Cppn_BipolarGaussian_Fn_System_Double__System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarGaussian.Fn(System.Double@,System.Double@,System.Int32)
  name.vb: Fn(Double, Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarGaussian.Fn(ref double, ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarGaussian.Fn(Double, Double, Integer)
  nameWithType: BipolarGaussian.Fn(ref double, ref double, int)
  nameWithType.vb: BipolarGaussian.Fn(Double, Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarGaussian.Fn(System.Double@,System.Double@)
  name: Fn(ref double, ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarGaussian.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Cppn_BipolarGaussian_Fn_System_Double__System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarGaussian.Fn(System.Double@,System.Double@)
  name.vb: Fn(Double, Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarGaussian.Fn(ref double, ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarGaussian.Fn(Double, Double)
  nameWithType: BipolarGaussian.Fn(ref double, ref double)
  nameWithType.vb: BipolarGaussian.Fn(Double, Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarGaussian.Fn(System.Double@,System.Int32)
  name: Fn(ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarGaussian.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Cppn_BipolarGaussian_Fn_System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarGaussian.Fn(System.Double@,System.Int32)
  name.vb: Fn(Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarGaussian.Fn(ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarGaussian.Fn(Double, Integer)
  nameWithType: BipolarGaussian.Fn(ref double, int)
  nameWithType.vb: BipolarGaussian.Fn(Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarGaussian.Fn(System.Double@)
  name: Fn(ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarGaussian.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Cppn_BipolarGaussian_Fn_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarGaussian.Fn(System.Double@)
  name.vb: Fn(Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarGaussian.Fn(ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarGaussian.Fn(Double)
  nameWithType: BipolarGaussian.Fn(ref double)
  nameWithType.vb: BipolarGaussian.Fn(Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarGaussian.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name: Fn(ReadOnlySpan<double>, Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarGaussian.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Cppn_BipolarGaussian_Fn_System_ReadOnlySpan_System_Double__System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarGaussian.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name.vb: Fn(ReadOnlySpan(Of Double), Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarGaussian.Fn(System.ReadOnlySpan<double>, System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarGaussian.Fn(System.ReadOnlySpan(Of Double), System.Span(Of Double))
  nameWithType: BipolarGaussian.Fn(ReadOnlySpan<double>, Span<double>)
  nameWithType.vb: BipolarGaussian.Fn(ReadOnlySpan(Of Double), Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarGaussian.Fn(System.Span{System.Double})
  name: Fn(Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarGaussian.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Cppn_BipolarGaussian_Fn_System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarGaussian.Fn(System.Span{System.Double})
  name.vb: Fn(Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarGaussian.Fn(System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarGaussian.Fn(System.Span(Of Double))
  nameWithType: BipolarGaussian.Fn(Span<double>)
  nameWithType.vb: BipolarGaussian.Fn(Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarGaussian.Fn*
  name: Fn
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarGaussian.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Cppn_BipolarGaussian_Fn_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarGaussian.Fn
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarGaussian.Fn
  nameWithType: BipolarGaussian.Fn
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarSigmoid
  name: BipolarSigmoid
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarSigmoid.html
  commentId: T:SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarSigmoid
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarSigmoid
  nameWithType: BipolarSigmoid
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarSigmoid.Fn(System.Double@,System.Double@,System.Int32)
  name: Fn(ref double, ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarSigmoid.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Cppn_BipolarSigmoid_Fn_System_Double__System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarSigmoid.Fn(System.Double@,System.Double@,System.Int32)
  name.vb: Fn(Double, Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarSigmoid.Fn(ref double, ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarSigmoid.Fn(Double, Double, Integer)
  nameWithType: BipolarSigmoid.Fn(ref double, ref double, int)
  nameWithType.vb: BipolarSigmoid.Fn(Double, Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarSigmoid.Fn(System.Double@,System.Double@)
  name: Fn(ref double, ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarSigmoid.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Cppn_BipolarSigmoid_Fn_System_Double__System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarSigmoid.Fn(System.Double@,System.Double@)
  name.vb: Fn(Double, Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarSigmoid.Fn(ref double, ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarSigmoid.Fn(Double, Double)
  nameWithType: BipolarSigmoid.Fn(ref double, ref double)
  nameWithType.vb: BipolarSigmoid.Fn(Double, Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarSigmoid.Fn(System.Double@,System.Int32)
  name: Fn(ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarSigmoid.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Cppn_BipolarSigmoid_Fn_System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarSigmoid.Fn(System.Double@,System.Int32)
  name.vb: Fn(Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarSigmoid.Fn(ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarSigmoid.Fn(Double, Integer)
  nameWithType: BipolarSigmoid.Fn(ref double, int)
  nameWithType.vb: BipolarSigmoid.Fn(Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarSigmoid.Fn(System.Double@)
  name: Fn(ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarSigmoid.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Cppn_BipolarSigmoid_Fn_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarSigmoid.Fn(System.Double@)
  name.vb: Fn(Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarSigmoid.Fn(ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarSigmoid.Fn(Double)
  nameWithType: BipolarSigmoid.Fn(ref double)
  nameWithType.vb: BipolarSigmoid.Fn(Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarSigmoid.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name: Fn(ReadOnlySpan<double>, Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarSigmoid.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Cppn_BipolarSigmoid_Fn_System_ReadOnlySpan_System_Double__System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarSigmoid.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name.vb: Fn(ReadOnlySpan(Of Double), Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarSigmoid.Fn(System.ReadOnlySpan<double>, System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarSigmoid.Fn(System.ReadOnlySpan(Of Double), System.Span(Of Double))
  nameWithType: BipolarSigmoid.Fn(ReadOnlySpan<double>, Span<double>)
  nameWithType.vb: BipolarSigmoid.Fn(ReadOnlySpan(Of Double), Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarSigmoid.Fn(System.Span{System.Double})
  name: Fn(Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarSigmoid.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Cppn_BipolarSigmoid_Fn_System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarSigmoid.Fn(System.Span{System.Double})
  name.vb: Fn(Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarSigmoid.Fn(System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarSigmoid.Fn(System.Span(Of Double))
  nameWithType: BipolarSigmoid.Fn(Span<double>)
  nameWithType.vb: BipolarSigmoid.Fn(Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarSigmoid.Fn*
  name: Fn
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarSigmoid.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Cppn_BipolarSigmoid_Fn_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarSigmoid.Fn
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.BipolarSigmoid.Fn
  nameWithType: BipolarSigmoid.Fn
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Gaussian
  name: Gaussian
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Gaussian.html
  commentId: T:SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Gaussian
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Gaussian
  nameWithType: Gaussian
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Gaussian.Fn(System.Double@,System.Double@,System.Int32)
  name: Fn(ref double, ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Gaussian.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Cppn_Gaussian_Fn_System_Double__System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Gaussian.Fn(System.Double@,System.Double@,System.Int32)
  name.vb: Fn(Double, Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Gaussian.Fn(ref double, ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Gaussian.Fn(Double, Double, Integer)
  nameWithType: Gaussian.Fn(ref double, ref double, int)
  nameWithType.vb: Gaussian.Fn(Double, Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Gaussian.Fn(System.Double@,System.Double@)
  name: Fn(ref double, ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Gaussian.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Cppn_Gaussian_Fn_System_Double__System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Gaussian.Fn(System.Double@,System.Double@)
  name.vb: Fn(Double, Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Gaussian.Fn(ref double, ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Gaussian.Fn(Double, Double)
  nameWithType: Gaussian.Fn(ref double, ref double)
  nameWithType.vb: Gaussian.Fn(Double, Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Gaussian.Fn(System.Double@,System.Int32)
  name: Fn(ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Gaussian.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Cppn_Gaussian_Fn_System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Gaussian.Fn(System.Double@,System.Int32)
  name.vb: Fn(Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Gaussian.Fn(ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Gaussian.Fn(Double, Integer)
  nameWithType: Gaussian.Fn(ref double, int)
  nameWithType.vb: Gaussian.Fn(Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Gaussian.Fn(System.Double@)
  name: Fn(ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Gaussian.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Cppn_Gaussian_Fn_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Gaussian.Fn(System.Double@)
  name.vb: Fn(Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Gaussian.Fn(ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Gaussian.Fn(Double)
  nameWithType: Gaussian.Fn(ref double)
  nameWithType.vb: Gaussian.Fn(Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Gaussian.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name: Fn(ReadOnlySpan<double>, Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Gaussian.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Cppn_Gaussian_Fn_System_ReadOnlySpan_System_Double__System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Gaussian.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name.vb: Fn(ReadOnlySpan(Of Double), Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Gaussian.Fn(System.ReadOnlySpan<double>, System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Gaussian.Fn(System.ReadOnlySpan(Of Double), System.Span(Of Double))
  nameWithType: Gaussian.Fn(ReadOnlySpan<double>, Span<double>)
  nameWithType.vb: Gaussian.Fn(ReadOnlySpan(Of Double), Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Gaussian.Fn(System.Span{System.Double})
  name: Fn(Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Gaussian.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Cppn_Gaussian_Fn_System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Gaussian.Fn(System.Span{System.Double})
  name.vb: Fn(Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Gaussian.Fn(System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Gaussian.Fn(System.Span(Of Double))
  nameWithType: Gaussian.Fn(Span<double>)
  nameWithType.vb: Gaussian.Fn(Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Gaussian.Fn*
  name: Fn
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Gaussian.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Cppn_Gaussian_Fn_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Gaussian.Fn
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Gaussian.Fn
  nameWithType: Gaussian.Fn
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Linear
  name: Linear
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Linear.html
  commentId: T:SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Linear
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Linear
  nameWithType: Linear
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Linear.Fn(System.Double@,System.Double@,System.Int32)
  name: Fn(ref double, ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Linear.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Cppn_Linear_Fn_System_Double__System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Linear.Fn(System.Double@,System.Double@,System.Int32)
  name.vb: Fn(Double, Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Linear.Fn(ref double, ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Linear.Fn(Double, Double, Integer)
  nameWithType: Linear.Fn(ref double, ref double, int)
  nameWithType.vb: Linear.Fn(Double, Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Linear.Fn(System.Double@,System.Double@)
  name: Fn(ref double, ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Linear.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Cppn_Linear_Fn_System_Double__System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Linear.Fn(System.Double@,System.Double@)
  name.vb: Fn(Double, Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Linear.Fn(ref double, ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Linear.Fn(Double, Double)
  nameWithType: Linear.Fn(ref double, ref double)
  nameWithType.vb: Linear.Fn(Double, Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Linear.Fn(System.Double@,System.Int32)
  name: Fn(ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Linear.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Cppn_Linear_Fn_System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Linear.Fn(System.Double@,System.Int32)
  name.vb: Fn(Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Linear.Fn(ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Linear.Fn(Double, Integer)
  nameWithType: Linear.Fn(ref double, int)
  nameWithType.vb: Linear.Fn(Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Linear.Fn(System.Double@)
  name: Fn(ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Linear.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Cppn_Linear_Fn_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Linear.Fn(System.Double@)
  name.vb: Fn(Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Linear.Fn(ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Linear.Fn(Double)
  nameWithType: Linear.Fn(ref double)
  nameWithType.vb: Linear.Fn(Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Linear.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name: Fn(ReadOnlySpan<double>, Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Linear.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Cppn_Linear_Fn_System_ReadOnlySpan_System_Double__System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Linear.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name.vb: Fn(ReadOnlySpan(Of Double), Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Linear.Fn(System.ReadOnlySpan<double>, System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Linear.Fn(System.ReadOnlySpan(Of Double), System.Span(Of Double))
  nameWithType: Linear.Fn(ReadOnlySpan<double>, Span<double>)
  nameWithType.vb: Linear.Fn(ReadOnlySpan(Of Double), Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Linear.Fn(System.Span{System.Double})
  name: Fn(Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Linear.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Cppn_Linear_Fn_System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Linear.Fn(System.Span{System.Double})
  name.vb: Fn(Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Linear.Fn(System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Linear.Fn(System.Span(Of Double))
  nameWithType: Linear.Fn(Span<double>)
  nameWithType.vb: Linear.Fn(Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Linear.Fn*
  name: Fn
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Linear.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Cppn_Linear_Fn_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Linear.Fn
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Linear.Fn
  nameWithType: Linear.Fn
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Sine
  name: Sine
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Sine.html
  commentId: T:SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Sine
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Sine
  nameWithType: Sine
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Sine.Fn(System.Double@,System.Double@,System.Int32)
  name: Fn(ref double, ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Sine.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Cppn_Sine_Fn_System_Double__System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Sine.Fn(System.Double@,System.Double@,System.Int32)
  name.vb: Fn(Double, Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Sine.Fn(ref double, ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Sine.Fn(Double, Double, Integer)
  nameWithType: Sine.Fn(ref double, ref double, int)
  nameWithType.vb: Sine.Fn(Double, Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Sine.Fn(System.Double@,System.Double@)
  name: Fn(ref double, ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Sine.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Cppn_Sine_Fn_System_Double__System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Sine.Fn(System.Double@,System.Double@)
  name.vb: Fn(Double, Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Sine.Fn(ref double, ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Sine.Fn(Double, Double)
  nameWithType: Sine.Fn(ref double, ref double)
  nameWithType.vb: Sine.Fn(Double, Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Sine.Fn(System.Double@,System.Int32)
  name: Fn(ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Sine.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Cppn_Sine_Fn_System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Sine.Fn(System.Double@,System.Int32)
  name.vb: Fn(Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Sine.Fn(ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Sine.Fn(Double, Integer)
  nameWithType: Sine.Fn(ref double, int)
  nameWithType.vb: Sine.Fn(Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Sine.Fn(System.Double@)
  name: Fn(ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Sine.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Cppn_Sine_Fn_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Sine.Fn(System.Double@)
  name.vb: Fn(Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Sine.Fn(ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Sine.Fn(Double)
  nameWithType: Sine.Fn(ref double)
  nameWithType.vb: Sine.Fn(Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Sine.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name: Fn(ReadOnlySpan<double>, Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Sine.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Cppn_Sine_Fn_System_ReadOnlySpan_System_Double__System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Sine.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name.vb: Fn(ReadOnlySpan(Of Double), Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Sine.Fn(System.ReadOnlySpan<double>, System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Sine.Fn(System.ReadOnlySpan(Of Double), System.Span(Of Double))
  nameWithType: Sine.Fn(ReadOnlySpan<double>, Span<double>)
  nameWithType.vb: Sine.Fn(ReadOnlySpan(Of Double), Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Sine.Fn(System.Span{System.Double})
  name: Fn(Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Sine.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Cppn_Sine_Fn_System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Sine.Fn(System.Span{System.Double})
  name.vb: Fn(Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Sine.Fn(System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Sine.Fn(System.Span(Of Double))
  nameWithType: Sine.Fn(Span<double>)
  nameWithType.vb: Sine.Fn(Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Sine.Fn*
  name: Fn
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Sine.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Cppn_Sine_Fn_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Sine.Fn
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Cppn.Sine.Fn
  nameWithType: Sine.Fn
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLU
  name: LeakyReLU
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLU.html
  commentId: T:SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLU
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLU
  nameWithType: LeakyReLU
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLU.Fn(System.Double@,System.Double@,System.Int32)
  name: Fn(ref double, ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_LeakyReLU_Fn_System_Double__System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLU.Fn(System.Double@,System.Double@,System.Int32)
  name.vb: Fn(Double, Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLU.Fn(ref double, ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLU.Fn(Double, Double, Integer)
  nameWithType: LeakyReLU.Fn(ref double, ref double, int)
  nameWithType.vb: LeakyReLU.Fn(Double, Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLU.Fn(System.Double@,System.Double@)
  name: Fn(ref double, ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_LeakyReLU_Fn_System_Double__System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLU.Fn(System.Double@,System.Double@)
  name.vb: Fn(Double, Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLU.Fn(ref double, ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLU.Fn(Double, Double)
  nameWithType: LeakyReLU.Fn(ref double, ref double)
  nameWithType.vb: LeakyReLU.Fn(Double, Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLU.Fn(System.Double@,System.Int32)
  name: Fn(ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_LeakyReLU_Fn_System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLU.Fn(System.Double@,System.Int32)
  name.vb: Fn(Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLU.Fn(ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLU.Fn(Double, Integer)
  nameWithType: LeakyReLU.Fn(ref double, int)
  nameWithType.vb: LeakyReLU.Fn(Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLU.Fn(System.Double@)
  name: Fn(ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_LeakyReLU_Fn_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLU.Fn(System.Double@)
  name.vb: Fn(Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLU.Fn(ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLU.Fn(Double)
  nameWithType: LeakyReLU.Fn(ref double)
  nameWithType.vb: LeakyReLU.Fn(Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLU.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name: Fn(ReadOnlySpan<double>, Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_LeakyReLU_Fn_System_ReadOnlySpan_System_Double__System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLU.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name.vb: Fn(ReadOnlySpan(Of Double), Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLU.Fn(System.ReadOnlySpan<double>, System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLU.Fn(System.ReadOnlySpan(Of Double), System.Span(Of Double))
  nameWithType: LeakyReLU.Fn(ReadOnlySpan<double>, Span<double>)
  nameWithType.vb: LeakyReLU.Fn(ReadOnlySpan(Of Double), Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLU.Fn(System.Span{System.Double})
  name: Fn(Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_LeakyReLU_Fn_System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLU.Fn(System.Span{System.Double})
  name.vb: Fn(Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLU.Fn(System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLU.Fn(System.Span(Of Double))
  nameWithType: LeakyReLU.Fn(Span<double>)
  nameWithType.vb: LeakyReLU.Fn(Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLU.Fn*
  name: Fn
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_LeakyReLU_Fn_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLU.Fn
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLU.Fn
  nameWithType: LeakyReLU.Fn
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLUShifted
  name: LeakyReLUShifted
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLUShifted.html
  commentId: T:SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLUShifted
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLUShifted
  nameWithType: LeakyReLUShifted
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLUShifted.Fn(System.Double@,System.Double@,System.Int32)
  name: Fn(ref double, ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLUShifted.html#SharpNeat_NeuralNets_Double_ActivationFunctions_LeakyReLUShifted_Fn_System_Double__System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLUShifted.Fn(System.Double@,System.Double@,System.Int32)
  name.vb: Fn(Double, Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLUShifted.Fn(ref double, ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLUShifted.Fn(Double, Double, Integer)
  nameWithType: LeakyReLUShifted.Fn(ref double, ref double, int)
  nameWithType.vb: LeakyReLUShifted.Fn(Double, Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLUShifted.Fn(System.Double@,System.Double@)
  name: Fn(ref double, ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLUShifted.html#SharpNeat_NeuralNets_Double_ActivationFunctions_LeakyReLUShifted_Fn_System_Double__System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLUShifted.Fn(System.Double@,System.Double@)
  name.vb: Fn(Double, Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLUShifted.Fn(ref double, ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLUShifted.Fn(Double, Double)
  nameWithType: LeakyReLUShifted.Fn(ref double, ref double)
  nameWithType.vb: LeakyReLUShifted.Fn(Double, Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLUShifted.Fn(System.Double@,System.Int32)
  name: Fn(ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLUShifted.html#SharpNeat_NeuralNets_Double_ActivationFunctions_LeakyReLUShifted_Fn_System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLUShifted.Fn(System.Double@,System.Int32)
  name.vb: Fn(Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLUShifted.Fn(ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLUShifted.Fn(Double, Integer)
  nameWithType: LeakyReLUShifted.Fn(ref double, int)
  nameWithType.vb: LeakyReLUShifted.Fn(Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLUShifted.Fn(System.Double@)
  name: Fn(ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLUShifted.html#SharpNeat_NeuralNets_Double_ActivationFunctions_LeakyReLUShifted_Fn_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLUShifted.Fn(System.Double@)
  name.vb: Fn(Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLUShifted.Fn(ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLUShifted.Fn(Double)
  nameWithType: LeakyReLUShifted.Fn(ref double)
  nameWithType.vb: LeakyReLUShifted.Fn(Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLUShifted.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name: Fn(ReadOnlySpan<double>, Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLUShifted.html#SharpNeat_NeuralNets_Double_ActivationFunctions_LeakyReLUShifted_Fn_System_ReadOnlySpan_System_Double__System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLUShifted.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name.vb: Fn(ReadOnlySpan(Of Double), Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLUShifted.Fn(System.ReadOnlySpan<double>, System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLUShifted.Fn(System.ReadOnlySpan(Of Double), System.Span(Of Double))
  nameWithType: LeakyReLUShifted.Fn(ReadOnlySpan<double>, Span<double>)
  nameWithType.vb: LeakyReLUShifted.Fn(ReadOnlySpan(Of Double), Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLUShifted.Fn(System.Span{System.Double})
  name: Fn(Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLUShifted.html#SharpNeat_NeuralNets_Double_ActivationFunctions_LeakyReLUShifted_Fn_System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLUShifted.Fn(System.Span{System.Double})
  name.vb: Fn(Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLUShifted.Fn(System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLUShifted.Fn(System.Span(Of Double))
  nameWithType: LeakyReLUShifted.Fn(Span<double>)
  nameWithType.vb: LeakyReLUShifted.Fn(Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLUShifted.Fn*
  name: Fn
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLUShifted.html#SharpNeat_NeuralNets_Double_ActivationFunctions_LeakyReLUShifted_Fn_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLUShifted.Fn
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.LeakyReLUShifted.Fn
  nameWithType: LeakyReLUShifted.Fn
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Logistic
  name: Logistic
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Logistic.html
  commentId: T:SharpNeat.NeuralNets.Double.ActivationFunctions.Logistic
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Logistic
  nameWithType: Logistic
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Logistic.Fn(System.Double@,System.Double@,System.Int32)
  name: Fn(ref double, ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Logistic.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Logistic_Fn_System_Double__System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Logistic.Fn(System.Double@,System.Double@,System.Int32)
  name.vb: Fn(Double, Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Logistic.Fn(ref double, ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Logistic.Fn(Double, Double, Integer)
  nameWithType: Logistic.Fn(ref double, ref double, int)
  nameWithType.vb: Logistic.Fn(Double, Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Logistic.Fn(System.Double@,System.Double@)
  name: Fn(ref double, ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Logistic.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Logistic_Fn_System_Double__System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Logistic.Fn(System.Double@,System.Double@)
  name.vb: Fn(Double, Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Logistic.Fn(ref double, ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Logistic.Fn(Double, Double)
  nameWithType: Logistic.Fn(ref double, ref double)
  nameWithType.vb: Logistic.Fn(Double, Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Logistic.Fn(System.Double@,System.Int32)
  name: Fn(ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Logistic.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Logistic_Fn_System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Logistic.Fn(System.Double@,System.Int32)
  name.vb: Fn(Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Logistic.Fn(ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Logistic.Fn(Double, Integer)
  nameWithType: Logistic.Fn(ref double, int)
  nameWithType.vb: Logistic.Fn(Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Logistic.Fn(System.Double@)
  name: Fn(ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Logistic.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Logistic_Fn_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Logistic.Fn(System.Double@)
  name.vb: Fn(Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Logistic.Fn(ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Logistic.Fn(Double)
  nameWithType: Logistic.Fn(ref double)
  nameWithType.vb: Logistic.Fn(Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Logistic.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name: Fn(ReadOnlySpan<double>, Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Logistic.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Logistic_Fn_System_ReadOnlySpan_System_Double__System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Logistic.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name.vb: Fn(ReadOnlySpan(Of Double), Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Logistic.Fn(System.ReadOnlySpan<double>, System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Logistic.Fn(System.ReadOnlySpan(Of Double), System.Span(Of Double))
  nameWithType: Logistic.Fn(ReadOnlySpan<double>, Span<double>)
  nameWithType.vb: Logistic.Fn(ReadOnlySpan(Of Double), Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Logistic.Fn(System.Span{System.Double})
  name: Fn(Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Logistic.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Logistic_Fn_System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Logistic.Fn(System.Span{System.Double})
  name.vb: Fn(Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Logistic.Fn(System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Logistic.Fn(System.Span(Of Double))
  nameWithType: Logistic.Fn(Span<double>)
  nameWithType.vb: Logistic.Fn(Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Logistic.Fn*
  name: Fn
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Logistic.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Logistic_Fn_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.Logistic.Fn
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Logistic.Fn
  nameWithType: Logistic.Fn
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticApproximantSteep
  name: LogisticApproximantSteep
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticApproximantSteep.html
  commentId: T:SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticApproximantSteep
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticApproximantSteep
  nameWithType: LogisticApproximantSteep
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticApproximantSteep.Fn(System.Double@,System.Double@,System.Int32)
  name: Fn(ref double, ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticApproximantSteep.html#SharpNeat_NeuralNets_Double_ActivationFunctions_LogisticApproximantSteep_Fn_System_Double__System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticApproximantSteep.Fn(System.Double@,System.Double@,System.Int32)
  name.vb: Fn(Double, Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticApproximantSteep.Fn(ref double, ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticApproximantSteep.Fn(Double, Double, Integer)
  nameWithType: LogisticApproximantSteep.Fn(ref double, ref double, int)
  nameWithType.vb: LogisticApproximantSteep.Fn(Double, Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticApproximantSteep.Fn(System.Double@,System.Double@)
  name: Fn(ref double, ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticApproximantSteep.html#SharpNeat_NeuralNets_Double_ActivationFunctions_LogisticApproximantSteep_Fn_System_Double__System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticApproximantSteep.Fn(System.Double@,System.Double@)
  name.vb: Fn(Double, Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticApproximantSteep.Fn(ref double, ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticApproximantSteep.Fn(Double, Double)
  nameWithType: LogisticApproximantSteep.Fn(ref double, ref double)
  nameWithType.vb: LogisticApproximantSteep.Fn(Double, Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticApproximantSteep.Fn(System.Double@,System.Int32)
  name: Fn(ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticApproximantSteep.html#SharpNeat_NeuralNets_Double_ActivationFunctions_LogisticApproximantSteep_Fn_System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticApproximantSteep.Fn(System.Double@,System.Int32)
  name.vb: Fn(Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticApproximantSteep.Fn(ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticApproximantSteep.Fn(Double, Integer)
  nameWithType: LogisticApproximantSteep.Fn(ref double, int)
  nameWithType.vb: LogisticApproximantSteep.Fn(Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticApproximantSteep.Fn(System.Double@)
  name: Fn(ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticApproximantSteep.html#SharpNeat_NeuralNets_Double_ActivationFunctions_LogisticApproximantSteep_Fn_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticApproximantSteep.Fn(System.Double@)
  name.vb: Fn(Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticApproximantSteep.Fn(ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticApproximantSteep.Fn(Double)
  nameWithType: LogisticApproximantSteep.Fn(ref double)
  nameWithType.vb: LogisticApproximantSteep.Fn(Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticApproximantSteep.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name: Fn(ReadOnlySpan<double>, Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticApproximantSteep.html#SharpNeat_NeuralNets_Double_ActivationFunctions_LogisticApproximantSteep_Fn_System_ReadOnlySpan_System_Double__System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticApproximantSteep.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name.vb: Fn(ReadOnlySpan(Of Double), Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticApproximantSteep.Fn(System.ReadOnlySpan<double>, System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticApproximantSteep.Fn(System.ReadOnlySpan(Of Double), System.Span(Of Double))
  nameWithType: LogisticApproximantSteep.Fn(ReadOnlySpan<double>, Span<double>)
  nameWithType.vb: LogisticApproximantSteep.Fn(ReadOnlySpan(Of Double), Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticApproximantSteep.Fn(System.Span{System.Double})
  name: Fn(Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticApproximantSteep.html#SharpNeat_NeuralNets_Double_ActivationFunctions_LogisticApproximantSteep_Fn_System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticApproximantSteep.Fn(System.Span{System.Double})
  name.vb: Fn(Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticApproximantSteep.Fn(System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticApproximantSteep.Fn(System.Span(Of Double))
  nameWithType: LogisticApproximantSteep.Fn(Span<double>)
  nameWithType.vb: LogisticApproximantSteep.Fn(Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticApproximantSteep.Fn*
  name: Fn
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticApproximantSteep.html#SharpNeat_NeuralNets_Double_ActivationFunctions_LogisticApproximantSteep_Fn_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticApproximantSteep.Fn
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticApproximantSteep.Fn
  nameWithType: LogisticApproximantSteep.Fn
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticSteep
  name: LogisticSteep
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticSteep.html
  commentId: T:SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticSteep
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticSteep
  nameWithType: LogisticSteep
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticSteep.Fn(System.Double@,System.Double@,System.Int32)
  name: Fn(ref double, ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticSteep.html#SharpNeat_NeuralNets_Double_ActivationFunctions_LogisticSteep_Fn_System_Double__System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticSteep.Fn(System.Double@,System.Double@,System.Int32)
  name.vb: Fn(Double, Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticSteep.Fn(ref double, ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticSteep.Fn(Double, Double, Integer)
  nameWithType: LogisticSteep.Fn(ref double, ref double, int)
  nameWithType.vb: LogisticSteep.Fn(Double, Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticSteep.Fn(System.Double@,System.Double@)
  name: Fn(ref double, ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticSteep.html#SharpNeat_NeuralNets_Double_ActivationFunctions_LogisticSteep_Fn_System_Double__System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticSteep.Fn(System.Double@,System.Double@)
  name.vb: Fn(Double, Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticSteep.Fn(ref double, ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticSteep.Fn(Double, Double)
  nameWithType: LogisticSteep.Fn(ref double, ref double)
  nameWithType.vb: LogisticSteep.Fn(Double, Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticSteep.Fn(System.Double@,System.Int32)
  name: Fn(ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticSteep.html#SharpNeat_NeuralNets_Double_ActivationFunctions_LogisticSteep_Fn_System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticSteep.Fn(System.Double@,System.Int32)
  name.vb: Fn(Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticSteep.Fn(ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticSteep.Fn(Double, Integer)
  nameWithType: LogisticSteep.Fn(ref double, int)
  nameWithType.vb: LogisticSteep.Fn(Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticSteep.Fn(System.Double@)
  name: Fn(ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticSteep.html#SharpNeat_NeuralNets_Double_ActivationFunctions_LogisticSteep_Fn_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticSteep.Fn(System.Double@)
  name.vb: Fn(Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticSteep.Fn(ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticSteep.Fn(Double)
  nameWithType: LogisticSteep.Fn(ref double)
  nameWithType.vb: LogisticSteep.Fn(Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticSteep.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name: Fn(ReadOnlySpan<double>, Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticSteep.html#SharpNeat_NeuralNets_Double_ActivationFunctions_LogisticSteep_Fn_System_ReadOnlySpan_System_Double__System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticSteep.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name.vb: Fn(ReadOnlySpan(Of Double), Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticSteep.Fn(System.ReadOnlySpan<double>, System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticSteep.Fn(System.ReadOnlySpan(Of Double), System.Span(Of Double))
  nameWithType: LogisticSteep.Fn(ReadOnlySpan<double>, Span<double>)
  nameWithType.vb: LogisticSteep.Fn(ReadOnlySpan(Of Double), Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticSteep.Fn(System.Span{System.Double})
  name: Fn(Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticSteep.html#SharpNeat_NeuralNets_Double_ActivationFunctions_LogisticSteep_Fn_System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticSteep.Fn(System.Span{System.Double})
  name.vb: Fn(Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticSteep.Fn(System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticSteep.Fn(System.Span(Of Double))
  nameWithType: LogisticSteep.Fn(Span<double>)
  nameWithType.vb: LogisticSteep.Fn(Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticSteep.Fn*
  name: Fn
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticSteep.html#SharpNeat_NeuralNets_Double_ActivationFunctions_LogisticSteep_Fn_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticSteep.Fn
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.LogisticSteep.Fn
  nameWithType: LogisticSteep.Fn
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.MaxMinusOne
  name: MaxMinusOne
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.MaxMinusOne.html
  commentId: T:SharpNeat.NeuralNets.Double.ActivationFunctions.MaxMinusOne
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.MaxMinusOne
  nameWithType: MaxMinusOne
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.MaxMinusOne.Fn(System.Double@,System.Double@,System.Int32)
  name: Fn(ref double, ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.MaxMinusOne.html#SharpNeat_NeuralNets_Double_ActivationFunctions_MaxMinusOne_Fn_System_Double__System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.MaxMinusOne.Fn(System.Double@,System.Double@,System.Int32)
  name.vb: Fn(Double, Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.MaxMinusOne.Fn(ref double, ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.MaxMinusOne.Fn(Double, Double, Integer)
  nameWithType: MaxMinusOne.Fn(ref double, ref double, int)
  nameWithType.vb: MaxMinusOne.Fn(Double, Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.MaxMinusOne.Fn(System.Double@,System.Double@)
  name: Fn(ref double, ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.MaxMinusOne.html#SharpNeat_NeuralNets_Double_ActivationFunctions_MaxMinusOne_Fn_System_Double__System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.MaxMinusOne.Fn(System.Double@,System.Double@)
  name.vb: Fn(Double, Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.MaxMinusOne.Fn(ref double, ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.MaxMinusOne.Fn(Double, Double)
  nameWithType: MaxMinusOne.Fn(ref double, ref double)
  nameWithType.vb: MaxMinusOne.Fn(Double, Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.MaxMinusOne.Fn(System.Double@,System.Int32)
  name: Fn(ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.MaxMinusOne.html#SharpNeat_NeuralNets_Double_ActivationFunctions_MaxMinusOne_Fn_System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.MaxMinusOne.Fn(System.Double@,System.Int32)
  name.vb: Fn(Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.MaxMinusOne.Fn(ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.MaxMinusOne.Fn(Double, Integer)
  nameWithType: MaxMinusOne.Fn(ref double, int)
  nameWithType.vb: MaxMinusOne.Fn(Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.MaxMinusOne.Fn(System.Double@)
  name: Fn(ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.MaxMinusOne.html#SharpNeat_NeuralNets_Double_ActivationFunctions_MaxMinusOne_Fn_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.MaxMinusOne.Fn(System.Double@)
  name.vb: Fn(Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.MaxMinusOne.Fn(ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.MaxMinusOne.Fn(Double)
  nameWithType: MaxMinusOne.Fn(ref double)
  nameWithType.vb: MaxMinusOne.Fn(Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.MaxMinusOne.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name: Fn(ReadOnlySpan<double>, Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.MaxMinusOne.html#SharpNeat_NeuralNets_Double_ActivationFunctions_MaxMinusOne_Fn_System_ReadOnlySpan_System_Double__System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.MaxMinusOne.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name.vb: Fn(ReadOnlySpan(Of Double), Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.MaxMinusOne.Fn(System.ReadOnlySpan<double>, System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.MaxMinusOne.Fn(System.ReadOnlySpan(Of Double), System.Span(Of Double))
  nameWithType: MaxMinusOne.Fn(ReadOnlySpan<double>, Span<double>)
  nameWithType.vb: MaxMinusOne.Fn(ReadOnlySpan(Of Double), Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.MaxMinusOne.Fn(System.Span{System.Double})
  name: Fn(Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.MaxMinusOne.html#SharpNeat_NeuralNets_Double_ActivationFunctions_MaxMinusOne_Fn_System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.MaxMinusOne.Fn(System.Span{System.Double})
  name.vb: Fn(Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.MaxMinusOne.Fn(System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.MaxMinusOne.Fn(System.Span(Of Double))
  nameWithType: MaxMinusOne.Fn(Span<double>)
  nameWithType.vb: MaxMinusOne.Fn(Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.MaxMinusOne.Fn*
  name: Fn
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.MaxMinusOne.html#SharpNeat_NeuralNets_Double_ActivationFunctions_MaxMinusOne_Fn_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.MaxMinusOne.Fn
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.MaxMinusOne.Fn
  nameWithType: MaxMinusOne.Fn
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.NullFn
  name: NullFn
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.NullFn.html
  commentId: T:SharpNeat.NeuralNets.Double.ActivationFunctions.NullFn
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.NullFn
  nameWithType: NullFn
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.NullFn.Fn(System.Double@,System.Double@,System.Int32)
  name: Fn(ref double, ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.NullFn.html#SharpNeat_NeuralNets_Double_ActivationFunctions_NullFn_Fn_System_Double__System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.NullFn.Fn(System.Double@,System.Double@,System.Int32)
  name.vb: Fn(Double, Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.NullFn.Fn(ref double, ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.NullFn.Fn(Double, Double, Integer)
  nameWithType: NullFn.Fn(ref double, ref double, int)
  nameWithType.vb: NullFn.Fn(Double, Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.NullFn.Fn(System.Double@,System.Double@)
  name: Fn(ref double, ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.NullFn.html#SharpNeat_NeuralNets_Double_ActivationFunctions_NullFn_Fn_System_Double__System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.NullFn.Fn(System.Double@,System.Double@)
  name.vb: Fn(Double, Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.NullFn.Fn(ref double, ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.NullFn.Fn(Double, Double)
  nameWithType: NullFn.Fn(ref double, ref double)
  nameWithType.vb: NullFn.Fn(Double, Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.NullFn.Fn(System.Double@,System.Int32)
  name: Fn(ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.NullFn.html#SharpNeat_NeuralNets_Double_ActivationFunctions_NullFn_Fn_System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.NullFn.Fn(System.Double@,System.Int32)
  name.vb: Fn(Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.NullFn.Fn(ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.NullFn.Fn(Double, Integer)
  nameWithType: NullFn.Fn(ref double, int)
  nameWithType.vb: NullFn.Fn(Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.NullFn.Fn(System.Double@)
  name: Fn(ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.NullFn.html#SharpNeat_NeuralNets_Double_ActivationFunctions_NullFn_Fn_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.NullFn.Fn(System.Double@)
  name.vb: Fn(Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.NullFn.Fn(ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.NullFn.Fn(Double)
  nameWithType: NullFn.Fn(ref double)
  nameWithType.vb: NullFn.Fn(Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.NullFn.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name: Fn(ReadOnlySpan<double>, Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.NullFn.html#SharpNeat_NeuralNets_Double_ActivationFunctions_NullFn_Fn_System_ReadOnlySpan_System_Double__System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.NullFn.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name.vb: Fn(ReadOnlySpan(Of Double), Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.NullFn.Fn(System.ReadOnlySpan<double>, System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.NullFn.Fn(System.ReadOnlySpan(Of Double), System.Span(Of Double))
  nameWithType: NullFn.Fn(ReadOnlySpan<double>, Span<double>)
  nameWithType.vb: NullFn.Fn(ReadOnlySpan(Of Double), Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.NullFn.Fn(System.Span{System.Double})
  name: Fn(Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.NullFn.html#SharpNeat_NeuralNets_Double_ActivationFunctions_NullFn_Fn_System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.NullFn.Fn(System.Span{System.Double})
  name.vb: Fn(Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.NullFn.Fn(System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.NullFn.Fn(System.Span(Of Double))
  nameWithType: NullFn.Fn(Span<double>)
  nameWithType.vb: NullFn.Fn(Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.NullFn.Fn*
  name: Fn
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.NullFn.html#SharpNeat_NeuralNets_Double_ActivationFunctions_NullFn_Fn_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.NullFn.Fn
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.NullFn.Fn
  nameWithType: NullFn.Fn
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.PolynomialApproximantSteep
  name: PolynomialApproximantSteep
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.PolynomialApproximantSteep.html
  commentId: T:SharpNeat.NeuralNets.Double.ActivationFunctions.PolynomialApproximantSteep
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.PolynomialApproximantSteep
  nameWithType: PolynomialApproximantSteep
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.PolynomialApproximantSteep.Fn(System.Double@,System.Double@,System.Int32)
  name: Fn(ref double, ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.PolynomialApproximantSteep.html#SharpNeat_NeuralNets_Double_ActivationFunctions_PolynomialApproximantSteep_Fn_System_Double__System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.PolynomialApproximantSteep.Fn(System.Double@,System.Double@,System.Int32)
  name.vb: Fn(Double, Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.PolynomialApproximantSteep.Fn(ref double, ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.PolynomialApproximantSteep.Fn(Double, Double, Integer)
  nameWithType: PolynomialApproximantSteep.Fn(ref double, ref double, int)
  nameWithType.vb: PolynomialApproximantSteep.Fn(Double, Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.PolynomialApproximantSteep.Fn(System.Double@,System.Double@)
  name: Fn(ref double, ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.PolynomialApproximantSteep.html#SharpNeat_NeuralNets_Double_ActivationFunctions_PolynomialApproximantSteep_Fn_System_Double__System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.PolynomialApproximantSteep.Fn(System.Double@,System.Double@)
  name.vb: Fn(Double, Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.PolynomialApproximantSteep.Fn(ref double, ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.PolynomialApproximantSteep.Fn(Double, Double)
  nameWithType: PolynomialApproximantSteep.Fn(ref double, ref double)
  nameWithType.vb: PolynomialApproximantSteep.Fn(Double, Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.PolynomialApproximantSteep.Fn(System.Double@,System.Int32)
  name: Fn(ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.PolynomialApproximantSteep.html#SharpNeat_NeuralNets_Double_ActivationFunctions_PolynomialApproximantSteep_Fn_System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.PolynomialApproximantSteep.Fn(System.Double@,System.Int32)
  name.vb: Fn(Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.PolynomialApproximantSteep.Fn(ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.PolynomialApproximantSteep.Fn(Double, Integer)
  nameWithType: PolynomialApproximantSteep.Fn(ref double, int)
  nameWithType.vb: PolynomialApproximantSteep.Fn(Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.PolynomialApproximantSteep.Fn(System.Double@)
  name: Fn(ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.PolynomialApproximantSteep.html#SharpNeat_NeuralNets_Double_ActivationFunctions_PolynomialApproximantSteep_Fn_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.PolynomialApproximantSteep.Fn(System.Double@)
  name.vb: Fn(Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.PolynomialApproximantSteep.Fn(ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.PolynomialApproximantSteep.Fn(Double)
  nameWithType: PolynomialApproximantSteep.Fn(ref double)
  nameWithType.vb: PolynomialApproximantSteep.Fn(Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.PolynomialApproximantSteep.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name: Fn(ReadOnlySpan<double>, Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.PolynomialApproximantSteep.html#SharpNeat_NeuralNets_Double_ActivationFunctions_PolynomialApproximantSteep_Fn_System_ReadOnlySpan_System_Double__System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.PolynomialApproximantSteep.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name.vb: Fn(ReadOnlySpan(Of Double), Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.PolynomialApproximantSteep.Fn(System.ReadOnlySpan<double>, System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.PolynomialApproximantSteep.Fn(System.ReadOnlySpan(Of Double), System.Span(Of Double))
  nameWithType: PolynomialApproximantSteep.Fn(ReadOnlySpan<double>, Span<double>)
  nameWithType.vb: PolynomialApproximantSteep.Fn(ReadOnlySpan(Of Double), Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.PolynomialApproximantSteep.Fn(System.Span{System.Double})
  name: Fn(Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.PolynomialApproximantSteep.html#SharpNeat_NeuralNets_Double_ActivationFunctions_PolynomialApproximantSteep_Fn_System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.PolynomialApproximantSteep.Fn(System.Span{System.Double})
  name.vb: Fn(Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.PolynomialApproximantSteep.Fn(System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.PolynomialApproximantSteep.Fn(System.Span(Of Double))
  nameWithType: PolynomialApproximantSteep.Fn(Span<double>)
  nameWithType.vb: PolynomialApproximantSteep.Fn(Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.PolynomialApproximantSteep.Fn*
  name: Fn
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.PolynomialApproximantSteep.html#SharpNeat_NeuralNets_Double_ActivationFunctions_PolynomialApproximantSteep_Fn_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.PolynomialApproximantSteep.Fn
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.PolynomialApproximantSteep.Fn
  nameWithType: PolynomialApproximantSteep.Fn
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.QuadraticSigmoid
  name: QuadraticSigmoid
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.QuadraticSigmoid.html
  commentId: T:SharpNeat.NeuralNets.Double.ActivationFunctions.QuadraticSigmoid
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.QuadraticSigmoid
  nameWithType: QuadraticSigmoid
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.QuadraticSigmoid.Fn(System.Double@,System.Double@,System.Int32)
  name: Fn(ref double, ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.QuadraticSigmoid.html#SharpNeat_NeuralNets_Double_ActivationFunctions_QuadraticSigmoid_Fn_System_Double__System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.QuadraticSigmoid.Fn(System.Double@,System.Double@,System.Int32)
  name.vb: Fn(Double, Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.QuadraticSigmoid.Fn(ref double, ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.QuadraticSigmoid.Fn(Double, Double, Integer)
  nameWithType: QuadraticSigmoid.Fn(ref double, ref double, int)
  nameWithType.vb: QuadraticSigmoid.Fn(Double, Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.QuadraticSigmoid.Fn(System.Double@,System.Double@)
  name: Fn(ref double, ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.QuadraticSigmoid.html#SharpNeat_NeuralNets_Double_ActivationFunctions_QuadraticSigmoid_Fn_System_Double__System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.QuadraticSigmoid.Fn(System.Double@,System.Double@)
  name.vb: Fn(Double, Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.QuadraticSigmoid.Fn(ref double, ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.QuadraticSigmoid.Fn(Double, Double)
  nameWithType: QuadraticSigmoid.Fn(ref double, ref double)
  nameWithType.vb: QuadraticSigmoid.Fn(Double, Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.QuadraticSigmoid.Fn(System.Double@,System.Int32)
  name: Fn(ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.QuadraticSigmoid.html#SharpNeat_NeuralNets_Double_ActivationFunctions_QuadraticSigmoid_Fn_System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.QuadraticSigmoid.Fn(System.Double@,System.Int32)
  name.vb: Fn(Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.QuadraticSigmoid.Fn(ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.QuadraticSigmoid.Fn(Double, Integer)
  nameWithType: QuadraticSigmoid.Fn(ref double, int)
  nameWithType.vb: QuadraticSigmoid.Fn(Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.QuadraticSigmoid.Fn(System.Double@)
  name: Fn(ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.QuadraticSigmoid.html#SharpNeat_NeuralNets_Double_ActivationFunctions_QuadraticSigmoid_Fn_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.QuadraticSigmoid.Fn(System.Double@)
  name.vb: Fn(Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.QuadraticSigmoid.Fn(ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.QuadraticSigmoid.Fn(Double)
  nameWithType: QuadraticSigmoid.Fn(ref double)
  nameWithType.vb: QuadraticSigmoid.Fn(Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.QuadraticSigmoid.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name: Fn(ReadOnlySpan<double>, Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.QuadraticSigmoid.html#SharpNeat_NeuralNets_Double_ActivationFunctions_QuadraticSigmoid_Fn_System_ReadOnlySpan_System_Double__System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.QuadraticSigmoid.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name.vb: Fn(ReadOnlySpan(Of Double), Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.QuadraticSigmoid.Fn(System.ReadOnlySpan<double>, System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.QuadraticSigmoid.Fn(System.ReadOnlySpan(Of Double), System.Span(Of Double))
  nameWithType: QuadraticSigmoid.Fn(ReadOnlySpan<double>, Span<double>)
  nameWithType.vb: QuadraticSigmoid.Fn(ReadOnlySpan(Of Double), Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.QuadraticSigmoid.Fn(System.Span{System.Double})
  name: Fn(Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.QuadraticSigmoid.html#SharpNeat_NeuralNets_Double_ActivationFunctions_QuadraticSigmoid_Fn_System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.QuadraticSigmoid.Fn(System.Span{System.Double})
  name.vb: Fn(Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.QuadraticSigmoid.Fn(System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.QuadraticSigmoid.Fn(System.Span(Of Double))
  nameWithType: QuadraticSigmoid.Fn(Span<double>)
  nameWithType.vb: QuadraticSigmoid.Fn(Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.QuadraticSigmoid.Fn*
  name: Fn
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.QuadraticSigmoid.html#SharpNeat_NeuralNets_Double_ActivationFunctions_QuadraticSigmoid_Fn_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.QuadraticSigmoid.Fn
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.QuadraticSigmoid.Fn
  nameWithType: QuadraticSigmoid.Fn
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.ReLU
  name: ReLU
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.ReLU.html
  commentId: T:SharpNeat.NeuralNets.Double.ActivationFunctions.ReLU
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.ReLU
  nameWithType: ReLU
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.ReLU.Fn(System.Double@,System.Double@,System.Int32)
  name: Fn(ref double, ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.ReLU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_ReLU_Fn_System_Double__System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.ReLU.Fn(System.Double@,System.Double@,System.Int32)
  name.vb: Fn(Double, Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.ReLU.Fn(ref double, ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.ReLU.Fn(Double, Double, Integer)
  nameWithType: ReLU.Fn(ref double, ref double, int)
  nameWithType.vb: ReLU.Fn(Double, Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.ReLU.Fn(System.Double@,System.Double@)
  name: Fn(ref double, ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.ReLU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_ReLU_Fn_System_Double__System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.ReLU.Fn(System.Double@,System.Double@)
  name.vb: Fn(Double, Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.ReLU.Fn(ref double, ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.ReLU.Fn(Double, Double)
  nameWithType: ReLU.Fn(ref double, ref double)
  nameWithType.vb: ReLU.Fn(Double, Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.ReLU.Fn(System.Double@,System.Int32)
  name: Fn(ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.ReLU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_ReLU_Fn_System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.ReLU.Fn(System.Double@,System.Int32)
  name.vb: Fn(Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.ReLU.Fn(ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.ReLU.Fn(Double, Integer)
  nameWithType: ReLU.Fn(ref double, int)
  nameWithType.vb: ReLU.Fn(Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.ReLU.Fn(System.Double@)
  name: Fn(ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.ReLU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_ReLU_Fn_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.ReLU.Fn(System.Double@)
  name.vb: Fn(Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.ReLU.Fn(ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.ReLU.Fn(Double)
  nameWithType: ReLU.Fn(ref double)
  nameWithType.vb: ReLU.Fn(Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.ReLU.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name: Fn(ReadOnlySpan<double>, Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.ReLU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_ReLU_Fn_System_ReadOnlySpan_System_Double__System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.ReLU.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name.vb: Fn(ReadOnlySpan(Of Double), Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.ReLU.Fn(System.ReadOnlySpan<double>, System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.ReLU.Fn(System.ReadOnlySpan(Of Double), System.Span(Of Double))
  nameWithType: ReLU.Fn(ReadOnlySpan<double>, Span<double>)
  nameWithType.vb: ReLU.Fn(ReadOnlySpan(Of Double), Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.ReLU.Fn(System.Span{System.Double})
  name: Fn(Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.ReLU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_ReLU_Fn_System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.ReLU.Fn(System.Span{System.Double})
  name.vb: Fn(Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.ReLU.Fn(System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.ReLU.Fn(System.Span(Of Double))
  nameWithType: ReLU.Fn(Span<double>)
  nameWithType.vb: ReLU.Fn(Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.ReLU.Fn*
  name: Fn
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.ReLU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_ReLU_Fn_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.ReLU.Fn
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.ReLU.Fn
  nameWithType: ReLU.Fn
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.ScaledELU
  name: ScaledELU
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.ScaledELU.html
  commentId: T:SharpNeat.NeuralNets.Double.ActivationFunctions.ScaledELU
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.ScaledELU
  nameWithType: ScaledELU
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.ScaledELU.Fn(System.Double@,System.Double@,System.Int32)
  name: Fn(ref double, ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.ScaledELU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_ScaledELU_Fn_System_Double__System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.ScaledELU.Fn(System.Double@,System.Double@,System.Int32)
  name.vb: Fn(Double, Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.ScaledELU.Fn(ref double, ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.ScaledELU.Fn(Double, Double, Integer)
  nameWithType: ScaledELU.Fn(ref double, ref double, int)
  nameWithType.vb: ScaledELU.Fn(Double, Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.ScaledELU.Fn(System.Double@,System.Double@)
  name: Fn(ref double, ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.ScaledELU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_ScaledELU_Fn_System_Double__System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.ScaledELU.Fn(System.Double@,System.Double@)
  name.vb: Fn(Double, Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.ScaledELU.Fn(ref double, ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.ScaledELU.Fn(Double, Double)
  nameWithType: ScaledELU.Fn(ref double, ref double)
  nameWithType.vb: ScaledELU.Fn(Double, Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.ScaledELU.Fn(System.Double@,System.Int32)
  name: Fn(ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.ScaledELU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_ScaledELU_Fn_System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.ScaledELU.Fn(System.Double@,System.Int32)
  name.vb: Fn(Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.ScaledELU.Fn(ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.ScaledELU.Fn(Double, Integer)
  nameWithType: ScaledELU.Fn(ref double, int)
  nameWithType.vb: ScaledELU.Fn(Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.ScaledELU.Fn(System.Double@)
  name: Fn(ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.ScaledELU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_ScaledELU_Fn_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.ScaledELU.Fn(System.Double@)
  name.vb: Fn(Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.ScaledELU.Fn(ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.ScaledELU.Fn(Double)
  nameWithType: ScaledELU.Fn(ref double)
  nameWithType.vb: ScaledELU.Fn(Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.ScaledELU.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name: Fn(ReadOnlySpan<double>, Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.ScaledELU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_ScaledELU_Fn_System_ReadOnlySpan_System_Double__System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.ScaledELU.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name.vb: Fn(ReadOnlySpan(Of Double), Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.ScaledELU.Fn(System.ReadOnlySpan<double>, System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.ScaledELU.Fn(System.ReadOnlySpan(Of Double), System.Span(Of Double))
  nameWithType: ScaledELU.Fn(ReadOnlySpan<double>, Span<double>)
  nameWithType.vb: ScaledELU.Fn(ReadOnlySpan(Of Double), Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.ScaledELU.Fn(System.Span{System.Double})
  name: Fn(Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.ScaledELU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_ScaledELU_Fn_System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.ScaledELU.Fn(System.Span{System.Double})
  name.vb: Fn(Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.ScaledELU.Fn(System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.ScaledELU.Fn(System.Span(Of Double))
  nameWithType: ScaledELU.Fn(Span<double>)
  nameWithType.vb: ScaledELU.Fn(Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.ScaledELU.Fn*
  name: Fn
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.ScaledELU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_ScaledELU_Fn_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.ScaledELU.Fn
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.ScaledELU.Fn
  nameWithType: ScaledELU.Fn
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.SoftSignSteep
  name: SoftSignSteep
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.SoftSignSteep.html
  commentId: T:SharpNeat.NeuralNets.Double.ActivationFunctions.SoftSignSteep
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.SoftSignSteep
  nameWithType: SoftSignSteep
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.SoftSignSteep.Fn(System.Double@,System.Double@,System.Int32)
  name: Fn(ref double, ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.SoftSignSteep.html#SharpNeat_NeuralNets_Double_ActivationFunctions_SoftSignSteep_Fn_System_Double__System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.SoftSignSteep.Fn(System.Double@,System.Double@,System.Int32)
  name.vb: Fn(Double, Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.SoftSignSteep.Fn(ref double, ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.SoftSignSteep.Fn(Double, Double, Integer)
  nameWithType: SoftSignSteep.Fn(ref double, ref double, int)
  nameWithType.vb: SoftSignSteep.Fn(Double, Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.SoftSignSteep.Fn(System.Double@,System.Double@)
  name: Fn(ref double, ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.SoftSignSteep.html#SharpNeat_NeuralNets_Double_ActivationFunctions_SoftSignSteep_Fn_System_Double__System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.SoftSignSteep.Fn(System.Double@,System.Double@)
  name.vb: Fn(Double, Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.SoftSignSteep.Fn(ref double, ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.SoftSignSteep.Fn(Double, Double)
  nameWithType: SoftSignSteep.Fn(ref double, ref double)
  nameWithType.vb: SoftSignSteep.Fn(Double, Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.SoftSignSteep.Fn(System.Double@,System.Int32)
  name: Fn(ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.SoftSignSteep.html#SharpNeat_NeuralNets_Double_ActivationFunctions_SoftSignSteep_Fn_System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.SoftSignSteep.Fn(System.Double@,System.Int32)
  name.vb: Fn(Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.SoftSignSteep.Fn(ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.SoftSignSteep.Fn(Double, Integer)
  nameWithType: SoftSignSteep.Fn(ref double, int)
  nameWithType.vb: SoftSignSteep.Fn(Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.SoftSignSteep.Fn(System.Double@)
  name: Fn(ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.SoftSignSteep.html#SharpNeat_NeuralNets_Double_ActivationFunctions_SoftSignSteep_Fn_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.SoftSignSteep.Fn(System.Double@)
  name.vb: Fn(Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.SoftSignSteep.Fn(ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.SoftSignSteep.Fn(Double)
  nameWithType: SoftSignSteep.Fn(ref double)
  nameWithType.vb: SoftSignSteep.Fn(Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.SoftSignSteep.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name: Fn(ReadOnlySpan<double>, Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.SoftSignSteep.html#SharpNeat_NeuralNets_Double_ActivationFunctions_SoftSignSteep_Fn_System_ReadOnlySpan_System_Double__System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.SoftSignSteep.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name.vb: Fn(ReadOnlySpan(Of Double), Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.SoftSignSteep.Fn(System.ReadOnlySpan<double>, System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.SoftSignSteep.Fn(System.ReadOnlySpan(Of Double), System.Span(Of Double))
  nameWithType: SoftSignSteep.Fn(ReadOnlySpan<double>, Span<double>)
  nameWithType.vb: SoftSignSteep.Fn(ReadOnlySpan(Of Double), Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.SoftSignSteep.Fn(System.Span{System.Double})
  name: Fn(Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.SoftSignSteep.html#SharpNeat_NeuralNets_Double_ActivationFunctions_SoftSignSteep_Fn_System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.SoftSignSteep.Fn(System.Span{System.Double})
  name.vb: Fn(Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.SoftSignSteep.Fn(System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.SoftSignSteep.Fn(System.Span(Of Double))
  nameWithType: SoftSignSteep.Fn(Span<double>)
  nameWithType.vb: SoftSignSteep.Fn(Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.SoftSignSteep.Fn*
  name: Fn
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.SoftSignSteep.html#SharpNeat_NeuralNets_Double_ActivationFunctions_SoftSignSteep_Fn_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.SoftSignSteep.Fn
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.SoftSignSteep.Fn
  nameWithType: SoftSignSteep.Fn
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.SReLU
  name: SReLU
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.SReLU.html
  commentId: T:SharpNeat.NeuralNets.Double.ActivationFunctions.SReLU
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.SReLU
  nameWithType: SReLU
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.SReLU.Fn(System.Double@,System.Double@,System.Int32)
  name: Fn(ref double, ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.SReLU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_SReLU_Fn_System_Double__System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.SReLU.Fn(System.Double@,System.Double@,System.Int32)
  name.vb: Fn(Double, Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.SReLU.Fn(ref double, ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.SReLU.Fn(Double, Double, Integer)
  nameWithType: SReLU.Fn(ref double, ref double, int)
  nameWithType.vb: SReLU.Fn(Double, Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.SReLU.Fn(System.Double@,System.Double@)
  name: Fn(ref double, ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.SReLU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_SReLU_Fn_System_Double__System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.SReLU.Fn(System.Double@,System.Double@)
  name.vb: Fn(Double, Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.SReLU.Fn(ref double, ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.SReLU.Fn(Double, Double)
  nameWithType: SReLU.Fn(ref double, ref double)
  nameWithType.vb: SReLU.Fn(Double, Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.SReLU.Fn(System.Double@,System.Int32)
  name: Fn(ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.SReLU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_SReLU_Fn_System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.SReLU.Fn(System.Double@,System.Int32)
  name.vb: Fn(Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.SReLU.Fn(ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.SReLU.Fn(Double, Integer)
  nameWithType: SReLU.Fn(ref double, int)
  nameWithType.vb: SReLU.Fn(Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.SReLU.Fn(System.Double@)
  name: Fn(ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.SReLU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_SReLU_Fn_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.SReLU.Fn(System.Double@)
  name.vb: Fn(Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.SReLU.Fn(ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.SReLU.Fn(Double)
  nameWithType: SReLU.Fn(ref double)
  nameWithType.vb: SReLU.Fn(Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.SReLU.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name: Fn(ReadOnlySpan<double>, Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.SReLU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_SReLU_Fn_System_ReadOnlySpan_System_Double__System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.SReLU.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name.vb: Fn(ReadOnlySpan(Of Double), Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.SReLU.Fn(System.ReadOnlySpan<double>, System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.SReLU.Fn(System.ReadOnlySpan(Of Double), System.Span(Of Double))
  nameWithType: SReLU.Fn(ReadOnlySpan<double>, Span<double>)
  nameWithType.vb: SReLU.Fn(ReadOnlySpan(Of Double), Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.SReLU.Fn(System.Span{System.Double})
  name: Fn(Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.SReLU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_SReLU_Fn_System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.SReLU.Fn(System.Span{System.Double})
  name.vb: Fn(Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.SReLU.Fn(System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.SReLU.Fn(System.Span(Of Double))
  nameWithType: SReLU.Fn(Span<double>)
  nameWithType.vb: SReLU.Fn(Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.SReLU.Fn*
  name: Fn
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.SReLU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_SReLU_Fn_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.SReLU.Fn
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.SReLU.Fn
  nameWithType: SReLU.Fn
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.SReLUShifted
  name: SReLUShifted
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.SReLUShifted.html
  commentId: T:SharpNeat.NeuralNets.Double.ActivationFunctions.SReLUShifted
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.SReLUShifted
  nameWithType: SReLUShifted
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.SReLUShifted.Fn(System.Double@,System.Double@,System.Int32)
  name: Fn(ref double, ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.SReLUShifted.html#SharpNeat_NeuralNets_Double_ActivationFunctions_SReLUShifted_Fn_System_Double__System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.SReLUShifted.Fn(System.Double@,System.Double@,System.Int32)
  name.vb: Fn(Double, Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.SReLUShifted.Fn(ref double, ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.SReLUShifted.Fn(Double, Double, Integer)
  nameWithType: SReLUShifted.Fn(ref double, ref double, int)
  nameWithType.vb: SReLUShifted.Fn(Double, Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.SReLUShifted.Fn(System.Double@,System.Double@)
  name: Fn(ref double, ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.SReLUShifted.html#SharpNeat_NeuralNets_Double_ActivationFunctions_SReLUShifted_Fn_System_Double__System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.SReLUShifted.Fn(System.Double@,System.Double@)
  name.vb: Fn(Double, Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.SReLUShifted.Fn(ref double, ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.SReLUShifted.Fn(Double, Double)
  nameWithType: SReLUShifted.Fn(ref double, ref double)
  nameWithType.vb: SReLUShifted.Fn(Double, Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.SReLUShifted.Fn(System.Double@,System.Int32)
  name: Fn(ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.SReLUShifted.html#SharpNeat_NeuralNets_Double_ActivationFunctions_SReLUShifted_Fn_System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.SReLUShifted.Fn(System.Double@,System.Int32)
  name.vb: Fn(Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.SReLUShifted.Fn(ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.SReLUShifted.Fn(Double, Integer)
  nameWithType: SReLUShifted.Fn(ref double, int)
  nameWithType.vb: SReLUShifted.Fn(Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.SReLUShifted.Fn(System.Double@)
  name: Fn(ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.SReLUShifted.html#SharpNeat_NeuralNets_Double_ActivationFunctions_SReLUShifted_Fn_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.SReLUShifted.Fn(System.Double@)
  name.vb: Fn(Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.SReLUShifted.Fn(ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.SReLUShifted.Fn(Double)
  nameWithType: SReLUShifted.Fn(ref double)
  nameWithType.vb: SReLUShifted.Fn(Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.SReLUShifted.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name: Fn(ReadOnlySpan<double>, Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.SReLUShifted.html#SharpNeat_NeuralNets_Double_ActivationFunctions_SReLUShifted_Fn_System_ReadOnlySpan_System_Double__System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.SReLUShifted.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name.vb: Fn(ReadOnlySpan(Of Double), Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.SReLUShifted.Fn(System.ReadOnlySpan<double>, System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.SReLUShifted.Fn(System.ReadOnlySpan(Of Double), System.Span(Of Double))
  nameWithType: SReLUShifted.Fn(ReadOnlySpan<double>, Span<double>)
  nameWithType.vb: SReLUShifted.Fn(ReadOnlySpan(Of Double), Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.SReLUShifted.Fn(System.Span{System.Double})
  name: Fn(Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.SReLUShifted.html#SharpNeat_NeuralNets_Double_ActivationFunctions_SReLUShifted_Fn_System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.SReLUShifted.Fn(System.Span{System.Double})
  name.vb: Fn(Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.SReLUShifted.Fn(System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.SReLUShifted.Fn(System.Span(Of Double))
  nameWithType: SReLUShifted.Fn(Span<double>)
  nameWithType.vb: SReLUShifted.Fn(Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.SReLUShifted.Fn*
  name: Fn
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.SReLUShifted.html#SharpNeat_NeuralNets_Double_ActivationFunctions_SReLUShifted_Fn_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.SReLUShifted.Fn
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.SReLUShifted.Fn
  nameWithType: SReLUShifted.Fn
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.TanH
  name: TanH
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.TanH.html
  commentId: T:SharpNeat.NeuralNets.Double.ActivationFunctions.TanH
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.TanH
  nameWithType: TanH
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.TanH.Fn(System.Double@,System.Double@,System.Int32)
  name: Fn(ref double, ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.TanH.html#SharpNeat_NeuralNets_Double_ActivationFunctions_TanH_Fn_System_Double__System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.TanH.Fn(System.Double@,System.Double@,System.Int32)
  name.vb: Fn(Double, Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.TanH.Fn(ref double, ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.TanH.Fn(Double, Double, Integer)
  nameWithType: TanH.Fn(ref double, ref double, int)
  nameWithType.vb: TanH.Fn(Double, Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.TanH.Fn(System.Double@,System.Double@)
  name: Fn(ref double, ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.TanH.html#SharpNeat_NeuralNets_Double_ActivationFunctions_TanH_Fn_System_Double__System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.TanH.Fn(System.Double@,System.Double@)
  name.vb: Fn(Double, Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.TanH.Fn(ref double, ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.TanH.Fn(Double, Double)
  nameWithType: TanH.Fn(ref double, ref double)
  nameWithType.vb: TanH.Fn(Double, Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.TanH.Fn(System.Double@,System.Int32)
  name: Fn(ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.TanH.html#SharpNeat_NeuralNets_Double_ActivationFunctions_TanH_Fn_System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.TanH.Fn(System.Double@,System.Int32)
  name.vb: Fn(Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.TanH.Fn(ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.TanH.Fn(Double, Integer)
  nameWithType: TanH.Fn(ref double, int)
  nameWithType.vb: TanH.Fn(Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.TanH.Fn(System.Double@)
  name: Fn(ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.TanH.html#SharpNeat_NeuralNets_Double_ActivationFunctions_TanH_Fn_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.TanH.Fn(System.Double@)
  name.vb: Fn(Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.TanH.Fn(ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.TanH.Fn(Double)
  nameWithType: TanH.Fn(ref double)
  nameWithType.vb: TanH.Fn(Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.TanH.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name: Fn(ReadOnlySpan<double>, Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.TanH.html#SharpNeat_NeuralNets_Double_ActivationFunctions_TanH_Fn_System_ReadOnlySpan_System_Double__System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.TanH.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name.vb: Fn(ReadOnlySpan(Of Double), Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.TanH.Fn(System.ReadOnlySpan<double>, System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.TanH.Fn(System.ReadOnlySpan(Of Double), System.Span(Of Double))
  nameWithType: TanH.Fn(ReadOnlySpan<double>, Span<double>)
  nameWithType.vb: TanH.Fn(ReadOnlySpan(Of Double), Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.TanH.Fn(System.Span{System.Double})
  name: Fn(Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.TanH.html#SharpNeat_NeuralNets_Double_ActivationFunctions_TanH_Fn_System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.TanH.Fn(System.Span{System.Double})
  name.vb: Fn(Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.TanH.Fn(System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.TanH.Fn(System.Span(Of Double))
  nameWithType: TanH.Fn(Span<double>)
  nameWithType.vb: TanH.Fn(Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.TanH.Fn*
  name: Fn
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.TanH.html#SharpNeat_NeuralNets_Double_ActivationFunctions_TanH_Fn_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.TanH.Fn
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.TanH.Fn
  nameWithType: TanH.Fn
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized
  name: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.html
  commentId: N:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized
  nameWithType: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks
  name: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.html
  commentId: N:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks
  nameWithType: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks
  name: ActivationFunctionsBenchmarks
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.html
  commentId: T:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks
  nameWithType: ActivationFunctionsBenchmarks
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.#ctor
  name: ActivationFunctionsBenchmarks()
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_Benchmarks_ActivationFunctionsBenchmarks__ctor
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.#ctor
  name.vb: New()
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.ActivationFunctionsBenchmarks()
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.New()
  nameWithType: ActivationFunctionsBenchmarks.ActivationFunctionsBenchmarks()
  nameWithType.vb: ActivationFunctionsBenchmarks.New()
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.#ctor*
  name: ActivationFunctionsBenchmarks
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_Benchmarks_ActivationFunctionsBenchmarks__ctor_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.ActivationFunctionsBenchmarks
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.New
  nameWithType: ActivationFunctionsBenchmarks.ActivationFunctionsBenchmarks
  nameWithType.vb: ActivationFunctionsBenchmarks.New
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.LeakyReLU
  name: LeakyReLU()
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_Benchmarks_ActivationFunctionsBenchmarks_LeakyReLU
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.LeakyReLU
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.LeakyReLU()
  nameWithType: ActivationFunctionsBenchmarks.LeakyReLU()
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.LeakyReLU*
  name: LeakyReLU
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_Benchmarks_ActivationFunctionsBenchmarks_LeakyReLU_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.LeakyReLU
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.LeakyReLU
  nameWithType: ActivationFunctionsBenchmarks.LeakyReLU
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.LeakyReLUShifted
  name: LeakyReLUShifted()
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_Benchmarks_ActivationFunctionsBenchmarks_LeakyReLUShifted
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.LeakyReLUShifted
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.LeakyReLUShifted()
  nameWithType: ActivationFunctionsBenchmarks.LeakyReLUShifted()
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.LeakyReLUShifted*
  name: LeakyReLUShifted
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_Benchmarks_ActivationFunctionsBenchmarks_LeakyReLUShifted_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.LeakyReLUShifted
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.LeakyReLUShifted
  nameWithType: ActivationFunctionsBenchmarks.LeakyReLUShifted
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.MaxMinusOne
  name: MaxMinusOne()
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_Benchmarks_ActivationFunctionsBenchmarks_MaxMinusOne
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.MaxMinusOne
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.MaxMinusOne()
  nameWithType: ActivationFunctionsBenchmarks.MaxMinusOne()
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.MaxMinusOne*
  name: MaxMinusOne
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_Benchmarks_ActivationFunctionsBenchmarks_MaxMinusOne_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.MaxMinusOne
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.MaxMinusOne
  nameWithType: ActivationFunctionsBenchmarks.MaxMinusOne
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.PolynomialApproximantSteep
  name: PolynomialApproximantSteep()
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_Benchmarks_ActivationFunctionsBenchmarks_PolynomialApproximantSteep
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.PolynomialApproximantSteep
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.PolynomialApproximantSteep()
  nameWithType: ActivationFunctionsBenchmarks.PolynomialApproximantSteep()
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.PolynomialApproximantSteep*
  name: PolynomialApproximantSteep
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_Benchmarks_ActivationFunctionsBenchmarks_PolynomialApproximantSteep_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.PolynomialApproximantSteep
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.PolynomialApproximantSteep
  nameWithType: ActivationFunctionsBenchmarks.PolynomialApproximantSteep
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.QuadraticSigmoid
  name: QuadraticSigmoid()
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_Benchmarks_ActivationFunctionsBenchmarks_QuadraticSigmoid
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.QuadraticSigmoid
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.QuadraticSigmoid()
  nameWithType: ActivationFunctionsBenchmarks.QuadraticSigmoid()
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.QuadraticSigmoid*
  name: QuadraticSigmoid
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_Benchmarks_ActivationFunctionsBenchmarks_QuadraticSigmoid_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.QuadraticSigmoid
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.QuadraticSigmoid
  nameWithType: ActivationFunctionsBenchmarks.QuadraticSigmoid
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.ReLU
  name: ReLU()
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_Benchmarks_ActivationFunctionsBenchmarks_ReLU
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.ReLU
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.ReLU()
  nameWithType: ActivationFunctionsBenchmarks.ReLU()
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.ReLU*
  name: ReLU
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_Benchmarks_ActivationFunctionsBenchmarks_ReLU_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.ReLU
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.ReLU
  nameWithType: ActivationFunctionsBenchmarks.ReLU
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.SoftSignSteep
  name: SoftSignSteep()
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_Benchmarks_ActivationFunctionsBenchmarks_SoftSignSteep
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.SoftSignSteep
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.SoftSignSteep()
  nameWithType: ActivationFunctionsBenchmarks.SoftSignSteep()
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.SoftSignSteep*
  name: SoftSignSteep
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_Benchmarks_ActivationFunctionsBenchmarks_SoftSignSteep_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.SoftSignSteep
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.SoftSignSteep
  nameWithType: ActivationFunctionsBenchmarks.SoftSignSteep
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.SReLU
  name: SReLU()
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_Benchmarks_ActivationFunctionsBenchmarks_SReLU
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.SReLU
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.SReLU()
  nameWithType: ActivationFunctionsBenchmarks.SReLU()
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.SReLU*
  name: SReLU
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_Benchmarks_ActivationFunctionsBenchmarks_SReLU_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.SReLU
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.SReLU
  nameWithType: ActivationFunctionsBenchmarks.SReLU
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.SReLUShifted
  name: SReLUShifted()
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_Benchmarks_ActivationFunctionsBenchmarks_SReLUShifted
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.SReLUShifted
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.SReLUShifted()
  nameWithType: ActivationFunctionsBenchmarks.SReLUShifted()
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.SReLUShifted*
  name: SReLUShifted
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_Benchmarks_ActivationFunctionsBenchmarks_SReLUShifted_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.SReLUShifted
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.Benchmarks.ActivationFunctionsBenchmarks.SReLUShifted
  nameWithType: ActivationFunctionsBenchmarks.SReLUShifted
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLU
  name: LeakyReLU
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLU.html
  commentId: T:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLU
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLU
  nameWithType: LeakyReLU
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLU.Fn(System.Double@,System.Double@,System.Int32)
  name: Fn(ref double, ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_LeakyReLU_Fn_System_Double__System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLU.Fn(System.Double@,System.Double@,System.Int32)
  name.vb: Fn(Double, Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLU.Fn(ref double, ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLU.Fn(Double, Double, Integer)
  nameWithType: LeakyReLU.Fn(ref double, ref double, int)
  nameWithType.vb: LeakyReLU.Fn(Double, Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLU.Fn(System.Double@,System.Double@)
  name: Fn(ref double, ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_LeakyReLU_Fn_System_Double__System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLU.Fn(System.Double@,System.Double@)
  name.vb: Fn(Double, Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLU.Fn(ref double, ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLU.Fn(Double, Double)
  nameWithType: LeakyReLU.Fn(ref double, ref double)
  nameWithType.vb: LeakyReLU.Fn(Double, Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLU.Fn(System.Double@,System.Int32)
  name: Fn(ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_LeakyReLU_Fn_System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLU.Fn(System.Double@,System.Int32)
  name.vb: Fn(Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLU.Fn(ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLU.Fn(Double, Integer)
  nameWithType: LeakyReLU.Fn(ref double, int)
  nameWithType.vb: LeakyReLU.Fn(Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLU.Fn(System.Double@)
  name: Fn(ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_LeakyReLU_Fn_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLU.Fn(System.Double@)
  name.vb: Fn(Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLU.Fn(ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLU.Fn(Double)
  nameWithType: LeakyReLU.Fn(ref double)
  nameWithType.vb: LeakyReLU.Fn(Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLU.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name: Fn(ReadOnlySpan<double>, Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_LeakyReLU_Fn_System_ReadOnlySpan_System_Double__System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLU.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name.vb: Fn(ReadOnlySpan(Of Double), Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLU.Fn(System.ReadOnlySpan<double>, System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLU.Fn(System.ReadOnlySpan(Of Double), System.Span(Of Double))
  nameWithType: LeakyReLU.Fn(ReadOnlySpan<double>, Span<double>)
  nameWithType.vb: LeakyReLU.Fn(ReadOnlySpan(Of Double), Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLU.Fn(System.Span{System.Double})
  name: Fn(Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_LeakyReLU_Fn_System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLU.Fn(System.Span{System.Double})
  name.vb: Fn(Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLU.Fn(System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLU.Fn(System.Span(Of Double))
  nameWithType: LeakyReLU.Fn(Span<double>)
  nameWithType.vb: LeakyReLU.Fn(Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLU.Fn*
  name: Fn
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_LeakyReLU_Fn_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLU.Fn
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLU.Fn
  nameWithType: LeakyReLU.Fn
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLUShifted
  name: LeakyReLUShifted
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLUShifted.html
  commentId: T:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLUShifted
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLUShifted
  nameWithType: LeakyReLUShifted
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLUShifted.Fn(System.Double@,System.Double@,System.Int32)
  name: Fn(ref double, ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLUShifted.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_LeakyReLUShifted_Fn_System_Double__System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLUShifted.Fn(System.Double@,System.Double@,System.Int32)
  name.vb: Fn(Double, Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLUShifted.Fn(ref double, ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLUShifted.Fn(Double, Double, Integer)
  nameWithType: LeakyReLUShifted.Fn(ref double, ref double, int)
  nameWithType.vb: LeakyReLUShifted.Fn(Double, Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLUShifted.Fn(System.Double@,System.Double@)
  name: Fn(ref double, ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLUShifted.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_LeakyReLUShifted_Fn_System_Double__System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLUShifted.Fn(System.Double@,System.Double@)
  name.vb: Fn(Double, Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLUShifted.Fn(ref double, ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLUShifted.Fn(Double, Double)
  nameWithType: LeakyReLUShifted.Fn(ref double, ref double)
  nameWithType.vb: LeakyReLUShifted.Fn(Double, Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLUShifted.Fn(System.Double@,System.Int32)
  name: Fn(ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLUShifted.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_LeakyReLUShifted_Fn_System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLUShifted.Fn(System.Double@,System.Int32)
  name.vb: Fn(Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLUShifted.Fn(ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLUShifted.Fn(Double, Integer)
  nameWithType: LeakyReLUShifted.Fn(ref double, int)
  nameWithType.vb: LeakyReLUShifted.Fn(Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLUShifted.Fn(System.Double@)
  name: Fn(ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLUShifted.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_LeakyReLUShifted_Fn_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLUShifted.Fn(System.Double@)
  name.vb: Fn(Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLUShifted.Fn(ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLUShifted.Fn(Double)
  nameWithType: LeakyReLUShifted.Fn(ref double)
  nameWithType.vb: LeakyReLUShifted.Fn(Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLUShifted.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name: Fn(ReadOnlySpan<double>, Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLUShifted.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_LeakyReLUShifted_Fn_System_ReadOnlySpan_System_Double__System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLUShifted.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name.vb: Fn(ReadOnlySpan(Of Double), Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLUShifted.Fn(System.ReadOnlySpan<double>, System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLUShifted.Fn(System.ReadOnlySpan(Of Double), System.Span(Of Double))
  nameWithType: LeakyReLUShifted.Fn(ReadOnlySpan<double>, Span<double>)
  nameWithType.vb: LeakyReLUShifted.Fn(ReadOnlySpan(Of Double), Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLUShifted.Fn(System.Span{System.Double})
  name: Fn(Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLUShifted.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_LeakyReLUShifted_Fn_System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLUShifted.Fn(System.Span{System.Double})
  name.vb: Fn(Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLUShifted.Fn(System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLUShifted.Fn(System.Span(Of Double))
  nameWithType: LeakyReLUShifted.Fn(Span<double>)
  nameWithType.vb: LeakyReLUShifted.Fn(Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLUShifted.Fn*
  name: Fn
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLUShifted.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_LeakyReLUShifted_Fn_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLUShifted.Fn
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.LeakyReLUShifted.Fn
  nameWithType: LeakyReLUShifted.Fn
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.MaxMinusOne
  name: MaxMinusOne
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.MaxMinusOne.html
  commentId: T:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.MaxMinusOne
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.MaxMinusOne
  nameWithType: MaxMinusOne
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.MaxMinusOne.Fn(System.Double@,System.Double@,System.Int32)
  name: Fn(ref double, ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.MaxMinusOne.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_MaxMinusOne_Fn_System_Double__System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.MaxMinusOne.Fn(System.Double@,System.Double@,System.Int32)
  name.vb: Fn(Double, Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.MaxMinusOne.Fn(ref double, ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.MaxMinusOne.Fn(Double, Double, Integer)
  nameWithType: MaxMinusOne.Fn(ref double, ref double, int)
  nameWithType.vb: MaxMinusOne.Fn(Double, Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.MaxMinusOne.Fn(System.Double@,System.Double@)
  name: Fn(ref double, ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.MaxMinusOne.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_MaxMinusOne_Fn_System_Double__System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.MaxMinusOne.Fn(System.Double@,System.Double@)
  name.vb: Fn(Double, Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.MaxMinusOne.Fn(ref double, ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.MaxMinusOne.Fn(Double, Double)
  nameWithType: MaxMinusOne.Fn(ref double, ref double)
  nameWithType.vb: MaxMinusOne.Fn(Double, Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.MaxMinusOne.Fn(System.Double@,System.Int32)
  name: Fn(ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.MaxMinusOne.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_MaxMinusOne_Fn_System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.MaxMinusOne.Fn(System.Double@,System.Int32)
  name.vb: Fn(Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.MaxMinusOne.Fn(ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.MaxMinusOne.Fn(Double, Integer)
  nameWithType: MaxMinusOne.Fn(ref double, int)
  nameWithType.vb: MaxMinusOne.Fn(Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.MaxMinusOne.Fn(System.Double@)
  name: Fn(ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.MaxMinusOne.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_MaxMinusOne_Fn_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.MaxMinusOne.Fn(System.Double@)
  name.vb: Fn(Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.MaxMinusOne.Fn(ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.MaxMinusOne.Fn(Double)
  nameWithType: MaxMinusOne.Fn(ref double)
  nameWithType.vb: MaxMinusOne.Fn(Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.MaxMinusOne.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name: Fn(ReadOnlySpan<double>, Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.MaxMinusOne.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_MaxMinusOne_Fn_System_ReadOnlySpan_System_Double__System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.MaxMinusOne.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name.vb: Fn(ReadOnlySpan(Of Double), Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.MaxMinusOne.Fn(System.ReadOnlySpan<double>, System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.MaxMinusOne.Fn(System.ReadOnlySpan(Of Double), System.Span(Of Double))
  nameWithType: MaxMinusOne.Fn(ReadOnlySpan<double>, Span<double>)
  nameWithType.vb: MaxMinusOne.Fn(ReadOnlySpan(Of Double), Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.MaxMinusOne.Fn(System.Span{System.Double})
  name: Fn(Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.MaxMinusOne.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_MaxMinusOne_Fn_System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.MaxMinusOne.Fn(System.Span{System.Double})
  name.vb: Fn(Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.MaxMinusOne.Fn(System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.MaxMinusOne.Fn(System.Span(Of Double))
  nameWithType: MaxMinusOne.Fn(Span<double>)
  nameWithType.vb: MaxMinusOne.Fn(Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.MaxMinusOne.Fn*
  name: Fn
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.MaxMinusOne.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_MaxMinusOne_Fn_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.MaxMinusOne.Fn
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.MaxMinusOne.Fn
  nameWithType: MaxMinusOne.Fn
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.PolynomialApproximantSteep
  name: PolynomialApproximantSteep
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.PolynomialApproximantSteep.html
  commentId: T:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.PolynomialApproximantSteep
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.PolynomialApproximantSteep
  nameWithType: PolynomialApproximantSteep
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.PolynomialApproximantSteep.Fn(System.Double@,System.Double@,System.Int32)
  name: Fn(ref double, ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.PolynomialApproximantSteep.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_PolynomialApproximantSteep_Fn_System_Double__System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.PolynomialApproximantSteep.Fn(System.Double@,System.Double@,System.Int32)
  name.vb: Fn(Double, Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.PolynomialApproximantSteep.Fn(ref double, ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.PolynomialApproximantSteep.Fn(Double, Double, Integer)
  nameWithType: PolynomialApproximantSteep.Fn(ref double, ref double, int)
  nameWithType.vb: PolynomialApproximantSteep.Fn(Double, Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.PolynomialApproximantSteep.Fn(System.Double@,System.Double@)
  name: Fn(ref double, ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.PolynomialApproximantSteep.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_PolynomialApproximantSteep_Fn_System_Double__System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.PolynomialApproximantSteep.Fn(System.Double@,System.Double@)
  name.vb: Fn(Double, Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.PolynomialApproximantSteep.Fn(ref double, ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.PolynomialApproximantSteep.Fn(Double, Double)
  nameWithType: PolynomialApproximantSteep.Fn(ref double, ref double)
  nameWithType.vb: PolynomialApproximantSteep.Fn(Double, Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.PolynomialApproximantSteep.Fn(System.Double@,System.Int32)
  name: Fn(ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.PolynomialApproximantSteep.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_PolynomialApproximantSteep_Fn_System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.PolynomialApproximantSteep.Fn(System.Double@,System.Int32)
  name.vb: Fn(Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.PolynomialApproximantSteep.Fn(ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.PolynomialApproximantSteep.Fn(Double, Integer)
  nameWithType: PolynomialApproximantSteep.Fn(ref double, int)
  nameWithType.vb: PolynomialApproximantSteep.Fn(Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.PolynomialApproximantSteep.Fn(System.Double@)
  name: Fn(ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.PolynomialApproximantSteep.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_PolynomialApproximantSteep_Fn_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.PolynomialApproximantSteep.Fn(System.Double@)
  name.vb: Fn(Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.PolynomialApproximantSteep.Fn(ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.PolynomialApproximantSteep.Fn(Double)
  nameWithType: PolynomialApproximantSteep.Fn(ref double)
  nameWithType.vb: PolynomialApproximantSteep.Fn(Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.PolynomialApproximantSteep.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name: Fn(ReadOnlySpan<double>, Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.PolynomialApproximantSteep.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_PolynomialApproximantSteep_Fn_System_ReadOnlySpan_System_Double__System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.PolynomialApproximantSteep.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name.vb: Fn(ReadOnlySpan(Of Double), Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.PolynomialApproximantSteep.Fn(System.ReadOnlySpan<double>, System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.PolynomialApproximantSteep.Fn(System.ReadOnlySpan(Of Double), System.Span(Of Double))
  nameWithType: PolynomialApproximantSteep.Fn(ReadOnlySpan<double>, Span<double>)
  nameWithType.vb: PolynomialApproximantSteep.Fn(ReadOnlySpan(Of Double), Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.PolynomialApproximantSteep.Fn(System.Span{System.Double})
  name: Fn(Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.PolynomialApproximantSteep.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_PolynomialApproximantSteep_Fn_System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.PolynomialApproximantSteep.Fn(System.Span{System.Double})
  name.vb: Fn(Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.PolynomialApproximantSteep.Fn(System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.PolynomialApproximantSteep.Fn(System.Span(Of Double))
  nameWithType: PolynomialApproximantSteep.Fn(Span<double>)
  nameWithType.vb: PolynomialApproximantSteep.Fn(Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.PolynomialApproximantSteep.Fn*
  name: Fn
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.PolynomialApproximantSteep.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_PolynomialApproximantSteep_Fn_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.PolynomialApproximantSteep.Fn
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.PolynomialApproximantSteep.Fn
  nameWithType: PolynomialApproximantSteep.Fn
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.QuadraticSigmoid
  name: QuadraticSigmoid
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.QuadraticSigmoid.html
  commentId: T:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.QuadraticSigmoid
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.QuadraticSigmoid
  nameWithType: QuadraticSigmoid
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.QuadraticSigmoid.Fn(System.Double@,System.Double@,System.Int32)
  name: Fn(ref double, ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.QuadraticSigmoid.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_QuadraticSigmoid_Fn_System_Double__System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.QuadraticSigmoid.Fn(System.Double@,System.Double@,System.Int32)
  name.vb: Fn(Double, Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.QuadraticSigmoid.Fn(ref double, ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.QuadraticSigmoid.Fn(Double, Double, Integer)
  nameWithType: QuadraticSigmoid.Fn(ref double, ref double, int)
  nameWithType.vb: QuadraticSigmoid.Fn(Double, Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.QuadraticSigmoid.Fn(System.Double@,System.Double@)
  name: Fn(ref double, ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.QuadraticSigmoid.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_QuadraticSigmoid_Fn_System_Double__System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.QuadraticSigmoid.Fn(System.Double@,System.Double@)
  name.vb: Fn(Double, Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.QuadraticSigmoid.Fn(ref double, ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.QuadraticSigmoid.Fn(Double, Double)
  nameWithType: QuadraticSigmoid.Fn(ref double, ref double)
  nameWithType.vb: QuadraticSigmoid.Fn(Double, Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.QuadraticSigmoid.Fn(System.Double@,System.Int32)
  name: Fn(ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.QuadraticSigmoid.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_QuadraticSigmoid_Fn_System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.QuadraticSigmoid.Fn(System.Double@,System.Int32)
  name.vb: Fn(Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.QuadraticSigmoid.Fn(ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.QuadraticSigmoid.Fn(Double, Integer)
  nameWithType: QuadraticSigmoid.Fn(ref double, int)
  nameWithType.vb: QuadraticSigmoid.Fn(Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.QuadraticSigmoid.Fn(System.Double@)
  name: Fn(ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.QuadraticSigmoid.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_QuadraticSigmoid_Fn_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.QuadraticSigmoid.Fn(System.Double@)
  name.vb: Fn(Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.QuadraticSigmoid.Fn(ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.QuadraticSigmoid.Fn(Double)
  nameWithType: QuadraticSigmoid.Fn(ref double)
  nameWithType.vb: QuadraticSigmoid.Fn(Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.QuadraticSigmoid.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name: Fn(ReadOnlySpan<double>, Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.QuadraticSigmoid.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_QuadraticSigmoid_Fn_System_ReadOnlySpan_System_Double__System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.QuadraticSigmoid.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name.vb: Fn(ReadOnlySpan(Of Double), Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.QuadraticSigmoid.Fn(System.ReadOnlySpan<double>, System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.QuadraticSigmoid.Fn(System.ReadOnlySpan(Of Double), System.Span(Of Double))
  nameWithType: QuadraticSigmoid.Fn(ReadOnlySpan<double>, Span<double>)
  nameWithType.vb: QuadraticSigmoid.Fn(ReadOnlySpan(Of Double), Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.QuadraticSigmoid.Fn(System.Span{System.Double})
  name: Fn(Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.QuadraticSigmoid.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_QuadraticSigmoid_Fn_System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.QuadraticSigmoid.Fn(System.Span{System.Double})
  name.vb: Fn(Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.QuadraticSigmoid.Fn(System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.QuadraticSigmoid.Fn(System.Span(Of Double))
  nameWithType: QuadraticSigmoid.Fn(Span<double>)
  nameWithType.vb: QuadraticSigmoid.Fn(Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.QuadraticSigmoid.Fn*
  name: Fn
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.QuadraticSigmoid.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_QuadraticSigmoid_Fn_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.QuadraticSigmoid.Fn
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.QuadraticSigmoid.Fn
  nameWithType: QuadraticSigmoid.Fn
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.ReLU
  name: ReLU
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.ReLU.html
  commentId: T:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.ReLU
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.ReLU
  nameWithType: ReLU
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.ReLU.Fn(System.Double@,System.Double@,System.Int32)
  name: Fn(ref double, ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.ReLU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_ReLU_Fn_System_Double__System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.ReLU.Fn(System.Double@,System.Double@,System.Int32)
  name.vb: Fn(Double, Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.ReLU.Fn(ref double, ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.ReLU.Fn(Double, Double, Integer)
  nameWithType: ReLU.Fn(ref double, ref double, int)
  nameWithType.vb: ReLU.Fn(Double, Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.ReLU.Fn(System.Double@,System.Double@)
  name: Fn(ref double, ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.ReLU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_ReLU_Fn_System_Double__System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.ReLU.Fn(System.Double@,System.Double@)
  name.vb: Fn(Double, Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.ReLU.Fn(ref double, ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.ReLU.Fn(Double, Double)
  nameWithType: ReLU.Fn(ref double, ref double)
  nameWithType.vb: ReLU.Fn(Double, Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.ReLU.Fn(System.Double@,System.Int32)
  name: Fn(ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.ReLU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_ReLU_Fn_System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.ReLU.Fn(System.Double@,System.Int32)
  name.vb: Fn(Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.ReLU.Fn(ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.ReLU.Fn(Double, Integer)
  nameWithType: ReLU.Fn(ref double, int)
  nameWithType.vb: ReLU.Fn(Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.ReLU.Fn(System.Double@)
  name: Fn(ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.ReLU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_ReLU_Fn_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.ReLU.Fn(System.Double@)
  name.vb: Fn(Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.ReLU.Fn(ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.ReLU.Fn(Double)
  nameWithType: ReLU.Fn(ref double)
  nameWithType.vb: ReLU.Fn(Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.ReLU.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name: Fn(ReadOnlySpan<double>, Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.ReLU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_ReLU_Fn_System_ReadOnlySpan_System_Double__System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.ReLU.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name.vb: Fn(ReadOnlySpan(Of Double), Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.ReLU.Fn(System.ReadOnlySpan<double>, System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.ReLU.Fn(System.ReadOnlySpan(Of Double), System.Span(Of Double))
  nameWithType: ReLU.Fn(ReadOnlySpan<double>, Span<double>)
  nameWithType.vb: ReLU.Fn(ReadOnlySpan(Of Double), Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.ReLU.Fn(System.Span{System.Double})
  name: Fn(Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.ReLU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_ReLU_Fn_System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.ReLU.Fn(System.Span{System.Double})
  name.vb: Fn(Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.ReLU.Fn(System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.ReLU.Fn(System.Span(Of Double))
  nameWithType: ReLU.Fn(Span<double>)
  nameWithType.vb: ReLU.Fn(Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.ReLU.Fn*
  name: Fn
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.ReLU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_ReLU_Fn_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.ReLU.Fn
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.ReLU.Fn
  nameWithType: ReLU.Fn
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SoftSignSteep
  name: SoftSignSteep
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SoftSignSteep.html
  commentId: T:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SoftSignSteep
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SoftSignSteep
  nameWithType: SoftSignSteep
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SoftSignSteep.Fn(System.Double@,System.Double@,System.Int32)
  name: Fn(ref double, ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SoftSignSteep.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_SoftSignSteep_Fn_System_Double__System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SoftSignSteep.Fn(System.Double@,System.Double@,System.Int32)
  name.vb: Fn(Double, Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SoftSignSteep.Fn(ref double, ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SoftSignSteep.Fn(Double, Double, Integer)
  nameWithType: SoftSignSteep.Fn(ref double, ref double, int)
  nameWithType.vb: SoftSignSteep.Fn(Double, Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SoftSignSteep.Fn(System.Double@,System.Double@)
  name: Fn(ref double, ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SoftSignSteep.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_SoftSignSteep_Fn_System_Double__System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SoftSignSteep.Fn(System.Double@,System.Double@)
  name.vb: Fn(Double, Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SoftSignSteep.Fn(ref double, ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SoftSignSteep.Fn(Double, Double)
  nameWithType: SoftSignSteep.Fn(ref double, ref double)
  nameWithType.vb: SoftSignSteep.Fn(Double, Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SoftSignSteep.Fn(System.Double@,System.Int32)
  name: Fn(ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SoftSignSteep.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_SoftSignSteep_Fn_System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SoftSignSteep.Fn(System.Double@,System.Int32)
  name.vb: Fn(Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SoftSignSteep.Fn(ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SoftSignSteep.Fn(Double, Integer)
  nameWithType: SoftSignSteep.Fn(ref double, int)
  nameWithType.vb: SoftSignSteep.Fn(Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SoftSignSteep.Fn(System.Double@)
  name: Fn(ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SoftSignSteep.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_SoftSignSteep_Fn_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SoftSignSteep.Fn(System.Double@)
  name.vb: Fn(Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SoftSignSteep.Fn(ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SoftSignSteep.Fn(Double)
  nameWithType: SoftSignSteep.Fn(ref double)
  nameWithType.vb: SoftSignSteep.Fn(Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SoftSignSteep.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name: Fn(ReadOnlySpan<double>, Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SoftSignSteep.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_SoftSignSteep_Fn_System_ReadOnlySpan_System_Double__System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SoftSignSteep.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name.vb: Fn(ReadOnlySpan(Of Double), Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SoftSignSteep.Fn(System.ReadOnlySpan<double>, System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SoftSignSteep.Fn(System.ReadOnlySpan(Of Double), System.Span(Of Double))
  nameWithType: SoftSignSteep.Fn(ReadOnlySpan<double>, Span<double>)
  nameWithType.vb: SoftSignSteep.Fn(ReadOnlySpan(Of Double), Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SoftSignSteep.Fn(System.Span{System.Double})
  name: Fn(Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SoftSignSteep.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_SoftSignSteep_Fn_System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SoftSignSteep.Fn(System.Span{System.Double})
  name.vb: Fn(Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SoftSignSteep.Fn(System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SoftSignSteep.Fn(System.Span(Of Double))
  nameWithType: SoftSignSteep.Fn(Span<double>)
  nameWithType.vb: SoftSignSteep.Fn(Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SoftSignSteep.Fn*
  name: Fn
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SoftSignSteep.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_SoftSignSteep_Fn_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SoftSignSteep.Fn
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SoftSignSteep.Fn
  nameWithType: SoftSignSteep.Fn
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLU
  name: SReLU
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLU.html
  commentId: T:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLU
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLU
  nameWithType: SReLU
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLU.Fn(System.Double@,System.Double@,System.Int32)
  name: Fn(ref double, ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_SReLU_Fn_System_Double__System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLU.Fn(System.Double@,System.Double@,System.Int32)
  name.vb: Fn(Double, Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLU.Fn(ref double, ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLU.Fn(Double, Double, Integer)
  nameWithType: SReLU.Fn(ref double, ref double, int)
  nameWithType.vb: SReLU.Fn(Double, Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLU.Fn(System.Double@,System.Double@)
  name: Fn(ref double, ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_SReLU_Fn_System_Double__System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLU.Fn(System.Double@,System.Double@)
  name.vb: Fn(Double, Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLU.Fn(ref double, ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLU.Fn(Double, Double)
  nameWithType: SReLU.Fn(ref double, ref double)
  nameWithType.vb: SReLU.Fn(Double, Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLU.Fn(System.Double@,System.Int32)
  name: Fn(ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_SReLU_Fn_System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLU.Fn(System.Double@,System.Int32)
  name.vb: Fn(Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLU.Fn(ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLU.Fn(Double, Integer)
  nameWithType: SReLU.Fn(ref double, int)
  nameWithType.vb: SReLU.Fn(Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLU.Fn(System.Double@)
  name: Fn(ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_SReLU_Fn_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLU.Fn(System.Double@)
  name.vb: Fn(Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLU.Fn(ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLU.Fn(Double)
  nameWithType: SReLU.Fn(ref double)
  nameWithType.vb: SReLU.Fn(Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLU.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name: Fn(ReadOnlySpan<double>, Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_SReLU_Fn_System_ReadOnlySpan_System_Double__System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLU.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name.vb: Fn(ReadOnlySpan(Of Double), Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLU.Fn(System.ReadOnlySpan<double>, System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLU.Fn(System.ReadOnlySpan(Of Double), System.Span(Of Double))
  nameWithType: SReLU.Fn(ReadOnlySpan<double>, Span<double>)
  nameWithType.vb: SReLU.Fn(ReadOnlySpan(Of Double), Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLU.Fn(System.Span{System.Double})
  name: Fn(Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_SReLU_Fn_System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLU.Fn(System.Span{System.Double})
  name.vb: Fn(Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLU.Fn(System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLU.Fn(System.Span(Of Double))
  nameWithType: SReLU.Fn(Span<double>)
  nameWithType.vb: SReLU.Fn(Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLU.Fn*
  name: Fn
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLU.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_SReLU_Fn_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLU.Fn
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLU.Fn
  nameWithType: SReLU.Fn
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLUShifted
  name: SReLUShifted
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLUShifted.html
  commentId: T:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLUShifted
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLUShifted
  nameWithType: SReLUShifted
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLUShifted.Fn(System.Double@,System.Double@,System.Int32)
  name: Fn(ref double, ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLUShifted.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_SReLUShifted_Fn_System_Double__System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLUShifted.Fn(System.Double@,System.Double@,System.Int32)
  name.vb: Fn(Double, Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLUShifted.Fn(ref double, ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLUShifted.Fn(Double, Double, Integer)
  nameWithType: SReLUShifted.Fn(ref double, ref double, int)
  nameWithType.vb: SReLUShifted.Fn(Double, Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLUShifted.Fn(System.Double@,System.Double@)
  name: Fn(ref double, ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLUShifted.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_SReLUShifted_Fn_System_Double__System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLUShifted.Fn(System.Double@,System.Double@)
  name.vb: Fn(Double, Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLUShifted.Fn(ref double, ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLUShifted.Fn(Double, Double)
  nameWithType: SReLUShifted.Fn(ref double, ref double)
  nameWithType.vb: SReLUShifted.Fn(Double, Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLUShifted.Fn(System.Double@,System.Int32)
  name: Fn(ref double, int)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLUShifted.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_SReLUShifted_Fn_System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLUShifted.Fn(System.Double@,System.Int32)
  name.vb: Fn(Double, Integer)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLUShifted.Fn(ref double, int)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLUShifted.Fn(Double, Integer)
  nameWithType: SReLUShifted.Fn(ref double, int)
  nameWithType.vb: SReLUShifted.Fn(Double, Integer)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLUShifted.Fn(System.Double@)
  name: Fn(ref double)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLUShifted.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_SReLUShifted_Fn_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLUShifted.Fn(System.Double@)
  name.vb: Fn(Double)
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLUShifted.Fn(ref double)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLUShifted.Fn(Double)
  nameWithType: SReLUShifted.Fn(ref double)
  nameWithType.vb: SReLUShifted.Fn(Double)
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLUShifted.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name: Fn(ReadOnlySpan<double>, Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLUShifted.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_SReLUShifted_Fn_System_ReadOnlySpan_System_Double__System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLUShifted.Fn(System.ReadOnlySpan{System.Double},System.Span{System.Double})
  name.vb: Fn(ReadOnlySpan(Of Double), Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLUShifted.Fn(System.ReadOnlySpan<double>, System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLUShifted.Fn(System.ReadOnlySpan(Of Double), System.Span(Of Double))
  nameWithType: SReLUShifted.Fn(ReadOnlySpan<double>, Span<double>)
  nameWithType.vb: SReLUShifted.Fn(ReadOnlySpan(Of Double), Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLUShifted.Fn(System.Span{System.Double})
  name: Fn(Span<double>)
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLUShifted.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_SReLUShifted_Fn_System_Span_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLUShifted.Fn(System.Span{System.Double})
  name.vb: Fn(Span(Of Double))
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLUShifted.Fn(System.Span<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLUShifted.Fn(System.Span(Of Double))
  nameWithType: SReLUShifted.Fn(Span<double>)
  nameWithType.vb: SReLUShifted.Fn(Span(Of Double))
- uid: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLUShifted.Fn*
  name: Fn
  href: api/SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLUShifted.html#SharpNeat_NeuralNets_Double_ActivationFunctions_Vectorized_SReLUShifted_Fn_
  commentId: Overload:SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLUShifted.Fn
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.ActivationFunctions.Vectorized.SReLUShifted.Fn
  nameWithType: SReLUShifted.Fn
- uid: SharpNeat.NeuralNets.Double.Benchmarks
  name: SharpNeat.NeuralNets.Double.Benchmarks
  href: api/SharpNeat.NeuralNets.Double.Benchmarks.html
  commentId: N:SharpNeat.NeuralNets.Double.Benchmarks
  fullName: SharpNeat.NeuralNets.Double.Benchmarks
  nameWithType: SharpNeat.NeuralNets.Double.Benchmarks
- uid: SharpNeat.NeuralNets.Double.Benchmarks.NeuralNetAcyclicBenchmarks
  name: NeuralNetAcyclicBenchmarks
  href: api/SharpNeat.NeuralNets.Double.Benchmarks.NeuralNetAcyclicBenchmarks.html
  commentId: T:SharpNeat.NeuralNets.Double.Benchmarks.NeuralNetAcyclicBenchmarks
  fullName: SharpNeat.NeuralNets.Double.Benchmarks.NeuralNetAcyclicBenchmarks
  nameWithType: NeuralNetAcyclicBenchmarks
- uid: SharpNeat.NeuralNets.Double.Benchmarks.NeuralNetAcyclicBenchmarks.Activate
  name: Activate()
  href: api/SharpNeat.NeuralNets.Double.Benchmarks.NeuralNetAcyclicBenchmarks.html#SharpNeat_NeuralNets_Double_Benchmarks_NeuralNetAcyclicBenchmarks_Activate
  commentId: M:SharpNeat.NeuralNets.Double.Benchmarks.NeuralNetAcyclicBenchmarks.Activate
  fullName: SharpNeat.NeuralNets.Double.Benchmarks.NeuralNetAcyclicBenchmarks.Activate()
  nameWithType: NeuralNetAcyclicBenchmarks.Activate()
- uid: SharpNeat.NeuralNets.Double.Benchmarks.NeuralNetAcyclicBenchmarks.Activate*
  name: Activate
  href: api/SharpNeat.NeuralNets.Double.Benchmarks.NeuralNetAcyclicBenchmarks.html#SharpNeat_NeuralNets_Double_Benchmarks_NeuralNetAcyclicBenchmarks_Activate_
  commentId: Overload:SharpNeat.NeuralNets.Double.Benchmarks.NeuralNetAcyclicBenchmarks.Activate
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.Benchmarks.NeuralNetAcyclicBenchmarks.Activate
  nameWithType: NeuralNetAcyclicBenchmarks.Activate
- uid: SharpNeat.NeuralNets.Double.Benchmarks.NeuralNetCyclicBenchmarks
  name: NeuralNetCyclicBenchmarks
  href: api/SharpNeat.NeuralNets.Double.Benchmarks.NeuralNetCyclicBenchmarks.html
  commentId: T:SharpNeat.NeuralNets.Double.Benchmarks.NeuralNetCyclicBenchmarks
  fullName: SharpNeat.NeuralNets.Double.Benchmarks.NeuralNetCyclicBenchmarks
  nameWithType: NeuralNetCyclicBenchmarks
- uid: SharpNeat.NeuralNets.Double.Benchmarks.NeuralNetCyclicBenchmarks.Activate
  name: Activate()
  href: api/SharpNeat.NeuralNets.Double.Benchmarks.NeuralNetCyclicBenchmarks.html#SharpNeat_NeuralNets_Double_Benchmarks_NeuralNetCyclicBenchmarks_Activate
  commentId: M:SharpNeat.NeuralNets.Double.Benchmarks.NeuralNetCyclicBenchmarks.Activate
  fullName: SharpNeat.NeuralNets.Double.Benchmarks.NeuralNetCyclicBenchmarks.Activate()
  nameWithType: NeuralNetCyclicBenchmarks.Activate()
- uid: SharpNeat.NeuralNets.Double.Benchmarks.NeuralNetCyclicBenchmarks.Activate*
  name: Activate
  href: api/SharpNeat.NeuralNets.Double.Benchmarks.NeuralNetCyclicBenchmarks.html#SharpNeat_NeuralNets_Double_Benchmarks_NeuralNetCyclicBenchmarks_Activate_
  commentId: Overload:SharpNeat.NeuralNets.Double.Benchmarks.NeuralNetCyclicBenchmarks.Activate
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.Benchmarks.NeuralNetCyclicBenchmarks.Activate
  nameWithType: NeuralNetCyclicBenchmarks.Activate
- uid: SharpNeat.NeuralNets.Double.NeuralNetAcyclic
  name: NeuralNetAcyclic
  href: api/SharpNeat.NeuralNets.Double.NeuralNetAcyclic.html
  commentId: T:SharpNeat.NeuralNets.Double.NeuralNetAcyclic
  fullName: SharpNeat.NeuralNets.Double.NeuralNetAcyclic
  nameWithType: NeuralNetAcyclic
- uid: SharpNeat.NeuralNets.Double.NeuralNetAcyclic.#ctor(SharpNeat.Graphs.Acyclic.DirectedGraphAcyclic,System.Double[],SharpNeat.NeuralNets.VecFn{System.Double})
  name: NeuralNetAcyclic(DirectedGraphAcyclic, double[], VecFn<double>)
  href: api/SharpNeat.NeuralNets.Double.NeuralNetAcyclic.html#SharpNeat_NeuralNets_Double_NeuralNetAcyclic__ctor_SharpNeat_Graphs_Acyclic_DirectedGraphAcyclic_System_Double___SharpNeat_NeuralNets_VecFn_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.NeuralNetAcyclic.#ctor(SharpNeat.Graphs.Acyclic.DirectedGraphAcyclic,System.Double[],SharpNeat.NeuralNets.VecFn{System.Double})
  name.vb: New(DirectedGraphAcyclic, Double(), VecFn(Of Double))
  fullName: SharpNeat.NeuralNets.Double.NeuralNetAcyclic.NeuralNetAcyclic(SharpNeat.Graphs.Acyclic.DirectedGraphAcyclic, double[], SharpNeat.NeuralNets.VecFn<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.NeuralNetAcyclic.New(SharpNeat.Graphs.Acyclic.DirectedGraphAcyclic, Double(), SharpNeat.NeuralNets.VecFn(Of Double))
  nameWithType: NeuralNetAcyclic.NeuralNetAcyclic(DirectedGraphAcyclic, double[], VecFn<double>)
  nameWithType.vb: NeuralNetAcyclic.New(DirectedGraphAcyclic, Double(), VecFn(Of Double))
- uid: SharpNeat.NeuralNets.Double.NeuralNetAcyclic.#ctor(SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclic{System.Double},SharpNeat.NeuralNets.VecFn{System.Double})
  name: NeuralNetAcyclic(WeightedDirectedGraphAcyclic<double>, VecFn<double>)
  href: api/SharpNeat.NeuralNets.Double.NeuralNetAcyclic.html#SharpNeat_NeuralNets_Double_NeuralNetAcyclic__ctor_SharpNeat_Graphs_Acyclic_WeightedDirectedGraphAcyclic_System_Double__SharpNeat_NeuralNets_VecFn_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.NeuralNetAcyclic.#ctor(SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclic{System.Double},SharpNeat.NeuralNets.VecFn{System.Double})
  name.vb: New(WeightedDirectedGraphAcyclic(Of Double), VecFn(Of Double))
  fullName: SharpNeat.NeuralNets.Double.NeuralNetAcyclic.NeuralNetAcyclic(SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclic<double>, SharpNeat.NeuralNets.VecFn<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.NeuralNetAcyclic.New(SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclic(Of Double), SharpNeat.NeuralNets.VecFn(Of Double))
  nameWithType: NeuralNetAcyclic.NeuralNetAcyclic(WeightedDirectedGraphAcyclic<double>, VecFn<double>)
  nameWithType.vb: NeuralNetAcyclic.New(WeightedDirectedGraphAcyclic(Of Double), VecFn(Of Double))
- uid: SharpNeat.NeuralNets.Double.NeuralNetAcyclic.#ctor*
  name: NeuralNetAcyclic
  href: api/SharpNeat.NeuralNets.Double.NeuralNetAcyclic.html#SharpNeat_NeuralNets_Double_NeuralNetAcyclic__ctor_
  commentId: Overload:SharpNeat.NeuralNets.Double.NeuralNetAcyclic.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.NeuralNets.Double.NeuralNetAcyclic.NeuralNetAcyclic
  fullName.vb: SharpNeat.NeuralNets.Double.NeuralNetAcyclic.New
  nameWithType: NeuralNetAcyclic.NeuralNetAcyclic
  nameWithType.vb: NeuralNetAcyclic.New
- uid: SharpNeat.NeuralNets.Double.NeuralNetAcyclic.Activate
  name: Activate()
  href: api/SharpNeat.NeuralNets.Double.NeuralNetAcyclic.html#SharpNeat_NeuralNets_Double_NeuralNetAcyclic_Activate
  commentId: M:SharpNeat.NeuralNets.Double.NeuralNetAcyclic.Activate
  fullName: SharpNeat.NeuralNets.Double.NeuralNetAcyclic.Activate()
  nameWithType: NeuralNetAcyclic.Activate()
- uid: SharpNeat.NeuralNets.Double.NeuralNetAcyclic.Activate*
  name: Activate
  href: api/SharpNeat.NeuralNets.Double.NeuralNetAcyclic.html#SharpNeat_NeuralNets_Double_NeuralNetAcyclic_Activate_
  commentId: Overload:SharpNeat.NeuralNets.Double.NeuralNetAcyclic.Activate
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.NeuralNetAcyclic.Activate
  nameWithType: NeuralNetAcyclic.Activate
- uid: SharpNeat.NeuralNets.Double.NeuralNetAcyclic.Dispose
  name: Dispose()
  href: api/SharpNeat.NeuralNets.Double.NeuralNetAcyclic.html#SharpNeat_NeuralNets_Double_NeuralNetAcyclic_Dispose
  commentId: M:SharpNeat.NeuralNets.Double.NeuralNetAcyclic.Dispose
  fullName: SharpNeat.NeuralNets.Double.NeuralNetAcyclic.Dispose()
  nameWithType: NeuralNetAcyclic.Dispose()
- uid: SharpNeat.NeuralNets.Double.NeuralNetAcyclic.Dispose*
  name: Dispose
  href: api/SharpNeat.NeuralNets.Double.NeuralNetAcyclic.html#SharpNeat_NeuralNets_Double_NeuralNetAcyclic_Dispose_
  commentId: Overload:SharpNeat.NeuralNets.Double.NeuralNetAcyclic.Dispose
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.NeuralNetAcyclic.Dispose
  nameWithType: NeuralNetAcyclic.Dispose
- uid: SharpNeat.NeuralNets.Double.NeuralNetAcyclic.Inputs
  name: Inputs
  href: api/SharpNeat.NeuralNets.Double.NeuralNetAcyclic.html#SharpNeat_NeuralNets_Double_NeuralNetAcyclic_Inputs
  commentId: P:SharpNeat.NeuralNets.Double.NeuralNetAcyclic.Inputs
  fullName: SharpNeat.NeuralNets.Double.NeuralNetAcyclic.Inputs
  nameWithType: NeuralNetAcyclic.Inputs
- uid: SharpNeat.NeuralNets.Double.NeuralNetAcyclic.Inputs*
  name: Inputs
  href: api/SharpNeat.NeuralNets.Double.NeuralNetAcyclic.html#SharpNeat_NeuralNets_Double_NeuralNetAcyclic_Inputs_
  commentId: Overload:SharpNeat.NeuralNets.Double.NeuralNetAcyclic.Inputs
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.NeuralNetAcyclic.Inputs
  nameWithType: NeuralNetAcyclic.Inputs
- uid: SharpNeat.NeuralNets.Double.NeuralNetAcyclic.Outputs
  name: Outputs
  href: api/SharpNeat.NeuralNets.Double.NeuralNetAcyclic.html#SharpNeat_NeuralNets_Double_NeuralNetAcyclic_Outputs
  commentId: P:SharpNeat.NeuralNets.Double.NeuralNetAcyclic.Outputs
  fullName: SharpNeat.NeuralNets.Double.NeuralNetAcyclic.Outputs
  nameWithType: NeuralNetAcyclic.Outputs
- uid: SharpNeat.NeuralNets.Double.NeuralNetAcyclic.Outputs*
  name: Outputs
  href: api/SharpNeat.NeuralNets.Double.NeuralNetAcyclic.html#SharpNeat_NeuralNets_Double_NeuralNetAcyclic_Outputs_
  commentId: Overload:SharpNeat.NeuralNets.Double.NeuralNetAcyclic.Outputs
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.NeuralNetAcyclic.Outputs
  nameWithType: NeuralNetAcyclic.Outputs
- uid: SharpNeat.NeuralNets.Double.NeuralNetAcyclic.Reset
  name: Reset()
  href: api/SharpNeat.NeuralNets.Double.NeuralNetAcyclic.html#SharpNeat_NeuralNets_Double_NeuralNetAcyclic_Reset
  commentId: M:SharpNeat.NeuralNets.Double.NeuralNetAcyclic.Reset
  fullName: SharpNeat.NeuralNets.Double.NeuralNetAcyclic.Reset()
  nameWithType: NeuralNetAcyclic.Reset()
- uid: SharpNeat.NeuralNets.Double.NeuralNetAcyclic.Reset*
  name: Reset
  href: api/SharpNeat.NeuralNets.Double.NeuralNetAcyclic.html#SharpNeat_NeuralNets_Double_NeuralNetAcyclic_Reset_
  commentId: Overload:SharpNeat.NeuralNets.Double.NeuralNetAcyclic.Reset
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.NeuralNetAcyclic.Reset
  nameWithType: NeuralNetAcyclic.Reset
- uid: SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe
  name: NeuralNetAcyclicSafe
  href: api/SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.html
  commentId: T:SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe
  fullName: SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe
  nameWithType: NeuralNetAcyclicSafe
- uid: SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.#ctor(SharpNeat.Graphs.Acyclic.DirectedGraphAcyclic,System.Double[],SharpNeat.NeuralNets.VecFn{System.Double})
  name: NeuralNetAcyclicSafe(DirectedGraphAcyclic, double[], VecFn<double>)
  href: api/SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.html#SharpNeat_NeuralNets_Double_NeuralNetAcyclicSafe__ctor_SharpNeat_Graphs_Acyclic_DirectedGraphAcyclic_System_Double___SharpNeat_NeuralNets_VecFn_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.#ctor(SharpNeat.Graphs.Acyclic.DirectedGraphAcyclic,System.Double[],SharpNeat.NeuralNets.VecFn{System.Double})
  name.vb: New(DirectedGraphAcyclic, Double(), VecFn(Of Double))
  fullName: SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.NeuralNetAcyclicSafe(SharpNeat.Graphs.Acyclic.DirectedGraphAcyclic, double[], SharpNeat.NeuralNets.VecFn<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.New(SharpNeat.Graphs.Acyclic.DirectedGraphAcyclic, Double(), SharpNeat.NeuralNets.VecFn(Of Double))
  nameWithType: NeuralNetAcyclicSafe.NeuralNetAcyclicSafe(DirectedGraphAcyclic, double[], VecFn<double>)
  nameWithType.vb: NeuralNetAcyclicSafe.New(DirectedGraphAcyclic, Double(), VecFn(Of Double))
- uid: SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.#ctor(SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclic{System.Double},SharpNeat.NeuralNets.VecFn{System.Double})
  name: NeuralNetAcyclicSafe(WeightedDirectedGraphAcyclic<double>, VecFn<double>)
  href: api/SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.html#SharpNeat_NeuralNets_Double_NeuralNetAcyclicSafe__ctor_SharpNeat_Graphs_Acyclic_WeightedDirectedGraphAcyclic_System_Double__SharpNeat_NeuralNets_VecFn_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.#ctor(SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclic{System.Double},SharpNeat.NeuralNets.VecFn{System.Double})
  name.vb: New(WeightedDirectedGraphAcyclic(Of Double), VecFn(Of Double))
  fullName: SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.NeuralNetAcyclicSafe(SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclic<double>, SharpNeat.NeuralNets.VecFn<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.New(SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclic(Of Double), SharpNeat.NeuralNets.VecFn(Of Double))
  nameWithType: NeuralNetAcyclicSafe.NeuralNetAcyclicSafe(WeightedDirectedGraphAcyclic<double>, VecFn<double>)
  nameWithType.vb: NeuralNetAcyclicSafe.New(WeightedDirectedGraphAcyclic(Of Double), VecFn(Of Double))
- uid: SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.#ctor*
  name: NeuralNetAcyclicSafe
  href: api/SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.html#SharpNeat_NeuralNets_Double_NeuralNetAcyclicSafe__ctor_
  commentId: Overload:SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.NeuralNetAcyclicSafe
  fullName.vb: SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.New
  nameWithType: NeuralNetAcyclicSafe.NeuralNetAcyclicSafe
  nameWithType.vb: NeuralNetAcyclicSafe.New
- uid: SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.Activate
  name: Activate()
  href: api/SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.html#SharpNeat_NeuralNets_Double_NeuralNetAcyclicSafe_Activate
  commentId: M:SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.Activate
  fullName: SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.Activate()
  nameWithType: NeuralNetAcyclicSafe.Activate()
- uid: SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.Activate*
  name: Activate
  href: api/SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.html#SharpNeat_NeuralNets_Double_NeuralNetAcyclicSafe_Activate_
  commentId: Overload:SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.Activate
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.Activate
  nameWithType: NeuralNetAcyclicSafe.Activate
- uid: SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.Dispose
  name: Dispose()
  href: api/SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.html#SharpNeat_NeuralNets_Double_NeuralNetAcyclicSafe_Dispose
  commentId: M:SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.Dispose
  fullName: SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.Dispose()
  nameWithType: NeuralNetAcyclicSafe.Dispose()
- uid: SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.Dispose*
  name: Dispose
  href: api/SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.html#SharpNeat_NeuralNets_Double_NeuralNetAcyclicSafe_Dispose_
  commentId: Overload:SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.Dispose
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.Dispose
  nameWithType: NeuralNetAcyclicSafe.Dispose
- uid: SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.Inputs
  name: Inputs
  href: api/SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.html#SharpNeat_NeuralNets_Double_NeuralNetAcyclicSafe_Inputs
  commentId: P:SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.Inputs
  fullName: SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.Inputs
  nameWithType: NeuralNetAcyclicSafe.Inputs
- uid: SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.Inputs*
  name: Inputs
  href: api/SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.html#SharpNeat_NeuralNets_Double_NeuralNetAcyclicSafe_Inputs_
  commentId: Overload:SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.Inputs
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.Inputs
  nameWithType: NeuralNetAcyclicSafe.Inputs
- uid: SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.Outputs
  name: Outputs
  href: api/SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.html#SharpNeat_NeuralNets_Double_NeuralNetAcyclicSafe_Outputs
  commentId: P:SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.Outputs
  fullName: SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.Outputs
  nameWithType: NeuralNetAcyclicSafe.Outputs
- uid: SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.Outputs*
  name: Outputs
  href: api/SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.html#SharpNeat_NeuralNets_Double_NeuralNetAcyclicSafe_Outputs_
  commentId: Overload:SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.Outputs
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.Outputs
  nameWithType: NeuralNetAcyclicSafe.Outputs
- uid: SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.Reset
  name: Reset()
  href: api/SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.html#SharpNeat_NeuralNets_Double_NeuralNetAcyclicSafe_Reset
  commentId: M:SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.Reset
  fullName: SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.Reset()
  nameWithType: NeuralNetAcyclicSafe.Reset()
- uid: SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.Reset*
  name: Reset
  href: api/SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.html#SharpNeat_NeuralNets_Double_NeuralNetAcyclicSafe_Reset_
  commentId: Overload:SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.Reset
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.NeuralNetAcyclicSafe.Reset
  nameWithType: NeuralNetAcyclicSafe.Reset
- uid: SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests
  name: NeuralNetAcyclicTests
  href: api/SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.html
  commentId: T:SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests
  fullName: SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests
  nameWithType: NeuralNetAcyclicTests
- uid: SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.Complex_WeightOne
  name: Complex_WeightOne()
  href: api/SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.html#SharpNeat_NeuralNets_Double_NeuralNetAcyclicTests_Complex_WeightOne
  commentId: M:SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.Complex_WeightOne
  fullName: SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.Complex_WeightOne()
  nameWithType: NeuralNetAcyclicTests.Complex_WeightOne()
- uid: SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.Complex_WeightOne*
  name: Complex_WeightOne
  href: api/SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.html#SharpNeat_NeuralNets_Double_NeuralNetAcyclicTests_Complex_WeightOne_
  commentId: Overload:SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.Complex_WeightOne
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.Complex_WeightOne
  nameWithType: NeuralNetAcyclicTests.Complex_WeightOne
- uid: SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.HiddenNode
  name: HiddenNode()
  href: api/SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.html#SharpNeat_NeuralNets_Double_NeuralNetAcyclicTests_HiddenNode
  commentId: M:SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.HiddenNode
  fullName: SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.HiddenNode()
  nameWithType: NeuralNetAcyclicTests.HiddenNode()
- uid: SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.HiddenNode*
  name: HiddenNode
  href: api/SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.html#SharpNeat_NeuralNets_Double_NeuralNetAcyclicTests_HiddenNode_
  commentId: Overload:SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.HiddenNode
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.HiddenNode
  nameWithType: NeuralNetAcyclicTests.HiddenNode
- uid: SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.MultipleInputsOutputs
  name: MultipleInputsOutputs()
  href: api/SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.html#SharpNeat_NeuralNets_Double_NeuralNetAcyclicTests_MultipleInputsOutputs
  commentId: M:SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.MultipleInputsOutputs
  fullName: SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.MultipleInputsOutputs()
  nameWithType: NeuralNetAcyclicTests.MultipleInputsOutputs()
- uid: SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.MultipleInputsOutputs*
  name: MultipleInputsOutputs
  href: api/SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.html#SharpNeat_NeuralNets_Double_NeuralNetAcyclicTests_MultipleInputsOutputs_
  commentId: Overload:SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.MultipleInputsOutputs
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.MultipleInputsOutputs
  nameWithType: NeuralNetAcyclicTests.MultipleInputsOutputs
- uid: SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.SingleInput_WeightOne
  name: SingleInput_WeightOne()
  href: api/SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.html#SharpNeat_NeuralNets_Double_NeuralNetAcyclicTests_SingleInput_WeightOne
  commentId: M:SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.SingleInput_WeightOne
  fullName: SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.SingleInput_WeightOne()
  nameWithType: NeuralNetAcyclicTests.SingleInput_WeightOne()
- uid: SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.SingleInput_WeightOne*
  name: SingleInput_WeightOne
  href: api/SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.html#SharpNeat_NeuralNets_Double_NeuralNetAcyclicTests_SingleInput_WeightOne_
  commentId: Overload:SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.SingleInput_WeightOne
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.SingleInput_WeightOne
  nameWithType: NeuralNetAcyclicTests.SingleInput_WeightOne
- uid: SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.SingleInput_WeightZero
  name: SingleInput_WeightZero()
  href: api/SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.html#SharpNeat_NeuralNets_Double_NeuralNetAcyclicTests_SingleInput_WeightZero
  commentId: M:SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.SingleInput_WeightZero
  fullName: SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.SingleInput_WeightZero()
  nameWithType: NeuralNetAcyclicTests.SingleInput_WeightZero()
- uid: SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.SingleInput_WeightZero*
  name: SingleInput_WeightZero
  href: api/SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.html#SharpNeat_NeuralNets_Double_NeuralNetAcyclicTests_SingleInput_WeightZero_
  commentId: Overload:SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.SingleInput_WeightZero
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.SingleInput_WeightZero
  nameWithType: NeuralNetAcyclicTests.SingleInput_WeightZero
- uid: SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.TwoInputs_WeightHalf
  name: TwoInputs_WeightHalf()
  href: api/SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.html#SharpNeat_NeuralNets_Double_NeuralNetAcyclicTests_TwoInputs_WeightHalf
  commentId: M:SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.TwoInputs_WeightHalf
  fullName: SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.TwoInputs_WeightHalf()
  nameWithType: NeuralNetAcyclicTests.TwoInputs_WeightHalf()
- uid: SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.TwoInputs_WeightHalf*
  name: TwoInputs_WeightHalf
  href: api/SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.html#SharpNeat_NeuralNets_Double_NeuralNetAcyclicTests_TwoInputs_WeightHalf_
  commentId: Overload:SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.TwoInputs_WeightHalf
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.NeuralNetAcyclicTests.TwoInputs_WeightHalf
  nameWithType: NeuralNetAcyclicTests.TwoInputs_WeightHalf
- uid: SharpNeat.NeuralNets.Double.NeuralNetCyclic
  name: NeuralNetCyclic
  href: api/SharpNeat.NeuralNets.Double.NeuralNetCyclic.html
  commentId: T:SharpNeat.NeuralNets.Double.NeuralNetCyclic
  fullName: SharpNeat.NeuralNets.Double.NeuralNetCyclic
  nameWithType: NeuralNetCyclic
- uid: SharpNeat.NeuralNets.Double.NeuralNetCyclic.#ctor(SharpNeat.Graphs.DirectedGraph,System.Double[],SharpNeat.NeuralNets.VecFn2{System.Double},System.Int32)
  name: NeuralNetCyclic(DirectedGraph, double[], VecFn2<double>, int)
  href: api/SharpNeat.NeuralNets.Double.NeuralNetCyclic.html#SharpNeat_NeuralNets_Double_NeuralNetCyclic__ctor_SharpNeat_Graphs_DirectedGraph_System_Double___SharpNeat_NeuralNets_VecFn2_System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.NeuralNetCyclic.#ctor(SharpNeat.Graphs.DirectedGraph,System.Double[],SharpNeat.NeuralNets.VecFn2{System.Double},System.Int32)
  name.vb: New(DirectedGraph, Double(), VecFn2(Of Double), Integer)
  fullName: SharpNeat.NeuralNets.Double.NeuralNetCyclic.NeuralNetCyclic(SharpNeat.Graphs.DirectedGraph, double[], SharpNeat.NeuralNets.VecFn2<double>, int)
  fullName.vb: SharpNeat.NeuralNets.Double.NeuralNetCyclic.New(SharpNeat.Graphs.DirectedGraph, Double(), SharpNeat.NeuralNets.VecFn2(Of Double), Integer)
  nameWithType: NeuralNetCyclic.NeuralNetCyclic(DirectedGraph, double[], VecFn2<double>, int)
  nameWithType.vb: NeuralNetCyclic.New(DirectedGraph, Double(), VecFn2(Of Double), Integer)
- uid: SharpNeat.NeuralNets.Double.NeuralNetCyclic.#ctor(SharpNeat.Graphs.WeightedDirectedGraph{System.Double},SharpNeat.NeuralNets.VecFn2{System.Double},System.Int32)
  name: NeuralNetCyclic(WeightedDirectedGraph<double>, VecFn2<double>, int)
  href: api/SharpNeat.NeuralNets.Double.NeuralNetCyclic.html#SharpNeat_NeuralNets_Double_NeuralNetCyclic__ctor_SharpNeat_Graphs_WeightedDirectedGraph_System_Double__SharpNeat_NeuralNets_VecFn2_System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.NeuralNetCyclic.#ctor(SharpNeat.Graphs.WeightedDirectedGraph{System.Double},SharpNeat.NeuralNets.VecFn2{System.Double},System.Int32)
  name.vb: New(WeightedDirectedGraph(Of Double), VecFn2(Of Double), Integer)
  fullName: SharpNeat.NeuralNets.Double.NeuralNetCyclic.NeuralNetCyclic(SharpNeat.Graphs.WeightedDirectedGraph<double>, SharpNeat.NeuralNets.VecFn2<double>, int)
  fullName.vb: SharpNeat.NeuralNets.Double.NeuralNetCyclic.New(SharpNeat.Graphs.WeightedDirectedGraph(Of Double), SharpNeat.NeuralNets.VecFn2(Of Double), Integer)
  nameWithType: NeuralNetCyclic.NeuralNetCyclic(WeightedDirectedGraph<double>, VecFn2<double>, int)
  nameWithType.vb: NeuralNetCyclic.New(WeightedDirectedGraph(Of Double), VecFn2(Of Double), Integer)
- uid: SharpNeat.NeuralNets.Double.NeuralNetCyclic.#ctor*
  name: NeuralNetCyclic
  href: api/SharpNeat.NeuralNets.Double.NeuralNetCyclic.html#SharpNeat_NeuralNets_Double_NeuralNetCyclic__ctor_
  commentId: Overload:SharpNeat.NeuralNets.Double.NeuralNetCyclic.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.NeuralNets.Double.NeuralNetCyclic.NeuralNetCyclic
  fullName.vb: SharpNeat.NeuralNets.Double.NeuralNetCyclic.New
  nameWithType: NeuralNetCyclic.NeuralNetCyclic
  nameWithType.vb: NeuralNetCyclic.New
- uid: SharpNeat.NeuralNets.Double.NeuralNetCyclic.Activate
  name: Activate()
  href: api/SharpNeat.NeuralNets.Double.NeuralNetCyclic.html#SharpNeat_NeuralNets_Double_NeuralNetCyclic_Activate
  commentId: M:SharpNeat.NeuralNets.Double.NeuralNetCyclic.Activate
  fullName: SharpNeat.NeuralNets.Double.NeuralNetCyclic.Activate()
  nameWithType: NeuralNetCyclic.Activate()
- uid: SharpNeat.NeuralNets.Double.NeuralNetCyclic.Activate*
  name: Activate
  href: api/SharpNeat.NeuralNets.Double.NeuralNetCyclic.html#SharpNeat_NeuralNets_Double_NeuralNetCyclic_Activate_
  commentId: Overload:SharpNeat.NeuralNets.Double.NeuralNetCyclic.Activate
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.NeuralNetCyclic.Activate
  nameWithType: NeuralNetCyclic.Activate
- uid: SharpNeat.NeuralNets.Double.NeuralNetCyclic.Dispose
  name: Dispose()
  href: api/SharpNeat.NeuralNets.Double.NeuralNetCyclic.html#SharpNeat_NeuralNets_Double_NeuralNetCyclic_Dispose
  commentId: M:SharpNeat.NeuralNets.Double.NeuralNetCyclic.Dispose
  fullName: SharpNeat.NeuralNets.Double.NeuralNetCyclic.Dispose()
  nameWithType: NeuralNetCyclic.Dispose()
- uid: SharpNeat.NeuralNets.Double.NeuralNetCyclic.Dispose*
  name: Dispose
  href: api/SharpNeat.NeuralNets.Double.NeuralNetCyclic.html#SharpNeat_NeuralNets_Double_NeuralNetCyclic_Dispose_
  commentId: Overload:SharpNeat.NeuralNets.Double.NeuralNetCyclic.Dispose
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.NeuralNetCyclic.Dispose
  nameWithType: NeuralNetCyclic.Dispose
- uid: SharpNeat.NeuralNets.Double.NeuralNetCyclic.Inputs
  name: Inputs
  href: api/SharpNeat.NeuralNets.Double.NeuralNetCyclic.html#SharpNeat_NeuralNets_Double_NeuralNetCyclic_Inputs
  commentId: P:SharpNeat.NeuralNets.Double.NeuralNetCyclic.Inputs
  fullName: SharpNeat.NeuralNets.Double.NeuralNetCyclic.Inputs
  nameWithType: NeuralNetCyclic.Inputs
- uid: SharpNeat.NeuralNets.Double.NeuralNetCyclic.Inputs*
  name: Inputs
  href: api/SharpNeat.NeuralNets.Double.NeuralNetCyclic.html#SharpNeat_NeuralNets_Double_NeuralNetCyclic_Inputs_
  commentId: Overload:SharpNeat.NeuralNets.Double.NeuralNetCyclic.Inputs
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.NeuralNetCyclic.Inputs
  nameWithType: NeuralNetCyclic.Inputs
- uid: SharpNeat.NeuralNets.Double.NeuralNetCyclic.Outputs
  name: Outputs
  href: api/SharpNeat.NeuralNets.Double.NeuralNetCyclic.html#SharpNeat_NeuralNets_Double_NeuralNetCyclic_Outputs
  commentId: P:SharpNeat.NeuralNets.Double.NeuralNetCyclic.Outputs
  fullName: SharpNeat.NeuralNets.Double.NeuralNetCyclic.Outputs
  nameWithType: NeuralNetCyclic.Outputs
- uid: SharpNeat.NeuralNets.Double.NeuralNetCyclic.Outputs*
  name: Outputs
  href: api/SharpNeat.NeuralNets.Double.NeuralNetCyclic.html#SharpNeat_NeuralNets_Double_NeuralNetCyclic_Outputs_
  commentId: Overload:SharpNeat.NeuralNets.Double.NeuralNetCyclic.Outputs
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.NeuralNetCyclic.Outputs
  nameWithType: NeuralNetCyclic.Outputs
- uid: SharpNeat.NeuralNets.Double.NeuralNetCyclic.Reset
  name: Reset()
  href: api/SharpNeat.NeuralNets.Double.NeuralNetCyclic.html#SharpNeat_NeuralNets_Double_NeuralNetCyclic_Reset
  commentId: M:SharpNeat.NeuralNets.Double.NeuralNetCyclic.Reset
  fullName: SharpNeat.NeuralNets.Double.NeuralNetCyclic.Reset()
  nameWithType: NeuralNetCyclic.Reset()
- uid: SharpNeat.NeuralNets.Double.NeuralNetCyclic.Reset*
  name: Reset
  href: api/SharpNeat.NeuralNets.Double.NeuralNetCyclic.html#SharpNeat_NeuralNets_Double_NeuralNetCyclic_Reset_
  commentId: Overload:SharpNeat.NeuralNets.Double.NeuralNetCyclic.Reset
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.NeuralNetCyclic.Reset
  nameWithType: NeuralNetCyclic.Reset
- uid: SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe
  name: NeuralNetCyclicSafe
  href: api/SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.html
  commentId: T:SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe
  fullName: SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe
  nameWithType: NeuralNetCyclicSafe
- uid: SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.#ctor(SharpNeat.Graphs.DirectedGraph,System.Double[],SharpNeat.NeuralNets.VecFn2{System.Double},System.Int32)
  name: NeuralNetCyclicSafe(DirectedGraph, double[], VecFn2<double>, int)
  href: api/SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.html#SharpNeat_NeuralNets_Double_NeuralNetCyclicSafe__ctor_SharpNeat_Graphs_DirectedGraph_System_Double___SharpNeat_NeuralNets_VecFn2_System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.#ctor(SharpNeat.Graphs.DirectedGraph,System.Double[],SharpNeat.NeuralNets.VecFn2{System.Double},System.Int32)
  name.vb: New(DirectedGraph, Double(), VecFn2(Of Double), Integer)
  fullName: SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.NeuralNetCyclicSafe(SharpNeat.Graphs.DirectedGraph, double[], SharpNeat.NeuralNets.VecFn2<double>, int)
  fullName.vb: SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.New(SharpNeat.Graphs.DirectedGraph, Double(), SharpNeat.NeuralNets.VecFn2(Of Double), Integer)
  nameWithType: NeuralNetCyclicSafe.NeuralNetCyclicSafe(DirectedGraph, double[], VecFn2<double>, int)
  nameWithType.vb: NeuralNetCyclicSafe.New(DirectedGraph, Double(), VecFn2(Of Double), Integer)
- uid: SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.#ctor(SharpNeat.Graphs.WeightedDirectedGraph{System.Double},SharpNeat.NeuralNets.VecFn2{System.Double},System.Int32)
  name: NeuralNetCyclicSafe(WeightedDirectedGraph<double>, VecFn2<double>, int)
  href: api/SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.html#SharpNeat_NeuralNets_Double_NeuralNetCyclicSafe__ctor_SharpNeat_Graphs_WeightedDirectedGraph_System_Double__SharpNeat_NeuralNets_VecFn2_System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.#ctor(SharpNeat.Graphs.WeightedDirectedGraph{System.Double},SharpNeat.NeuralNets.VecFn2{System.Double},System.Int32)
  name.vb: New(WeightedDirectedGraph(Of Double), VecFn2(Of Double), Integer)
  fullName: SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.NeuralNetCyclicSafe(SharpNeat.Graphs.WeightedDirectedGraph<double>, SharpNeat.NeuralNets.VecFn2<double>, int)
  fullName.vb: SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.New(SharpNeat.Graphs.WeightedDirectedGraph(Of Double), SharpNeat.NeuralNets.VecFn2(Of Double), Integer)
  nameWithType: NeuralNetCyclicSafe.NeuralNetCyclicSafe(WeightedDirectedGraph<double>, VecFn2<double>, int)
  nameWithType.vb: NeuralNetCyclicSafe.New(WeightedDirectedGraph(Of Double), VecFn2(Of Double), Integer)
- uid: SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.#ctor*
  name: NeuralNetCyclicSafe
  href: api/SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.html#SharpNeat_NeuralNets_Double_NeuralNetCyclicSafe__ctor_
  commentId: Overload:SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.NeuralNetCyclicSafe
  fullName.vb: SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.New
  nameWithType: NeuralNetCyclicSafe.NeuralNetCyclicSafe
  nameWithType.vb: NeuralNetCyclicSafe.New
- uid: SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.Activate
  name: Activate()
  href: api/SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.html#SharpNeat_NeuralNets_Double_NeuralNetCyclicSafe_Activate
  commentId: M:SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.Activate
  fullName: SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.Activate()
  nameWithType: NeuralNetCyclicSafe.Activate()
- uid: SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.Activate*
  name: Activate
  href: api/SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.html#SharpNeat_NeuralNets_Double_NeuralNetCyclicSafe_Activate_
  commentId: Overload:SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.Activate
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.Activate
  nameWithType: NeuralNetCyclicSafe.Activate
- uid: SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.Dispose
  name: Dispose()
  href: api/SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.html#SharpNeat_NeuralNets_Double_NeuralNetCyclicSafe_Dispose
  commentId: M:SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.Dispose
  fullName: SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.Dispose()
  nameWithType: NeuralNetCyclicSafe.Dispose()
- uid: SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.Dispose*
  name: Dispose
  href: api/SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.html#SharpNeat_NeuralNets_Double_NeuralNetCyclicSafe_Dispose_
  commentId: Overload:SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.Dispose
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.Dispose
  nameWithType: NeuralNetCyclicSafe.Dispose
- uid: SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.Inputs
  name: Inputs
  href: api/SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.html#SharpNeat_NeuralNets_Double_NeuralNetCyclicSafe_Inputs
  commentId: P:SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.Inputs
  fullName: SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.Inputs
  nameWithType: NeuralNetCyclicSafe.Inputs
- uid: SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.Inputs*
  name: Inputs
  href: api/SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.html#SharpNeat_NeuralNets_Double_NeuralNetCyclicSafe_Inputs_
  commentId: Overload:SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.Inputs
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.Inputs
  nameWithType: NeuralNetCyclicSafe.Inputs
- uid: SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.Outputs
  name: Outputs
  href: api/SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.html#SharpNeat_NeuralNets_Double_NeuralNetCyclicSafe_Outputs
  commentId: P:SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.Outputs
  fullName: SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.Outputs
  nameWithType: NeuralNetCyclicSafe.Outputs
- uid: SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.Outputs*
  name: Outputs
  href: api/SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.html#SharpNeat_NeuralNets_Double_NeuralNetCyclicSafe_Outputs_
  commentId: Overload:SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.Outputs
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.Outputs
  nameWithType: NeuralNetCyclicSafe.Outputs
- uid: SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.Reset
  name: Reset()
  href: api/SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.html#SharpNeat_NeuralNets_Double_NeuralNetCyclicSafe_Reset
  commentId: M:SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.Reset
  fullName: SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.Reset()
  nameWithType: NeuralNetCyclicSafe.Reset()
- uid: SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.Reset*
  name: Reset
  href: api/SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.html#SharpNeat_NeuralNets_Double_NeuralNetCyclicSafe_Reset_
  commentId: Overload:SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.Reset
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.NeuralNetCyclicSafe.Reset
  nameWithType: NeuralNetCyclicSafe.Reset
- uid: SharpNeat.NeuralNets.Double.NeuralNetCyclicTests
  name: NeuralNetCyclicTests
  href: api/SharpNeat.NeuralNets.Double.NeuralNetCyclicTests.html
  commentId: T:SharpNeat.NeuralNets.Double.NeuralNetCyclicTests
  fullName: SharpNeat.NeuralNets.Double.NeuralNetCyclicTests
  nameWithType: NeuralNetCyclicTests
- uid: SharpNeat.NeuralNets.Double.NeuralNetCyclicTests.ComplexCyclic
  name: ComplexCyclic()
  href: api/SharpNeat.NeuralNets.Double.NeuralNetCyclicTests.html#SharpNeat_NeuralNets_Double_NeuralNetCyclicTests_ComplexCyclic
  commentId: M:SharpNeat.NeuralNets.Double.NeuralNetCyclicTests.ComplexCyclic
  fullName: SharpNeat.NeuralNets.Double.NeuralNetCyclicTests.ComplexCyclic()
  nameWithType: NeuralNetCyclicTests.ComplexCyclic()
- uid: SharpNeat.NeuralNets.Double.NeuralNetCyclicTests.ComplexCyclic*
  name: ComplexCyclic
  href: api/SharpNeat.NeuralNets.Double.NeuralNetCyclicTests.html#SharpNeat_NeuralNets_Double_NeuralNetCyclicTests_ComplexCyclic_
  commentId: Overload:SharpNeat.NeuralNets.Double.NeuralNetCyclicTests.ComplexCyclic
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.NeuralNetCyclicTests.ComplexCyclic
  nameWithType: NeuralNetCyclicTests.ComplexCyclic
- uid: SharpNeat.NeuralNets.Double.NeuralNetCyclicTests.CyclicOutput
  name: CyclicOutput()
  href: api/SharpNeat.NeuralNets.Double.NeuralNetCyclicTests.html#SharpNeat_NeuralNets_Double_NeuralNetCyclicTests_CyclicOutput
  commentId: M:SharpNeat.NeuralNets.Double.NeuralNetCyclicTests.CyclicOutput
  fullName: SharpNeat.NeuralNets.Double.NeuralNetCyclicTests.CyclicOutput()
  nameWithType: NeuralNetCyclicTests.CyclicOutput()
- uid: SharpNeat.NeuralNets.Double.NeuralNetCyclicTests.CyclicOutput*
  name: CyclicOutput
  href: api/SharpNeat.NeuralNets.Double.NeuralNetCyclicTests.html#SharpNeat_NeuralNets_Double_NeuralNetCyclicTests_CyclicOutput_
  commentId: Overload:SharpNeat.NeuralNets.Double.NeuralNetCyclicTests.CyclicOutput
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.NeuralNetCyclicTests.CyclicOutput
  nameWithType: NeuralNetCyclicTests.CyclicOutput
- uid: SharpNeat.NeuralNets.Double.NeuralNetCyclicTests.MultipleInputsOutputs
  name: MultipleInputsOutputs()
  href: api/SharpNeat.NeuralNets.Double.NeuralNetCyclicTests.html#SharpNeat_NeuralNets_Double_NeuralNetCyclicTests_MultipleInputsOutputs
  commentId: M:SharpNeat.NeuralNets.Double.NeuralNetCyclicTests.MultipleInputsOutputs
  fullName: SharpNeat.NeuralNets.Double.NeuralNetCyclicTests.MultipleInputsOutputs()
  nameWithType: NeuralNetCyclicTests.MultipleInputsOutputs()
- uid: SharpNeat.NeuralNets.Double.NeuralNetCyclicTests.MultipleInputsOutputs*
  name: MultipleInputsOutputs
  href: api/SharpNeat.NeuralNets.Double.NeuralNetCyclicTests.html#SharpNeat_NeuralNets_Double_NeuralNetCyclicTests_MultipleInputsOutputs_
  commentId: Overload:SharpNeat.NeuralNets.Double.NeuralNetCyclicTests.MultipleInputsOutputs
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.NeuralNetCyclicTests.MultipleInputsOutputs
  nameWithType: NeuralNetCyclicTests.MultipleInputsOutputs
- uid: SharpNeat.NeuralNets.Double.NeuralNetCyclicTests.SingleInput_WeightOne
  name: SingleInput_WeightOne()
  href: api/SharpNeat.NeuralNets.Double.NeuralNetCyclicTests.html#SharpNeat_NeuralNets_Double_NeuralNetCyclicTests_SingleInput_WeightOne
  commentId: M:SharpNeat.NeuralNets.Double.NeuralNetCyclicTests.SingleInput_WeightOne
  fullName: SharpNeat.NeuralNets.Double.NeuralNetCyclicTests.SingleInput_WeightOne()
  nameWithType: NeuralNetCyclicTests.SingleInput_WeightOne()
- uid: SharpNeat.NeuralNets.Double.NeuralNetCyclicTests.SingleInput_WeightOne*
  name: SingleInput_WeightOne
  href: api/SharpNeat.NeuralNets.Double.NeuralNetCyclicTests.html#SharpNeat_NeuralNets_Double_NeuralNetCyclicTests_SingleInput_WeightOne_
  commentId: Overload:SharpNeat.NeuralNets.Double.NeuralNetCyclicTests.SingleInput_WeightOne
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.NeuralNetCyclicTests.SingleInput_WeightOne
  nameWithType: NeuralNetCyclicTests.SingleInput_WeightOne
- uid: SharpNeat.NeuralNets.Double.NeuralNetCyclicTests.SingleInput_WeightZero
  name: SingleInput_WeightZero()
  href: api/SharpNeat.NeuralNets.Double.NeuralNetCyclicTests.html#SharpNeat_NeuralNets_Double_NeuralNetCyclicTests_SingleInput_WeightZero
  commentId: M:SharpNeat.NeuralNets.Double.NeuralNetCyclicTests.SingleInput_WeightZero
  fullName: SharpNeat.NeuralNets.Double.NeuralNetCyclicTests.SingleInput_WeightZero()
  nameWithType: NeuralNetCyclicTests.SingleInput_WeightZero()
- uid: SharpNeat.NeuralNets.Double.NeuralNetCyclicTests.SingleInput_WeightZero*
  name: SingleInput_WeightZero
  href: api/SharpNeat.NeuralNets.Double.NeuralNetCyclicTests.html#SharpNeat_NeuralNets_Double_NeuralNetCyclicTests_SingleInput_WeightZero_
  commentId: Overload:SharpNeat.NeuralNets.Double.NeuralNetCyclicTests.SingleInput_WeightZero
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.NeuralNetCyclicTests.SingleInput_WeightZero
  nameWithType: NeuralNetCyclicTests.SingleInput_WeightZero
- uid: SharpNeat.NeuralNets.Double.Vectorized
  name: SharpNeat.NeuralNets.Double.Vectorized
  href: api/SharpNeat.NeuralNets.Double.Vectorized.html
  commentId: N:SharpNeat.NeuralNets.Double.Vectorized
  fullName: SharpNeat.NeuralNets.Double.Vectorized
  nameWithType: SharpNeat.NeuralNets.Double.Vectorized
- uid: SharpNeat.NeuralNets.Double.Vectorized.Benchmarks
  name: SharpNeat.NeuralNets.Double.Vectorized.Benchmarks
  href: api/SharpNeat.NeuralNets.Double.Vectorized.Benchmarks.html
  commentId: N:SharpNeat.NeuralNets.Double.Vectorized.Benchmarks
  fullName: SharpNeat.NeuralNets.Double.Vectorized.Benchmarks
  nameWithType: SharpNeat.NeuralNets.Double.Vectorized.Benchmarks
- uid: SharpNeat.NeuralNets.Double.Vectorized.Benchmarks.NeuralNetAcyclicBenchmarks
  name: NeuralNetAcyclicBenchmarks
  href: api/SharpNeat.NeuralNets.Double.Vectorized.Benchmarks.NeuralNetAcyclicBenchmarks.html
  commentId: T:SharpNeat.NeuralNets.Double.Vectorized.Benchmarks.NeuralNetAcyclicBenchmarks
  fullName: SharpNeat.NeuralNets.Double.Vectorized.Benchmarks.NeuralNetAcyclicBenchmarks
  nameWithType: NeuralNetAcyclicBenchmarks
- uid: SharpNeat.NeuralNets.Double.Vectorized.Benchmarks.NeuralNetAcyclicBenchmarks.Activate
  name: Activate()
  href: api/SharpNeat.NeuralNets.Double.Vectorized.Benchmarks.NeuralNetAcyclicBenchmarks.html#SharpNeat_NeuralNets_Double_Vectorized_Benchmarks_NeuralNetAcyclicBenchmarks_Activate
  commentId: M:SharpNeat.NeuralNets.Double.Vectorized.Benchmarks.NeuralNetAcyclicBenchmarks.Activate
  fullName: SharpNeat.NeuralNets.Double.Vectorized.Benchmarks.NeuralNetAcyclicBenchmarks.Activate()
  nameWithType: NeuralNetAcyclicBenchmarks.Activate()
- uid: SharpNeat.NeuralNets.Double.Vectorized.Benchmarks.NeuralNetAcyclicBenchmarks.Activate*
  name: Activate
  href: api/SharpNeat.NeuralNets.Double.Vectorized.Benchmarks.NeuralNetAcyclicBenchmarks.html#SharpNeat_NeuralNets_Double_Vectorized_Benchmarks_NeuralNetAcyclicBenchmarks_Activate_
  commentId: Overload:SharpNeat.NeuralNets.Double.Vectorized.Benchmarks.NeuralNetAcyclicBenchmarks.Activate
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.Vectorized.Benchmarks.NeuralNetAcyclicBenchmarks.Activate
  nameWithType: NeuralNetAcyclicBenchmarks.Activate
- uid: SharpNeat.NeuralNets.Double.Vectorized.Benchmarks.NeuralNetCyclicBenchmarks
  name: NeuralNetCyclicBenchmarks
  href: api/SharpNeat.NeuralNets.Double.Vectorized.Benchmarks.NeuralNetCyclicBenchmarks.html
  commentId: T:SharpNeat.NeuralNets.Double.Vectorized.Benchmarks.NeuralNetCyclicBenchmarks
  fullName: SharpNeat.NeuralNets.Double.Vectorized.Benchmarks.NeuralNetCyclicBenchmarks
  nameWithType: NeuralNetCyclicBenchmarks
- uid: SharpNeat.NeuralNets.Double.Vectorized.Benchmarks.NeuralNetCyclicBenchmarks.Activate
  name: Activate()
  href: api/SharpNeat.NeuralNets.Double.Vectorized.Benchmarks.NeuralNetCyclicBenchmarks.html#SharpNeat_NeuralNets_Double_Vectorized_Benchmarks_NeuralNetCyclicBenchmarks_Activate
  commentId: M:SharpNeat.NeuralNets.Double.Vectorized.Benchmarks.NeuralNetCyclicBenchmarks.Activate
  fullName: SharpNeat.NeuralNets.Double.Vectorized.Benchmarks.NeuralNetCyclicBenchmarks.Activate()
  nameWithType: NeuralNetCyclicBenchmarks.Activate()
- uid: SharpNeat.NeuralNets.Double.Vectorized.Benchmarks.NeuralNetCyclicBenchmarks.Activate*
  name: Activate
  href: api/SharpNeat.NeuralNets.Double.Vectorized.Benchmarks.NeuralNetCyclicBenchmarks.html#SharpNeat_NeuralNets_Double_Vectorized_Benchmarks_NeuralNetCyclicBenchmarks_Activate_
  commentId: Overload:SharpNeat.NeuralNets.Double.Vectorized.Benchmarks.NeuralNetCyclicBenchmarks.Activate
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.Vectorized.Benchmarks.NeuralNetCyclicBenchmarks.Activate
  nameWithType: NeuralNetCyclicBenchmarks.Activate
- uid: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic
  name: NeuralNetAcyclic
  href: api/SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.html
  commentId: T:SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic
  fullName: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic
  nameWithType: NeuralNetAcyclic
- uid: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.#ctor(SharpNeat.Graphs.Acyclic.DirectedGraphAcyclic,System.Double[],SharpNeat.NeuralNets.VecFn{System.Double})
  name: NeuralNetAcyclic(DirectedGraphAcyclic, double[], VecFn<double>)
  href: api/SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.html#SharpNeat_NeuralNets_Double_Vectorized_NeuralNetAcyclic__ctor_SharpNeat_Graphs_Acyclic_DirectedGraphAcyclic_System_Double___SharpNeat_NeuralNets_VecFn_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.#ctor(SharpNeat.Graphs.Acyclic.DirectedGraphAcyclic,System.Double[],SharpNeat.NeuralNets.VecFn{System.Double})
  name.vb: New(DirectedGraphAcyclic, Double(), VecFn(Of Double))
  fullName: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.NeuralNetAcyclic(SharpNeat.Graphs.Acyclic.DirectedGraphAcyclic, double[], SharpNeat.NeuralNets.VecFn<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.New(SharpNeat.Graphs.Acyclic.DirectedGraphAcyclic, Double(), SharpNeat.NeuralNets.VecFn(Of Double))
  nameWithType: NeuralNetAcyclic.NeuralNetAcyclic(DirectedGraphAcyclic, double[], VecFn<double>)
  nameWithType.vb: NeuralNetAcyclic.New(DirectedGraphAcyclic, Double(), VecFn(Of Double))
- uid: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.#ctor(SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclic{System.Double},SharpNeat.NeuralNets.VecFn{System.Double})
  name: NeuralNetAcyclic(WeightedDirectedGraphAcyclic<double>, VecFn<double>)
  href: api/SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.html#SharpNeat_NeuralNets_Double_Vectorized_NeuralNetAcyclic__ctor_SharpNeat_Graphs_Acyclic_WeightedDirectedGraphAcyclic_System_Double__SharpNeat_NeuralNets_VecFn_System_Double__
  commentId: M:SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.#ctor(SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclic{System.Double},SharpNeat.NeuralNets.VecFn{System.Double})
  name.vb: New(WeightedDirectedGraphAcyclic(Of Double), VecFn(Of Double))
  fullName: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.NeuralNetAcyclic(SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclic<double>, SharpNeat.NeuralNets.VecFn<double>)
  fullName.vb: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.New(SharpNeat.Graphs.Acyclic.WeightedDirectedGraphAcyclic(Of Double), SharpNeat.NeuralNets.VecFn(Of Double))
  nameWithType: NeuralNetAcyclic.NeuralNetAcyclic(WeightedDirectedGraphAcyclic<double>, VecFn<double>)
  nameWithType.vb: NeuralNetAcyclic.New(WeightedDirectedGraphAcyclic(Of Double), VecFn(Of Double))
- uid: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.#ctor*
  name: NeuralNetAcyclic
  href: api/SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.html#SharpNeat_NeuralNets_Double_Vectorized_NeuralNetAcyclic__ctor_
  commentId: Overload:SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.NeuralNetAcyclic
  fullName.vb: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.New
  nameWithType: NeuralNetAcyclic.NeuralNetAcyclic
  nameWithType.vb: NeuralNetAcyclic.New
- uid: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.Activate
  name: Activate()
  href: api/SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.html#SharpNeat_NeuralNets_Double_Vectorized_NeuralNetAcyclic_Activate
  commentId: M:SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.Activate
  fullName: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.Activate()
  nameWithType: NeuralNetAcyclic.Activate()
- uid: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.Activate*
  name: Activate
  href: api/SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.html#SharpNeat_NeuralNets_Double_Vectorized_NeuralNetAcyclic_Activate_
  commentId: Overload:SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.Activate
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.Activate
  nameWithType: NeuralNetAcyclic.Activate
- uid: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.Dispose
  name: Dispose()
  href: api/SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.html#SharpNeat_NeuralNets_Double_Vectorized_NeuralNetAcyclic_Dispose
  commentId: M:SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.Dispose
  fullName: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.Dispose()
  nameWithType: NeuralNetAcyclic.Dispose()
- uid: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.Dispose*
  name: Dispose
  href: api/SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.html#SharpNeat_NeuralNets_Double_Vectorized_NeuralNetAcyclic_Dispose_
  commentId: Overload:SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.Dispose
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.Dispose
  nameWithType: NeuralNetAcyclic.Dispose
- uid: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.Inputs
  name: Inputs
  href: api/SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.html#SharpNeat_NeuralNets_Double_Vectorized_NeuralNetAcyclic_Inputs
  commentId: P:SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.Inputs
  fullName: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.Inputs
  nameWithType: NeuralNetAcyclic.Inputs
- uid: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.Inputs*
  name: Inputs
  href: api/SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.html#SharpNeat_NeuralNets_Double_Vectorized_NeuralNetAcyclic_Inputs_
  commentId: Overload:SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.Inputs
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.Inputs
  nameWithType: NeuralNetAcyclic.Inputs
- uid: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.Outputs
  name: Outputs
  href: api/SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.html#SharpNeat_NeuralNets_Double_Vectorized_NeuralNetAcyclic_Outputs
  commentId: P:SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.Outputs
  fullName: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.Outputs
  nameWithType: NeuralNetAcyclic.Outputs
- uid: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.Outputs*
  name: Outputs
  href: api/SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.html#SharpNeat_NeuralNets_Double_Vectorized_NeuralNetAcyclic_Outputs_
  commentId: Overload:SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.Outputs
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.Outputs
  nameWithType: NeuralNetAcyclic.Outputs
- uid: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.Reset
  name: Reset()
  href: api/SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.html#SharpNeat_NeuralNets_Double_Vectorized_NeuralNetAcyclic_Reset
  commentId: M:SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.Reset
  fullName: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.Reset()
  nameWithType: NeuralNetAcyclic.Reset()
- uid: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.Reset*
  name: Reset
  href: api/SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.html#SharpNeat_NeuralNets_Double_Vectorized_NeuralNetAcyclic_Reset_
  commentId: Overload:SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.Reset
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetAcyclic.Reset
  nameWithType: NeuralNetAcyclic.Reset
- uid: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic
  name: NeuralNetCyclic
  href: api/SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.html
  commentId: T:SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic
  fullName: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic
  nameWithType: NeuralNetCyclic
- uid: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.#ctor(SharpNeat.Graphs.DirectedGraph,System.Double[],SharpNeat.NeuralNets.VecFn2{System.Double},System.Int32)
  name: NeuralNetCyclic(DirectedGraph, double[], VecFn2<double>, int)
  href: api/SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.html#SharpNeat_NeuralNets_Double_Vectorized_NeuralNetCyclic__ctor_SharpNeat_Graphs_DirectedGraph_System_Double___SharpNeat_NeuralNets_VecFn2_System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.#ctor(SharpNeat.Graphs.DirectedGraph,System.Double[],SharpNeat.NeuralNets.VecFn2{System.Double},System.Int32)
  name.vb: New(DirectedGraph, Double(), VecFn2(Of Double), Integer)
  fullName: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.NeuralNetCyclic(SharpNeat.Graphs.DirectedGraph, double[], SharpNeat.NeuralNets.VecFn2<double>, int)
  fullName.vb: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.New(SharpNeat.Graphs.DirectedGraph, Double(), SharpNeat.NeuralNets.VecFn2(Of Double), Integer)
  nameWithType: NeuralNetCyclic.NeuralNetCyclic(DirectedGraph, double[], VecFn2<double>, int)
  nameWithType.vb: NeuralNetCyclic.New(DirectedGraph, Double(), VecFn2(Of Double), Integer)
- uid: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.#ctor(SharpNeat.Graphs.WeightedDirectedGraph{System.Double},SharpNeat.NeuralNets.VecFn2{System.Double},System.Int32)
  name: NeuralNetCyclic(WeightedDirectedGraph<double>, VecFn2<double>, int)
  href: api/SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.html#SharpNeat_NeuralNets_Double_Vectorized_NeuralNetCyclic__ctor_SharpNeat_Graphs_WeightedDirectedGraph_System_Double__SharpNeat_NeuralNets_VecFn2_System_Double__System_Int32_
  commentId: M:SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.#ctor(SharpNeat.Graphs.WeightedDirectedGraph{System.Double},SharpNeat.NeuralNets.VecFn2{System.Double},System.Int32)
  name.vb: New(WeightedDirectedGraph(Of Double), VecFn2(Of Double), Integer)
  fullName: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.NeuralNetCyclic(SharpNeat.Graphs.WeightedDirectedGraph<double>, SharpNeat.NeuralNets.VecFn2<double>, int)
  fullName.vb: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.New(SharpNeat.Graphs.WeightedDirectedGraph(Of Double), SharpNeat.NeuralNets.VecFn2(Of Double), Integer)
  nameWithType: NeuralNetCyclic.NeuralNetCyclic(WeightedDirectedGraph<double>, VecFn2<double>, int)
  nameWithType.vb: NeuralNetCyclic.New(WeightedDirectedGraph(Of Double), VecFn2(Of Double), Integer)
- uid: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.#ctor*
  name: NeuralNetCyclic
  href: api/SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.html#SharpNeat_NeuralNets_Double_Vectorized_NeuralNetCyclic__ctor_
  commentId: Overload:SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.NeuralNetCyclic
  fullName.vb: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.New
  nameWithType: NeuralNetCyclic.NeuralNetCyclic
  nameWithType.vb: NeuralNetCyclic.New
- uid: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.Activate
  name: Activate()
  href: api/SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.html#SharpNeat_NeuralNets_Double_Vectorized_NeuralNetCyclic_Activate
  commentId: M:SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.Activate
  fullName: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.Activate()
  nameWithType: NeuralNetCyclic.Activate()
- uid: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.Activate*
  name: Activate
  href: api/SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.html#SharpNeat_NeuralNets_Double_Vectorized_NeuralNetCyclic_Activate_
  commentId: Overload:SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.Activate
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.Activate
  nameWithType: NeuralNetCyclic.Activate
- uid: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.Dispose
  name: Dispose()
  href: api/SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.html#SharpNeat_NeuralNets_Double_Vectorized_NeuralNetCyclic_Dispose
  commentId: M:SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.Dispose
  fullName: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.Dispose()
  nameWithType: NeuralNetCyclic.Dispose()
- uid: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.Dispose*
  name: Dispose
  href: api/SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.html#SharpNeat_NeuralNets_Double_Vectorized_NeuralNetCyclic_Dispose_
  commentId: Overload:SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.Dispose
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.Dispose
  nameWithType: NeuralNetCyclic.Dispose
- uid: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.Inputs
  name: Inputs
  href: api/SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.html#SharpNeat_NeuralNets_Double_Vectorized_NeuralNetCyclic_Inputs
  commentId: P:SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.Inputs
  fullName: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.Inputs
  nameWithType: NeuralNetCyclic.Inputs
- uid: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.Inputs*
  name: Inputs
  href: api/SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.html#SharpNeat_NeuralNets_Double_Vectorized_NeuralNetCyclic_Inputs_
  commentId: Overload:SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.Inputs
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.Inputs
  nameWithType: NeuralNetCyclic.Inputs
- uid: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.Outputs
  name: Outputs
  href: api/SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.html#SharpNeat_NeuralNets_Double_Vectorized_NeuralNetCyclic_Outputs
  commentId: P:SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.Outputs
  fullName: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.Outputs
  nameWithType: NeuralNetCyclic.Outputs
- uid: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.Outputs*
  name: Outputs
  href: api/SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.html#SharpNeat_NeuralNets_Double_Vectorized_NeuralNetCyclic_Outputs_
  commentId: Overload:SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.Outputs
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.Outputs
  nameWithType: NeuralNetCyclic.Outputs
- uid: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.Reset
  name: Reset()
  href: api/SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.html#SharpNeat_NeuralNets_Double_Vectorized_NeuralNetCyclic_Reset
  commentId: M:SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.Reset
  fullName: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.Reset()
  nameWithType: NeuralNetCyclic.Reset()
- uid: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.Reset*
  name: Reset
  href: api/SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.html#SharpNeat_NeuralNets_Double_Vectorized_NeuralNetCyclic_Reset_
  commentId: Overload:SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.Reset
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.Double.Vectorized.NeuralNetCyclic.Reset
  nameWithType: NeuralNetCyclic.Reset
- uid: SharpNeat.NeuralNets.IActivationFunction`1
  name: IActivationFunction<T>
  href: api/SharpNeat.NeuralNets.IActivationFunction-1.html
  commentId: T:SharpNeat.NeuralNets.IActivationFunction`1
  name.vb: IActivationFunction(Of T)
  fullName: SharpNeat.NeuralNets.IActivationFunction<T>
  fullName.vb: SharpNeat.NeuralNets.IActivationFunction(Of T)
  nameWithType: IActivationFunction<T>
  nameWithType.vb: IActivationFunction(Of T)
- uid: SharpNeat.NeuralNets.IActivationFunction`1.Fn(`0@,`0@,System.Int32)
  name: Fn(ref T, ref T, int)
  href: api/SharpNeat.NeuralNets.IActivationFunction-1.html#SharpNeat_NeuralNets_IActivationFunction_1_Fn__0___0__System_Int32_
  commentId: M:SharpNeat.NeuralNets.IActivationFunction`1.Fn(`0@,`0@,System.Int32)
  name.vb: Fn(T, T, Integer)
  fullName: SharpNeat.NeuralNets.IActivationFunction<T>.Fn(ref T, ref T, int)
  fullName.vb: SharpNeat.NeuralNets.IActivationFunction(Of T).Fn(T, T, Integer)
  nameWithType: IActivationFunction<T>.Fn(ref T, ref T, int)
  nameWithType.vb: IActivationFunction(Of T).Fn(T, T, Integer)
- uid: SharpNeat.NeuralNets.IActivationFunction`1.Fn(`0@,`0@)
  name: Fn(ref T, ref T)
  href: api/SharpNeat.NeuralNets.IActivationFunction-1.html#SharpNeat_NeuralNets_IActivationFunction_1_Fn__0___0__
  commentId: M:SharpNeat.NeuralNets.IActivationFunction`1.Fn(`0@,`0@)
  name.vb: Fn(T, T)
  fullName: SharpNeat.NeuralNets.IActivationFunction<T>.Fn(ref T, ref T)
  fullName.vb: SharpNeat.NeuralNets.IActivationFunction(Of T).Fn(T, T)
  nameWithType: IActivationFunction<T>.Fn(ref T, ref T)
  nameWithType.vb: IActivationFunction(Of T).Fn(T, T)
- uid: SharpNeat.NeuralNets.IActivationFunction`1.Fn(`0@,System.Int32)
  name: Fn(ref T, int)
  href: api/SharpNeat.NeuralNets.IActivationFunction-1.html#SharpNeat_NeuralNets_IActivationFunction_1_Fn__0__System_Int32_
  commentId: M:SharpNeat.NeuralNets.IActivationFunction`1.Fn(`0@,System.Int32)
  name.vb: Fn(T, Integer)
  fullName: SharpNeat.NeuralNets.IActivationFunction<T>.Fn(ref T, int)
  fullName.vb: SharpNeat.NeuralNets.IActivationFunction(Of T).Fn(T, Integer)
  nameWithType: IActivationFunction<T>.Fn(ref T, int)
  nameWithType.vb: IActivationFunction(Of T).Fn(T, Integer)
- uid: SharpNeat.NeuralNets.IActivationFunction`1.Fn(`0@)
  name: Fn(ref T)
  href: api/SharpNeat.NeuralNets.IActivationFunction-1.html#SharpNeat_NeuralNets_IActivationFunction_1_Fn__0__
  commentId: M:SharpNeat.NeuralNets.IActivationFunction`1.Fn(`0@)
  name.vb: Fn(T)
  fullName: SharpNeat.NeuralNets.IActivationFunction<T>.Fn(ref T)
  fullName.vb: SharpNeat.NeuralNets.IActivationFunction(Of T).Fn(T)
  nameWithType: IActivationFunction<T>.Fn(ref T)
  nameWithType.vb: IActivationFunction(Of T).Fn(T)
- uid: SharpNeat.NeuralNets.IActivationFunction`1.Fn(System.ReadOnlySpan{`0},System.Span{`0})
  name: Fn(ReadOnlySpan<T>, Span<T>)
  href: api/SharpNeat.NeuralNets.IActivationFunction-1.html#SharpNeat_NeuralNets_IActivationFunction_1_Fn_System_ReadOnlySpan__0__System_Span__0__
  commentId: M:SharpNeat.NeuralNets.IActivationFunction`1.Fn(System.ReadOnlySpan{`0},System.Span{`0})
  name.vb: Fn(ReadOnlySpan(Of T), Span(Of T))
  fullName: SharpNeat.NeuralNets.IActivationFunction<T>.Fn(System.ReadOnlySpan<T>, System.Span<T>)
  fullName.vb: SharpNeat.NeuralNets.IActivationFunction(Of T).Fn(System.ReadOnlySpan(Of T), System.Span(Of T))
  nameWithType: IActivationFunction<T>.Fn(ReadOnlySpan<T>, Span<T>)
  nameWithType.vb: IActivationFunction(Of T).Fn(ReadOnlySpan(Of T), Span(Of T))
- uid: SharpNeat.NeuralNets.IActivationFunction`1.Fn(System.Span{`0})
  name: Fn(Span<T>)
  href: api/SharpNeat.NeuralNets.IActivationFunction-1.html#SharpNeat_NeuralNets_IActivationFunction_1_Fn_System_Span__0__
  commentId: M:SharpNeat.NeuralNets.IActivationFunction`1.Fn(System.Span{`0})
  name.vb: Fn(Span(Of T))
  fullName: SharpNeat.NeuralNets.IActivationFunction<T>.Fn(System.Span<T>)
  fullName.vb: SharpNeat.NeuralNets.IActivationFunction(Of T).Fn(System.Span(Of T))
  nameWithType: IActivationFunction<T>.Fn(Span<T>)
  nameWithType.vb: IActivationFunction(Of T).Fn(Span(Of T))
- uid: SharpNeat.NeuralNets.IActivationFunction`1.Fn*
  name: Fn
  href: api/SharpNeat.NeuralNets.IActivationFunction-1.html#SharpNeat_NeuralNets_IActivationFunction_1_Fn_
  commentId: Overload:SharpNeat.NeuralNets.IActivationFunction`1.Fn
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.IActivationFunction<T>.Fn
  fullName.vb: SharpNeat.NeuralNets.IActivationFunction(Of T).Fn
  nameWithType: IActivationFunction<T>.Fn
  nameWithType.vb: IActivationFunction(Of T).Fn
- uid: SharpNeat.NeuralNets.IActivationFunctionFactory`1
  name: IActivationFunctionFactory<T>
  href: api/SharpNeat.NeuralNets.IActivationFunctionFactory-1.html
  commentId: T:SharpNeat.NeuralNets.IActivationFunctionFactory`1
  name.vb: IActivationFunctionFactory(Of T)
  fullName: SharpNeat.NeuralNets.IActivationFunctionFactory<T>
  fullName.vb: SharpNeat.NeuralNets.IActivationFunctionFactory(Of T)
  nameWithType: IActivationFunctionFactory<T>
  nameWithType.vb: IActivationFunctionFactory(Of T)
- uid: SharpNeat.NeuralNets.IActivationFunctionFactory`1.GetActivationFunction(System.String)
  name: GetActivationFunction(string)
  href: api/SharpNeat.NeuralNets.IActivationFunctionFactory-1.html#SharpNeat_NeuralNets_IActivationFunctionFactory_1_GetActivationFunction_System_String_
  commentId: M:SharpNeat.NeuralNets.IActivationFunctionFactory`1.GetActivationFunction(System.String)
  name.vb: GetActivationFunction(String)
  fullName: SharpNeat.NeuralNets.IActivationFunctionFactory<T>.GetActivationFunction(string)
  fullName.vb: SharpNeat.NeuralNets.IActivationFunctionFactory(Of T).GetActivationFunction(String)
  nameWithType: IActivationFunctionFactory<T>.GetActivationFunction(string)
  nameWithType.vb: IActivationFunctionFactory(Of T).GetActivationFunction(String)
- uid: SharpNeat.NeuralNets.IActivationFunctionFactory`1.GetActivationFunction*
  name: GetActivationFunction
  href: api/SharpNeat.NeuralNets.IActivationFunctionFactory-1.html#SharpNeat_NeuralNets_IActivationFunctionFactory_1_GetActivationFunction_
  commentId: Overload:SharpNeat.NeuralNets.IActivationFunctionFactory`1.GetActivationFunction
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.IActivationFunctionFactory<T>.GetActivationFunction
  fullName.vb: SharpNeat.NeuralNets.IActivationFunctionFactory(Of T).GetActivationFunction
  nameWithType: IActivationFunctionFactory<T>.GetActivationFunction
  nameWithType.vb: IActivationFunctionFactory(Of T).GetActivationFunction
- uid: SharpNeat.NeuralNets.IO
  name: SharpNeat.NeuralNets.IO
  href: api/SharpNeat.NeuralNets.IO.html
  commentId: N:SharpNeat.NeuralNets.IO
  fullName: SharpNeat.NeuralNets.IO
  nameWithType: SharpNeat.NeuralNets.IO
- uid: SharpNeat.NeuralNets.IO.NeuralNetConverter
  name: NeuralNetConverter
  href: api/SharpNeat.NeuralNets.IO.NeuralNetConverter.html
  commentId: T:SharpNeat.NeuralNets.IO.NeuralNetConverter
  fullName: SharpNeat.NeuralNets.IO.NeuralNetConverter
  nameWithType: NeuralNetConverter
- uid: SharpNeat.NeuralNets.IO.NeuralNetConverter.ToAcyclicNeuralNet(SharpNeat.IO.Models.NetFileModel,SharpNeat.NeuralNets.IActivationFunctionFactory{System.Double},System.Boolean)
  name: ToAcyclicNeuralNet(NetFileModel, IActivationFunctionFactory<double>, bool)
  href: api/SharpNeat.NeuralNets.IO.NeuralNetConverter.html#SharpNeat_NeuralNets_IO_NeuralNetConverter_ToAcyclicNeuralNet_SharpNeat_IO_Models_NetFileModel_SharpNeat_NeuralNets_IActivationFunctionFactory_System_Double__System_Boolean_
  commentId: M:SharpNeat.NeuralNets.IO.NeuralNetConverter.ToAcyclicNeuralNet(SharpNeat.IO.Models.NetFileModel,SharpNeat.NeuralNets.IActivationFunctionFactory{System.Double},System.Boolean)
  name.vb: ToAcyclicNeuralNet(NetFileModel, IActivationFunctionFactory(Of Double), Boolean)
  fullName: SharpNeat.NeuralNets.IO.NeuralNetConverter.ToAcyclicNeuralNet(SharpNeat.IO.Models.NetFileModel, SharpNeat.NeuralNets.IActivationFunctionFactory<double>, bool)
  fullName.vb: SharpNeat.NeuralNets.IO.NeuralNetConverter.ToAcyclicNeuralNet(SharpNeat.IO.Models.NetFileModel, SharpNeat.NeuralNets.IActivationFunctionFactory(Of Double), Boolean)
  nameWithType: NeuralNetConverter.ToAcyclicNeuralNet(NetFileModel, IActivationFunctionFactory<double>, bool)
  nameWithType.vb: NeuralNetConverter.ToAcyclicNeuralNet(NetFileModel, IActivationFunctionFactory(Of Double), Boolean)
- uid: SharpNeat.NeuralNets.IO.NeuralNetConverter.ToAcyclicNeuralNet(SharpNeat.IO.Models.NetFileModel,System.Boolean,System.Boolean)
  name: ToAcyclicNeuralNet(NetFileModel, bool, bool)
  href: api/SharpNeat.NeuralNets.IO.NeuralNetConverter.html#SharpNeat_NeuralNets_IO_NeuralNetConverter_ToAcyclicNeuralNet_SharpNeat_IO_Models_NetFileModel_System_Boolean_System_Boolean_
  commentId: M:SharpNeat.NeuralNets.IO.NeuralNetConverter.ToAcyclicNeuralNet(SharpNeat.IO.Models.NetFileModel,System.Boolean,System.Boolean)
  name.vb: ToAcyclicNeuralNet(NetFileModel, Boolean, Boolean)
  fullName: SharpNeat.NeuralNets.IO.NeuralNetConverter.ToAcyclicNeuralNet(SharpNeat.IO.Models.NetFileModel, bool, bool)
  fullName.vb: SharpNeat.NeuralNets.IO.NeuralNetConverter.ToAcyclicNeuralNet(SharpNeat.IO.Models.NetFileModel, Boolean, Boolean)
  nameWithType: NeuralNetConverter.ToAcyclicNeuralNet(NetFileModel, bool, bool)
  nameWithType.vb: NeuralNetConverter.ToAcyclicNeuralNet(NetFileModel, Boolean, Boolean)
- uid: SharpNeat.NeuralNets.IO.NeuralNetConverter.ToAcyclicNeuralNet*
  name: ToAcyclicNeuralNet
  href: api/SharpNeat.NeuralNets.IO.NeuralNetConverter.html#SharpNeat_NeuralNets_IO_NeuralNetConverter_ToAcyclicNeuralNet_
  commentId: Overload:SharpNeat.NeuralNets.IO.NeuralNetConverter.ToAcyclicNeuralNet
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.IO.NeuralNetConverter.ToAcyclicNeuralNet
  nameWithType: NeuralNetConverter.ToAcyclicNeuralNet
- uid: SharpNeat.NeuralNets.IO.NeuralNetConverter.ToCyclicNeuralNet(SharpNeat.IO.Models.NetFileModel,SharpNeat.NeuralNets.IActivationFunctionFactory{System.Double},System.Boolean)
  name: ToCyclicNeuralNet(NetFileModel, IActivationFunctionFactory<double>, bool)
  href: api/SharpNeat.NeuralNets.IO.NeuralNetConverter.html#SharpNeat_NeuralNets_IO_NeuralNetConverter_ToCyclicNeuralNet_SharpNeat_IO_Models_NetFileModel_SharpNeat_NeuralNets_IActivationFunctionFactory_System_Double__System_Boolean_
  commentId: M:SharpNeat.NeuralNets.IO.NeuralNetConverter.ToCyclicNeuralNet(SharpNeat.IO.Models.NetFileModel,SharpNeat.NeuralNets.IActivationFunctionFactory{System.Double},System.Boolean)
  name.vb: ToCyclicNeuralNet(NetFileModel, IActivationFunctionFactory(Of Double), Boolean)
  fullName: SharpNeat.NeuralNets.IO.NeuralNetConverter.ToCyclicNeuralNet(SharpNeat.IO.Models.NetFileModel, SharpNeat.NeuralNets.IActivationFunctionFactory<double>, bool)
  fullName.vb: SharpNeat.NeuralNets.IO.NeuralNetConverter.ToCyclicNeuralNet(SharpNeat.IO.Models.NetFileModel, SharpNeat.NeuralNets.IActivationFunctionFactory(Of Double), Boolean)
  nameWithType: NeuralNetConverter.ToCyclicNeuralNet(NetFileModel, IActivationFunctionFactory<double>, bool)
  nameWithType.vb: NeuralNetConverter.ToCyclicNeuralNet(NetFileModel, IActivationFunctionFactory(Of Double), Boolean)
- uid: SharpNeat.NeuralNets.IO.NeuralNetConverter.ToCyclicNeuralNet(SharpNeat.IO.Models.NetFileModel,System.Boolean,System.Boolean)
  name: ToCyclicNeuralNet(NetFileModel, bool, bool)
  href: api/SharpNeat.NeuralNets.IO.NeuralNetConverter.html#SharpNeat_NeuralNets_IO_NeuralNetConverter_ToCyclicNeuralNet_SharpNeat_IO_Models_NetFileModel_System_Boolean_System_Boolean_
  commentId: M:SharpNeat.NeuralNets.IO.NeuralNetConverter.ToCyclicNeuralNet(SharpNeat.IO.Models.NetFileModel,System.Boolean,System.Boolean)
  name.vb: ToCyclicNeuralNet(NetFileModel, Boolean, Boolean)
  fullName: SharpNeat.NeuralNets.IO.NeuralNetConverter.ToCyclicNeuralNet(SharpNeat.IO.Models.NetFileModel, bool, bool)
  fullName.vb: SharpNeat.NeuralNets.IO.NeuralNetConverter.ToCyclicNeuralNet(SharpNeat.IO.Models.NetFileModel, Boolean, Boolean)
  nameWithType: NeuralNetConverter.ToCyclicNeuralNet(NetFileModel, bool, bool)
  nameWithType.vb: NeuralNetConverter.ToCyclicNeuralNet(NetFileModel, Boolean, Boolean)
- uid: SharpNeat.NeuralNets.IO.NeuralNetConverter.ToCyclicNeuralNet*
  name: ToCyclicNeuralNet
  href: api/SharpNeat.NeuralNets.IO.NeuralNetConverter.html#SharpNeat_NeuralNets_IO_NeuralNetConverter_ToCyclicNeuralNet_
  commentId: Overload:SharpNeat.NeuralNets.IO.NeuralNetConverter.ToCyclicNeuralNet
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.IO.NeuralNetConverter.ToCyclicNeuralNet
  nameWithType: NeuralNetConverter.ToCyclicNeuralNet
- uid: SharpNeat.NeuralNets.IO.NeuralNetConverter.ToNeuralNet(SharpNeat.IO.Models.NetFileModel,SharpNeat.NeuralNets.IActivationFunctionFactory{System.Double},System.Boolean)
  name: ToNeuralNet(NetFileModel, IActivationFunctionFactory<double>, bool)
  href: api/SharpNeat.NeuralNets.IO.NeuralNetConverter.html#SharpNeat_NeuralNets_IO_NeuralNetConverter_ToNeuralNet_SharpNeat_IO_Models_NetFileModel_SharpNeat_NeuralNets_IActivationFunctionFactory_System_Double__System_Boolean_
  commentId: M:SharpNeat.NeuralNets.IO.NeuralNetConverter.ToNeuralNet(SharpNeat.IO.Models.NetFileModel,SharpNeat.NeuralNets.IActivationFunctionFactory{System.Double},System.Boolean)
  name.vb: ToNeuralNet(NetFileModel, IActivationFunctionFactory(Of Double), Boolean)
  fullName: SharpNeat.NeuralNets.IO.NeuralNetConverter.ToNeuralNet(SharpNeat.IO.Models.NetFileModel, SharpNeat.NeuralNets.IActivationFunctionFactory<double>, bool)
  fullName.vb: SharpNeat.NeuralNets.IO.NeuralNetConverter.ToNeuralNet(SharpNeat.IO.Models.NetFileModel, SharpNeat.NeuralNets.IActivationFunctionFactory(Of Double), Boolean)
  nameWithType: NeuralNetConverter.ToNeuralNet(NetFileModel, IActivationFunctionFactory<double>, bool)
  nameWithType.vb: NeuralNetConverter.ToNeuralNet(NetFileModel, IActivationFunctionFactory(Of Double), Boolean)
- uid: SharpNeat.NeuralNets.IO.NeuralNetConverter.ToNeuralNet(SharpNeat.IO.Models.NetFileModel,System.Boolean,System.Boolean)
  name: ToNeuralNet(NetFileModel, bool, bool)
  href: api/SharpNeat.NeuralNets.IO.NeuralNetConverter.html#SharpNeat_NeuralNets_IO_NeuralNetConverter_ToNeuralNet_SharpNeat_IO_Models_NetFileModel_System_Boolean_System_Boolean_
  commentId: M:SharpNeat.NeuralNets.IO.NeuralNetConverter.ToNeuralNet(SharpNeat.IO.Models.NetFileModel,System.Boolean,System.Boolean)
  name.vb: ToNeuralNet(NetFileModel, Boolean, Boolean)
  fullName: SharpNeat.NeuralNets.IO.NeuralNetConverter.ToNeuralNet(SharpNeat.IO.Models.NetFileModel, bool, bool)
  fullName.vb: SharpNeat.NeuralNets.IO.NeuralNetConverter.ToNeuralNet(SharpNeat.IO.Models.NetFileModel, Boolean, Boolean)
  nameWithType: NeuralNetConverter.ToNeuralNet(NetFileModel, bool, bool)
  nameWithType.vb: NeuralNetConverter.ToNeuralNet(NetFileModel, Boolean, Boolean)
- uid: SharpNeat.NeuralNets.IO.NeuralNetConverter.ToNeuralNet*
  name: ToNeuralNet
  href: api/SharpNeat.NeuralNets.IO.NeuralNetConverter.html#SharpNeat_NeuralNets_IO_NeuralNetConverter_ToNeuralNet_
  commentId: Overload:SharpNeat.NeuralNets.IO.NeuralNetConverter.ToNeuralNet
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.IO.NeuralNetConverter.ToNeuralNet
  nameWithType: NeuralNetConverter.ToNeuralNet
- uid: SharpNeat.NeuralNets.IO.NeuralNetConverterTests
  name: NeuralNetConverterTests
  href: api/SharpNeat.NeuralNets.IO.NeuralNetConverterTests.html
  commentId: T:SharpNeat.NeuralNets.IO.NeuralNetConverterTests
  fullName: SharpNeat.NeuralNets.IO.NeuralNetConverterTests
  nameWithType: NeuralNetConverterTests
- uid: SharpNeat.NeuralNets.IO.NeuralNetConverterTests.NetFileModelShouldConvertToNeuralNetAcyclic
  name: NetFileModelShouldConvertToNeuralNetAcyclic()
  href: api/SharpNeat.NeuralNets.IO.NeuralNetConverterTests.html#SharpNeat_NeuralNets_IO_NeuralNetConverterTests_NetFileModelShouldConvertToNeuralNetAcyclic
  commentId: M:SharpNeat.NeuralNets.IO.NeuralNetConverterTests.NetFileModelShouldConvertToNeuralNetAcyclic
  fullName: SharpNeat.NeuralNets.IO.NeuralNetConverterTests.NetFileModelShouldConvertToNeuralNetAcyclic()
  nameWithType: NeuralNetConverterTests.NetFileModelShouldConvertToNeuralNetAcyclic()
- uid: SharpNeat.NeuralNets.IO.NeuralNetConverterTests.NetFileModelShouldConvertToNeuralNetAcyclic*
  name: NetFileModelShouldConvertToNeuralNetAcyclic
  href: api/SharpNeat.NeuralNets.IO.NeuralNetConverterTests.html#SharpNeat_NeuralNets_IO_NeuralNetConverterTests_NetFileModelShouldConvertToNeuralNetAcyclic_
  commentId: Overload:SharpNeat.NeuralNets.IO.NeuralNetConverterTests.NetFileModelShouldConvertToNeuralNetAcyclic
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.IO.NeuralNetConverterTests.NetFileModelShouldConvertToNeuralNetAcyclic
  nameWithType: NeuralNetConverterTests.NetFileModelShouldConvertToNeuralNetAcyclic
- uid: SharpNeat.NeuralNets.IO.NeuralNetConverterTests.NetFileModelShouldConvertToNeuralNetCyclic
  name: NetFileModelShouldConvertToNeuralNetCyclic()
  href: api/SharpNeat.NeuralNets.IO.NeuralNetConverterTests.html#SharpNeat_NeuralNets_IO_NeuralNetConverterTests_NetFileModelShouldConvertToNeuralNetCyclic
  commentId: M:SharpNeat.NeuralNets.IO.NeuralNetConverterTests.NetFileModelShouldConvertToNeuralNetCyclic
  fullName: SharpNeat.NeuralNets.IO.NeuralNetConverterTests.NetFileModelShouldConvertToNeuralNetCyclic()
  nameWithType: NeuralNetConverterTests.NetFileModelShouldConvertToNeuralNetCyclic()
- uid: SharpNeat.NeuralNets.IO.NeuralNetConverterTests.NetFileModelShouldConvertToNeuralNetCyclic*
  name: NetFileModelShouldConvertToNeuralNetCyclic
  href: api/SharpNeat.NeuralNets.IO.NeuralNetConverterTests.html#SharpNeat_NeuralNets_IO_NeuralNetConverterTests_NetFileModelShouldConvertToNeuralNetCyclic_
  commentId: Overload:SharpNeat.NeuralNets.IO.NeuralNetConverterTests.NetFileModelShouldConvertToNeuralNetCyclic
  isSpec: "True"
  fullName: SharpNeat.NeuralNets.IO.NeuralNetConverterTests.NetFileModelShouldConvertToNeuralNetCyclic
  nameWithType: NeuralNetConverterTests.NetFileModelShouldConvertToNeuralNetCyclic
- uid: SharpNeat.NeuralNets.VecFn`1
  name: VecFn<T>
  href: api/SharpNeat.NeuralNets.VecFn-1.html
  commentId: T:SharpNeat.NeuralNets.VecFn`1
  name.vb: VecFn(Of T)
  fullName: SharpNeat.NeuralNets.VecFn<T>
  fullName.vb: SharpNeat.NeuralNets.VecFn(Of T)
  nameWithType: VecFn<T>
  nameWithType.vb: VecFn(Of T)
- uid: SharpNeat.NeuralNets.VecFn2`1
  name: VecFn2<T>
  href: api/SharpNeat.NeuralNets.VecFn2-1.html
  commentId: T:SharpNeat.NeuralNets.VecFn2`1
  name.vb: VecFn2(Of T)
  fullName: SharpNeat.NeuralNets.VecFn2<T>
  fullName.vb: SharpNeat.NeuralNets.VecFn2(Of T)
  nameWithType: VecFn2<T>
  nameWithType.vb: VecFn2(Of T)
- uid: SharpNeat.Sexual.Strategy.UniformCrossover
  name: SharpNeat.Sexual.Strategy.UniformCrossover
  href: api/SharpNeat.Sexual.Strategy.UniformCrossover.html
  commentId: N:SharpNeat.Sexual.Strategy.UniformCrossover
  fullName: SharpNeat.Sexual.Strategy.UniformCrossover
  nameWithType: SharpNeat.Sexual.Strategy.UniformCrossover
- uid: SharpNeat.Sexual.Strategy.UniformCrossover.CyclicConnectionCheckTests
  name: CyclicConnectionCheckTests
  href: api/SharpNeat.Sexual.Strategy.UniformCrossover.CyclicConnectionCheckTests.html
  commentId: T:SharpNeat.Sexual.Strategy.UniformCrossover.CyclicConnectionCheckTests
  fullName: SharpNeat.Sexual.Strategy.UniformCrossover.CyclicConnectionCheckTests
  nameWithType: CyclicConnectionCheckTests
- uid: SharpNeat.Sexual.Strategy.UniformCrossover.CyclicConnectionCheckTests.IsConnectionCyclic1
  name: IsConnectionCyclic1()
  href: api/SharpNeat.Sexual.Strategy.UniformCrossover.CyclicConnectionCheckTests.html#SharpNeat_Sexual_Strategy_UniformCrossover_CyclicConnectionCheckTests_IsConnectionCyclic1
  commentId: M:SharpNeat.Sexual.Strategy.UniformCrossover.CyclicConnectionCheckTests.IsConnectionCyclic1
  fullName: SharpNeat.Sexual.Strategy.UniformCrossover.CyclicConnectionCheckTests.IsConnectionCyclic1()
  nameWithType: CyclicConnectionCheckTests.IsConnectionCyclic1()
- uid: SharpNeat.Sexual.Strategy.UniformCrossover.CyclicConnectionCheckTests.IsConnectionCyclic1*
  name: IsConnectionCyclic1
  href: api/SharpNeat.Sexual.Strategy.UniformCrossover.CyclicConnectionCheckTests.html#SharpNeat_Sexual_Strategy_UniformCrossover_CyclicConnectionCheckTests_IsConnectionCyclic1_
  commentId: Overload:SharpNeat.Sexual.Strategy.UniformCrossover.CyclicConnectionCheckTests.IsConnectionCyclic1
  isSpec: "True"
  fullName: SharpNeat.Sexual.Strategy.UniformCrossover.CyclicConnectionCheckTests.IsConnectionCyclic1
  nameWithType: CyclicConnectionCheckTests.IsConnectionCyclic1
- uid: SharpNeat.Sexual.Strategy.UniformCrossover.CyclicConnectionCheckTests.IsConnectionCyclic2
  name: IsConnectionCyclic2()
  href: api/SharpNeat.Sexual.Strategy.UniformCrossover.CyclicConnectionCheckTests.html#SharpNeat_Sexual_Strategy_UniformCrossover_CyclicConnectionCheckTests_IsConnectionCyclic2
  commentId: M:SharpNeat.Sexual.Strategy.UniformCrossover.CyclicConnectionCheckTests.IsConnectionCyclic2
  fullName: SharpNeat.Sexual.Strategy.UniformCrossover.CyclicConnectionCheckTests.IsConnectionCyclic2()
  nameWithType: CyclicConnectionCheckTests.IsConnectionCyclic2()
- uid: SharpNeat.Sexual.Strategy.UniformCrossover.CyclicConnectionCheckTests.IsConnectionCyclic2*
  name: IsConnectionCyclic2
  href: api/SharpNeat.Sexual.Strategy.UniformCrossover.CyclicConnectionCheckTests.html#SharpNeat_Sexual_Strategy_UniformCrossover_CyclicConnectionCheckTests_IsConnectionCyclic2_
  commentId: Overload:SharpNeat.Sexual.Strategy.UniformCrossover.CyclicConnectionCheckTests.IsConnectionCyclic2
  isSpec: "True"
  fullName: SharpNeat.Sexual.Strategy.UniformCrossover.CyclicConnectionCheckTests.IsConnectionCyclic2
  nameWithType: CyclicConnectionCheckTests.IsConnectionCyclic2
- uid: SharpNeat.Tasks
  name: SharpNeat.Tasks
  href: api/SharpNeat.Tasks.html
  commentId: N:SharpNeat.Tasks
  fullName: SharpNeat.Tasks
  nameWithType: SharpNeat.Tasks
- uid: SharpNeat.Tasks.Benchmarks.FunctionRegression
  name: SharpNeat.Tasks.Benchmarks.FunctionRegression
  href: api/SharpNeat.Tasks.Benchmarks.FunctionRegression.html
  commentId: N:SharpNeat.Tasks.Benchmarks.FunctionRegression
  fullName: SharpNeat.Tasks.Benchmarks.FunctionRegression
  nameWithType: SharpNeat.Tasks.Benchmarks.FunctionRegression
- uid: SharpNeat.Tasks.Benchmarks.FunctionRegression.FuncRegressionUtilsBenchmarks
  name: FuncRegressionUtilsBenchmarks
  href: api/SharpNeat.Tasks.Benchmarks.FunctionRegression.FuncRegressionUtilsBenchmarks.html
  commentId: T:SharpNeat.Tasks.Benchmarks.FunctionRegression.FuncRegressionUtilsBenchmarks
  fullName: SharpNeat.Tasks.Benchmarks.FunctionRegression.FuncRegressionUtilsBenchmarks
  nameWithType: FuncRegressionUtilsBenchmarks
- uid: SharpNeat.Tasks.Benchmarks.FunctionRegression.FuncRegressionUtilsBenchmarks.#ctor
  name: FuncRegressionUtilsBenchmarks()
  href: api/SharpNeat.Tasks.Benchmarks.FunctionRegression.FuncRegressionUtilsBenchmarks.html#SharpNeat_Tasks_Benchmarks_FunctionRegression_FuncRegressionUtilsBenchmarks__ctor
  commentId: M:SharpNeat.Tasks.Benchmarks.FunctionRegression.FuncRegressionUtilsBenchmarks.#ctor
  name.vb: New()
  fullName: SharpNeat.Tasks.Benchmarks.FunctionRegression.FuncRegressionUtilsBenchmarks.FuncRegressionUtilsBenchmarks()
  fullName.vb: SharpNeat.Tasks.Benchmarks.FunctionRegression.FuncRegressionUtilsBenchmarks.New()
  nameWithType: FuncRegressionUtilsBenchmarks.FuncRegressionUtilsBenchmarks()
  nameWithType.vb: FuncRegressionUtilsBenchmarks.New()
- uid: SharpNeat.Tasks.Benchmarks.FunctionRegression.FuncRegressionUtilsBenchmarks.#ctor*
  name: FuncRegressionUtilsBenchmarks
  href: api/SharpNeat.Tasks.Benchmarks.FunctionRegression.FuncRegressionUtilsBenchmarks.html#SharpNeat_Tasks_Benchmarks_FunctionRegression_FuncRegressionUtilsBenchmarks__ctor_
  commentId: Overload:SharpNeat.Tasks.Benchmarks.FunctionRegression.FuncRegressionUtilsBenchmarks.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Tasks.Benchmarks.FunctionRegression.FuncRegressionUtilsBenchmarks.FuncRegressionUtilsBenchmarks
  fullName.vb: SharpNeat.Tasks.Benchmarks.FunctionRegression.FuncRegressionUtilsBenchmarks.New
  nameWithType: FuncRegressionUtilsBenchmarks.FuncRegressionUtilsBenchmarks
  nameWithType.vb: FuncRegressionUtilsBenchmarks.New
- uid: SharpNeat.Tasks.Benchmarks.FunctionRegression.FuncRegressionUtilsBenchmarks.CalcGradients
  name: CalcGradients()
  href: api/SharpNeat.Tasks.Benchmarks.FunctionRegression.FuncRegressionUtilsBenchmarks.html#SharpNeat_Tasks_Benchmarks_FunctionRegression_FuncRegressionUtilsBenchmarks_CalcGradients
  commentId: M:SharpNeat.Tasks.Benchmarks.FunctionRegression.FuncRegressionUtilsBenchmarks.CalcGradients
  fullName: SharpNeat.Tasks.Benchmarks.FunctionRegression.FuncRegressionUtilsBenchmarks.CalcGradients()
  nameWithType: FuncRegressionUtilsBenchmarks.CalcGradients()
- uid: SharpNeat.Tasks.Benchmarks.FunctionRegression.FuncRegressionUtilsBenchmarks.CalcGradients*
  name: CalcGradients
  href: api/SharpNeat.Tasks.Benchmarks.FunctionRegression.FuncRegressionUtilsBenchmarks.html#SharpNeat_Tasks_Benchmarks_FunctionRegression_FuncRegressionUtilsBenchmarks_CalcGradients_
  commentId: Overload:SharpNeat.Tasks.Benchmarks.FunctionRegression.FuncRegressionUtilsBenchmarks.CalcGradients
  isSpec: "True"
  fullName: SharpNeat.Tasks.Benchmarks.FunctionRegression.FuncRegressionUtilsBenchmarks.CalcGradients
  nameWithType: FuncRegressionUtilsBenchmarks.CalcGradients
- uid: SharpNeat.Tasks.Benchmarks.PreyCapture
  name: SharpNeat.Tasks.Benchmarks.PreyCapture
  href: api/SharpNeat.Tasks.Benchmarks.PreyCapture.html
  commentId: N:SharpNeat.Tasks.Benchmarks.PreyCapture
  fullName: SharpNeat.Tasks.Benchmarks.PreyCapture
  nameWithType: SharpNeat.Tasks.Benchmarks.PreyCapture
- uid: SharpNeat.Tasks.Benchmarks.PreyCapture.PreyCaptureWorldBenchmark
  name: PreyCaptureWorldBenchmark
  href: api/SharpNeat.Tasks.Benchmarks.PreyCapture.PreyCaptureWorldBenchmark.html
  commentId: T:SharpNeat.Tasks.Benchmarks.PreyCapture.PreyCaptureWorldBenchmark
  fullName: SharpNeat.Tasks.Benchmarks.PreyCapture.PreyCaptureWorldBenchmark
  nameWithType: PreyCaptureWorldBenchmark
- uid: SharpNeat.Tasks.Benchmarks.PreyCapture.PreyCaptureWorldBenchmark.#ctor
  name: PreyCaptureWorldBenchmark()
  href: api/SharpNeat.Tasks.Benchmarks.PreyCapture.PreyCaptureWorldBenchmark.html#SharpNeat_Tasks_Benchmarks_PreyCapture_PreyCaptureWorldBenchmark__ctor
  commentId: M:SharpNeat.Tasks.Benchmarks.PreyCapture.PreyCaptureWorldBenchmark.#ctor
  name.vb: New()
  fullName: SharpNeat.Tasks.Benchmarks.PreyCapture.PreyCaptureWorldBenchmark.PreyCaptureWorldBenchmark()
  fullName.vb: SharpNeat.Tasks.Benchmarks.PreyCapture.PreyCaptureWorldBenchmark.New()
  nameWithType: PreyCaptureWorldBenchmark.PreyCaptureWorldBenchmark()
  nameWithType.vb: PreyCaptureWorldBenchmark.New()
- uid: SharpNeat.Tasks.Benchmarks.PreyCapture.PreyCaptureWorldBenchmark.#ctor*
  name: PreyCaptureWorldBenchmark
  href: api/SharpNeat.Tasks.Benchmarks.PreyCapture.PreyCaptureWorldBenchmark.html#SharpNeat_Tasks_Benchmarks_PreyCapture_PreyCaptureWorldBenchmark__ctor_
  commentId: Overload:SharpNeat.Tasks.Benchmarks.PreyCapture.PreyCaptureWorldBenchmark.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Tasks.Benchmarks.PreyCapture.PreyCaptureWorldBenchmark.PreyCaptureWorldBenchmark
  fullName.vb: SharpNeat.Tasks.Benchmarks.PreyCapture.PreyCaptureWorldBenchmark.New
  nameWithType: PreyCaptureWorldBenchmark.PreyCaptureWorldBenchmark
  nameWithType.vb: PreyCaptureWorldBenchmark.New
- uid: SharpNeat.Tasks.Benchmarks.PreyCapture.PreyCaptureWorldBenchmark.Dispose
  name: Dispose()
  href: api/SharpNeat.Tasks.Benchmarks.PreyCapture.PreyCaptureWorldBenchmark.html#SharpNeat_Tasks_Benchmarks_PreyCapture_PreyCaptureWorldBenchmark_Dispose
  commentId: M:SharpNeat.Tasks.Benchmarks.PreyCapture.PreyCaptureWorldBenchmark.Dispose
  fullName: SharpNeat.Tasks.Benchmarks.PreyCapture.PreyCaptureWorldBenchmark.Dispose()
  nameWithType: PreyCaptureWorldBenchmark.Dispose()
- uid: SharpNeat.Tasks.Benchmarks.PreyCapture.PreyCaptureWorldBenchmark.Dispose*
  name: Dispose
  href: api/SharpNeat.Tasks.Benchmarks.PreyCapture.PreyCaptureWorldBenchmark.html#SharpNeat_Tasks_Benchmarks_PreyCapture_PreyCaptureWorldBenchmark_Dispose_
  commentId: Overload:SharpNeat.Tasks.Benchmarks.PreyCapture.PreyCaptureWorldBenchmark.Dispose
  isSpec: "True"
  fullName: SharpNeat.Tasks.Benchmarks.PreyCapture.PreyCaptureWorldBenchmark.Dispose
  nameWithType: PreyCaptureWorldBenchmark.Dispose
- uid: SharpNeat.Tasks.Benchmarks.PreyCapture.PreyCaptureWorldBenchmark.RunTrial
  name: RunTrial()
  href: api/SharpNeat.Tasks.Benchmarks.PreyCapture.PreyCaptureWorldBenchmark.html#SharpNeat_Tasks_Benchmarks_PreyCapture_PreyCaptureWorldBenchmark_RunTrial
  commentId: M:SharpNeat.Tasks.Benchmarks.PreyCapture.PreyCaptureWorldBenchmark.RunTrial
  fullName: SharpNeat.Tasks.Benchmarks.PreyCapture.PreyCaptureWorldBenchmark.RunTrial()
  nameWithType: PreyCaptureWorldBenchmark.RunTrial()
- uid: SharpNeat.Tasks.Benchmarks.PreyCapture.PreyCaptureWorldBenchmark.RunTrial*
  name: RunTrial
  href: api/SharpNeat.Tasks.Benchmarks.PreyCapture.PreyCaptureWorldBenchmark.html#SharpNeat_Tasks_Benchmarks_PreyCapture_PreyCaptureWorldBenchmark_RunTrial_
  commentId: Overload:SharpNeat.Tasks.Benchmarks.PreyCapture.PreyCaptureWorldBenchmark.RunTrial
  isSpec: "True"
  fullName: SharpNeat.Tasks.Benchmarks.PreyCapture.PreyCaptureWorldBenchmark.RunTrial
  nameWithType: PreyCaptureWorldBenchmark.RunTrial
- uid: SharpNeat.Tasks.Benchmarks.PreyCapture.PreyCaptureWorldBenchmark.RunTrials
  name: RunTrials()
  href: api/SharpNeat.Tasks.Benchmarks.PreyCapture.PreyCaptureWorldBenchmark.html#SharpNeat_Tasks_Benchmarks_PreyCapture_PreyCaptureWorldBenchmark_RunTrials
  commentId: M:SharpNeat.Tasks.Benchmarks.PreyCapture.PreyCaptureWorldBenchmark.RunTrials
  fullName: SharpNeat.Tasks.Benchmarks.PreyCapture.PreyCaptureWorldBenchmark.RunTrials()
  nameWithType: PreyCaptureWorldBenchmark.RunTrials()
- uid: SharpNeat.Tasks.Benchmarks.PreyCapture.PreyCaptureWorldBenchmark.RunTrials*
  name: RunTrials
  href: api/SharpNeat.Tasks.Benchmarks.PreyCapture.PreyCaptureWorldBenchmark.html#SharpNeat_Tasks_Benchmarks_PreyCapture_PreyCaptureWorldBenchmark_RunTrials_
  commentId: Overload:SharpNeat.Tasks.Benchmarks.PreyCapture.PreyCaptureWorldBenchmark.RunTrials
  isSpec: "True"
  fullName: SharpNeat.Tasks.Benchmarks.PreyCapture.PreyCaptureWorldBenchmark.RunTrials
  nameWithType: PreyCaptureWorldBenchmark.RunTrials
- uid: SharpNeat.Tasks.BinaryElevenMultiplexer
  name: SharpNeat.Tasks.BinaryElevenMultiplexer
  href: api/SharpNeat.Tasks.BinaryElevenMultiplexer.html
  commentId: N:SharpNeat.Tasks.BinaryElevenMultiplexer
  fullName: SharpNeat.Tasks.BinaryElevenMultiplexer
  nameWithType: SharpNeat.Tasks.BinaryElevenMultiplexer
- uid: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme
  name: BinaryElevenMultiplexerEvaluationScheme
  href: api/SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.html
  commentId: T:SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme
  fullName: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme
  nameWithType: BinaryElevenMultiplexerEvaluationScheme
- uid: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.CreateEvaluator
  name: CreateEvaluator()
  href: api/SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.html#SharpNeat_Tasks_BinaryElevenMultiplexer_BinaryElevenMultiplexerEvaluationScheme_CreateEvaluator
  commentId: M:SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.CreateEvaluator
  fullName: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.CreateEvaluator()
  nameWithType: BinaryElevenMultiplexerEvaluationScheme.CreateEvaluator()
- uid: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.CreateEvaluator*
  name: CreateEvaluator
  href: api/SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.html#SharpNeat_Tasks_BinaryElevenMultiplexer_BinaryElevenMultiplexerEvaluationScheme_CreateEvaluator_
  commentId: Overload:SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.CreateEvaluator
  isSpec: "True"
  fullName: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.CreateEvaluator
  nameWithType: BinaryElevenMultiplexerEvaluationScheme.CreateEvaluator
- uid: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.EvaluatorsHaveState
  name: EvaluatorsHaveState
  href: api/SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.html#SharpNeat_Tasks_BinaryElevenMultiplexer_BinaryElevenMultiplexerEvaluationScheme_EvaluatorsHaveState
  commentId: P:SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.EvaluatorsHaveState
  fullName: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.EvaluatorsHaveState
  nameWithType: BinaryElevenMultiplexerEvaluationScheme.EvaluatorsHaveState
- uid: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.EvaluatorsHaveState*
  name: EvaluatorsHaveState
  href: api/SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.html#SharpNeat_Tasks_BinaryElevenMultiplexer_BinaryElevenMultiplexerEvaluationScheme_EvaluatorsHaveState_
  commentId: Overload:SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.EvaluatorsHaveState
  isSpec: "True"
  fullName: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.EvaluatorsHaveState
  nameWithType: BinaryElevenMultiplexerEvaluationScheme.EvaluatorsHaveState
- uid: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.FitnessComparer
  name: FitnessComparer
  href: api/SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.html#SharpNeat_Tasks_BinaryElevenMultiplexer_BinaryElevenMultiplexerEvaluationScheme_FitnessComparer
  commentId: P:SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.FitnessComparer
  fullName: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.FitnessComparer
  nameWithType: BinaryElevenMultiplexerEvaluationScheme.FitnessComparer
- uid: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.FitnessComparer*
  name: FitnessComparer
  href: api/SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.html#SharpNeat_Tasks_BinaryElevenMultiplexer_BinaryElevenMultiplexerEvaluationScheme_FitnessComparer_
  commentId: Overload:SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.FitnessComparer
  isSpec: "True"
  fullName: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.FitnessComparer
  nameWithType: BinaryElevenMultiplexerEvaluationScheme.FitnessComparer
- uid: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.InputCount
  name: InputCount
  href: api/SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.html#SharpNeat_Tasks_BinaryElevenMultiplexer_BinaryElevenMultiplexerEvaluationScheme_InputCount
  commentId: P:SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.InputCount
  fullName: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.InputCount
  nameWithType: BinaryElevenMultiplexerEvaluationScheme.InputCount
- uid: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.InputCount*
  name: InputCount
  href: api/SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.html#SharpNeat_Tasks_BinaryElevenMultiplexer_BinaryElevenMultiplexerEvaluationScheme_InputCount_
  commentId: Overload:SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.InputCount
  isSpec: "True"
  fullName: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.InputCount
  nameWithType: BinaryElevenMultiplexerEvaluationScheme.InputCount
- uid: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.IsDeterministic
  name: IsDeterministic
  href: api/SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.html#SharpNeat_Tasks_BinaryElevenMultiplexer_BinaryElevenMultiplexerEvaluationScheme_IsDeterministic
  commentId: P:SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.IsDeterministic
  fullName: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.IsDeterministic
  nameWithType: BinaryElevenMultiplexerEvaluationScheme.IsDeterministic
- uid: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.IsDeterministic*
  name: IsDeterministic
  href: api/SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.html#SharpNeat_Tasks_BinaryElevenMultiplexer_BinaryElevenMultiplexerEvaluationScheme_IsDeterministic_
  commentId: Overload:SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.IsDeterministic
  isSpec: "True"
  fullName: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.IsDeterministic
  nameWithType: BinaryElevenMultiplexerEvaluationScheme.IsDeterministic
- uid: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.NullFitness
  name: NullFitness
  href: api/SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.html#SharpNeat_Tasks_BinaryElevenMultiplexer_BinaryElevenMultiplexerEvaluationScheme_NullFitness
  commentId: P:SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.NullFitness
  fullName: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.NullFitness
  nameWithType: BinaryElevenMultiplexerEvaluationScheme.NullFitness
- uid: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.NullFitness*
  name: NullFitness
  href: api/SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.html#SharpNeat_Tasks_BinaryElevenMultiplexer_BinaryElevenMultiplexerEvaluationScheme_NullFitness_
  commentId: Overload:SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.NullFitness
  isSpec: "True"
  fullName: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.NullFitness
  nameWithType: BinaryElevenMultiplexerEvaluationScheme.NullFitness
- uid: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.OutputCount
  name: OutputCount
  href: api/SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.html#SharpNeat_Tasks_BinaryElevenMultiplexer_BinaryElevenMultiplexerEvaluationScheme_OutputCount
  commentId: P:SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.OutputCount
  fullName: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.OutputCount
  nameWithType: BinaryElevenMultiplexerEvaluationScheme.OutputCount
- uid: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.OutputCount*
  name: OutputCount
  href: api/SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.html#SharpNeat_Tasks_BinaryElevenMultiplexer_BinaryElevenMultiplexerEvaluationScheme_OutputCount_
  commentId: Overload:SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.OutputCount
  isSpec: "True"
  fullName: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.OutputCount
  nameWithType: BinaryElevenMultiplexerEvaluationScheme.OutputCount
- uid: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.TestForStopCondition(SharpNeat.Evaluation.FitnessInfo)
  name: TestForStopCondition(FitnessInfo)
  href: api/SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.html#SharpNeat_Tasks_BinaryElevenMultiplexer_BinaryElevenMultiplexerEvaluationScheme_TestForStopCondition_SharpNeat_Evaluation_FitnessInfo_
  commentId: M:SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.TestForStopCondition(SharpNeat.Evaluation.FitnessInfo)
  fullName: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.TestForStopCondition(SharpNeat.Evaluation.FitnessInfo)
  nameWithType: BinaryElevenMultiplexerEvaluationScheme.TestForStopCondition(FitnessInfo)
- uid: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.TestForStopCondition*
  name: TestForStopCondition
  href: api/SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.html#SharpNeat_Tasks_BinaryElevenMultiplexer_BinaryElevenMultiplexerEvaluationScheme_TestForStopCondition_
  commentId: Overload:SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.TestForStopCondition
  isSpec: "True"
  fullName: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluationScheme.TestForStopCondition
  nameWithType: BinaryElevenMultiplexerEvaluationScheme.TestForStopCondition
- uid: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluator
  name: BinaryElevenMultiplexerEvaluator
  href: api/SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluator.html
  commentId: T:SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluator
  fullName: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluator
  nameWithType: BinaryElevenMultiplexerEvaluator
- uid: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluator.Evaluate(SharpNeat.IBlackBox{System.Double})
  name: Evaluate(IBlackBox<double>)
  href: api/SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluator.html#SharpNeat_Tasks_BinaryElevenMultiplexer_BinaryElevenMultiplexerEvaluator_Evaluate_SharpNeat_IBlackBox_System_Double__
  commentId: M:SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluator.Evaluate(SharpNeat.IBlackBox{System.Double})
  name.vb: Evaluate(IBlackBox(Of Double))
  fullName: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluator.Evaluate(SharpNeat.IBlackBox<double>)
  fullName.vb: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluator.Evaluate(SharpNeat.IBlackBox(Of Double))
  nameWithType: BinaryElevenMultiplexerEvaluator.Evaluate(IBlackBox<double>)
  nameWithType.vb: BinaryElevenMultiplexerEvaluator.Evaluate(IBlackBox(Of Double))
- uid: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluator.Evaluate*
  name: Evaluate
  href: api/SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluator.html#SharpNeat_Tasks_BinaryElevenMultiplexer_BinaryElevenMultiplexerEvaluator_Evaluate_
  commentId: Overload:SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluator.Evaluate
  isSpec: "True"
  fullName: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerEvaluator.Evaluate
  nameWithType: BinaryElevenMultiplexerEvaluator.Evaluate
- uid: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerExperimentFactory
  name: BinaryElevenMultiplexerExperimentFactory
  href: api/SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerExperimentFactory.html
  commentId: T:SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerExperimentFactory
  fullName: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerExperimentFactory
  nameWithType: BinaryElevenMultiplexerExperimentFactory
- uid: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerExperimentFactory.CreateExperiment(System.IO.Stream)
  name: CreateExperiment(Stream)
  href: api/SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerExperimentFactory.html#SharpNeat_Tasks_BinaryElevenMultiplexer_BinaryElevenMultiplexerExperimentFactory_CreateExperiment_System_IO_Stream_
  commentId: M:SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerExperimentFactory.CreateExperiment(System.IO.Stream)
  fullName: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerExperimentFactory.CreateExperiment(System.IO.Stream)
  nameWithType: BinaryElevenMultiplexerExperimentFactory.CreateExperiment(Stream)
- uid: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerExperimentFactory.CreateExperiment*
  name: CreateExperiment
  href: api/SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerExperimentFactory.html#SharpNeat_Tasks_BinaryElevenMultiplexer_BinaryElevenMultiplexerExperimentFactory_CreateExperiment_
  commentId: Overload:SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerExperimentFactory.CreateExperiment
  isSpec: "True"
  fullName: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerExperimentFactory.CreateExperiment
  nameWithType: BinaryElevenMultiplexerExperimentFactory.CreateExperiment
- uid: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerExperimentFactory.CreateExperimentSinglePrecision(System.IO.Stream)
  name: CreateExperimentSinglePrecision(Stream)
  href: api/SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerExperimentFactory.html#SharpNeat_Tasks_BinaryElevenMultiplexer_BinaryElevenMultiplexerExperimentFactory_CreateExperimentSinglePrecision_System_IO_Stream_
  commentId: M:SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerExperimentFactory.CreateExperimentSinglePrecision(System.IO.Stream)
  fullName: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerExperimentFactory.CreateExperimentSinglePrecision(System.IO.Stream)
  nameWithType: BinaryElevenMultiplexerExperimentFactory.CreateExperimentSinglePrecision(Stream)
- uid: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerExperimentFactory.CreateExperimentSinglePrecision*
  name: CreateExperimentSinglePrecision
  href: api/SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerExperimentFactory.html#SharpNeat_Tasks_BinaryElevenMultiplexer_BinaryElevenMultiplexerExperimentFactory_CreateExperimentSinglePrecision_
  commentId: Overload:SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerExperimentFactory.CreateExperimentSinglePrecision
  isSpec: "True"
  fullName: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerExperimentFactory.CreateExperimentSinglePrecision
  nameWithType: BinaryElevenMultiplexerExperimentFactory.CreateExperimentSinglePrecision
- uid: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerExperimentFactory.Id
  name: Id
  href: api/SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerExperimentFactory.html#SharpNeat_Tasks_BinaryElevenMultiplexer_BinaryElevenMultiplexerExperimentFactory_Id
  commentId: P:SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerExperimentFactory.Id
  fullName: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerExperimentFactory.Id
  nameWithType: BinaryElevenMultiplexerExperimentFactory.Id
- uid: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerExperimentFactory.Id*
  name: Id
  href: api/SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerExperimentFactory.html#SharpNeat_Tasks_BinaryElevenMultiplexer_BinaryElevenMultiplexerExperimentFactory_Id_
  commentId: Overload:SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerExperimentFactory.Id
  isSpec: "True"
  fullName: SharpNeat.Tasks.BinaryElevenMultiplexer.BinaryElevenMultiplexerExperimentFactory.Id
  nameWithType: BinaryElevenMultiplexerExperimentFactory.Id
- uid: SharpNeat.Tasks.BinarySixMultiplexer
  name: SharpNeat.Tasks.BinarySixMultiplexer
  href: api/SharpNeat.Tasks.BinarySixMultiplexer.html
  commentId: N:SharpNeat.Tasks.BinarySixMultiplexer
  fullName: SharpNeat.Tasks.BinarySixMultiplexer
  nameWithType: SharpNeat.Tasks.BinarySixMultiplexer
- uid: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme
  name: BinarySixMultiplexerEvaluationScheme
  href: api/SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.html
  commentId: T:SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme
  fullName: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme
  nameWithType: BinarySixMultiplexerEvaluationScheme
- uid: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.CreateEvaluator
  name: CreateEvaluator()
  href: api/SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.html#SharpNeat_Tasks_BinarySixMultiplexer_BinarySixMultiplexerEvaluationScheme_CreateEvaluator
  commentId: M:SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.CreateEvaluator
  fullName: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.CreateEvaluator()
  nameWithType: BinarySixMultiplexerEvaluationScheme.CreateEvaluator()
- uid: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.CreateEvaluator*
  name: CreateEvaluator
  href: api/SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.html#SharpNeat_Tasks_BinarySixMultiplexer_BinarySixMultiplexerEvaluationScheme_CreateEvaluator_
  commentId: Overload:SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.CreateEvaluator
  isSpec: "True"
  fullName: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.CreateEvaluator
  nameWithType: BinarySixMultiplexerEvaluationScheme.CreateEvaluator
- uid: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.EvaluatorsHaveState
  name: EvaluatorsHaveState
  href: api/SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.html#SharpNeat_Tasks_BinarySixMultiplexer_BinarySixMultiplexerEvaluationScheme_EvaluatorsHaveState
  commentId: P:SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.EvaluatorsHaveState
  fullName: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.EvaluatorsHaveState
  nameWithType: BinarySixMultiplexerEvaluationScheme.EvaluatorsHaveState
- uid: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.EvaluatorsHaveState*
  name: EvaluatorsHaveState
  href: api/SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.html#SharpNeat_Tasks_BinarySixMultiplexer_BinarySixMultiplexerEvaluationScheme_EvaluatorsHaveState_
  commentId: Overload:SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.EvaluatorsHaveState
  isSpec: "True"
  fullName: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.EvaluatorsHaveState
  nameWithType: BinarySixMultiplexerEvaluationScheme.EvaluatorsHaveState
- uid: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.FitnessComparer
  name: FitnessComparer
  href: api/SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.html#SharpNeat_Tasks_BinarySixMultiplexer_BinarySixMultiplexerEvaluationScheme_FitnessComparer
  commentId: P:SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.FitnessComparer
  fullName: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.FitnessComparer
  nameWithType: BinarySixMultiplexerEvaluationScheme.FitnessComparer
- uid: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.FitnessComparer*
  name: FitnessComparer
  href: api/SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.html#SharpNeat_Tasks_BinarySixMultiplexer_BinarySixMultiplexerEvaluationScheme_FitnessComparer_
  commentId: Overload:SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.FitnessComparer
  isSpec: "True"
  fullName: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.FitnessComparer
  nameWithType: BinarySixMultiplexerEvaluationScheme.FitnessComparer
- uid: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.InputCount
  name: InputCount
  href: api/SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.html#SharpNeat_Tasks_BinarySixMultiplexer_BinarySixMultiplexerEvaluationScheme_InputCount
  commentId: P:SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.InputCount
  fullName: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.InputCount
  nameWithType: BinarySixMultiplexerEvaluationScheme.InputCount
- uid: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.InputCount*
  name: InputCount
  href: api/SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.html#SharpNeat_Tasks_BinarySixMultiplexer_BinarySixMultiplexerEvaluationScheme_InputCount_
  commentId: Overload:SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.InputCount
  isSpec: "True"
  fullName: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.InputCount
  nameWithType: BinarySixMultiplexerEvaluationScheme.InputCount
- uid: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.IsDeterministic
  name: IsDeterministic
  href: api/SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.html#SharpNeat_Tasks_BinarySixMultiplexer_BinarySixMultiplexerEvaluationScheme_IsDeterministic
  commentId: P:SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.IsDeterministic
  fullName: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.IsDeterministic
  nameWithType: BinarySixMultiplexerEvaluationScheme.IsDeterministic
- uid: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.IsDeterministic*
  name: IsDeterministic
  href: api/SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.html#SharpNeat_Tasks_BinarySixMultiplexer_BinarySixMultiplexerEvaluationScheme_IsDeterministic_
  commentId: Overload:SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.IsDeterministic
  isSpec: "True"
  fullName: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.IsDeterministic
  nameWithType: BinarySixMultiplexerEvaluationScheme.IsDeterministic
- uid: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.NullFitness
  name: NullFitness
  href: api/SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.html#SharpNeat_Tasks_BinarySixMultiplexer_BinarySixMultiplexerEvaluationScheme_NullFitness
  commentId: P:SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.NullFitness
  fullName: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.NullFitness
  nameWithType: BinarySixMultiplexerEvaluationScheme.NullFitness
- uid: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.NullFitness*
  name: NullFitness
  href: api/SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.html#SharpNeat_Tasks_BinarySixMultiplexer_BinarySixMultiplexerEvaluationScheme_NullFitness_
  commentId: Overload:SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.NullFitness
  isSpec: "True"
  fullName: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.NullFitness
  nameWithType: BinarySixMultiplexerEvaluationScheme.NullFitness
- uid: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.OutputCount
  name: OutputCount
  href: api/SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.html#SharpNeat_Tasks_BinarySixMultiplexer_BinarySixMultiplexerEvaluationScheme_OutputCount
  commentId: P:SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.OutputCount
  fullName: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.OutputCount
  nameWithType: BinarySixMultiplexerEvaluationScheme.OutputCount
- uid: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.OutputCount*
  name: OutputCount
  href: api/SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.html#SharpNeat_Tasks_BinarySixMultiplexer_BinarySixMultiplexerEvaluationScheme_OutputCount_
  commentId: Overload:SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.OutputCount
  isSpec: "True"
  fullName: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.OutputCount
  nameWithType: BinarySixMultiplexerEvaluationScheme.OutputCount
- uid: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.TestForStopCondition(SharpNeat.Evaluation.FitnessInfo)
  name: TestForStopCondition(FitnessInfo)
  href: api/SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.html#SharpNeat_Tasks_BinarySixMultiplexer_BinarySixMultiplexerEvaluationScheme_TestForStopCondition_SharpNeat_Evaluation_FitnessInfo_
  commentId: M:SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.TestForStopCondition(SharpNeat.Evaluation.FitnessInfo)
  fullName: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.TestForStopCondition(SharpNeat.Evaluation.FitnessInfo)
  nameWithType: BinarySixMultiplexerEvaluationScheme.TestForStopCondition(FitnessInfo)
- uid: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.TestForStopCondition*
  name: TestForStopCondition
  href: api/SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.html#SharpNeat_Tasks_BinarySixMultiplexer_BinarySixMultiplexerEvaluationScheme_TestForStopCondition_
  commentId: Overload:SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.TestForStopCondition
  isSpec: "True"
  fullName: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluationScheme.TestForStopCondition
  nameWithType: BinarySixMultiplexerEvaluationScheme.TestForStopCondition
- uid: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluator
  name: BinarySixMultiplexerEvaluator
  href: api/SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluator.html
  commentId: T:SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluator
  fullName: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluator
  nameWithType: BinarySixMultiplexerEvaluator
- uid: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluator.Evaluate(SharpNeat.IBlackBox{System.Double})
  name: Evaluate(IBlackBox<double>)
  href: api/SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluator.html#SharpNeat_Tasks_BinarySixMultiplexer_BinarySixMultiplexerEvaluator_Evaluate_SharpNeat_IBlackBox_System_Double__
  commentId: M:SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluator.Evaluate(SharpNeat.IBlackBox{System.Double})
  name.vb: Evaluate(IBlackBox(Of Double))
  fullName: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluator.Evaluate(SharpNeat.IBlackBox<double>)
  fullName.vb: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluator.Evaluate(SharpNeat.IBlackBox(Of Double))
  nameWithType: BinarySixMultiplexerEvaluator.Evaluate(IBlackBox<double>)
  nameWithType.vb: BinarySixMultiplexerEvaluator.Evaluate(IBlackBox(Of Double))
- uid: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluator.Evaluate*
  name: Evaluate
  href: api/SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluator.html#SharpNeat_Tasks_BinarySixMultiplexer_BinarySixMultiplexerEvaluator_Evaluate_
  commentId: Overload:SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluator.Evaluate
  isSpec: "True"
  fullName: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerEvaluator.Evaluate
  nameWithType: BinarySixMultiplexerEvaluator.Evaluate
- uid: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerExperimentFactory
  name: BinarySixMultiplexerExperimentFactory
  href: api/SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerExperimentFactory.html
  commentId: T:SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerExperimentFactory
  fullName: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerExperimentFactory
  nameWithType: BinarySixMultiplexerExperimentFactory
- uid: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerExperimentFactory.CreateExperiment(System.IO.Stream)
  name: CreateExperiment(Stream)
  href: api/SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerExperimentFactory.html#SharpNeat_Tasks_BinarySixMultiplexer_BinarySixMultiplexerExperimentFactory_CreateExperiment_System_IO_Stream_
  commentId: M:SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerExperimentFactory.CreateExperiment(System.IO.Stream)
  fullName: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerExperimentFactory.CreateExperiment(System.IO.Stream)
  nameWithType: BinarySixMultiplexerExperimentFactory.CreateExperiment(Stream)
- uid: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerExperimentFactory.CreateExperiment*
  name: CreateExperiment
  href: api/SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerExperimentFactory.html#SharpNeat_Tasks_BinarySixMultiplexer_BinarySixMultiplexerExperimentFactory_CreateExperiment_
  commentId: Overload:SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerExperimentFactory.CreateExperiment
  isSpec: "True"
  fullName: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerExperimentFactory.CreateExperiment
  nameWithType: BinarySixMultiplexerExperimentFactory.CreateExperiment
- uid: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerExperimentFactory.CreateExperimentSinglePrecision(System.IO.Stream)
  name: CreateExperimentSinglePrecision(Stream)
  href: api/SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerExperimentFactory.html#SharpNeat_Tasks_BinarySixMultiplexer_BinarySixMultiplexerExperimentFactory_CreateExperimentSinglePrecision_System_IO_Stream_
  commentId: M:SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerExperimentFactory.CreateExperimentSinglePrecision(System.IO.Stream)
  fullName: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerExperimentFactory.CreateExperimentSinglePrecision(System.IO.Stream)
  nameWithType: BinarySixMultiplexerExperimentFactory.CreateExperimentSinglePrecision(Stream)
- uid: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerExperimentFactory.CreateExperimentSinglePrecision*
  name: CreateExperimentSinglePrecision
  href: api/SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerExperimentFactory.html#SharpNeat_Tasks_BinarySixMultiplexer_BinarySixMultiplexerExperimentFactory_CreateExperimentSinglePrecision_
  commentId: Overload:SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerExperimentFactory.CreateExperimentSinglePrecision
  isSpec: "True"
  fullName: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerExperimentFactory.CreateExperimentSinglePrecision
  nameWithType: BinarySixMultiplexerExperimentFactory.CreateExperimentSinglePrecision
- uid: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerExperimentFactory.Id
  name: Id
  href: api/SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerExperimentFactory.html#SharpNeat_Tasks_BinarySixMultiplexer_BinarySixMultiplexerExperimentFactory_Id
  commentId: P:SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerExperimentFactory.Id
  fullName: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerExperimentFactory.Id
  nameWithType: BinarySixMultiplexerExperimentFactory.Id
- uid: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerExperimentFactory.Id*
  name: Id
  href: api/SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerExperimentFactory.html#SharpNeat_Tasks_BinarySixMultiplexer_BinarySixMultiplexerExperimentFactory_Id_
  commentId: Overload:SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerExperimentFactory.Id
  isSpec: "True"
  fullName: SharpNeat.Tasks.BinarySixMultiplexer.BinarySixMultiplexerExperimentFactory.Id
  nameWithType: BinarySixMultiplexerExperimentFactory.Id
- uid: SharpNeat.Tasks.BinaryThreeMultiplexer
  name: SharpNeat.Tasks.BinaryThreeMultiplexer
  href: api/SharpNeat.Tasks.BinaryThreeMultiplexer.html
  commentId: N:SharpNeat.Tasks.BinaryThreeMultiplexer
  fullName: SharpNeat.Tasks.BinaryThreeMultiplexer
  nameWithType: SharpNeat.Tasks.BinaryThreeMultiplexer
- uid: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme
  name: BinaryThreeMultiplexerEvaluationScheme
  href: api/SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.html
  commentId: T:SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme
  fullName: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme
  nameWithType: BinaryThreeMultiplexerEvaluationScheme
- uid: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.CreateEvaluator
  name: CreateEvaluator()
  href: api/SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.html#SharpNeat_Tasks_BinaryThreeMultiplexer_BinaryThreeMultiplexerEvaluationScheme_CreateEvaluator
  commentId: M:SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.CreateEvaluator
  fullName: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.CreateEvaluator()
  nameWithType: BinaryThreeMultiplexerEvaluationScheme.CreateEvaluator()
- uid: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.CreateEvaluator*
  name: CreateEvaluator
  href: api/SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.html#SharpNeat_Tasks_BinaryThreeMultiplexer_BinaryThreeMultiplexerEvaluationScheme_CreateEvaluator_
  commentId: Overload:SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.CreateEvaluator
  isSpec: "True"
  fullName: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.CreateEvaluator
  nameWithType: BinaryThreeMultiplexerEvaluationScheme.CreateEvaluator
- uid: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.EvaluatorsHaveState
  name: EvaluatorsHaveState
  href: api/SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.html#SharpNeat_Tasks_BinaryThreeMultiplexer_BinaryThreeMultiplexerEvaluationScheme_EvaluatorsHaveState
  commentId: P:SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.EvaluatorsHaveState
  fullName: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.EvaluatorsHaveState
  nameWithType: BinaryThreeMultiplexerEvaluationScheme.EvaluatorsHaveState
- uid: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.EvaluatorsHaveState*
  name: EvaluatorsHaveState
  href: api/SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.html#SharpNeat_Tasks_BinaryThreeMultiplexer_BinaryThreeMultiplexerEvaluationScheme_EvaluatorsHaveState_
  commentId: Overload:SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.EvaluatorsHaveState
  isSpec: "True"
  fullName: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.EvaluatorsHaveState
  nameWithType: BinaryThreeMultiplexerEvaluationScheme.EvaluatorsHaveState
- uid: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.FitnessComparer
  name: FitnessComparer
  href: api/SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.html#SharpNeat_Tasks_BinaryThreeMultiplexer_BinaryThreeMultiplexerEvaluationScheme_FitnessComparer
  commentId: P:SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.FitnessComparer
  fullName: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.FitnessComparer
  nameWithType: BinaryThreeMultiplexerEvaluationScheme.FitnessComparer
- uid: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.FitnessComparer*
  name: FitnessComparer
  href: api/SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.html#SharpNeat_Tasks_BinaryThreeMultiplexer_BinaryThreeMultiplexerEvaluationScheme_FitnessComparer_
  commentId: Overload:SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.FitnessComparer
  isSpec: "True"
  fullName: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.FitnessComparer
  nameWithType: BinaryThreeMultiplexerEvaluationScheme.FitnessComparer
- uid: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.InputCount
  name: InputCount
  href: api/SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.html#SharpNeat_Tasks_BinaryThreeMultiplexer_BinaryThreeMultiplexerEvaluationScheme_InputCount
  commentId: P:SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.InputCount
  fullName: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.InputCount
  nameWithType: BinaryThreeMultiplexerEvaluationScheme.InputCount
- uid: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.InputCount*
  name: InputCount
  href: api/SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.html#SharpNeat_Tasks_BinaryThreeMultiplexer_BinaryThreeMultiplexerEvaluationScheme_InputCount_
  commentId: Overload:SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.InputCount
  isSpec: "True"
  fullName: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.InputCount
  nameWithType: BinaryThreeMultiplexerEvaluationScheme.InputCount
- uid: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.IsDeterministic
  name: IsDeterministic
  href: api/SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.html#SharpNeat_Tasks_BinaryThreeMultiplexer_BinaryThreeMultiplexerEvaluationScheme_IsDeterministic
  commentId: P:SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.IsDeterministic
  fullName: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.IsDeterministic
  nameWithType: BinaryThreeMultiplexerEvaluationScheme.IsDeterministic
- uid: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.IsDeterministic*
  name: IsDeterministic
  href: api/SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.html#SharpNeat_Tasks_BinaryThreeMultiplexer_BinaryThreeMultiplexerEvaluationScheme_IsDeterministic_
  commentId: Overload:SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.IsDeterministic
  isSpec: "True"
  fullName: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.IsDeterministic
  nameWithType: BinaryThreeMultiplexerEvaluationScheme.IsDeterministic
- uid: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.NullFitness
  name: NullFitness
  href: api/SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.html#SharpNeat_Tasks_BinaryThreeMultiplexer_BinaryThreeMultiplexerEvaluationScheme_NullFitness
  commentId: P:SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.NullFitness
  fullName: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.NullFitness
  nameWithType: BinaryThreeMultiplexerEvaluationScheme.NullFitness
- uid: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.NullFitness*
  name: NullFitness
  href: api/SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.html#SharpNeat_Tasks_BinaryThreeMultiplexer_BinaryThreeMultiplexerEvaluationScheme_NullFitness_
  commentId: Overload:SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.NullFitness
  isSpec: "True"
  fullName: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.NullFitness
  nameWithType: BinaryThreeMultiplexerEvaluationScheme.NullFitness
- uid: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.OutputCount
  name: OutputCount
  href: api/SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.html#SharpNeat_Tasks_BinaryThreeMultiplexer_BinaryThreeMultiplexerEvaluationScheme_OutputCount
  commentId: P:SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.OutputCount
  fullName: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.OutputCount
  nameWithType: BinaryThreeMultiplexerEvaluationScheme.OutputCount
- uid: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.OutputCount*
  name: OutputCount
  href: api/SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.html#SharpNeat_Tasks_BinaryThreeMultiplexer_BinaryThreeMultiplexerEvaluationScheme_OutputCount_
  commentId: Overload:SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.OutputCount
  isSpec: "True"
  fullName: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.OutputCount
  nameWithType: BinaryThreeMultiplexerEvaluationScheme.OutputCount
- uid: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.TestForStopCondition(SharpNeat.Evaluation.FitnessInfo)
  name: TestForStopCondition(FitnessInfo)
  href: api/SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.html#SharpNeat_Tasks_BinaryThreeMultiplexer_BinaryThreeMultiplexerEvaluationScheme_TestForStopCondition_SharpNeat_Evaluation_FitnessInfo_
  commentId: M:SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.TestForStopCondition(SharpNeat.Evaluation.FitnessInfo)
  fullName: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.TestForStopCondition(SharpNeat.Evaluation.FitnessInfo)
  nameWithType: BinaryThreeMultiplexerEvaluationScheme.TestForStopCondition(FitnessInfo)
- uid: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.TestForStopCondition*
  name: TestForStopCondition
  href: api/SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.html#SharpNeat_Tasks_BinaryThreeMultiplexer_BinaryThreeMultiplexerEvaluationScheme_TestForStopCondition_
  commentId: Overload:SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.TestForStopCondition
  isSpec: "True"
  fullName: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluationScheme.TestForStopCondition
  nameWithType: BinaryThreeMultiplexerEvaluationScheme.TestForStopCondition
- uid: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluator
  name: BinaryThreeMultiplexerEvaluator
  href: api/SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluator.html
  commentId: T:SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluator
  fullName: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluator
  nameWithType: BinaryThreeMultiplexerEvaluator
- uid: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluator.Evaluate(SharpNeat.IBlackBox{System.Double})
  name: Evaluate(IBlackBox<double>)
  href: api/SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluator.html#SharpNeat_Tasks_BinaryThreeMultiplexer_BinaryThreeMultiplexerEvaluator_Evaluate_SharpNeat_IBlackBox_System_Double__
  commentId: M:SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluator.Evaluate(SharpNeat.IBlackBox{System.Double})
  name.vb: Evaluate(IBlackBox(Of Double))
  fullName: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluator.Evaluate(SharpNeat.IBlackBox<double>)
  fullName.vb: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluator.Evaluate(SharpNeat.IBlackBox(Of Double))
  nameWithType: BinaryThreeMultiplexerEvaluator.Evaluate(IBlackBox<double>)
  nameWithType.vb: BinaryThreeMultiplexerEvaluator.Evaluate(IBlackBox(Of Double))
- uid: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluator.Evaluate*
  name: Evaluate
  href: api/SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluator.html#SharpNeat_Tasks_BinaryThreeMultiplexer_BinaryThreeMultiplexerEvaluator_Evaluate_
  commentId: Overload:SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluator.Evaluate
  isSpec: "True"
  fullName: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerEvaluator.Evaluate
  nameWithType: BinaryThreeMultiplexerEvaluator.Evaluate
- uid: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerExperimentFactory
  name: BinaryThreeMultiplexerExperimentFactory
  href: api/SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerExperimentFactory.html
  commentId: T:SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerExperimentFactory
  fullName: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerExperimentFactory
  nameWithType: BinaryThreeMultiplexerExperimentFactory
- uid: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerExperimentFactory.CreateExperiment(System.IO.Stream)
  name: CreateExperiment(Stream)
  href: api/SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerExperimentFactory.html#SharpNeat_Tasks_BinaryThreeMultiplexer_BinaryThreeMultiplexerExperimentFactory_CreateExperiment_System_IO_Stream_
  commentId: M:SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerExperimentFactory.CreateExperiment(System.IO.Stream)
  fullName: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerExperimentFactory.CreateExperiment(System.IO.Stream)
  nameWithType: BinaryThreeMultiplexerExperimentFactory.CreateExperiment(Stream)
- uid: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerExperimentFactory.CreateExperiment*
  name: CreateExperiment
  href: api/SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerExperimentFactory.html#SharpNeat_Tasks_BinaryThreeMultiplexer_BinaryThreeMultiplexerExperimentFactory_CreateExperiment_
  commentId: Overload:SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerExperimentFactory.CreateExperiment
  isSpec: "True"
  fullName: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerExperimentFactory.CreateExperiment
  nameWithType: BinaryThreeMultiplexerExperimentFactory.CreateExperiment
- uid: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerExperimentFactory.CreateExperimentSinglePrecision(System.IO.Stream)
  name: CreateExperimentSinglePrecision(Stream)
  href: api/SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerExperimentFactory.html#SharpNeat_Tasks_BinaryThreeMultiplexer_BinaryThreeMultiplexerExperimentFactory_CreateExperimentSinglePrecision_System_IO_Stream_
  commentId: M:SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerExperimentFactory.CreateExperimentSinglePrecision(System.IO.Stream)
  fullName: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerExperimentFactory.CreateExperimentSinglePrecision(System.IO.Stream)
  nameWithType: BinaryThreeMultiplexerExperimentFactory.CreateExperimentSinglePrecision(Stream)
- uid: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerExperimentFactory.CreateExperimentSinglePrecision*
  name: CreateExperimentSinglePrecision
  href: api/SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerExperimentFactory.html#SharpNeat_Tasks_BinaryThreeMultiplexer_BinaryThreeMultiplexerExperimentFactory_CreateExperimentSinglePrecision_
  commentId: Overload:SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerExperimentFactory.CreateExperimentSinglePrecision
  isSpec: "True"
  fullName: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerExperimentFactory.CreateExperimentSinglePrecision
  nameWithType: BinaryThreeMultiplexerExperimentFactory.CreateExperimentSinglePrecision
- uid: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerExperimentFactory.Id
  name: Id
  href: api/SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerExperimentFactory.html#SharpNeat_Tasks_BinaryThreeMultiplexer_BinaryThreeMultiplexerExperimentFactory_Id
  commentId: P:SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerExperimentFactory.Id
  fullName: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerExperimentFactory.Id
  nameWithType: BinaryThreeMultiplexerExperimentFactory.Id
- uid: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerExperimentFactory.Id*
  name: Id
  href: api/SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerExperimentFactory.html#SharpNeat_Tasks_BinaryThreeMultiplexer_BinaryThreeMultiplexerExperimentFactory_Id_
  commentId: Overload:SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerExperimentFactory.Id
  isSpec: "True"
  fullName: SharpNeat.Tasks.BinaryThreeMultiplexer.BinaryThreeMultiplexerExperimentFactory.Id
  nameWithType: BinaryThreeMultiplexerExperimentFactory.Id
- uid: SharpNeat.Tasks.BinaryThreeMultiplexerTests
  name: BinaryThreeMultiplexerTests
  href: api/SharpNeat.Tasks.BinaryThreeMultiplexerTests.html
  commentId: T:SharpNeat.Tasks.BinaryThreeMultiplexerTests
  fullName: SharpNeat.Tasks.BinaryThreeMultiplexerTests
  nameWithType: BinaryThreeMultiplexerTests
- uid: SharpNeat.Tasks.BinaryThreeMultiplexerTests.VerifyNeuralNetResponse(System.Boolean)
  name: VerifyNeuralNetResponse(bool)
  href: api/SharpNeat.Tasks.BinaryThreeMultiplexerTests.html#SharpNeat_Tasks_BinaryThreeMultiplexerTests_VerifyNeuralNetResponse_System_Boolean_
  commentId: M:SharpNeat.Tasks.BinaryThreeMultiplexerTests.VerifyNeuralNetResponse(System.Boolean)
  name.vb: VerifyNeuralNetResponse(Boolean)
  fullName: SharpNeat.Tasks.BinaryThreeMultiplexerTests.VerifyNeuralNetResponse(bool)
  fullName.vb: SharpNeat.Tasks.BinaryThreeMultiplexerTests.VerifyNeuralNetResponse(Boolean)
  nameWithType: BinaryThreeMultiplexerTests.VerifyNeuralNetResponse(bool)
  nameWithType.vb: BinaryThreeMultiplexerTests.VerifyNeuralNetResponse(Boolean)
- uid: SharpNeat.Tasks.BinaryThreeMultiplexerTests.VerifyNeuralNetResponse*
  name: VerifyNeuralNetResponse
  href: api/SharpNeat.Tasks.BinaryThreeMultiplexerTests.html#SharpNeat_Tasks_BinaryThreeMultiplexerTests_VerifyNeuralNetResponse_
  commentId: Overload:SharpNeat.Tasks.BinaryThreeMultiplexerTests.VerifyNeuralNetResponse
  isSpec: "True"
  fullName: SharpNeat.Tasks.BinaryThreeMultiplexerTests.VerifyNeuralNetResponse
  nameWithType: BinaryThreeMultiplexerTests.VerifyNeuralNetResponse
- uid: SharpNeat.Tasks.CartPole.DoublePole
  name: SharpNeat.Tasks.CartPole.DoublePole
  href: api/SharpNeat.Tasks.CartPole.DoublePole.html
  commentId: N:SharpNeat.Tasks.CartPole.DoublePole
  fullName: SharpNeat.Tasks.CartPole.DoublePole
  nameWithType: SharpNeat.Tasks.CartPole.DoublePole
- uid: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme
  name: CartDoublePoleEvaluationScheme
  href: api/SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.html
  commentId: T:SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme
  fullName: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme
  nameWithType: CartDoublePoleEvaluationScheme
- uid: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.CreateEvaluator
  name: CreateEvaluator()
  href: api/SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.html#SharpNeat_Tasks_CartPole_DoublePole_CartDoublePoleEvaluationScheme_CreateEvaluator
  commentId: M:SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.CreateEvaluator
  fullName: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.CreateEvaluator()
  nameWithType: CartDoublePoleEvaluationScheme.CreateEvaluator()
- uid: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.CreateEvaluator*
  name: CreateEvaluator
  href: api/SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.html#SharpNeat_Tasks_CartPole_DoublePole_CartDoublePoleEvaluationScheme_CreateEvaluator_
  commentId: Overload:SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.CreateEvaluator
  isSpec: "True"
  fullName: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.CreateEvaluator
  nameWithType: CartDoublePoleEvaluationScheme.CreateEvaluator
- uid: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.EvaluatorsHaveState
  name: EvaluatorsHaveState
  href: api/SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.html#SharpNeat_Tasks_CartPole_DoublePole_CartDoublePoleEvaluationScheme_EvaluatorsHaveState
  commentId: P:SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.EvaluatorsHaveState
  fullName: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.EvaluatorsHaveState
  nameWithType: CartDoublePoleEvaluationScheme.EvaluatorsHaveState
- uid: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.EvaluatorsHaveState*
  name: EvaluatorsHaveState
  href: api/SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.html#SharpNeat_Tasks_CartPole_DoublePole_CartDoublePoleEvaluationScheme_EvaluatorsHaveState_
  commentId: Overload:SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.EvaluatorsHaveState
  isSpec: "True"
  fullName: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.EvaluatorsHaveState
  nameWithType: CartDoublePoleEvaluationScheme.EvaluatorsHaveState
- uid: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.FitnessComparer
  name: FitnessComparer
  href: api/SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.html#SharpNeat_Tasks_CartPole_DoublePole_CartDoublePoleEvaluationScheme_FitnessComparer
  commentId: P:SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.FitnessComparer
  fullName: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.FitnessComparer
  nameWithType: CartDoublePoleEvaluationScheme.FitnessComparer
- uid: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.FitnessComparer*
  name: FitnessComparer
  href: api/SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.html#SharpNeat_Tasks_CartPole_DoublePole_CartDoublePoleEvaluationScheme_FitnessComparer_
  commentId: Overload:SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.FitnessComparer
  isSpec: "True"
  fullName: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.FitnessComparer
  nameWithType: CartDoublePoleEvaluationScheme.FitnessComparer
- uid: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.InputCount
  name: InputCount
  href: api/SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.html#SharpNeat_Tasks_CartPole_DoublePole_CartDoublePoleEvaluationScheme_InputCount
  commentId: P:SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.InputCount
  fullName: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.InputCount
  nameWithType: CartDoublePoleEvaluationScheme.InputCount
- uid: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.InputCount*
  name: InputCount
  href: api/SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.html#SharpNeat_Tasks_CartPole_DoublePole_CartDoublePoleEvaluationScheme_InputCount_
  commentId: Overload:SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.InputCount
  isSpec: "True"
  fullName: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.InputCount
  nameWithType: CartDoublePoleEvaluationScheme.InputCount
- uid: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.IsDeterministic
  name: IsDeterministic
  href: api/SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.html#SharpNeat_Tasks_CartPole_DoublePole_CartDoublePoleEvaluationScheme_IsDeterministic
  commentId: P:SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.IsDeterministic
  fullName: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.IsDeterministic
  nameWithType: CartDoublePoleEvaluationScheme.IsDeterministic
- uid: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.IsDeterministic*
  name: IsDeterministic
  href: api/SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.html#SharpNeat_Tasks_CartPole_DoublePole_CartDoublePoleEvaluationScheme_IsDeterministic_
  commentId: Overload:SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.IsDeterministic
  isSpec: "True"
  fullName: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.IsDeterministic
  nameWithType: CartDoublePoleEvaluationScheme.IsDeterministic
- uid: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.NullFitness
  name: NullFitness
  href: api/SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.html#SharpNeat_Tasks_CartPole_DoublePole_CartDoublePoleEvaluationScheme_NullFitness
  commentId: P:SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.NullFitness
  fullName: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.NullFitness
  nameWithType: CartDoublePoleEvaluationScheme.NullFitness
- uid: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.NullFitness*
  name: NullFitness
  href: api/SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.html#SharpNeat_Tasks_CartPole_DoublePole_CartDoublePoleEvaluationScheme_NullFitness_
  commentId: Overload:SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.NullFitness
  isSpec: "True"
  fullName: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.NullFitness
  nameWithType: CartDoublePoleEvaluationScheme.NullFitness
- uid: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.OutputCount
  name: OutputCount
  href: api/SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.html#SharpNeat_Tasks_CartPole_DoublePole_CartDoublePoleEvaluationScheme_OutputCount
  commentId: P:SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.OutputCount
  fullName: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.OutputCount
  nameWithType: CartDoublePoleEvaluationScheme.OutputCount
- uid: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.OutputCount*
  name: OutputCount
  href: api/SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.html#SharpNeat_Tasks_CartPole_DoublePole_CartDoublePoleEvaluationScheme_OutputCount_
  commentId: Overload:SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.OutputCount
  isSpec: "True"
  fullName: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.OutputCount
  nameWithType: CartDoublePoleEvaluationScheme.OutputCount
- uid: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.TestForStopCondition(SharpNeat.Evaluation.FitnessInfo)
  name: TestForStopCondition(FitnessInfo)
  href: api/SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.html#SharpNeat_Tasks_CartPole_DoublePole_CartDoublePoleEvaluationScheme_TestForStopCondition_SharpNeat_Evaluation_FitnessInfo_
  commentId: M:SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.TestForStopCondition(SharpNeat.Evaluation.FitnessInfo)
  fullName: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.TestForStopCondition(SharpNeat.Evaluation.FitnessInfo)
  nameWithType: CartDoublePoleEvaluationScheme.TestForStopCondition(FitnessInfo)
- uid: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.TestForStopCondition*
  name: TestForStopCondition
  href: api/SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.html#SharpNeat_Tasks_CartPole_DoublePole_CartDoublePoleEvaluationScheme_TestForStopCondition_
  commentId: Overload:SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.TestForStopCondition
  isSpec: "True"
  fullName: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluationScheme.TestForStopCondition
  nameWithType: CartDoublePoleEvaluationScheme.TestForStopCondition
- uid: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluator
  name: CartDoublePoleEvaluator
  href: api/SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluator.html
  commentId: T:SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluator
  fullName: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluator
  nameWithType: CartDoublePoleEvaluator
- uid: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluator.#ctor
  name: CartDoublePoleEvaluator()
  href: api/SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluator.html#SharpNeat_Tasks_CartPole_DoublePole_CartDoublePoleEvaluator__ctor
  commentId: M:SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluator.#ctor
  name.vb: New()
  fullName: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluator.CartDoublePoleEvaluator()
  fullName.vb: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluator.New()
  nameWithType: CartDoublePoleEvaluator.CartDoublePoleEvaluator()
  nameWithType.vb: CartDoublePoleEvaluator.New()
- uid: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluator.#ctor(System.Int32)
  name: CartDoublePoleEvaluator(int)
  href: api/SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluator.html#SharpNeat_Tasks_CartPole_DoublePole_CartDoublePoleEvaluator__ctor_System_Int32_
  commentId: M:SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluator.#ctor(System.Int32)
  name.vb: New(Integer)
  fullName: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluator.CartDoublePoleEvaluator(int)
  fullName.vb: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluator.New(Integer)
  nameWithType: CartDoublePoleEvaluator.CartDoublePoleEvaluator(int)
  nameWithType.vb: CartDoublePoleEvaluator.New(Integer)
- uid: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluator.#ctor*
  name: CartDoublePoleEvaluator
  href: api/SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluator.html#SharpNeat_Tasks_CartPole_DoublePole_CartDoublePoleEvaluator__ctor_
  commentId: Overload:SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluator.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluator.CartDoublePoleEvaluator
  fullName.vb: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluator.New
  nameWithType: CartDoublePoleEvaluator.CartDoublePoleEvaluator
  nameWithType.vb: CartDoublePoleEvaluator.New
- uid: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluator.Evaluate(SharpNeat.IBlackBox{System.Double})
  name: Evaluate(IBlackBox<double>)
  href: api/SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluator.html#SharpNeat_Tasks_CartPole_DoublePole_CartDoublePoleEvaluator_Evaluate_SharpNeat_IBlackBox_System_Double__
  commentId: M:SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluator.Evaluate(SharpNeat.IBlackBox{System.Double})
  name.vb: Evaluate(IBlackBox(Of Double))
  fullName: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluator.Evaluate(SharpNeat.IBlackBox<double>)
  fullName.vb: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluator.Evaluate(SharpNeat.IBlackBox(Of Double))
  nameWithType: CartDoublePoleEvaluator.Evaluate(IBlackBox<double>)
  nameWithType.vb: CartDoublePoleEvaluator.Evaluate(IBlackBox(Of Double))
- uid: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluator.Evaluate*
  name: Evaluate
  href: api/SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluator.html#SharpNeat_Tasks_CartPole_DoublePole_CartDoublePoleEvaluator_Evaluate_
  commentId: Overload:SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluator.Evaluate
  isSpec: "True"
  fullName: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluator.Evaluate
  nameWithType: CartDoublePoleEvaluator.Evaluate
- uid: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluator.RunTrial(SharpNeat.IBlackBox{System.Double},System.Single,System.Single,System.Single)
  name: RunTrial(IBlackBox<double>, float, float, float)
  href: api/SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluator.html#SharpNeat_Tasks_CartPole_DoublePole_CartDoublePoleEvaluator_RunTrial_SharpNeat_IBlackBox_System_Double__System_Single_System_Single_System_Single_
  commentId: M:SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluator.RunTrial(SharpNeat.IBlackBox{System.Double},System.Single,System.Single,System.Single)
  name.vb: RunTrial(IBlackBox(Of Double), Single, Single, Single)
  fullName: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluator.RunTrial(SharpNeat.IBlackBox<double>, float, float, float)
  fullName.vb: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluator.RunTrial(SharpNeat.IBlackBox(Of Double), Single, Single, Single)
  nameWithType: CartDoublePoleEvaluator.RunTrial(IBlackBox<double>, float, float, float)
  nameWithType.vb: CartDoublePoleEvaluator.RunTrial(IBlackBox(Of Double), Single, Single, Single)
- uid: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluator.RunTrial*
  name: RunTrial
  href: api/SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluator.html#SharpNeat_Tasks_CartPole_DoublePole_CartDoublePoleEvaluator_RunTrial_
  commentId: Overload:SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluator.RunTrial
  isSpec: "True"
  fullName: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleEvaluator.RunTrial
  nameWithType: CartDoublePoleEvaluator.RunTrial
- uid: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleExperimentFactory
  name: CartDoublePoleExperimentFactory
  href: api/SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleExperimentFactory.html
  commentId: T:SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleExperimentFactory
  fullName: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleExperimentFactory
  nameWithType: CartDoublePoleExperimentFactory
- uid: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleExperimentFactory.CreateExperiment(System.IO.Stream)
  name: CreateExperiment(Stream)
  href: api/SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleExperimentFactory.html#SharpNeat_Tasks_CartPole_DoublePole_CartDoublePoleExperimentFactory_CreateExperiment_System_IO_Stream_
  commentId: M:SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleExperimentFactory.CreateExperiment(System.IO.Stream)
  fullName: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleExperimentFactory.CreateExperiment(System.IO.Stream)
  nameWithType: CartDoublePoleExperimentFactory.CreateExperiment(Stream)
- uid: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleExperimentFactory.CreateExperiment*
  name: CreateExperiment
  href: api/SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleExperimentFactory.html#SharpNeat_Tasks_CartPole_DoublePole_CartDoublePoleExperimentFactory_CreateExperiment_
  commentId: Overload:SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleExperimentFactory.CreateExperiment
  isSpec: "True"
  fullName: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleExperimentFactory.CreateExperiment
  nameWithType: CartDoublePoleExperimentFactory.CreateExperiment
- uid: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleExperimentFactory.CreateExperimentSinglePrecision(System.IO.Stream)
  name: CreateExperimentSinglePrecision(Stream)
  href: api/SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleExperimentFactory.html#SharpNeat_Tasks_CartPole_DoublePole_CartDoublePoleExperimentFactory_CreateExperimentSinglePrecision_System_IO_Stream_
  commentId: M:SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleExperimentFactory.CreateExperimentSinglePrecision(System.IO.Stream)
  fullName: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleExperimentFactory.CreateExperimentSinglePrecision(System.IO.Stream)
  nameWithType: CartDoublePoleExperimentFactory.CreateExperimentSinglePrecision(Stream)
- uid: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleExperimentFactory.CreateExperimentSinglePrecision*
  name: CreateExperimentSinglePrecision
  href: api/SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleExperimentFactory.html#SharpNeat_Tasks_CartPole_DoublePole_CartDoublePoleExperimentFactory_CreateExperimentSinglePrecision_
  commentId: Overload:SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleExperimentFactory.CreateExperimentSinglePrecision
  isSpec: "True"
  fullName: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleExperimentFactory.CreateExperimentSinglePrecision
  nameWithType: CartDoublePoleExperimentFactory.CreateExperimentSinglePrecision
- uid: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleExperimentFactory.Id
  name: Id
  href: api/SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleExperimentFactory.html#SharpNeat_Tasks_CartPole_DoublePole_CartDoublePoleExperimentFactory_Id
  commentId: P:SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleExperimentFactory.Id
  fullName: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleExperimentFactory.Id
  nameWithType: CartDoublePoleExperimentFactory.Id
- uid: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleExperimentFactory.Id*
  name: Id
  href: api/SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleExperimentFactory.html#SharpNeat_Tasks_CartPole_DoublePole_CartDoublePoleExperimentFactory_Id_
  commentId: Overload:SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleExperimentFactory.Id
  isSpec: "True"
  fullName: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePoleExperimentFactory.Id
  nameWithType: CartDoublePoleExperimentFactory.Id
- uid: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePolePhysicsRK4
  name: CartDoublePolePhysicsRK4
  href: api/SharpNeat.Tasks.CartPole.DoublePole.CartDoublePolePhysicsRK4.html
  commentId: T:SharpNeat.Tasks.CartPole.DoublePole.CartDoublePolePhysicsRK4
  fullName: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePolePhysicsRK4
  nameWithType: CartDoublePolePhysicsRK4
- uid: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePolePhysicsRK4.ResetState(System.Single,System.Single,System.Single)
  name: ResetState(float, float, float)
  href: api/SharpNeat.Tasks.CartPole.DoublePole.CartDoublePolePhysicsRK4.html#SharpNeat_Tasks_CartPole_DoublePole_CartDoublePolePhysicsRK4_ResetState_System_Single_System_Single_System_Single_
  commentId: M:SharpNeat.Tasks.CartPole.DoublePole.CartDoublePolePhysicsRK4.ResetState(System.Single,System.Single,System.Single)
  name.vb: ResetState(Single, Single, Single)
  fullName: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePolePhysicsRK4.ResetState(float, float, float)
  fullName.vb: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePolePhysicsRK4.ResetState(Single, Single, Single)
  nameWithType: CartDoublePolePhysicsRK4.ResetState(float, float, float)
  nameWithType.vb: CartDoublePolePhysicsRK4.ResetState(Single, Single, Single)
- uid: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePolePhysicsRK4.ResetState*
  name: ResetState
  href: api/SharpNeat.Tasks.CartPole.DoublePole.CartDoublePolePhysicsRK4.html#SharpNeat_Tasks_CartPole_DoublePole_CartDoublePolePhysicsRK4_ResetState_
  commentId: Overload:SharpNeat.Tasks.CartPole.DoublePole.CartDoublePolePhysicsRK4.ResetState
  isSpec: "True"
  fullName: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePolePhysicsRK4.ResetState
  nameWithType: CartDoublePolePhysicsRK4.ResetState
- uid: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePolePhysicsRK4.State
  name: State
  href: api/SharpNeat.Tasks.CartPole.DoublePole.CartDoublePolePhysicsRK4.html#SharpNeat_Tasks_CartPole_DoublePole_CartDoublePolePhysicsRK4_State
  commentId: P:SharpNeat.Tasks.CartPole.DoublePole.CartDoublePolePhysicsRK4.State
  fullName: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePolePhysicsRK4.State
  nameWithType: CartDoublePolePhysicsRK4.State
- uid: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePolePhysicsRK4.State*
  name: State
  href: api/SharpNeat.Tasks.CartPole.DoublePole.CartDoublePolePhysicsRK4.html#SharpNeat_Tasks_CartPole_DoublePole_CartDoublePolePhysicsRK4_State_
  commentId: Overload:SharpNeat.Tasks.CartPole.DoublePole.CartDoublePolePhysicsRK4.State
  isSpec: "True"
  fullName: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePolePhysicsRK4.State
  nameWithType: CartDoublePolePhysicsRK4.State
- uid: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePolePhysicsRK4.Update(System.Single)
  name: Update(float)
  href: api/SharpNeat.Tasks.CartPole.DoublePole.CartDoublePolePhysicsRK4.html#SharpNeat_Tasks_CartPole_DoublePole_CartDoublePolePhysicsRK4_Update_System_Single_
  commentId: M:SharpNeat.Tasks.CartPole.DoublePole.CartDoublePolePhysicsRK4.Update(System.Single)
  name.vb: Update(Single)
  fullName: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePolePhysicsRK4.Update(float)
  fullName.vb: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePolePhysicsRK4.Update(Single)
  nameWithType: CartDoublePolePhysicsRK4.Update(float)
  nameWithType.vb: CartDoublePolePhysicsRK4.Update(Single)
- uid: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePolePhysicsRK4.Update*
  name: Update
  href: api/SharpNeat.Tasks.CartPole.DoublePole.CartDoublePolePhysicsRK4.html#SharpNeat_Tasks_CartPole_DoublePole_CartDoublePolePhysicsRK4_Update_
  commentId: Overload:SharpNeat.Tasks.CartPole.DoublePole.CartDoublePolePhysicsRK4.Update
  isSpec: "True"
  fullName: SharpNeat.Tasks.CartPole.DoublePole.CartDoublePolePhysicsRK4.Update
  nameWithType: CartDoublePolePhysicsRK4.Update
- uid: SharpNeat.Tasks.CartPole.SinglePole
  name: SharpNeat.Tasks.CartPole.SinglePole
  href: api/SharpNeat.Tasks.CartPole.SinglePole.html
  commentId: N:SharpNeat.Tasks.CartPole.SinglePole
  fullName: SharpNeat.Tasks.CartPole.SinglePole
  nameWithType: SharpNeat.Tasks.CartPole.SinglePole
- uid: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme
  name: CartSinglePoleEvaluationScheme
  href: api/SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.html
  commentId: T:SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme
  fullName: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme
  nameWithType: CartSinglePoleEvaluationScheme
- uid: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.CreateEvaluator
  name: CreateEvaluator()
  href: api/SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.html#SharpNeat_Tasks_CartPole_SinglePole_CartSinglePoleEvaluationScheme_CreateEvaluator
  commentId: M:SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.CreateEvaluator
  fullName: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.CreateEvaluator()
  nameWithType: CartSinglePoleEvaluationScheme.CreateEvaluator()
- uid: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.CreateEvaluator*
  name: CreateEvaluator
  href: api/SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.html#SharpNeat_Tasks_CartPole_SinglePole_CartSinglePoleEvaluationScheme_CreateEvaluator_
  commentId: Overload:SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.CreateEvaluator
  isSpec: "True"
  fullName: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.CreateEvaluator
  nameWithType: CartSinglePoleEvaluationScheme.CreateEvaluator
- uid: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.EvaluatorsHaveState
  name: EvaluatorsHaveState
  href: api/SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.html#SharpNeat_Tasks_CartPole_SinglePole_CartSinglePoleEvaluationScheme_EvaluatorsHaveState
  commentId: P:SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.EvaluatorsHaveState
  fullName: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.EvaluatorsHaveState
  nameWithType: CartSinglePoleEvaluationScheme.EvaluatorsHaveState
- uid: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.EvaluatorsHaveState*
  name: EvaluatorsHaveState
  href: api/SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.html#SharpNeat_Tasks_CartPole_SinglePole_CartSinglePoleEvaluationScheme_EvaluatorsHaveState_
  commentId: Overload:SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.EvaluatorsHaveState
  isSpec: "True"
  fullName: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.EvaluatorsHaveState
  nameWithType: CartSinglePoleEvaluationScheme.EvaluatorsHaveState
- uid: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.FitnessComparer
  name: FitnessComparer
  href: api/SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.html#SharpNeat_Tasks_CartPole_SinglePole_CartSinglePoleEvaluationScheme_FitnessComparer
  commentId: P:SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.FitnessComparer
  fullName: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.FitnessComparer
  nameWithType: CartSinglePoleEvaluationScheme.FitnessComparer
- uid: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.FitnessComparer*
  name: FitnessComparer
  href: api/SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.html#SharpNeat_Tasks_CartPole_SinglePole_CartSinglePoleEvaluationScheme_FitnessComparer_
  commentId: Overload:SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.FitnessComparer
  isSpec: "True"
  fullName: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.FitnessComparer
  nameWithType: CartSinglePoleEvaluationScheme.FitnessComparer
- uid: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.InputCount
  name: InputCount
  href: api/SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.html#SharpNeat_Tasks_CartPole_SinglePole_CartSinglePoleEvaluationScheme_InputCount
  commentId: P:SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.InputCount
  fullName: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.InputCount
  nameWithType: CartSinglePoleEvaluationScheme.InputCount
- uid: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.InputCount*
  name: InputCount
  href: api/SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.html#SharpNeat_Tasks_CartPole_SinglePole_CartSinglePoleEvaluationScheme_InputCount_
  commentId: Overload:SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.InputCount
  isSpec: "True"
  fullName: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.InputCount
  nameWithType: CartSinglePoleEvaluationScheme.InputCount
- uid: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.IsDeterministic
  name: IsDeterministic
  href: api/SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.html#SharpNeat_Tasks_CartPole_SinglePole_CartSinglePoleEvaluationScheme_IsDeterministic
  commentId: P:SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.IsDeterministic
  fullName: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.IsDeterministic
  nameWithType: CartSinglePoleEvaluationScheme.IsDeterministic
- uid: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.IsDeterministic*
  name: IsDeterministic
  href: api/SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.html#SharpNeat_Tasks_CartPole_SinglePole_CartSinglePoleEvaluationScheme_IsDeterministic_
  commentId: Overload:SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.IsDeterministic
  isSpec: "True"
  fullName: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.IsDeterministic
  nameWithType: CartSinglePoleEvaluationScheme.IsDeterministic
- uid: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.NullFitness
  name: NullFitness
  href: api/SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.html#SharpNeat_Tasks_CartPole_SinglePole_CartSinglePoleEvaluationScheme_NullFitness
  commentId: P:SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.NullFitness
  fullName: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.NullFitness
  nameWithType: CartSinglePoleEvaluationScheme.NullFitness
- uid: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.NullFitness*
  name: NullFitness
  href: api/SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.html#SharpNeat_Tasks_CartPole_SinglePole_CartSinglePoleEvaluationScheme_NullFitness_
  commentId: Overload:SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.NullFitness
  isSpec: "True"
  fullName: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.NullFitness
  nameWithType: CartSinglePoleEvaluationScheme.NullFitness
- uid: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.OutputCount
  name: OutputCount
  href: api/SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.html#SharpNeat_Tasks_CartPole_SinglePole_CartSinglePoleEvaluationScheme_OutputCount
  commentId: P:SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.OutputCount
  fullName: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.OutputCount
  nameWithType: CartSinglePoleEvaluationScheme.OutputCount
- uid: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.OutputCount*
  name: OutputCount
  href: api/SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.html#SharpNeat_Tasks_CartPole_SinglePole_CartSinglePoleEvaluationScheme_OutputCount_
  commentId: Overload:SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.OutputCount
  isSpec: "True"
  fullName: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.OutputCount
  nameWithType: CartSinglePoleEvaluationScheme.OutputCount
- uid: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.TestForStopCondition(SharpNeat.Evaluation.FitnessInfo)
  name: TestForStopCondition(FitnessInfo)
  href: api/SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.html#SharpNeat_Tasks_CartPole_SinglePole_CartSinglePoleEvaluationScheme_TestForStopCondition_SharpNeat_Evaluation_FitnessInfo_
  commentId: M:SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.TestForStopCondition(SharpNeat.Evaluation.FitnessInfo)
  fullName: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.TestForStopCondition(SharpNeat.Evaluation.FitnessInfo)
  nameWithType: CartSinglePoleEvaluationScheme.TestForStopCondition(FitnessInfo)
- uid: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.TestForStopCondition*
  name: TestForStopCondition
  href: api/SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.html#SharpNeat_Tasks_CartPole_SinglePole_CartSinglePoleEvaluationScheme_TestForStopCondition_
  commentId: Overload:SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.TestForStopCondition
  isSpec: "True"
  fullName: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluationScheme.TestForStopCondition
  nameWithType: CartSinglePoleEvaluationScheme.TestForStopCondition
- uid: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluator
  name: CartSinglePoleEvaluator
  href: api/SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluator.html
  commentId: T:SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluator
  fullName: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluator
  nameWithType: CartSinglePoleEvaluator
- uid: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluator.#ctor
  name: CartSinglePoleEvaluator()
  href: api/SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluator.html#SharpNeat_Tasks_CartPole_SinglePole_CartSinglePoleEvaluator__ctor
  commentId: M:SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluator.#ctor
  name.vb: New()
  fullName: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluator.CartSinglePoleEvaluator()
  fullName.vb: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluator.New()
  nameWithType: CartSinglePoleEvaluator.CartSinglePoleEvaluator()
  nameWithType.vb: CartSinglePoleEvaluator.New()
- uid: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluator.#ctor(System.Int32)
  name: CartSinglePoleEvaluator(int)
  href: api/SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluator.html#SharpNeat_Tasks_CartPole_SinglePole_CartSinglePoleEvaluator__ctor_System_Int32_
  commentId: M:SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluator.#ctor(System.Int32)
  name.vb: New(Integer)
  fullName: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluator.CartSinglePoleEvaluator(int)
  fullName.vb: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluator.New(Integer)
  nameWithType: CartSinglePoleEvaluator.CartSinglePoleEvaluator(int)
  nameWithType.vb: CartSinglePoleEvaluator.New(Integer)
- uid: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluator.#ctor*
  name: CartSinglePoleEvaluator
  href: api/SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluator.html#SharpNeat_Tasks_CartPole_SinglePole_CartSinglePoleEvaluator__ctor_
  commentId: Overload:SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluator.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluator.CartSinglePoleEvaluator
  fullName.vb: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluator.New
  nameWithType: CartSinglePoleEvaluator.CartSinglePoleEvaluator
  nameWithType.vb: CartSinglePoleEvaluator.New
- uid: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluator.Evaluate(SharpNeat.IBlackBox{System.Double})
  name: Evaluate(IBlackBox<double>)
  href: api/SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluator.html#SharpNeat_Tasks_CartPole_SinglePole_CartSinglePoleEvaluator_Evaluate_SharpNeat_IBlackBox_System_Double__
  commentId: M:SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluator.Evaluate(SharpNeat.IBlackBox{System.Double})
  name.vb: Evaluate(IBlackBox(Of Double))
  fullName: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluator.Evaluate(SharpNeat.IBlackBox<double>)
  fullName.vb: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluator.Evaluate(SharpNeat.IBlackBox(Of Double))
  nameWithType: CartSinglePoleEvaluator.Evaluate(IBlackBox<double>)
  nameWithType.vb: CartSinglePoleEvaluator.Evaluate(IBlackBox(Of Double))
- uid: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluator.Evaluate*
  name: Evaluate
  href: api/SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluator.html#SharpNeat_Tasks_CartPole_SinglePole_CartSinglePoleEvaluator_Evaluate_
  commentId: Overload:SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluator.Evaluate
  isSpec: "True"
  fullName: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluator.Evaluate
  nameWithType: CartSinglePoleEvaluator.Evaluate
- uid: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluator.RunTrial(SharpNeat.IBlackBox{System.Double},System.Single,System.Single)
  name: RunTrial(IBlackBox<double>, float, float)
  href: api/SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluator.html#SharpNeat_Tasks_CartPole_SinglePole_CartSinglePoleEvaluator_RunTrial_SharpNeat_IBlackBox_System_Double__System_Single_System_Single_
  commentId: M:SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluator.RunTrial(SharpNeat.IBlackBox{System.Double},System.Single,System.Single)
  name.vb: RunTrial(IBlackBox(Of Double), Single, Single)
  fullName: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluator.RunTrial(SharpNeat.IBlackBox<double>, float, float)
  fullName.vb: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluator.RunTrial(SharpNeat.IBlackBox(Of Double), Single, Single)
  nameWithType: CartSinglePoleEvaluator.RunTrial(IBlackBox<double>, float, float)
  nameWithType.vb: CartSinglePoleEvaluator.RunTrial(IBlackBox(Of Double), Single, Single)
- uid: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluator.RunTrial*
  name: RunTrial
  href: api/SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluator.html#SharpNeat_Tasks_CartPole_SinglePole_CartSinglePoleEvaluator_RunTrial_
  commentId: Overload:SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluator.RunTrial
  isSpec: "True"
  fullName: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleEvaluator.RunTrial
  nameWithType: CartSinglePoleEvaluator.RunTrial
- uid: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleExperimentFactory
  name: CartSinglePoleExperimentFactory
  href: api/SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleExperimentFactory.html
  commentId: T:SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleExperimentFactory
  fullName: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleExperimentFactory
  nameWithType: CartSinglePoleExperimentFactory
- uid: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleExperimentFactory.CreateExperiment(System.IO.Stream)
  name: CreateExperiment(Stream)
  href: api/SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleExperimentFactory.html#SharpNeat_Tasks_CartPole_SinglePole_CartSinglePoleExperimentFactory_CreateExperiment_System_IO_Stream_
  commentId: M:SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleExperimentFactory.CreateExperiment(System.IO.Stream)
  fullName: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleExperimentFactory.CreateExperiment(System.IO.Stream)
  nameWithType: CartSinglePoleExperimentFactory.CreateExperiment(Stream)
- uid: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleExperimentFactory.CreateExperiment*
  name: CreateExperiment
  href: api/SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleExperimentFactory.html#SharpNeat_Tasks_CartPole_SinglePole_CartSinglePoleExperimentFactory_CreateExperiment_
  commentId: Overload:SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleExperimentFactory.CreateExperiment
  isSpec: "True"
  fullName: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleExperimentFactory.CreateExperiment
  nameWithType: CartSinglePoleExperimentFactory.CreateExperiment
- uid: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleExperimentFactory.CreateExperimentSinglePrecision(System.IO.Stream)
  name: CreateExperimentSinglePrecision(Stream)
  href: api/SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleExperimentFactory.html#SharpNeat_Tasks_CartPole_SinglePole_CartSinglePoleExperimentFactory_CreateExperimentSinglePrecision_System_IO_Stream_
  commentId: M:SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleExperimentFactory.CreateExperimentSinglePrecision(System.IO.Stream)
  fullName: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleExperimentFactory.CreateExperimentSinglePrecision(System.IO.Stream)
  nameWithType: CartSinglePoleExperimentFactory.CreateExperimentSinglePrecision(Stream)
- uid: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleExperimentFactory.CreateExperimentSinglePrecision*
  name: CreateExperimentSinglePrecision
  href: api/SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleExperimentFactory.html#SharpNeat_Tasks_CartPole_SinglePole_CartSinglePoleExperimentFactory_CreateExperimentSinglePrecision_
  commentId: Overload:SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleExperimentFactory.CreateExperimentSinglePrecision
  isSpec: "True"
  fullName: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleExperimentFactory.CreateExperimentSinglePrecision
  nameWithType: CartSinglePoleExperimentFactory.CreateExperimentSinglePrecision
- uid: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleExperimentFactory.Id
  name: Id
  href: api/SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleExperimentFactory.html#SharpNeat_Tasks_CartPole_SinglePole_CartSinglePoleExperimentFactory_Id
  commentId: P:SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleExperimentFactory.Id
  fullName: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleExperimentFactory.Id
  nameWithType: CartSinglePoleExperimentFactory.Id
- uid: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleExperimentFactory.Id*
  name: Id
  href: api/SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleExperimentFactory.html#SharpNeat_Tasks_CartPole_SinglePole_CartSinglePoleExperimentFactory_Id_
  commentId: Overload:SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleExperimentFactory.Id
  isSpec: "True"
  fullName: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePoleExperimentFactory.Id
  nameWithType: CartSinglePoleExperimentFactory.Id
- uid: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePolePhysicsRK4
  name: CartSinglePolePhysicsRK4
  href: api/SharpNeat.Tasks.CartPole.SinglePole.CartSinglePolePhysicsRK4.html
  commentId: T:SharpNeat.Tasks.CartPole.SinglePole.CartSinglePolePhysicsRK4
  fullName: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePolePhysicsRK4
  nameWithType: CartSinglePolePhysicsRK4
- uid: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePolePhysicsRK4.ResetState(System.Single,System.Single)
  name: ResetState(float, float)
  href: api/SharpNeat.Tasks.CartPole.SinglePole.CartSinglePolePhysicsRK4.html#SharpNeat_Tasks_CartPole_SinglePole_CartSinglePolePhysicsRK4_ResetState_System_Single_System_Single_
  commentId: M:SharpNeat.Tasks.CartPole.SinglePole.CartSinglePolePhysicsRK4.ResetState(System.Single,System.Single)
  name.vb: ResetState(Single, Single)
  fullName: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePolePhysicsRK4.ResetState(float, float)
  fullName.vb: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePolePhysicsRK4.ResetState(Single, Single)
  nameWithType: CartSinglePolePhysicsRK4.ResetState(float, float)
  nameWithType.vb: CartSinglePolePhysicsRK4.ResetState(Single, Single)
- uid: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePolePhysicsRK4.ResetState*
  name: ResetState
  href: api/SharpNeat.Tasks.CartPole.SinglePole.CartSinglePolePhysicsRK4.html#SharpNeat_Tasks_CartPole_SinglePole_CartSinglePolePhysicsRK4_ResetState_
  commentId: Overload:SharpNeat.Tasks.CartPole.SinglePole.CartSinglePolePhysicsRK4.ResetState
  isSpec: "True"
  fullName: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePolePhysicsRK4.ResetState
  nameWithType: CartSinglePolePhysicsRK4.ResetState
- uid: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePolePhysicsRK4.State
  name: State
  href: api/SharpNeat.Tasks.CartPole.SinglePole.CartSinglePolePhysicsRK4.html#SharpNeat_Tasks_CartPole_SinglePole_CartSinglePolePhysicsRK4_State
  commentId: P:SharpNeat.Tasks.CartPole.SinglePole.CartSinglePolePhysicsRK4.State
  fullName: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePolePhysicsRK4.State
  nameWithType: CartSinglePolePhysicsRK4.State
- uid: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePolePhysicsRK4.State*
  name: State
  href: api/SharpNeat.Tasks.CartPole.SinglePole.CartSinglePolePhysicsRK4.html#SharpNeat_Tasks_CartPole_SinglePole_CartSinglePolePhysicsRK4_State_
  commentId: Overload:SharpNeat.Tasks.CartPole.SinglePole.CartSinglePolePhysicsRK4.State
  isSpec: "True"
  fullName: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePolePhysicsRK4.State
  nameWithType: CartSinglePolePhysicsRK4.State
- uid: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePolePhysicsRK4.Update(System.Single)
  name: Update(float)
  href: api/SharpNeat.Tasks.CartPole.SinglePole.CartSinglePolePhysicsRK4.html#SharpNeat_Tasks_CartPole_SinglePole_CartSinglePolePhysicsRK4_Update_System_Single_
  commentId: M:SharpNeat.Tasks.CartPole.SinglePole.CartSinglePolePhysicsRK4.Update(System.Single)
  name.vb: Update(Single)
  fullName: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePolePhysicsRK4.Update(float)
  fullName.vb: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePolePhysicsRK4.Update(Single)
  nameWithType: CartSinglePolePhysicsRK4.Update(float)
  nameWithType.vb: CartSinglePolePhysicsRK4.Update(Single)
- uid: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePolePhysicsRK4.Update*
  name: Update
  href: api/SharpNeat.Tasks.CartPole.SinglePole.CartSinglePolePhysicsRK4.html#SharpNeat_Tasks_CartPole_SinglePole_CartSinglePolePhysicsRK4_Update_
  commentId: Overload:SharpNeat.Tasks.CartPole.SinglePole.CartSinglePolePhysicsRK4.Update
  isSpec: "True"
  fullName: SharpNeat.Tasks.CartPole.SinglePole.CartSinglePolePhysicsRK4.Update
  nameWithType: CartSinglePolePhysicsRK4.Update
- uid: SharpNeat.Tasks.FunctionRegression
  name: SharpNeat.Tasks.FunctionRegression
  href: api/SharpNeat.Tasks.FunctionRegression.html
  commentId: N:SharpNeat.Tasks.FunctionRegression
  fullName: SharpNeat.Tasks.FunctionRegression
  nameWithType: SharpNeat.Tasks.FunctionRegression
- uid: SharpNeat.Tasks.FunctionRegression.BlackBoxProbe
  name: BlackBoxProbe
  href: api/SharpNeat.Tasks.FunctionRegression.BlackBoxProbe.html
  commentId: T:SharpNeat.Tasks.FunctionRegression.BlackBoxProbe
  fullName: SharpNeat.Tasks.FunctionRegression.BlackBoxProbe
  nameWithType: BlackBoxProbe
- uid: SharpNeat.Tasks.FunctionRegression.BlackBoxProbe.#ctor(SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo,System.Double,System.Double)
  name: BlackBoxProbe(ParamSamplingInfo, double, double)
  href: api/SharpNeat.Tasks.FunctionRegression.BlackBoxProbe.html#SharpNeat_Tasks_FunctionRegression_BlackBoxProbe__ctor_SharpNeat_Tasks_FunctionRegression_ParamSamplingInfo_System_Double_System_Double_
  commentId: M:SharpNeat.Tasks.FunctionRegression.BlackBoxProbe.#ctor(SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo,System.Double,System.Double)
  name.vb: New(ParamSamplingInfo, Double, Double)
  fullName: SharpNeat.Tasks.FunctionRegression.BlackBoxProbe.BlackBoxProbe(SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo, double, double)
  fullName.vb: SharpNeat.Tasks.FunctionRegression.BlackBoxProbe.New(SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo, Double, Double)
  nameWithType: BlackBoxProbe.BlackBoxProbe(ParamSamplingInfo, double, double)
  nameWithType.vb: BlackBoxProbe.New(ParamSamplingInfo, Double, Double)
- uid: SharpNeat.Tasks.FunctionRegression.BlackBoxProbe.#ctor*
  name: BlackBoxProbe
  href: api/SharpNeat.Tasks.FunctionRegression.BlackBoxProbe.html#SharpNeat_Tasks_FunctionRegression_BlackBoxProbe__ctor_
  commentId: Overload:SharpNeat.Tasks.FunctionRegression.BlackBoxProbe.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Tasks.FunctionRegression.BlackBoxProbe.BlackBoxProbe
  fullName.vb: SharpNeat.Tasks.FunctionRegression.BlackBoxProbe.New
  nameWithType: BlackBoxProbe.BlackBoxProbe
  nameWithType.vb: BlackBoxProbe.New
- uid: SharpNeat.Tasks.FunctionRegression.BlackBoxProbe.Probe(SharpNeat.IBlackBox{System.Double},System.Double[])
  name: Probe(IBlackBox<double>, double[])
  href: api/SharpNeat.Tasks.FunctionRegression.BlackBoxProbe.html#SharpNeat_Tasks_FunctionRegression_BlackBoxProbe_Probe_SharpNeat_IBlackBox_System_Double__System_Double___
  commentId: M:SharpNeat.Tasks.FunctionRegression.BlackBoxProbe.Probe(SharpNeat.IBlackBox{System.Double},System.Double[])
  name.vb: Probe(IBlackBox(Of Double), Double())
  fullName: SharpNeat.Tasks.FunctionRegression.BlackBoxProbe.Probe(SharpNeat.IBlackBox<double>, double[])
  fullName.vb: SharpNeat.Tasks.FunctionRegression.BlackBoxProbe.Probe(SharpNeat.IBlackBox(Of Double), Double())
  nameWithType: BlackBoxProbe.Probe(IBlackBox<double>, double[])
  nameWithType.vb: BlackBoxProbe.Probe(IBlackBox(Of Double), Double())
- uid: SharpNeat.Tasks.FunctionRegression.BlackBoxProbe.Probe*
  name: Probe
  href: api/SharpNeat.Tasks.FunctionRegression.BlackBoxProbe.html#SharpNeat_Tasks_FunctionRegression_BlackBoxProbe_Probe_
  commentId: Overload:SharpNeat.Tasks.FunctionRegression.BlackBoxProbe.Probe
  isSpec: "True"
  fullName: SharpNeat.Tasks.FunctionRegression.BlackBoxProbe.Probe
  nameWithType: BlackBoxProbe.Probe
- uid: SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme
  name: FuncRegressionEvaluationScheme
  href: api/SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.html
  commentId: T:SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme
  fullName: SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme
  nameWithType: FuncRegressionEvaluationScheme
- uid: SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.#ctor(System.Func{System.Double,System.Double},SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo,System.Double)
  name: FuncRegressionEvaluationScheme(Func<double, double>, ParamSamplingInfo, double)
  href: api/SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.html#SharpNeat_Tasks_FunctionRegression_FuncRegressionEvaluationScheme__ctor_System_Func_System_Double_System_Double__SharpNeat_Tasks_FunctionRegression_ParamSamplingInfo_System_Double_
  commentId: M:SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.#ctor(System.Func{System.Double,System.Double},SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo,System.Double)
  name.vb: New(Func(Of Double, Double), ParamSamplingInfo, Double)
  fullName: SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.FuncRegressionEvaluationScheme(System.Func<double, double>, SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo, double)
  fullName.vb: SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.New(System.Func(Of Double, Double), SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo, Double)
  nameWithType: FuncRegressionEvaluationScheme.FuncRegressionEvaluationScheme(Func<double, double>, ParamSamplingInfo, double)
  nameWithType.vb: FuncRegressionEvaluationScheme.New(Func(Of Double, Double), ParamSamplingInfo, Double)
- uid: SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.#ctor*
  name: FuncRegressionEvaluationScheme
  href: api/SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.html#SharpNeat_Tasks_FunctionRegression_FuncRegressionEvaluationScheme__ctor_
  commentId: Overload:SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.FuncRegressionEvaluationScheme
  fullName.vb: SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.New
  nameWithType: FuncRegressionEvaluationScheme.FuncRegressionEvaluationScheme
  nameWithType.vb: FuncRegressionEvaluationScheme.New
- uid: SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.CreateEvaluator
  name: CreateEvaluator()
  href: api/SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.html#SharpNeat_Tasks_FunctionRegression_FuncRegressionEvaluationScheme_CreateEvaluator
  commentId: M:SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.CreateEvaluator
  fullName: SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.CreateEvaluator()
  nameWithType: FuncRegressionEvaluationScheme.CreateEvaluator()
- uid: SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.CreateEvaluator*
  name: CreateEvaluator
  href: api/SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.html#SharpNeat_Tasks_FunctionRegression_FuncRegressionEvaluationScheme_CreateEvaluator_
  commentId: Overload:SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.CreateEvaluator
  isSpec: "True"
  fullName: SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.CreateEvaluator
  nameWithType: FuncRegressionEvaluationScheme.CreateEvaluator
- uid: SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.EvaluatorsHaveState
  name: EvaluatorsHaveState
  href: api/SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.html#SharpNeat_Tasks_FunctionRegression_FuncRegressionEvaluationScheme_EvaluatorsHaveState
  commentId: P:SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.EvaluatorsHaveState
  fullName: SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.EvaluatorsHaveState
  nameWithType: FuncRegressionEvaluationScheme.EvaluatorsHaveState
- uid: SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.EvaluatorsHaveState*
  name: EvaluatorsHaveState
  href: api/SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.html#SharpNeat_Tasks_FunctionRegression_FuncRegressionEvaluationScheme_EvaluatorsHaveState_
  commentId: Overload:SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.EvaluatorsHaveState
  isSpec: "True"
  fullName: SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.EvaluatorsHaveState
  nameWithType: FuncRegressionEvaluationScheme.EvaluatorsHaveState
- uid: SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.FitnessComparer
  name: FitnessComparer
  href: api/SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.html#SharpNeat_Tasks_FunctionRegression_FuncRegressionEvaluationScheme_FitnessComparer
  commentId: P:SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.FitnessComparer
  fullName: SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.FitnessComparer
  nameWithType: FuncRegressionEvaluationScheme.FitnessComparer
- uid: SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.FitnessComparer*
  name: FitnessComparer
  href: api/SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.html#SharpNeat_Tasks_FunctionRegression_FuncRegressionEvaluationScheme_FitnessComparer_
  commentId: Overload:SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.FitnessComparer
  isSpec: "True"
  fullName: SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.FitnessComparer
  nameWithType: FuncRegressionEvaluationScheme.FitnessComparer
- uid: SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.InputCount
  name: InputCount
  href: api/SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.html#SharpNeat_Tasks_FunctionRegression_FuncRegressionEvaluationScheme_InputCount
  commentId: P:SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.InputCount
  fullName: SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.InputCount
  nameWithType: FuncRegressionEvaluationScheme.InputCount
- uid: SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.InputCount*
  name: InputCount
  href: api/SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.html#SharpNeat_Tasks_FunctionRegression_FuncRegressionEvaluationScheme_InputCount_
  commentId: Overload:SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.InputCount
  isSpec: "True"
  fullName: SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.InputCount
  nameWithType: FuncRegressionEvaluationScheme.InputCount
- uid: SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.IsDeterministic
  name: IsDeterministic
  href: api/SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.html#SharpNeat_Tasks_FunctionRegression_FuncRegressionEvaluationScheme_IsDeterministic
  commentId: P:SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.IsDeterministic
  fullName: SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.IsDeterministic
  nameWithType: FuncRegressionEvaluationScheme.IsDeterministic
- uid: SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.IsDeterministic*
  name: IsDeterministic
  href: api/SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.html#SharpNeat_Tasks_FunctionRegression_FuncRegressionEvaluationScheme_IsDeterministic_
  commentId: Overload:SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.IsDeterministic
  isSpec: "True"
  fullName: SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.IsDeterministic
  nameWithType: FuncRegressionEvaluationScheme.IsDeterministic
- uid: SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.NullFitness
  name: NullFitness
  href: api/SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.html#SharpNeat_Tasks_FunctionRegression_FuncRegressionEvaluationScheme_NullFitness
  commentId: P:SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.NullFitness
  fullName: SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.NullFitness
  nameWithType: FuncRegressionEvaluationScheme.NullFitness
- uid: SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.NullFitness*
  name: NullFitness
  href: api/SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.html#SharpNeat_Tasks_FunctionRegression_FuncRegressionEvaluationScheme_NullFitness_
  commentId: Overload:SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.NullFitness
  isSpec: "True"
  fullName: SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.NullFitness
  nameWithType: FuncRegressionEvaluationScheme.NullFitness
- uid: SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.OutputCount
  name: OutputCount
  href: api/SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.html#SharpNeat_Tasks_FunctionRegression_FuncRegressionEvaluationScheme_OutputCount
  commentId: P:SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.OutputCount
  fullName: SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.OutputCount
  nameWithType: FuncRegressionEvaluationScheme.OutputCount
- uid: SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.OutputCount*
  name: OutputCount
  href: api/SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.html#SharpNeat_Tasks_FunctionRegression_FuncRegressionEvaluationScheme_OutputCount_
  commentId: Overload:SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.OutputCount
  isSpec: "True"
  fullName: SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.OutputCount
  nameWithType: FuncRegressionEvaluationScheme.OutputCount
- uid: SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.TestForStopCondition(SharpNeat.Evaluation.FitnessInfo)
  name: TestForStopCondition(FitnessInfo)
  href: api/SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.html#SharpNeat_Tasks_FunctionRegression_FuncRegressionEvaluationScheme_TestForStopCondition_SharpNeat_Evaluation_FitnessInfo_
  commentId: M:SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.TestForStopCondition(SharpNeat.Evaluation.FitnessInfo)
  fullName: SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.TestForStopCondition(SharpNeat.Evaluation.FitnessInfo)
  nameWithType: FuncRegressionEvaluationScheme.TestForStopCondition(FitnessInfo)
- uid: SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.TestForStopCondition*
  name: TestForStopCondition
  href: api/SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.html#SharpNeat_Tasks_FunctionRegression_FuncRegressionEvaluationScheme_TestForStopCondition_
  commentId: Overload:SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.TestForStopCondition
  isSpec: "True"
  fullName: SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluationScheme.TestForStopCondition
  nameWithType: FuncRegressionEvaluationScheme.TestForStopCondition
- uid: SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluator
  name: FuncRegressionEvaluator
  href: api/SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluator.html
  commentId: T:SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluator
  fullName: SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluator
  nameWithType: FuncRegressionEvaluator
- uid: SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluator.Evaluate(SharpNeat.IBlackBox{System.Double})
  name: Evaluate(IBlackBox<double>)
  href: api/SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluator.html#SharpNeat_Tasks_FunctionRegression_FuncRegressionEvaluator_Evaluate_SharpNeat_IBlackBox_System_Double__
  commentId: M:SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluator.Evaluate(SharpNeat.IBlackBox{System.Double})
  name.vb: Evaluate(IBlackBox(Of Double))
  fullName: SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluator.Evaluate(SharpNeat.IBlackBox<double>)
  fullName.vb: SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluator.Evaluate(SharpNeat.IBlackBox(Of Double))
  nameWithType: FuncRegressionEvaluator.Evaluate(IBlackBox<double>)
  nameWithType.vb: FuncRegressionEvaluator.Evaluate(IBlackBox(Of Double))
- uid: SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluator.Evaluate*
  name: Evaluate
  href: api/SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluator.html#SharpNeat_Tasks_FunctionRegression_FuncRegressionEvaluator_Evaluate_
  commentId: Overload:SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluator.Evaluate
  isSpec: "True"
  fullName: SharpNeat.Tasks.FunctionRegression.FuncRegressionEvaluator.Evaluate
  nameWithType: FuncRegressionEvaluator.Evaluate
- uid: SharpNeat.Tasks.FunctionRegression.FuncRegressionUtils
  name: FuncRegressionUtils
  href: api/SharpNeat.Tasks.FunctionRegression.FuncRegressionUtils.html
  commentId: T:SharpNeat.Tasks.FunctionRegression.FuncRegressionUtils
  fullName: SharpNeat.Tasks.FunctionRegression.FuncRegressionUtils
  nameWithType: FuncRegressionUtils
- uid: SharpNeat.Tasks.FunctionRegression.FuncRegressionUtils.CalcFunctionMidAndScale(System.Func{System.Double,System.Double},SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo,System.Double@,System.Double@)
  name: CalcFunctionMidAndScale(Func<double, double>, ParamSamplingInfo, out double, out double)
  href: api/SharpNeat.Tasks.FunctionRegression.FuncRegressionUtils.html#SharpNeat_Tasks_FunctionRegression_FuncRegressionUtils_CalcFunctionMidAndScale_System_Func_System_Double_System_Double__SharpNeat_Tasks_FunctionRegression_ParamSamplingInfo_System_Double__System_Double__
  commentId: M:SharpNeat.Tasks.FunctionRegression.FuncRegressionUtils.CalcFunctionMidAndScale(System.Func{System.Double,System.Double},SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo,System.Double@,System.Double@)
  name.vb: CalcFunctionMidAndScale(Func(Of Double, Double), ParamSamplingInfo, Double, Double)
  fullName: SharpNeat.Tasks.FunctionRegression.FuncRegressionUtils.CalcFunctionMidAndScale(System.Func<double, double>, SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo, out double, out double)
  fullName.vb: SharpNeat.Tasks.FunctionRegression.FuncRegressionUtils.CalcFunctionMidAndScale(System.Func(Of Double, Double), SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo, Double, Double)
  nameWithType: FuncRegressionUtils.CalcFunctionMidAndScale(Func<double, double>, ParamSamplingInfo, out double, out double)
  nameWithType.vb: FuncRegressionUtils.CalcFunctionMidAndScale(Func(Of Double, Double), ParamSamplingInfo, Double, Double)
- uid: SharpNeat.Tasks.FunctionRegression.FuncRegressionUtils.CalcFunctionMidAndScale*
  name: CalcFunctionMidAndScale
  href: api/SharpNeat.Tasks.FunctionRegression.FuncRegressionUtils.html#SharpNeat_Tasks_FunctionRegression_FuncRegressionUtils_CalcFunctionMidAndScale_
  commentId: Overload:SharpNeat.Tasks.FunctionRegression.FuncRegressionUtils.CalcFunctionMidAndScale
  isSpec: "True"
  fullName: SharpNeat.Tasks.FunctionRegression.FuncRegressionUtils.CalcFunctionMidAndScale
  nameWithType: FuncRegressionUtils.CalcFunctionMidAndScale
- uid: SharpNeat.Tasks.FunctionRegression.FuncRegressionUtils.CalcGradients(SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo,System.Double[],System.Double[])
  name: CalcGradients(ParamSamplingInfo, double[], double[])
  href: api/SharpNeat.Tasks.FunctionRegression.FuncRegressionUtils.html#SharpNeat_Tasks_FunctionRegression_FuncRegressionUtils_CalcGradients_SharpNeat_Tasks_FunctionRegression_ParamSamplingInfo_System_Double___System_Double___
  commentId: M:SharpNeat.Tasks.FunctionRegression.FuncRegressionUtils.CalcGradients(SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo,System.Double[],System.Double[])
  name.vb: CalcGradients(ParamSamplingInfo, Double(), Double())
  fullName: SharpNeat.Tasks.FunctionRegression.FuncRegressionUtils.CalcGradients(SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo, double[], double[])
  fullName.vb: SharpNeat.Tasks.FunctionRegression.FuncRegressionUtils.CalcGradients(SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo, Double(), Double())
  nameWithType: FuncRegressionUtils.CalcGradients(ParamSamplingInfo, double[], double[])
  nameWithType.vb: FuncRegressionUtils.CalcGradients(ParamSamplingInfo, Double(), Double())
- uid: SharpNeat.Tasks.FunctionRegression.FuncRegressionUtils.CalcGradients*
  name: CalcGradients
  href: api/SharpNeat.Tasks.FunctionRegression.FuncRegressionUtils.html#SharpNeat_Tasks_FunctionRegression_FuncRegressionUtils_CalcGradients_
  commentId: Overload:SharpNeat.Tasks.FunctionRegression.FuncRegressionUtils.CalcGradients
  isSpec: "True"
  fullName: SharpNeat.Tasks.FunctionRegression.FuncRegressionUtils.CalcGradients
  nameWithType: FuncRegressionUtils.CalcGradients
- uid: SharpNeat.Tasks.FunctionRegression.FuncRegressionUtils.Probe(System.Func{System.Double,System.Double},SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo,System.Double[])
  name: Probe(Func<double, double>, ParamSamplingInfo, double[])
  href: api/SharpNeat.Tasks.FunctionRegression.FuncRegressionUtils.html#SharpNeat_Tasks_FunctionRegression_FuncRegressionUtils_Probe_System_Func_System_Double_System_Double__SharpNeat_Tasks_FunctionRegression_ParamSamplingInfo_System_Double___
  commentId: M:SharpNeat.Tasks.FunctionRegression.FuncRegressionUtils.Probe(System.Func{System.Double,System.Double},SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo,System.Double[])
  name.vb: Probe(Func(Of Double, Double), ParamSamplingInfo, Double())
  fullName: SharpNeat.Tasks.FunctionRegression.FuncRegressionUtils.Probe(System.Func<double, double>, SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo, double[])
  fullName.vb: SharpNeat.Tasks.FunctionRegression.FuncRegressionUtils.Probe(System.Func(Of Double, Double), SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo, Double())
  nameWithType: FuncRegressionUtils.Probe(Func<double, double>, ParamSamplingInfo, double[])
  nameWithType.vb: FuncRegressionUtils.Probe(Func(Of Double, Double), ParamSamplingInfo, Double())
- uid: SharpNeat.Tasks.FunctionRegression.FuncRegressionUtils.Probe*
  name: Probe
  href: api/SharpNeat.Tasks.FunctionRegression.FuncRegressionUtils.html#SharpNeat_Tasks_FunctionRegression_FuncRegressionUtils_Probe_
  commentId: Overload:SharpNeat.Tasks.FunctionRegression.FuncRegressionUtils.Probe
  isSpec: "True"
  fullName: SharpNeat.Tasks.FunctionRegression.FuncRegressionUtils.Probe
  nameWithType: FuncRegressionUtils.Probe
- uid: SharpNeat.Tasks.FunctionRegression.FuncRegressionUtilsTests
  name: FuncRegressionUtilsTests
  href: api/SharpNeat.Tasks.FunctionRegression.FuncRegressionUtilsTests.html
  commentId: T:SharpNeat.Tasks.FunctionRegression.FuncRegressionUtilsTests
  fullName: SharpNeat.Tasks.FunctionRegression.FuncRegressionUtilsTests
  nameWithType: FuncRegressionUtilsTests
- uid: SharpNeat.Tasks.FunctionRegression.FuncRegressionUtilsTests.CalcGradients
  name: CalcGradients()
  href: api/SharpNeat.Tasks.FunctionRegression.FuncRegressionUtilsTests.html#SharpNeat_Tasks_FunctionRegression_FuncRegressionUtilsTests_CalcGradients
  commentId: M:SharpNeat.Tasks.FunctionRegression.FuncRegressionUtilsTests.CalcGradients
  fullName: SharpNeat.Tasks.FunctionRegression.FuncRegressionUtilsTests.CalcGradients()
  nameWithType: FuncRegressionUtilsTests.CalcGradients()
- uid: SharpNeat.Tasks.FunctionRegression.FuncRegressionUtilsTests.CalcGradients*
  name: CalcGradients
  href: api/SharpNeat.Tasks.FunctionRegression.FuncRegressionUtilsTests.html#SharpNeat_Tasks_FunctionRegression_FuncRegressionUtilsTests_CalcGradients_
  commentId: Overload:SharpNeat.Tasks.FunctionRegression.FuncRegressionUtilsTests.CalcGradients
  isSpec: "True"
  fullName: SharpNeat.Tasks.FunctionRegression.FuncRegressionUtilsTests.CalcGradients
  nameWithType: FuncRegressionUtilsTests.CalcGradients
- uid: SharpNeat.Tasks.FunctionRegression.FunctionFactory
  name: FunctionFactory
  href: api/SharpNeat.Tasks.FunctionRegression.FunctionFactory.html
  commentId: T:SharpNeat.Tasks.FunctionRegression.FunctionFactory
  fullName: SharpNeat.Tasks.FunctionRegression.FunctionFactory
  nameWithType: FunctionFactory
- uid: SharpNeat.Tasks.FunctionRegression.FunctionFactory.GetFunction(SharpNeat.Tasks.FunctionRegression.FunctionId)
  name: GetFunction(FunctionId)
  href: api/SharpNeat.Tasks.FunctionRegression.FunctionFactory.html#SharpNeat_Tasks_FunctionRegression_FunctionFactory_GetFunction_SharpNeat_Tasks_FunctionRegression_FunctionId_
  commentId: M:SharpNeat.Tasks.FunctionRegression.FunctionFactory.GetFunction(SharpNeat.Tasks.FunctionRegression.FunctionId)
  fullName: SharpNeat.Tasks.FunctionRegression.FunctionFactory.GetFunction(SharpNeat.Tasks.FunctionRegression.FunctionId)
  nameWithType: FunctionFactory.GetFunction(FunctionId)
- uid: SharpNeat.Tasks.FunctionRegression.FunctionFactory.GetFunction*
  name: GetFunction
  href: api/SharpNeat.Tasks.FunctionRegression.FunctionFactory.html#SharpNeat_Tasks_FunctionRegression_FunctionFactory_GetFunction_
  commentId: Overload:SharpNeat.Tasks.FunctionRegression.FunctionFactory.GetFunction
  isSpec: "True"
  fullName: SharpNeat.Tasks.FunctionRegression.FunctionFactory.GetFunction
  nameWithType: FunctionFactory.GetFunction
- uid: SharpNeat.Tasks.FunctionRegression.FunctionId
  name: FunctionId
  href: api/SharpNeat.Tasks.FunctionRegression.FunctionId.html
  commentId: T:SharpNeat.Tasks.FunctionRegression.FunctionId
  fullName: SharpNeat.Tasks.FunctionRegression.FunctionId
  nameWithType: FunctionId
- uid: SharpNeat.Tasks.FunctionRegression.FunctionId.Abs
  name: Abs
  href: api/SharpNeat.Tasks.FunctionRegression.FunctionId.html#SharpNeat_Tasks_FunctionRegression_FunctionId_Abs
  commentId: F:SharpNeat.Tasks.FunctionRegression.FunctionId.Abs
  fullName: SharpNeat.Tasks.FunctionRegression.FunctionId.Abs
  nameWithType: FunctionId.Abs
- uid: SharpNeat.Tasks.FunctionRegression.FunctionId.BeatSinewave
  name: BeatSinewave
  href: api/SharpNeat.Tasks.FunctionRegression.FunctionId.html#SharpNeat_Tasks_FunctionRegression_FunctionId_BeatSinewave
  commentId: F:SharpNeat.Tasks.FunctionRegression.FunctionId.BeatSinewave
  fullName: SharpNeat.Tasks.FunctionRegression.FunctionId.BeatSinewave
  nameWithType: FunctionId.BeatSinewave
- uid: SharpNeat.Tasks.FunctionRegression.FunctionId.Log
  name: Log
  href: api/SharpNeat.Tasks.FunctionRegression.FunctionId.html#SharpNeat_Tasks_FunctionRegression_FunctionId_Log
  commentId: F:SharpNeat.Tasks.FunctionRegression.FunctionId.Log
  fullName: SharpNeat.Tasks.FunctionRegression.FunctionId.Log
  nameWithType: FunctionId.Log
- uid: SharpNeat.Tasks.FunctionRegression.FunctionId.Sin
  name: Sin
  href: api/SharpNeat.Tasks.FunctionRegression.FunctionId.html#SharpNeat_Tasks_FunctionRegression_FunctionId_Sin
  commentId: F:SharpNeat.Tasks.FunctionRegression.FunctionId.Sin
  fullName: SharpNeat.Tasks.FunctionRegression.FunctionId.Sin
  nameWithType: FunctionId.Sin
- uid: SharpNeat.Tasks.FunctionRegression.FunctionId.SinXSquared
  name: SinXSquared
  href: api/SharpNeat.Tasks.FunctionRegression.FunctionId.html#SharpNeat_Tasks_FunctionRegression_FunctionId_SinXSquared
  commentId: F:SharpNeat.Tasks.FunctionRegression.FunctionId.SinXSquared
  fullName: SharpNeat.Tasks.FunctionRegression.FunctionId.SinXSquared
  nameWithType: FunctionId.SinXSquared
- uid: SharpNeat.Tasks.FunctionRegression.FunctionId.Waveform1
  name: Waveform1
  href: api/SharpNeat.Tasks.FunctionRegression.FunctionId.html#SharpNeat_Tasks_FunctionRegression_FunctionId_Waveform1
  commentId: F:SharpNeat.Tasks.FunctionRegression.FunctionId.Waveform1
  fullName: SharpNeat.Tasks.FunctionRegression.FunctionId.Waveform1
  nameWithType: FunctionId.Waveform1
- uid: SharpNeat.Tasks.FunctionRegression.IBlackBoxProbe
  name: IBlackBoxProbe
  href: api/SharpNeat.Tasks.FunctionRegression.IBlackBoxProbe.html
  commentId: T:SharpNeat.Tasks.FunctionRegression.IBlackBoxProbe
  fullName: SharpNeat.Tasks.FunctionRegression.IBlackBoxProbe
  nameWithType: IBlackBoxProbe
- uid: SharpNeat.Tasks.FunctionRegression.IBlackBoxProbe.Probe(SharpNeat.IBlackBox{System.Double},System.Double[])
  name: Probe(IBlackBox<double>, double[])
  href: api/SharpNeat.Tasks.FunctionRegression.IBlackBoxProbe.html#SharpNeat_Tasks_FunctionRegression_IBlackBoxProbe_Probe_SharpNeat_IBlackBox_System_Double__System_Double___
  commentId: M:SharpNeat.Tasks.FunctionRegression.IBlackBoxProbe.Probe(SharpNeat.IBlackBox{System.Double},System.Double[])
  name.vb: Probe(IBlackBox(Of Double), Double())
  fullName: SharpNeat.Tasks.FunctionRegression.IBlackBoxProbe.Probe(SharpNeat.IBlackBox<double>, double[])
  fullName.vb: SharpNeat.Tasks.FunctionRegression.IBlackBoxProbe.Probe(SharpNeat.IBlackBox(Of Double), Double())
  nameWithType: IBlackBoxProbe.Probe(IBlackBox<double>, double[])
  nameWithType.vb: IBlackBoxProbe.Probe(IBlackBox(Of Double), Double())
- uid: SharpNeat.Tasks.FunctionRegression.IBlackBoxProbe.Probe*
  name: Probe
  href: api/SharpNeat.Tasks.FunctionRegression.IBlackBoxProbe.html#SharpNeat_Tasks_FunctionRegression_IBlackBoxProbe_Probe_
  commentId: Overload:SharpNeat.Tasks.FunctionRegression.IBlackBoxProbe.Probe
  isSpec: "True"
  fullName: SharpNeat.Tasks.FunctionRegression.IBlackBoxProbe.Probe
  nameWithType: IBlackBoxProbe.Probe
- uid: SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo
  name: ParamSamplingInfo
  href: api/SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.html
  commentId: T:SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo
  fullName: SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo
  nameWithType: ParamSamplingInfo
- uid: SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.#ctor(System.Double,System.Double,System.Int32)
  name: ParamSamplingInfo(double, double, int)
  href: api/SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.html#SharpNeat_Tasks_FunctionRegression_ParamSamplingInfo__ctor_System_Double_System_Double_System_Int32_
  commentId: M:SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.#ctor(System.Double,System.Double,System.Int32)
  name.vb: New(Double, Double, Integer)
  fullName: SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.ParamSamplingInfo(double, double, int)
  fullName.vb: SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.New(Double, Double, Integer)
  nameWithType: ParamSamplingInfo.ParamSamplingInfo(double, double, int)
  nameWithType.vb: ParamSamplingInfo.New(Double, Double, Integer)
- uid: SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.#ctor*
  name: ParamSamplingInfo
  href: api/SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.html#SharpNeat_Tasks_FunctionRegression_ParamSamplingInfo__ctor_
  commentId: Overload:SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.ParamSamplingInfo
  fullName.vb: SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.New
  nameWithType: ParamSamplingInfo.ParamSamplingInfo
  nameWithType.vb: ParamSamplingInfo.New
- uid: SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.Incr
  name: Incr
  href: api/SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.html#SharpNeat_Tasks_FunctionRegression_ParamSamplingInfo_Incr
  commentId: P:SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.Incr
  fullName: SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.Incr
  nameWithType: ParamSamplingInfo.Incr
- uid: SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.Incr*
  name: Incr
  href: api/SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.html#SharpNeat_Tasks_FunctionRegression_ParamSamplingInfo_Incr_
  commentId: Overload:SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.Incr
  isSpec: "True"
  fullName: SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.Incr
  nameWithType: ParamSamplingInfo.Incr
- uid: SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.Max
  name: Max
  href: api/SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.html#SharpNeat_Tasks_FunctionRegression_ParamSamplingInfo_Max
  commentId: P:SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.Max
  fullName: SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.Max
  nameWithType: ParamSamplingInfo.Max
- uid: SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.Max*
  name: Max
  href: api/SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.html#SharpNeat_Tasks_FunctionRegression_ParamSamplingInfo_Max_
  commentId: Overload:SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.Max
  isSpec: "True"
  fullName: SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.Max
  nameWithType: ParamSamplingInfo.Max
- uid: SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.Min
  name: Min
  href: api/SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.html#SharpNeat_Tasks_FunctionRegression_ParamSamplingInfo_Min
  commentId: P:SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.Min
  fullName: SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.Min
  nameWithType: ParamSamplingInfo.Min
- uid: SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.Min*
  name: Min
  href: api/SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.html#SharpNeat_Tasks_FunctionRegression_ParamSamplingInfo_Min_
  commentId: Overload:SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.Min
  isSpec: "True"
  fullName: SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.Min
  nameWithType: ParamSamplingInfo.Min
- uid: SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.SampleResolution
  name: SampleResolution
  href: api/SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.html#SharpNeat_Tasks_FunctionRegression_ParamSamplingInfo_SampleResolution
  commentId: P:SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.SampleResolution
  fullName: SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.SampleResolution
  nameWithType: ParamSamplingInfo.SampleResolution
- uid: SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.SampleResolution*
  name: SampleResolution
  href: api/SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.html#SharpNeat_Tasks_FunctionRegression_ParamSamplingInfo_SampleResolution_
  commentId: Overload:SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.SampleResolution
  isSpec: "True"
  fullName: SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.SampleResolution
  nameWithType: ParamSamplingInfo.SampleResolution
- uid: SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.XArr
  name: XArr
  href: api/SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.html#SharpNeat_Tasks_FunctionRegression_ParamSamplingInfo_XArr
  commentId: P:SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.XArr
  fullName: SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.XArr
  nameWithType: ParamSamplingInfo.XArr
- uid: SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.XArr*
  name: XArr
  href: api/SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.html#SharpNeat_Tasks_FunctionRegression_ParamSamplingInfo_XArr_
  commentId: Overload:SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.XArr
  isSpec: "True"
  fullName: SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.XArr
  nameWithType: ParamSamplingInfo.XArr
- uid: SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.XArrNetwork
  name: XArrNetwork
  href: api/SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.html#SharpNeat_Tasks_FunctionRegression_ParamSamplingInfo_XArrNetwork
  commentId: P:SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.XArrNetwork
  fullName: SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.XArrNetwork
  nameWithType: ParamSamplingInfo.XArrNetwork
- uid: SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.XArrNetwork*
  name: XArrNetwork
  href: api/SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.html#SharpNeat_Tasks_FunctionRegression_ParamSamplingInfo_XArrNetwork_
  commentId: Overload:SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.XArrNetwork
  isSpec: "True"
  fullName: SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo.XArrNetwork
  nameWithType: ParamSamplingInfo.XArrNetwork
- uid: SharpNeat.Tasks.GenerativeFunctionRegression
  name: SharpNeat.Tasks.GenerativeFunctionRegression
  href: api/SharpNeat.Tasks.GenerativeFunctionRegression.html
  commentId: N:SharpNeat.Tasks.GenerativeFunctionRegression
  fullName: SharpNeat.Tasks.GenerativeFunctionRegression
  nameWithType: SharpNeat.Tasks.GenerativeFunctionRegression
- uid: SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels
  name: SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels
  href: api/SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.html
  commentId: N:SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels
  fullName: SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels
  nameWithType: SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels
- uid: SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionCustomConfig
  name: GenerativeFnRegressionCustomConfig
  href: api/SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionCustomConfig.html
  commentId: T:SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionCustomConfig
  fullName: SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionCustomConfig
  nameWithType: GenerativeFnRegressionCustomConfig
- uid: SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionCustomConfig.FunctionId
  name: FunctionId
  href: api/SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionCustomConfig.html#SharpNeat_Tasks_GenerativeFunctionRegression_ConfigModels_GenerativeFnRegressionCustomConfig_FunctionId
  commentId: P:SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionCustomConfig.FunctionId
  fullName: SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionCustomConfig.FunctionId
  nameWithType: GenerativeFnRegressionCustomConfig.FunctionId
- uid: SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionCustomConfig.FunctionId*
  name: FunctionId
  href: api/SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionCustomConfig.html#SharpNeat_Tasks_GenerativeFunctionRegression_ConfigModels_GenerativeFnRegressionCustomConfig_FunctionId_
  commentId: Overload:SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionCustomConfig.FunctionId
  isSpec: "True"
  fullName: SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionCustomConfig.FunctionId
  nameWithType: GenerativeFnRegressionCustomConfig.FunctionId
- uid: SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionCustomConfig.GradientMseWeight
  name: GradientMseWeight
  href: api/SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionCustomConfig.html#SharpNeat_Tasks_GenerativeFunctionRegression_ConfigModels_GenerativeFnRegressionCustomConfig_GradientMseWeight
  commentId: P:SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionCustomConfig.GradientMseWeight
  fullName: SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionCustomConfig.GradientMseWeight
  nameWithType: GenerativeFnRegressionCustomConfig.GradientMseWeight
- uid: SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionCustomConfig.GradientMseWeight*
  name: GradientMseWeight
  href: api/SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionCustomConfig.html#SharpNeat_Tasks_GenerativeFunctionRegression_ConfigModels_GenerativeFnRegressionCustomConfig_GradientMseWeight_
  commentId: Overload:SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionCustomConfig.GradientMseWeight
  isSpec: "True"
  fullName: SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionCustomConfig.GradientMseWeight
  nameWithType: GenerativeFnRegressionCustomConfig.GradientMseWeight
- uid: SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionCustomConfig.SampleIntervalMax
  name: SampleIntervalMax
  href: api/SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionCustomConfig.html#SharpNeat_Tasks_GenerativeFunctionRegression_ConfigModels_GenerativeFnRegressionCustomConfig_SampleIntervalMax
  commentId: P:SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionCustomConfig.SampleIntervalMax
  fullName: SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionCustomConfig.SampleIntervalMax
  nameWithType: GenerativeFnRegressionCustomConfig.SampleIntervalMax
- uid: SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionCustomConfig.SampleIntervalMax*
  name: SampleIntervalMax
  href: api/SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionCustomConfig.html#SharpNeat_Tasks_GenerativeFunctionRegression_ConfigModels_GenerativeFnRegressionCustomConfig_SampleIntervalMax_
  commentId: Overload:SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionCustomConfig.SampleIntervalMax
  isSpec: "True"
  fullName: SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionCustomConfig.SampleIntervalMax
  nameWithType: GenerativeFnRegressionCustomConfig.SampleIntervalMax
- uid: SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionCustomConfig.SampleIntervalMin
  name: SampleIntervalMin
  href: api/SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionCustomConfig.html#SharpNeat_Tasks_GenerativeFunctionRegression_ConfigModels_GenerativeFnRegressionCustomConfig_SampleIntervalMin
  commentId: P:SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionCustomConfig.SampleIntervalMin
  fullName: SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionCustomConfig.SampleIntervalMin
  nameWithType: GenerativeFnRegressionCustomConfig.SampleIntervalMin
- uid: SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionCustomConfig.SampleIntervalMin*
  name: SampleIntervalMin
  href: api/SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionCustomConfig.html#SharpNeat_Tasks_GenerativeFunctionRegression_ConfigModels_GenerativeFnRegressionCustomConfig_SampleIntervalMin_
  commentId: Overload:SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionCustomConfig.SampleIntervalMin
  isSpec: "True"
  fullName: SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionCustomConfig.SampleIntervalMin
  nameWithType: GenerativeFnRegressionCustomConfig.SampleIntervalMin
- uid: SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionCustomConfig.SampleResolution
  name: SampleResolution
  href: api/SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionCustomConfig.html#SharpNeat_Tasks_GenerativeFunctionRegression_ConfigModels_GenerativeFnRegressionCustomConfig_SampleResolution
  commentId: P:SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionCustomConfig.SampleResolution
  fullName: SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionCustomConfig.SampleResolution
  nameWithType: GenerativeFnRegressionCustomConfig.SampleResolution
- uid: SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionCustomConfig.SampleResolution*
  name: SampleResolution
  href: api/SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionCustomConfig.html#SharpNeat_Tasks_GenerativeFunctionRegression_ConfigModels_GenerativeFnRegressionCustomConfig_SampleResolution_
  commentId: Overload:SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionCustomConfig.SampleResolution
  isSpec: "True"
  fullName: SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionCustomConfig.SampleResolution
  nameWithType: GenerativeFnRegressionCustomConfig.SampleResolution
- uid: SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionExperimentConfig
  name: GenerativeFnRegressionExperimentConfig
  href: api/SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionExperimentConfig.html
  commentId: T:SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionExperimentConfig
  fullName: SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionExperimentConfig
  nameWithType: GenerativeFnRegressionExperimentConfig
- uid: SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionExperimentConfig.CustomEvaluationSchemeConfig
  name: CustomEvaluationSchemeConfig
  href: api/SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionExperimentConfig.html#SharpNeat_Tasks_GenerativeFunctionRegression_ConfigModels_GenerativeFnRegressionExperimentConfig_CustomEvaluationSchemeConfig
  commentId: P:SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionExperimentConfig.CustomEvaluationSchemeConfig
  fullName: SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionExperimentConfig.CustomEvaluationSchemeConfig
  nameWithType: GenerativeFnRegressionExperimentConfig.CustomEvaluationSchemeConfig
- uid: SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionExperimentConfig.CustomEvaluationSchemeConfig*
  name: CustomEvaluationSchemeConfig
  href: api/SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionExperimentConfig.html#SharpNeat_Tasks_GenerativeFunctionRegression_ConfigModels_GenerativeFnRegressionExperimentConfig_CustomEvaluationSchemeConfig_
  commentId: Overload:SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionExperimentConfig.CustomEvaluationSchemeConfig
  isSpec: "True"
  fullName: SharpNeat.Tasks.GenerativeFunctionRegression.ConfigModels.GenerativeFnRegressionExperimentConfig.CustomEvaluationSchemeConfig
  nameWithType: GenerativeFnRegressionExperimentConfig.CustomEvaluationSchemeConfig
- uid: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeBlackBoxProbe
  name: GenerativeBlackBoxProbe
  href: api/SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeBlackBoxProbe.html
  commentId: T:SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeBlackBoxProbe
  fullName: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeBlackBoxProbe
  nameWithType: GenerativeBlackBoxProbe
- uid: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeBlackBoxProbe.#ctor(System.Int32,System.Double,System.Double)
  name: GenerativeBlackBoxProbe(int, double, double)
  href: api/SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeBlackBoxProbe.html#SharpNeat_Tasks_GenerativeFunctionRegression_GenerativeBlackBoxProbe__ctor_System_Int32_System_Double_System_Double_
  commentId: M:SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeBlackBoxProbe.#ctor(System.Int32,System.Double,System.Double)
  name.vb: New(Integer, Double, Double)
  fullName: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeBlackBoxProbe.GenerativeBlackBoxProbe(int, double, double)
  fullName.vb: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeBlackBoxProbe.New(Integer, Double, Double)
  nameWithType: GenerativeBlackBoxProbe.GenerativeBlackBoxProbe(int, double, double)
  nameWithType.vb: GenerativeBlackBoxProbe.New(Integer, Double, Double)
- uid: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeBlackBoxProbe.#ctor*
  name: GenerativeBlackBoxProbe
  href: api/SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeBlackBoxProbe.html#SharpNeat_Tasks_GenerativeFunctionRegression_GenerativeBlackBoxProbe__ctor_
  commentId: Overload:SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeBlackBoxProbe.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeBlackBoxProbe.GenerativeBlackBoxProbe
  fullName.vb: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeBlackBoxProbe.New
  nameWithType: GenerativeBlackBoxProbe.GenerativeBlackBoxProbe
  nameWithType.vb: GenerativeBlackBoxProbe.New
- uid: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeBlackBoxProbe.Probe(SharpNeat.IBlackBox{System.Double},System.Double[])
  name: Probe(IBlackBox<double>, double[])
  href: api/SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeBlackBoxProbe.html#SharpNeat_Tasks_GenerativeFunctionRegression_GenerativeBlackBoxProbe_Probe_SharpNeat_IBlackBox_System_Double__System_Double___
  commentId: M:SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeBlackBoxProbe.Probe(SharpNeat.IBlackBox{System.Double},System.Double[])
  name.vb: Probe(IBlackBox(Of Double), Double())
  fullName: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeBlackBoxProbe.Probe(SharpNeat.IBlackBox<double>, double[])
  fullName.vb: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeBlackBoxProbe.Probe(SharpNeat.IBlackBox(Of Double), Double())
  nameWithType: GenerativeBlackBoxProbe.Probe(IBlackBox<double>, double[])
  nameWithType.vb: GenerativeBlackBoxProbe.Probe(IBlackBox(Of Double), Double())
- uid: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeBlackBoxProbe.Probe*
  name: Probe
  href: api/SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeBlackBoxProbe.html#SharpNeat_Tasks_GenerativeFunctionRegression_GenerativeBlackBoxProbe_Probe_
  commentId: Overload:SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeBlackBoxProbe.Probe
  isSpec: "True"
  fullName: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeBlackBoxProbe.Probe
  nameWithType: GenerativeBlackBoxProbe.Probe
- uid: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme
  name: GenerativeFnRegressionEvaluationScheme
  href: api/SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.html
  commentId: T:SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme
  fullName: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme
  nameWithType: GenerativeFnRegressionEvaluationScheme
- uid: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.#ctor(System.Func{System.Double,System.Double},SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo,System.Double)
  name: GenerativeFnRegressionEvaluationScheme(Func<double, double>, ParamSamplingInfo, double)
  href: api/SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.html#SharpNeat_Tasks_GenerativeFunctionRegression_GenerativeFnRegressionEvaluationScheme__ctor_System_Func_System_Double_System_Double__SharpNeat_Tasks_FunctionRegression_ParamSamplingInfo_System_Double_
  commentId: M:SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.#ctor(System.Func{System.Double,System.Double},SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo,System.Double)
  name.vb: New(Func(Of Double, Double), ParamSamplingInfo, Double)
  fullName: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.GenerativeFnRegressionEvaluationScheme(System.Func<double, double>, SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo, double)
  fullName.vb: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.New(System.Func(Of Double, Double), SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo, Double)
  nameWithType: GenerativeFnRegressionEvaluationScheme.GenerativeFnRegressionEvaluationScheme(Func<double, double>, ParamSamplingInfo, double)
  nameWithType.vb: GenerativeFnRegressionEvaluationScheme.New(Func(Of Double, Double), ParamSamplingInfo, Double)
- uid: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.#ctor*
  name: GenerativeFnRegressionEvaluationScheme
  href: api/SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.html#SharpNeat_Tasks_GenerativeFunctionRegression_GenerativeFnRegressionEvaluationScheme__ctor_
  commentId: Overload:SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.GenerativeFnRegressionEvaluationScheme
  fullName.vb: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.New
  nameWithType: GenerativeFnRegressionEvaluationScheme.GenerativeFnRegressionEvaluationScheme
  nameWithType.vb: GenerativeFnRegressionEvaluationScheme.New
- uid: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.CreateEvaluator
  name: CreateEvaluator()
  href: api/SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.html#SharpNeat_Tasks_GenerativeFunctionRegression_GenerativeFnRegressionEvaluationScheme_CreateEvaluator
  commentId: M:SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.CreateEvaluator
  fullName: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.CreateEvaluator()
  nameWithType: GenerativeFnRegressionEvaluationScheme.CreateEvaluator()
- uid: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.CreateEvaluator*
  name: CreateEvaluator
  href: api/SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.html#SharpNeat_Tasks_GenerativeFunctionRegression_GenerativeFnRegressionEvaluationScheme_CreateEvaluator_
  commentId: Overload:SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.CreateEvaluator
  isSpec: "True"
  fullName: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.CreateEvaluator
  nameWithType: GenerativeFnRegressionEvaluationScheme.CreateEvaluator
- uid: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.EvaluatorsHaveState
  name: EvaluatorsHaveState
  href: api/SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.html#SharpNeat_Tasks_GenerativeFunctionRegression_GenerativeFnRegressionEvaluationScheme_EvaluatorsHaveState
  commentId: P:SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.EvaluatorsHaveState
  fullName: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.EvaluatorsHaveState
  nameWithType: GenerativeFnRegressionEvaluationScheme.EvaluatorsHaveState
- uid: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.EvaluatorsHaveState*
  name: EvaluatorsHaveState
  href: api/SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.html#SharpNeat_Tasks_GenerativeFunctionRegression_GenerativeFnRegressionEvaluationScheme_EvaluatorsHaveState_
  commentId: Overload:SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.EvaluatorsHaveState
  isSpec: "True"
  fullName: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.EvaluatorsHaveState
  nameWithType: GenerativeFnRegressionEvaluationScheme.EvaluatorsHaveState
- uid: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.FitnessComparer
  name: FitnessComparer
  href: api/SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.html#SharpNeat_Tasks_GenerativeFunctionRegression_GenerativeFnRegressionEvaluationScheme_FitnessComparer
  commentId: P:SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.FitnessComparer
  fullName: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.FitnessComparer
  nameWithType: GenerativeFnRegressionEvaluationScheme.FitnessComparer
- uid: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.FitnessComparer*
  name: FitnessComparer
  href: api/SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.html#SharpNeat_Tasks_GenerativeFunctionRegression_GenerativeFnRegressionEvaluationScheme_FitnessComparer_
  commentId: Overload:SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.FitnessComparer
  isSpec: "True"
  fullName: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.FitnessComparer
  nameWithType: GenerativeFnRegressionEvaluationScheme.FitnessComparer
- uid: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.InputCount
  name: InputCount
  href: api/SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.html#SharpNeat_Tasks_GenerativeFunctionRegression_GenerativeFnRegressionEvaluationScheme_InputCount
  commentId: P:SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.InputCount
  fullName: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.InputCount
  nameWithType: GenerativeFnRegressionEvaluationScheme.InputCount
- uid: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.InputCount*
  name: InputCount
  href: api/SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.html#SharpNeat_Tasks_GenerativeFunctionRegression_GenerativeFnRegressionEvaluationScheme_InputCount_
  commentId: Overload:SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.InputCount
  isSpec: "True"
  fullName: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.InputCount
  nameWithType: GenerativeFnRegressionEvaluationScheme.InputCount
- uid: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.IsDeterministic
  name: IsDeterministic
  href: api/SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.html#SharpNeat_Tasks_GenerativeFunctionRegression_GenerativeFnRegressionEvaluationScheme_IsDeterministic
  commentId: P:SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.IsDeterministic
  fullName: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.IsDeterministic
  nameWithType: GenerativeFnRegressionEvaluationScheme.IsDeterministic
- uid: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.IsDeterministic*
  name: IsDeterministic
  href: api/SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.html#SharpNeat_Tasks_GenerativeFunctionRegression_GenerativeFnRegressionEvaluationScheme_IsDeterministic_
  commentId: Overload:SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.IsDeterministic
  isSpec: "True"
  fullName: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.IsDeterministic
  nameWithType: GenerativeFnRegressionEvaluationScheme.IsDeterministic
- uid: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.NullFitness
  name: NullFitness
  href: api/SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.html#SharpNeat_Tasks_GenerativeFunctionRegression_GenerativeFnRegressionEvaluationScheme_NullFitness
  commentId: P:SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.NullFitness
  fullName: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.NullFitness
  nameWithType: GenerativeFnRegressionEvaluationScheme.NullFitness
- uid: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.NullFitness*
  name: NullFitness
  href: api/SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.html#SharpNeat_Tasks_GenerativeFunctionRegression_GenerativeFnRegressionEvaluationScheme_NullFitness_
  commentId: Overload:SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.NullFitness
  isSpec: "True"
  fullName: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.NullFitness
  nameWithType: GenerativeFnRegressionEvaluationScheme.NullFitness
- uid: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.OutputCount
  name: OutputCount
  href: api/SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.html#SharpNeat_Tasks_GenerativeFunctionRegression_GenerativeFnRegressionEvaluationScheme_OutputCount
  commentId: P:SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.OutputCount
  fullName: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.OutputCount
  nameWithType: GenerativeFnRegressionEvaluationScheme.OutputCount
- uid: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.OutputCount*
  name: OutputCount
  href: api/SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.html#SharpNeat_Tasks_GenerativeFunctionRegression_GenerativeFnRegressionEvaluationScheme_OutputCount_
  commentId: Overload:SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.OutputCount
  isSpec: "True"
  fullName: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.OutputCount
  nameWithType: GenerativeFnRegressionEvaluationScheme.OutputCount
- uid: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.TestForStopCondition(SharpNeat.Evaluation.FitnessInfo)
  name: TestForStopCondition(FitnessInfo)
  href: api/SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.html#SharpNeat_Tasks_GenerativeFunctionRegression_GenerativeFnRegressionEvaluationScheme_TestForStopCondition_SharpNeat_Evaluation_FitnessInfo_
  commentId: M:SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.TestForStopCondition(SharpNeat.Evaluation.FitnessInfo)
  fullName: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.TestForStopCondition(SharpNeat.Evaluation.FitnessInfo)
  nameWithType: GenerativeFnRegressionEvaluationScheme.TestForStopCondition(FitnessInfo)
- uid: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.TestForStopCondition*
  name: TestForStopCondition
  href: api/SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.html#SharpNeat_Tasks_GenerativeFunctionRegression_GenerativeFnRegressionEvaluationScheme_TestForStopCondition_
  commentId: Overload:SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.TestForStopCondition
  isSpec: "True"
  fullName: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionEvaluationScheme.TestForStopCondition
  nameWithType: GenerativeFnRegressionEvaluationScheme.TestForStopCondition
- uid: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionExperimentFactory
  name: GenerativeFnRegressionExperimentFactory
  href: api/SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionExperimentFactory.html
  commentId: T:SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionExperimentFactory
  fullName: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionExperimentFactory
  nameWithType: GenerativeFnRegressionExperimentFactory
- uid: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionExperimentFactory.CreateExperiment(System.IO.Stream)
  name: CreateExperiment(Stream)
  href: api/SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionExperimentFactory.html#SharpNeat_Tasks_GenerativeFunctionRegression_GenerativeFnRegressionExperimentFactory_CreateExperiment_System_IO_Stream_
  commentId: M:SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionExperimentFactory.CreateExperiment(System.IO.Stream)
  fullName: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionExperimentFactory.CreateExperiment(System.IO.Stream)
  nameWithType: GenerativeFnRegressionExperimentFactory.CreateExperiment(Stream)
- uid: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionExperimentFactory.CreateExperiment*
  name: CreateExperiment
  href: api/SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionExperimentFactory.html#SharpNeat_Tasks_GenerativeFunctionRegression_GenerativeFnRegressionExperimentFactory_CreateExperiment_
  commentId: Overload:SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionExperimentFactory.CreateExperiment
  isSpec: "True"
  fullName: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionExperimentFactory.CreateExperiment
  nameWithType: GenerativeFnRegressionExperimentFactory.CreateExperiment
- uid: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionExperimentFactory.CreateExperimentSinglePrecision(System.IO.Stream)
  name: CreateExperimentSinglePrecision(Stream)
  href: api/SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionExperimentFactory.html#SharpNeat_Tasks_GenerativeFunctionRegression_GenerativeFnRegressionExperimentFactory_CreateExperimentSinglePrecision_System_IO_Stream_
  commentId: M:SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionExperimentFactory.CreateExperimentSinglePrecision(System.IO.Stream)
  fullName: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionExperimentFactory.CreateExperimentSinglePrecision(System.IO.Stream)
  nameWithType: GenerativeFnRegressionExperimentFactory.CreateExperimentSinglePrecision(Stream)
- uid: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionExperimentFactory.CreateExperimentSinglePrecision*
  name: CreateExperimentSinglePrecision
  href: api/SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionExperimentFactory.html#SharpNeat_Tasks_GenerativeFunctionRegression_GenerativeFnRegressionExperimentFactory_CreateExperimentSinglePrecision_
  commentId: Overload:SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionExperimentFactory.CreateExperimentSinglePrecision
  isSpec: "True"
  fullName: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionExperimentFactory.CreateExperimentSinglePrecision
  nameWithType: GenerativeFnRegressionExperimentFactory.CreateExperimentSinglePrecision
- uid: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionExperimentFactory.Id
  name: Id
  href: api/SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionExperimentFactory.html#SharpNeat_Tasks_GenerativeFunctionRegression_GenerativeFnRegressionExperimentFactory_Id
  commentId: P:SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionExperimentFactory.Id
  fullName: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionExperimentFactory.Id
  nameWithType: GenerativeFnRegressionExperimentFactory.Id
- uid: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionExperimentFactory.Id*
  name: Id
  href: api/SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionExperimentFactory.html#SharpNeat_Tasks_GenerativeFunctionRegression_GenerativeFnRegressionExperimentFactory_Id_
  commentId: Overload:SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionExperimentFactory.Id
  isSpec: "True"
  fullName: SharpNeat.Tasks.GenerativeFunctionRegression.GenerativeFnRegressionExperimentFactory.Id
  nameWithType: GenerativeFnRegressionExperimentFactory.Id
- uid: SharpNeat.Tasks.PreyCapture
  name: SharpNeat.Tasks.PreyCapture
  href: api/SharpNeat.Tasks.PreyCapture.html
  commentId: N:SharpNeat.Tasks.PreyCapture
  fullName: SharpNeat.Tasks.PreyCapture
  nameWithType: SharpNeat.Tasks.PreyCapture
- uid: SharpNeat.Tasks.PreyCapture.ConfigModels
  name: SharpNeat.Tasks.PreyCapture.ConfigModels
  href: api/SharpNeat.Tasks.PreyCapture.ConfigModels.html
  commentId: N:SharpNeat.Tasks.PreyCapture.ConfigModels
  fullName: SharpNeat.Tasks.PreyCapture.ConfigModels
  nameWithType: SharpNeat.Tasks.PreyCapture.ConfigModels
- uid: SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureCustomConfig
  name: PreyCaptureCustomConfig
  href: api/SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureCustomConfig.html
  commentId: T:SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureCustomConfig
  fullName: SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureCustomConfig
  nameWithType: PreyCaptureCustomConfig
- uid: SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureCustomConfig.MaxTimesteps
  name: MaxTimesteps
  href: api/SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureCustomConfig.html#SharpNeat_Tasks_PreyCapture_ConfigModels_PreyCaptureCustomConfig_MaxTimesteps
  commentId: P:SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureCustomConfig.MaxTimesteps
  fullName: SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureCustomConfig.MaxTimesteps
  nameWithType: PreyCaptureCustomConfig.MaxTimesteps
- uid: SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureCustomConfig.MaxTimesteps*
  name: MaxTimesteps
  href: api/SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureCustomConfig.html#SharpNeat_Tasks_PreyCapture_ConfigModels_PreyCaptureCustomConfig_MaxTimesteps_
  commentId: Overload:SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureCustomConfig.MaxTimesteps
  isSpec: "True"
  fullName: SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureCustomConfig.MaxTimesteps
  nameWithType: PreyCaptureCustomConfig.MaxTimesteps
- uid: SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureCustomConfig.PreyInitMoves
  name: PreyInitMoves
  href: api/SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureCustomConfig.html#SharpNeat_Tasks_PreyCapture_ConfigModels_PreyCaptureCustomConfig_PreyInitMoves
  commentId: P:SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureCustomConfig.PreyInitMoves
  fullName: SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureCustomConfig.PreyInitMoves
  nameWithType: PreyCaptureCustomConfig.PreyInitMoves
- uid: SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureCustomConfig.PreyInitMoves*
  name: PreyInitMoves
  href: api/SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureCustomConfig.html#SharpNeat_Tasks_PreyCapture_ConfigModels_PreyCaptureCustomConfig_PreyInitMoves_
  commentId: Overload:SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureCustomConfig.PreyInitMoves
  isSpec: "True"
  fullName: SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureCustomConfig.PreyInitMoves
  nameWithType: PreyCaptureCustomConfig.PreyInitMoves
- uid: SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureCustomConfig.PreySpeed
  name: PreySpeed
  href: api/SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureCustomConfig.html#SharpNeat_Tasks_PreyCapture_ConfigModels_PreyCaptureCustomConfig_PreySpeed
  commentId: P:SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureCustomConfig.PreySpeed
  fullName: SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureCustomConfig.PreySpeed
  nameWithType: PreyCaptureCustomConfig.PreySpeed
- uid: SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureCustomConfig.PreySpeed*
  name: PreySpeed
  href: api/SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureCustomConfig.html#SharpNeat_Tasks_PreyCapture_ConfigModels_PreyCaptureCustomConfig_PreySpeed_
  commentId: Overload:SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureCustomConfig.PreySpeed
  isSpec: "True"
  fullName: SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureCustomConfig.PreySpeed
  nameWithType: PreyCaptureCustomConfig.PreySpeed
- uid: SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureCustomConfig.SensorRange
  name: SensorRange
  href: api/SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureCustomConfig.html#SharpNeat_Tasks_PreyCapture_ConfigModels_PreyCaptureCustomConfig_SensorRange
  commentId: P:SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureCustomConfig.SensorRange
  fullName: SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureCustomConfig.SensorRange
  nameWithType: PreyCaptureCustomConfig.SensorRange
- uid: SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureCustomConfig.SensorRange*
  name: SensorRange
  href: api/SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureCustomConfig.html#SharpNeat_Tasks_PreyCapture_ConfigModels_PreyCaptureCustomConfig_SensorRange_
  commentId: Overload:SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureCustomConfig.SensorRange
  isSpec: "True"
  fullName: SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureCustomConfig.SensorRange
  nameWithType: PreyCaptureCustomConfig.SensorRange
- uid: SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureCustomConfig.TrialsPerEvaluation
  name: TrialsPerEvaluation
  href: api/SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureCustomConfig.html#SharpNeat_Tasks_PreyCapture_ConfigModels_PreyCaptureCustomConfig_TrialsPerEvaluation
  commentId: P:SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureCustomConfig.TrialsPerEvaluation
  fullName: SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureCustomConfig.TrialsPerEvaluation
  nameWithType: PreyCaptureCustomConfig.TrialsPerEvaluation
- uid: SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureCustomConfig.TrialsPerEvaluation*
  name: TrialsPerEvaluation
  href: api/SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureCustomConfig.html#SharpNeat_Tasks_PreyCapture_ConfigModels_PreyCaptureCustomConfig_TrialsPerEvaluation_
  commentId: Overload:SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureCustomConfig.TrialsPerEvaluation
  isSpec: "True"
  fullName: SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureCustomConfig.TrialsPerEvaluation
  nameWithType: PreyCaptureCustomConfig.TrialsPerEvaluation
- uid: SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureExperimentConfig
  name: PreyCaptureExperimentConfig
  href: api/SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureExperimentConfig.html
  commentId: T:SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureExperimentConfig
  fullName: SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureExperimentConfig
  nameWithType: PreyCaptureExperimentConfig
- uid: SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureExperimentConfig.CustomEvaluationSchemeConfig
  name: CustomEvaluationSchemeConfig
  href: api/SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureExperimentConfig.html#SharpNeat_Tasks_PreyCapture_ConfigModels_PreyCaptureExperimentConfig_CustomEvaluationSchemeConfig
  commentId: P:SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureExperimentConfig.CustomEvaluationSchemeConfig
  fullName: SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureExperimentConfig.CustomEvaluationSchemeConfig
  nameWithType: PreyCaptureExperimentConfig.CustomEvaluationSchemeConfig
- uid: SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureExperimentConfig.CustomEvaluationSchemeConfig*
  name: CustomEvaluationSchemeConfig
  href: api/SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureExperimentConfig.html#SharpNeat_Tasks_PreyCapture_ConfigModels_PreyCaptureExperimentConfig_CustomEvaluationSchemeConfig_
  commentId: Overload:SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureExperimentConfig.CustomEvaluationSchemeConfig
  isSpec: "True"
  fullName: SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureExperimentConfig.CustomEvaluationSchemeConfig
  nameWithType: PreyCaptureExperimentConfig.CustomEvaluationSchemeConfig
- uid: SharpNeat.Tasks.PreyCapture.Int32Point
  name: Int32Point
  href: api/SharpNeat.Tasks.PreyCapture.Int32Point.html
  commentId: T:SharpNeat.Tasks.PreyCapture.Int32Point
  fullName: SharpNeat.Tasks.PreyCapture.Int32Point
  nameWithType: Int32Point
- uid: SharpNeat.Tasks.PreyCapture.Int32Point.#ctor(System.Int32,System.Int32)
  name: Int32Point(int, int)
  href: api/SharpNeat.Tasks.PreyCapture.Int32Point.html#SharpNeat_Tasks_PreyCapture_Int32Point__ctor_System_Int32_System_Int32_
  commentId: M:SharpNeat.Tasks.PreyCapture.Int32Point.#ctor(System.Int32,System.Int32)
  name.vb: New(Integer, Integer)
  fullName: SharpNeat.Tasks.PreyCapture.Int32Point.Int32Point(int, int)
  fullName.vb: SharpNeat.Tasks.PreyCapture.Int32Point.New(Integer, Integer)
  nameWithType: Int32Point.Int32Point(int, int)
  nameWithType.vb: Int32Point.New(Integer, Integer)
- uid: SharpNeat.Tasks.PreyCapture.Int32Point.#ctor*
  name: Int32Point
  href: api/SharpNeat.Tasks.PreyCapture.Int32Point.html#SharpNeat_Tasks_PreyCapture_Int32Point__ctor_
  commentId: Overload:SharpNeat.Tasks.PreyCapture.Int32Point.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Tasks.PreyCapture.Int32Point.Int32Point
  fullName.vb: SharpNeat.Tasks.PreyCapture.Int32Point.New
  nameWithType: Int32Point.Int32Point
  nameWithType.vb: Int32Point.New
- uid: SharpNeat.Tasks.PreyCapture.Int32Point.CalculateDistance(SharpNeat.Tasks.PreyCapture.Int32Point,SharpNeat.Tasks.PreyCapture.Int32Point)
  name: CalculateDistance(Int32Point, Int32Point)
  href: api/SharpNeat.Tasks.PreyCapture.Int32Point.html#SharpNeat_Tasks_PreyCapture_Int32Point_CalculateDistance_SharpNeat_Tasks_PreyCapture_Int32Point_SharpNeat_Tasks_PreyCapture_Int32Point_
  commentId: M:SharpNeat.Tasks.PreyCapture.Int32Point.CalculateDistance(SharpNeat.Tasks.PreyCapture.Int32Point,SharpNeat.Tasks.PreyCapture.Int32Point)
  fullName: SharpNeat.Tasks.PreyCapture.Int32Point.CalculateDistance(SharpNeat.Tasks.PreyCapture.Int32Point, SharpNeat.Tasks.PreyCapture.Int32Point)
  nameWithType: Int32Point.CalculateDistance(Int32Point, Int32Point)
- uid: SharpNeat.Tasks.PreyCapture.Int32Point.CalculateDistance(SharpNeat.Tasks.PreyCapture.Int32Point,System.Int32,System.Int32)
  name: CalculateDistance(Int32Point, int, int)
  href: api/SharpNeat.Tasks.PreyCapture.Int32Point.html#SharpNeat_Tasks_PreyCapture_Int32Point_CalculateDistance_SharpNeat_Tasks_PreyCapture_Int32Point_System_Int32_System_Int32_
  commentId: M:SharpNeat.Tasks.PreyCapture.Int32Point.CalculateDistance(SharpNeat.Tasks.PreyCapture.Int32Point,System.Int32,System.Int32)
  name.vb: CalculateDistance(Int32Point, Integer, Integer)
  fullName: SharpNeat.Tasks.PreyCapture.Int32Point.CalculateDistance(SharpNeat.Tasks.PreyCapture.Int32Point, int, int)
  fullName.vb: SharpNeat.Tasks.PreyCapture.Int32Point.CalculateDistance(SharpNeat.Tasks.PreyCapture.Int32Point, Integer, Integer)
  nameWithType: Int32Point.CalculateDistance(Int32Point, int, int)
  nameWithType.vb: Int32Point.CalculateDistance(Int32Point, Integer, Integer)
- uid: SharpNeat.Tasks.PreyCapture.Int32Point.CalculateDistance*
  name: CalculateDistance
  href: api/SharpNeat.Tasks.PreyCapture.Int32Point.html#SharpNeat_Tasks_PreyCapture_Int32Point_CalculateDistance_
  commentId: Overload:SharpNeat.Tasks.PreyCapture.Int32Point.CalculateDistance
  isSpec: "True"
  fullName: SharpNeat.Tasks.PreyCapture.Int32Point.CalculateDistance
  nameWithType: Int32Point.CalculateDistance
- uid: SharpNeat.Tasks.PreyCapture.Int32Point.Equals(System.Object)
  name: Equals(object?)
  href: api/SharpNeat.Tasks.PreyCapture.Int32Point.html#SharpNeat_Tasks_PreyCapture_Int32Point_Equals_System_Object_
  commentId: M:SharpNeat.Tasks.PreyCapture.Int32Point.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: SharpNeat.Tasks.PreyCapture.Int32Point.Equals(object?)
  fullName.vb: SharpNeat.Tasks.PreyCapture.Int32Point.Equals(Object)
  nameWithType: Int32Point.Equals(object?)
  nameWithType.vb: Int32Point.Equals(Object)
- uid: SharpNeat.Tasks.PreyCapture.Int32Point.Equals*
  name: Equals
  href: api/SharpNeat.Tasks.PreyCapture.Int32Point.html#SharpNeat_Tasks_PreyCapture_Int32Point_Equals_
  commentId: Overload:SharpNeat.Tasks.PreyCapture.Int32Point.Equals
  isSpec: "True"
  fullName: SharpNeat.Tasks.PreyCapture.Int32Point.Equals
  nameWithType: Int32Point.Equals
- uid: SharpNeat.Tasks.PreyCapture.Int32Point.GetHashCode
  name: GetHashCode()
  href: api/SharpNeat.Tasks.PreyCapture.Int32Point.html#SharpNeat_Tasks_PreyCapture_Int32Point_GetHashCode
  commentId: M:SharpNeat.Tasks.PreyCapture.Int32Point.GetHashCode
  fullName: SharpNeat.Tasks.PreyCapture.Int32Point.GetHashCode()
  nameWithType: Int32Point.GetHashCode()
- uid: SharpNeat.Tasks.PreyCapture.Int32Point.GetHashCode*
  name: GetHashCode
  href: api/SharpNeat.Tasks.PreyCapture.Int32Point.html#SharpNeat_Tasks_PreyCapture_Int32Point_GetHashCode_
  commentId: Overload:SharpNeat.Tasks.PreyCapture.Int32Point.GetHashCode
  isSpec: "True"
  fullName: SharpNeat.Tasks.PreyCapture.Int32Point.GetHashCode
  nameWithType: Int32Point.GetHashCode
- uid: SharpNeat.Tasks.PreyCapture.Int32Point.op_Equality(SharpNeat.Tasks.PreyCapture.Int32Point,SharpNeat.Tasks.PreyCapture.Int32Point)
  name: operator ==(Int32Point, Int32Point)
  href: api/SharpNeat.Tasks.PreyCapture.Int32Point.html#SharpNeat_Tasks_PreyCapture_Int32Point_op_Equality_SharpNeat_Tasks_PreyCapture_Int32Point_SharpNeat_Tasks_PreyCapture_Int32Point_
  commentId: M:SharpNeat.Tasks.PreyCapture.Int32Point.op_Equality(SharpNeat.Tasks.PreyCapture.Int32Point,SharpNeat.Tasks.PreyCapture.Int32Point)
  name.vb: =(Int32Point, Int32Point)
  fullName: SharpNeat.Tasks.PreyCapture.Int32Point.operator ==(SharpNeat.Tasks.PreyCapture.Int32Point, SharpNeat.Tasks.PreyCapture.Int32Point)
  fullName.vb: SharpNeat.Tasks.PreyCapture.Int32Point.=(SharpNeat.Tasks.PreyCapture.Int32Point, SharpNeat.Tasks.PreyCapture.Int32Point)
  nameWithType: Int32Point.operator ==(Int32Point, Int32Point)
  nameWithType.vb: Int32Point.=(Int32Point, Int32Point)
- uid: SharpNeat.Tasks.PreyCapture.Int32Point.op_Equality*
  name: operator ==
  href: api/SharpNeat.Tasks.PreyCapture.Int32Point.html#SharpNeat_Tasks_PreyCapture_Int32Point_op_Equality_
  commentId: Overload:SharpNeat.Tasks.PreyCapture.Int32Point.op_Equality
  isSpec: "True"
  name.vb: =
  fullName: SharpNeat.Tasks.PreyCapture.Int32Point.operator ==
  fullName.vb: SharpNeat.Tasks.PreyCapture.Int32Point.=
  nameWithType: Int32Point.operator ==
  nameWithType.vb: Int32Point.=
- uid: SharpNeat.Tasks.PreyCapture.Int32Point.op_Inequality(SharpNeat.Tasks.PreyCapture.Int32Point,SharpNeat.Tasks.PreyCapture.Int32Point)
  name: operator !=(Int32Point, Int32Point)
  href: api/SharpNeat.Tasks.PreyCapture.Int32Point.html#SharpNeat_Tasks_PreyCapture_Int32Point_op_Inequality_SharpNeat_Tasks_PreyCapture_Int32Point_SharpNeat_Tasks_PreyCapture_Int32Point_
  commentId: M:SharpNeat.Tasks.PreyCapture.Int32Point.op_Inequality(SharpNeat.Tasks.PreyCapture.Int32Point,SharpNeat.Tasks.PreyCapture.Int32Point)
  name.vb: <>(Int32Point, Int32Point)
  fullName: SharpNeat.Tasks.PreyCapture.Int32Point.operator !=(SharpNeat.Tasks.PreyCapture.Int32Point, SharpNeat.Tasks.PreyCapture.Int32Point)
  fullName.vb: SharpNeat.Tasks.PreyCapture.Int32Point.<>(SharpNeat.Tasks.PreyCapture.Int32Point, SharpNeat.Tasks.PreyCapture.Int32Point)
  nameWithType: Int32Point.operator !=(Int32Point, Int32Point)
  nameWithType.vb: Int32Point.<>(Int32Point, Int32Point)
- uid: SharpNeat.Tasks.PreyCapture.Int32Point.op_Inequality*
  name: operator !=
  href: api/SharpNeat.Tasks.PreyCapture.Int32Point.html#SharpNeat_Tasks_PreyCapture_Int32Point_op_Inequality_
  commentId: Overload:SharpNeat.Tasks.PreyCapture.Int32Point.op_Inequality
  isSpec: "True"
  name.vb: <>
  fullName: SharpNeat.Tasks.PreyCapture.Int32Point.operator !=
  fullName.vb: SharpNeat.Tasks.PreyCapture.Int32Point.<>
  nameWithType: Int32Point.operator !=
  nameWithType.vb: Int32Point.<>
- uid: SharpNeat.Tasks.PreyCapture.Int32Point.op_Subtraction(SharpNeat.Tasks.PreyCapture.Int32Point,SharpNeat.Tasks.PreyCapture.Int32Point)
  name: operator -(Int32Point, Int32Point)
  href: api/SharpNeat.Tasks.PreyCapture.Int32Point.html#SharpNeat_Tasks_PreyCapture_Int32Point_op_Subtraction_SharpNeat_Tasks_PreyCapture_Int32Point_SharpNeat_Tasks_PreyCapture_Int32Point_
  commentId: M:SharpNeat.Tasks.PreyCapture.Int32Point.op_Subtraction(SharpNeat.Tasks.PreyCapture.Int32Point,SharpNeat.Tasks.PreyCapture.Int32Point)
  name.vb: -(Int32Point, Int32Point)
  fullName: SharpNeat.Tasks.PreyCapture.Int32Point.operator -(SharpNeat.Tasks.PreyCapture.Int32Point, SharpNeat.Tasks.PreyCapture.Int32Point)
  fullName.vb: SharpNeat.Tasks.PreyCapture.Int32Point.-(SharpNeat.Tasks.PreyCapture.Int32Point, SharpNeat.Tasks.PreyCapture.Int32Point)
  nameWithType: Int32Point.operator -(Int32Point, Int32Point)
  nameWithType.vb: Int32Point.-(Int32Point, Int32Point)
- uid: SharpNeat.Tasks.PreyCapture.Int32Point.op_Subtraction*
  name: operator -
  href: api/SharpNeat.Tasks.PreyCapture.Int32Point.html#SharpNeat_Tasks_PreyCapture_Int32Point_op_Subtraction_
  commentId: Overload:SharpNeat.Tasks.PreyCapture.Int32Point.op_Subtraction
  isSpec: "True"
  name.vb: '-'
  fullName: SharpNeat.Tasks.PreyCapture.Int32Point.operator -
  fullName.vb: SharpNeat.Tasks.PreyCapture.Int32Point.-
  nameWithType: Int32Point.operator -
  nameWithType.vb: Int32Point.-
- uid: SharpNeat.Tasks.PreyCapture.Int32Point.X
  name: X
  href: api/SharpNeat.Tasks.PreyCapture.Int32Point.html#SharpNeat_Tasks_PreyCapture_Int32Point_X
  commentId: F:SharpNeat.Tasks.PreyCapture.Int32Point.X
  fullName: SharpNeat.Tasks.PreyCapture.Int32Point.X
  nameWithType: Int32Point.X
- uid: SharpNeat.Tasks.PreyCapture.Int32Point.Y
  name: Y
  href: api/SharpNeat.Tasks.PreyCapture.Int32Point.html#SharpNeat_Tasks_PreyCapture_Int32Point_Y
  commentId: F:SharpNeat.Tasks.PreyCapture.Int32Point.Y
  fullName: SharpNeat.Tasks.PreyCapture.Int32Point.Y
  nameWithType: Int32Point.Y
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme
  name: PreyCaptureEvaluationScheme
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.html
  commentId: T:SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme
  nameWithType: PreyCaptureEvaluationScheme
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.#ctor(System.Int32,System.Single,System.Single,System.Int32,System.Int32)
  name: PreyCaptureEvaluationScheme(int, float, float, int, int)
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.html#SharpNeat_Tasks_PreyCapture_PreyCaptureEvaluationScheme__ctor_System_Int32_System_Single_System_Single_System_Int32_System_Int32_
  commentId: M:SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.#ctor(System.Int32,System.Single,System.Single,System.Int32,System.Int32)
  name.vb: New(Integer, Single, Single, Integer, Integer)
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.PreyCaptureEvaluationScheme(int, float, float, int, int)
  fullName.vb: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.New(Integer, Single, Single, Integer, Integer)
  nameWithType: PreyCaptureEvaluationScheme.PreyCaptureEvaluationScheme(int, float, float, int, int)
  nameWithType.vb: PreyCaptureEvaluationScheme.New(Integer, Single, Single, Integer, Integer)
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.#ctor*
  name: PreyCaptureEvaluationScheme
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.html#SharpNeat_Tasks_PreyCapture_PreyCaptureEvaluationScheme__ctor_
  commentId: Overload:SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.PreyCaptureEvaluationScheme
  fullName.vb: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.New
  nameWithType: PreyCaptureEvaluationScheme.PreyCaptureEvaluationScheme
  nameWithType.vb: PreyCaptureEvaluationScheme.New
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.CreateEvaluator
  name: CreateEvaluator()
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.html#SharpNeat_Tasks_PreyCapture_PreyCaptureEvaluationScheme_CreateEvaluator
  commentId: M:SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.CreateEvaluator
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.CreateEvaluator()
  nameWithType: PreyCaptureEvaluationScheme.CreateEvaluator()
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.CreateEvaluator*
  name: CreateEvaluator
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.html#SharpNeat_Tasks_PreyCapture_PreyCaptureEvaluationScheme_CreateEvaluator_
  commentId: Overload:SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.CreateEvaluator
  isSpec: "True"
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.CreateEvaluator
  nameWithType: PreyCaptureEvaluationScheme.CreateEvaluator
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.EvaluatorsHaveState
  name: EvaluatorsHaveState
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.html#SharpNeat_Tasks_PreyCapture_PreyCaptureEvaluationScheme_EvaluatorsHaveState
  commentId: P:SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.EvaluatorsHaveState
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.EvaluatorsHaveState
  nameWithType: PreyCaptureEvaluationScheme.EvaluatorsHaveState
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.EvaluatorsHaveState*
  name: EvaluatorsHaveState
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.html#SharpNeat_Tasks_PreyCapture_PreyCaptureEvaluationScheme_EvaluatorsHaveState_
  commentId: Overload:SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.EvaluatorsHaveState
  isSpec: "True"
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.EvaluatorsHaveState
  nameWithType: PreyCaptureEvaluationScheme.EvaluatorsHaveState
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.FitnessComparer
  name: FitnessComparer
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.html#SharpNeat_Tasks_PreyCapture_PreyCaptureEvaluationScheme_FitnessComparer
  commentId: P:SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.FitnessComparer
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.FitnessComparer
  nameWithType: PreyCaptureEvaluationScheme.FitnessComparer
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.FitnessComparer*
  name: FitnessComparer
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.html#SharpNeat_Tasks_PreyCapture_PreyCaptureEvaluationScheme_FitnessComparer_
  commentId: Overload:SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.FitnessComparer
  isSpec: "True"
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.FitnessComparer
  nameWithType: PreyCaptureEvaluationScheme.FitnessComparer
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.InputCount
  name: InputCount
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.html#SharpNeat_Tasks_PreyCapture_PreyCaptureEvaluationScheme_InputCount
  commentId: P:SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.InputCount
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.InputCount
  nameWithType: PreyCaptureEvaluationScheme.InputCount
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.InputCount*
  name: InputCount
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.html#SharpNeat_Tasks_PreyCapture_PreyCaptureEvaluationScheme_InputCount_
  commentId: Overload:SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.InputCount
  isSpec: "True"
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.InputCount
  nameWithType: PreyCaptureEvaluationScheme.InputCount
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.IsDeterministic
  name: IsDeterministic
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.html#SharpNeat_Tasks_PreyCapture_PreyCaptureEvaluationScheme_IsDeterministic
  commentId: P:SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.IsDeterministic
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.IsDeterministic
  nameWithType: PreyCaptureEvaluationScheme.IsDeterministic
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.IsDeterministic*
  name: IsDeterministic
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.html#SharpNeat_Tasks_PreyCapture_PreyCaptureEvaluationScheme_IsDeterministic_
  commentId: Overload:SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.IsDeterministic
  isSpec: "True"
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.IsDeterministic
  nameWithType: PreyCaptureEvaluationScheme.IsDeterministic
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.NullFitness
  name: NullFitness
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.html#SharpNeat_Tasks_PreyCapture_PreyCaptureEvaluationScheme_NullFitness
  commentId: P:SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.NullFitness
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.NullFitness
  nameWithType: PreyCaptureEvaluationScheme.NullFitness
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.NullFitness*
  name: NullFitness
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.html#SharpNeat_Tasks_PreyCapture_PreyCaptureEvaluationScheme_NullFitness_
  commentId: Overload:SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.NullFitness
  isSpec: "True"
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.NullFitness
  nameWithType: PreyCaptureEvaluationScheme.NullFitness
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.OutputCount
  name: OutputCount
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.html#SharpNeat_Tasks_PreyCapture_PreyCaptureEvaluationScheme_OutputCount
  commentId: P:SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.OutputCount
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.OutputCount
  nameWithType: PreyCaptureEvaluationScheme.OutputCount
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.OutputCount*
  name: OutputCount
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.html#SharpNeat_Tasks_PreyCapture_PreyCaptureEvaluationScheme_OutputCount_
  commentId: Overload:SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.OutputCount
  isSpec: "True"
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.OutputCount
  nameWithType: PreyCaptureEvaluationScheme.OutputCount
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.TestForStopCondition(SharpNeat.Evaluation.FitnessInfo)
  name: TestForStopCondition(FitnessInfo)
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.html#SharpNeat_Tasks_PreyCapture_PreyCaptureEvaluationScheme_TestForStopCondition_SharpNeat_Evaluation_FitnessInfo_
  commentId: M:SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.TestForStopCondition(SharpNeat.Evaluation.FitnessInfo)
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.TestForStopCondition(SharpNeat.Evaluation.FitnessInfo)
  nameWithType: PreyCaptureEvaluationScheme.TestForStopCondition(FitnessInfo)
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.TestForStopCondition*
  name: TestForStopCondition
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.html#SharpNeat_Tasks_PreyCapture_PreyCaptureEvaluationScheme_TestForStopCondition_
  commentId: Overload:SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.TestForStopCondition
  isSpec: "True"
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluationScheme.TestForStopCondition
  nameWithType: PreyCaptureEvaluationScheme.TestForStopCondition
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluator
  name: PreyCaptureEvaluator
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluator.html
  commentId: T:SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluator
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluator
  nameWithType: PreyCaptureEvaluator
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluator.#ctor(System.Int32,System.Single,System.Single,System.Int32,System.Int32)
  name: PreyCaptureEvaluator(int, float, float, int, int)
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluator.html#SharpNeat_Tasks_PreyCapture_PreyCaptureEvaluator__ctor_System_Int32_System_Single_System_Single_System_Int32_System_Int32_
  commentId: M:SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluator.#ctor(System.Int32,System.Single,System.Single,System.Int32,System.Int32)
  name.vb: New(Integer, Single, Single, Integer, Integer)
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluator.PreyCaptureEvaluator(int, float, float, int, int)
  fullName.vb: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluator.New(Integer, Single, Single, Integer, Integer)
  nameWithType: PreyCaptureEvaluator.PreyCaptureEvaluator(int, float, float, int, int)
  nameWithType.vb: PreyCaptureEvaluator.New(Integer, Single, Single, Integer, Integer)
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluator.#ctor*
  name: PreyCaptureEvaluator
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluator.html#SharpNeat_Tasks_PreyCapture_PreyCaptureEvaluator__ctor_
  commentId: Overload:SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluator.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluator.PreyCaptureEvaluator
  fullName.vb: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluator.New
  nameWithType: PreyCaptureEvaluator.PreyCaptureEvaluator
  nameWithType.vb: PreyCaptureEvaluator.New
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluator.Evaluate(SharpNeat.IBlackBox{System.Double})
  name: Evaluate(IBlackBox<double>)
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluator.html#SharpNeat_Tasks_PreyCapture_PreyCaptureEvaluator_Evaluate_SharpNeat_IBlackBox_System_Double__
  commentId: M:SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluator.Evaluate(SharpNeat.IBlackBox{System.Double})
  name.vb: Evaluate(IBlackBox(Of Double))
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluator.Evaluate(SharpNeat.IBlackBox<double>)
  fullName.vb: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluator.Evaluate(SharpNeat.IBlackBox(Of Double))
  nameWithType: PreyCaptureEvaluator.Evaluate(IBlackBox<double>)
  nameWithType.vb: PreyCaptureEvaluator.Evaluate(IBlackBox(Of Double))
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluator.Evaluate*
  name: Evaluate
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluator.html#SharpNeat_Tasks_PreyCapture_PreyCaptureEvaluator_Evaluate_
  commentId: Overload:SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluator.Evaluate
  isSpec: "True"
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureEvaluator.Evaluate
  nameWithType: PreyCaptureEvaluator.Evaluate
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureExperimentFactory
  name: PreyCaptureExperimentFactory
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureExperimentFactory.html
  commentId: T:SharpNeat.Tasks.PreyCapture.PreyCaptureExperimentFactory
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureExperimentFactory
  nameWithType: PreyCaptureExperimentFactory
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureExperimentFactory.CreateExperiment(System.IO.Stream)
  name: CreateExperiment(Stream)
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureExperimentFactory.html#SharpNeat_Tasks_PreyCapture_PreyCaptureExperimentFactory_CreateExperiment_System_IO_Stream_
  commentId: M:SharpNeat.Tasks.PreyCapture.PreyCaptureExperimentFactory.CreateExperiment(System.IO.Stream)
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureExperimentFactory.CreateExperiment(System.IO.Stream)
  nameWithType: PreyCaptureExperimentFactory.CreateExperiment(Stream)
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureExperimentFactory.CreateExperiment*
  name: CreateExperiment
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureExperimentFactory.html#SharpNeat_Tasks_PreyCapture_PreyCaptureExperimentFactory_CreateExperiment_
  commentId: Overload:SharpNeat.Tasks.PreyCapture.PreyCaptureExperimentFactory.CreateExperiment
  isSpec: "True"
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureExperimentFactory.CreateExperiment
  nameWithType: PreyCaptureExperimentFactory.CreateExperiment
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureExperimentFactory.CreateExperimentSinglePrecision(System.IO.Stream)
  name: CreateExperimentSinglePrecision(Stream)
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureExperimentFactory.html#SharpNeat_Tasks_PreyCapture_PreyCaptureExperimentFactory_CreateExperimentSinglePrecision_System_IO_Stream_
  commentId: M:SharpNeat.Tasks.PreyCapture.PreyCaptureExperimentFactory.CreateExperimentSinglePrecision(System.IO.Stream)
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureExperimentFactory.CreateExperimentSinglePrecision(System.IO.Stream)
  nameWithType: PreyCaptureExperimentFactory.CreateExperimentSinglePrecision(Stream)
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureExperimentFactory.CreateExperimentSinglePrecision*
  name: CreateExperimentSinglePrecision
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureExperimentFactory.html#SharpNeat_Tasks_PreyCapture_PreyCaptureExperimentFactory_CreateExperimentSinglePrecision_
  commentId: Overload:SharpNeat.Tasks.PreyCapture.PreyCaptureExperimentFactory.CreateExperimentSinglePrecision
  isSpec: "True"
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureExperimentFactory.CreateExperimentSinglePrecision
  nameWithType: PreyCaptureExperimentFactory.CreateExperimentSinglePrecision
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureExperimentFactory.Id
  name: Id
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureExperimentFactory.html#SharpNeat_Tasks_PreyCapture_PreyCaptureExperimentFactory_Id
  commentId: P:SharpNeat.Tasks.PreyCapture.PreyCaptureExperimentFactory.Id
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureExperimentFactory.Id
  nameWithType: PreyCaptureExperimentFactory.Id
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureExperimentFactory.Id*
  name: Id
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureExperimentFactory.html#SharpNeat_Tasks_PreyCapture_PreyCaptureExperimentFactory_Id_
  commentId: Overload:SharpNeat.Tasks.PreyCapture.PreyCaptureExperimentFactory.Id
  isSpec: "True"
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureExperimentFactory.Id
  nameWithType: PreyCaptureExperimentFactory.Id
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld
  name: PreyCaptureWorld
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.html
  commentId: T:SharpNeat.Tasks.PreyCapture.PreyCaptureWorld
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld
  nameWithType: PreyCaptureWorld
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.#ctor(System.Int32,System.Single,System.Single,System.Int32)
  name: PreyCaptureWorld(int, float, float, int)
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.html#SharpNeat_Tasks_PreyCapture_PreyCaptureWorld__ctor_System_Int32_System_Single_System_Single_System_Int32_
  commentId: M:SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.#ctor(System.Int32,System.Single,System.Single,System.Int32)
  name.vb: New(Integer, Single, Single, Integer)
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.PreyCaptureWorld(int, float, float, int)
  fullName.vb: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.New(Integer, Single, Single, Integer)
  nameWithType: PreyCaptureWorld.PreyCaptureWorld(int, float, float, int)
  nameWithType.vb: PreyCaptureWorld.New(Integer, Single, Single, Integer)
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.#ctor*
  name: PreyCaptureWorld
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.html#SharpNeat_Tasks_PreyCapture_PreyCaptureWorld__ctor_
  commentId: Overload:SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.PreyCaptureWorld
  fullName.vb: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.New
  nameWithType: PreyCaptureWorld.PreyCaptureWorld
  nameWithType.vb: PreyCaptureWorld.New
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.AgentPosition
  name: AgentPosition
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.html#SharpNeat_Tasks_PreyCapture_PreyCaptureWorld_AgentPosition
  commentId: P:SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.AgentPosition
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.AgentPosition
  nameWithType: PreyCaptureWorld.AgentPosition
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.AgentPosition*
  name: AgentPosition
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.html#SharpNeat_Tasks_PreyCapture_PreyCaptureWorld_AgentPosition_
  commentId: Overload:SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.AgentPosition
  isSpec: "True"
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.AgentPosition
  nameWithType: PreyCaptureWorld.AgentPosition
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.GridSize
  name: GridSize
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.html#SharpNeat_Tasks_PreyCapture_PreyCaptureWorld_GridSize
  commentId: P:SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.GridSize
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.GridSize
  nameWithType: PreyCaptureWorld.GridSize
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.GridSize*
  name: GridSize
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.html#SharpNeat_Tasks_PreyCapture_PreyCaptureWorld_GridSize_
  commentId: Overload:SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.GridSize
  isSpec: "True"
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.GridSize
  nameWithType: PreyCaptureWorld.GridSize
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.InitPositions
  name: InitPositions()
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.html#SharpNeat_Tasks_PreyCapture_PreyCaptureWorld_InitPositions
  commentId: M:SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.InitPositions
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.InitPositions()
  nameWithType: PreyCaptureWorld.InitPositions()
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.InitPositions*
  name: InitPositions
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.html#SharpNeat_Tasks_PreyCapture_PreyCaptureWorld_InitPositions_
  commentId: Overload:SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.InitPositions
  isSpec: "True"
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.InitPositions
  nameWithType: PreyCaptureWorld.InitPositions
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.IsPreyCaptured
  name: IsPreyCaptured()
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.html#SharpNeat_Tasks_PreyCapture_PreyCaptureWorld_IsPreyCaptured
  commentId: M:SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.IsPreyCaptured
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.IsPreyCaptured()
  nameWithType: PreyCaptureWorld.IsPreyCaptured()
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.IsPreyCaptured*
  name: IsPreyCaptured
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.html#SharpNeat_Tasks_PreyCapture_PreyCaptureWorld_IsPreyCaptured_
  commentId: Overload:SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.IsPreyCaptured
  isSpec: "True"
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.IsPreyCaptured
  nameWithType: PreyCaptureWorld.IsPreyCaptured
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.MaxTimesteps
  name: MaxTimesteps
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.html#SharpNeat_Tasks_PreyCapture_PreyCaptureWorld_MaxTimesteps
  commentId: P:SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.MaxTimesteps
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.MaxTimesteps
  nameWithType: PreyCaptureWorld.MaxTimesteps
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.MaxTimesteps*
  name: MaxTimesteps
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.html#SharpNeat_Tasks_PreyCapture_PreyCaptureWorld_MaxTimesteps_
  commentId: Overload:SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.MaxTimesteps
  isSpec: "True"
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.MaxTimesteps
  nameWithType: PreyCaptureWorld.MaxTimesteps
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.MoveAgent(SharpNeat.IBlackBox{System.Double})
  name: MoveAgent(IBlackBox<double>)
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.html#SharpNeat_Tasks_PreyCapture_PreyCaptureWorld_MoveAgent_SharpNeat_IBlackBox_System_Double__
  commentId: M:SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.MoveAgent(SharpNeat.IBlackBox{System.Double})
  name.vb: MoveAgent(IBlackBox(Of Double))
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.MoveAgent(SharpNeat.IBlackBox<double>)
  fullName.vb: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.MoveAgent(SharpNeat.IBlackBox(Of Double))
  nameWithType: PreyCaptureWorld.MoveAgent(IBlackBox<double>)
  nameWithType.vb: PreyCaptureWorld.MoveAgent(IBlackBox(Of Double))
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.MoveAgent*
  name: MoveAgent
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.html#SharpNeat_Tasks_PreyCapture_PreyCaptureWorld_MoveAgent_
  commentId: Overload:SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.MoveAgent
  isSpec: "True"
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.MoveAgent
  nameWithType: PreyCaptureWorld.MoveAgent
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.MovePrey
  name: MovePrey()
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.html#SharpNeat_Tasks_PreyCapture_PreyCaptureWorld_MovePrey
  commentId: M:SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.MovePrey
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.MovePrey()
  nameWithType: PreyCaptureWorld.MovePrey()
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.MovePrey*
  name: MovePrey
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.html#SharpNeat_Tasks_PreyCapture_PreyCaptureWorld_MovePrey_
  commentId: Overload:SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.MovePrey
  isSpec: "True"
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.MovePrey
  nameWithType: PreyCaptureWorld.MovePrey
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.PreyInitMoves
  name: PreyInitMoves
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.html#SharpNeat_Tasks_PreyCapture_PreyCaptureWorld_PreyInitMoves
  commentId: P:SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.PreyInitMoves
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.PreyInitMoves
  nameWithType: PreyCaptureWorld.PreyInitMoves
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.PreyInitMoves*
  name: PreyInitMoves
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.html#SharpNeat_Tasks_PreyCapture_PreyCaptureWorld_PreyInitMoves_
  commentId: Overload:SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.PreyInitMoves
  isSpec: "True"
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.PreyInitMoves
  nameWithType: PreyCaptureWorld.PreyInitMoves
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.PreyPosition
  name: PreyPosition
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.html#SharpNeat_Tasks_PreyCapture_PreyCaptureWorld_PreyPosition
  commentId: P:SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.PreyPosition
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.PreyPosition
  nameWithType: PreyCaptureWorld.PreyPosition
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.PreyPosition*
  name: PreyPosition
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.html#SharpNeat_Tasks_PreyCapture_PreyCaptureWorld_PreyPosition_
  commentId: Overload:SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.PreyPosition
  isSpec: "True"
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.PreyPosition
  nameWithType: PreyCaptureWorld.PreyPosition
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.RunTrial(SharpNeat.IBlackBox{System.Double})
  name: RunTrial(IBlackBox<double>)
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.html#SharpNeat_Tasks_PreyCapture_PreyCaptureWorld_RunTrial_SharpNeat_IBlackBox_System_Double__
  commentId: M:SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.RunTrial(SharpNeat.IBlackBox{System.Double})
  name.vb: RunTrial(IBlackBox(Of Double))
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.RunTrial(SharpNeat.IBlackBox<double>)
  fullName.vb: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.RunTrial(SharpNeat.IBlackBox(Of Double))
  nameWithType: PreyCaptureWorld.RunTrial(IBlackBox<double>)
  nameWithType.vb: PreyCaptureWorld.RunTrial(IBlackBox(Of Double))
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.RunTrial*
  name: RunTrial
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.html#SharpNeat_Tasks_PreyCapture_PreyCaptureWorld_RunTrial_
  commentId: Overload:SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.RunTrial
  isSpec: "True"
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.RunTrial
  nameWithType: PreyCaptureWorld.RunTrial
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.SensorRange
  name: SensorRange
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.html#SharpNeat_Tasks_PreyCapture_PreyCaptureWorld_SensorRange
  commentId: P:SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.SensorRange
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.SensorRange
  nameWithType: PreyCaptureWorld.SensorRange
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.SensorRange*
  name: SensorRange
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.html#SharpNeat_Tasks_PreyCapture_PreyCaptureWorld_SensorRange_
  commentId: Overload:SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.SensorRange
  isSpec: "True"
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.SensorRange
  nameWithType: PreyCaptureWorld.SensorRange
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.SetAgentInputsAndActivate(SharpNeat.IBlackBox{System.Double})
  name: SetAgentInputsAndActivate(IBlackBox<double>)
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.html#SharpNeat_Tasks_PreyCapture_PreyCaptureWorld_SetAgentInputsAndActivate_SharpNeat_IBlackBox_System_Double__
  commentId: M:SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.SetAgentInputsAndActivate(SharpNeat.IBlackBox{System.Double})
  name.vb: SetAgentInputsAndActivate(IBlackBox(Of Double))
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.SetAgentInputsAndActivate(SharpNeat.IBlackBox<double>)
  fullName.vb: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.SetAgentInputsAndActivate(SharpNeat.IBlackBox(Of Double))
  nameWithType: PreyCaptureWorld.SetAgentInputsAndActivate(IBlackBox<double>)
  nameWithType.vb: PreyCaptureWorld.SetAgentInputsAndActivate(IBlackBox(Of Double))
- uid: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.SetAgentInputsAndActivate*
  name: SetAgentInputsAndActivate
  href: api/SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.html#SharpNeat_Tasks_PreyCapture_PreyCaptureWorld_SetAgentInputsAndActivate_
  commentId: Overload:SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.SetAgentInputsAndActivate
  isSpec: "True"
  fullName: SharpNeat.Tasks.PreyCapture.PreyCaptureWorld.SetAgentInputsAndActivate
  nameWithType: PreyCaptureWorld.SetAgentInputsAndActivate
- uid: SharpNeat.Tasks.Tests.PreyCapture
  name: SharpNeat.Tasks.Tests.PreyCapture
  href: api/SharpNeat.Tasks.Tests.PreyCapture.html
  commentId: N:SharpNeat.Tasks.Tests.PreyCapture
  fullName: SharpNeat.Tasks.Tests.PreyCapture
  nameWithType: SharpNeat.Tasks.Tests.PreyCapture
- uid: SharpNeat.Tasks.Tests.PreyCapture.PreyCaptureWorldTests
  name: PreyCaptureWorldTests
  href: api/SharpNeat.Tasks.Tests.PreyCapture.PreyCaptureWorldTests.html
  commentId: T:SharpNeat.Tasks.Tests.PreyCapture.PreyCaptureWorldTests
  fullName: SharpNeat.Tasks.Tests.PreyCapture.PreyCaptureWorldTests
  nameWithType: PreyCaptureWorldTests
- uid: SharpNeat.Tasks.Tests.PreyCapture.PreyCaptureWorldTests.AngleDelta
  name: AngleDelta()
  href: api/SharpNeat.Tasks.Tests.PreyCapture.PreyCaptureWorldTests.html#SharpNeat_Tasks_Tests_PreyCapture_PreyCaptureWorldTests_AngleDelta
  commentId: M:SharpNeat.Tasks.Tests.PreyCapture.PreyCaptureWorldTests.AngleDelta
  fullName: SharpNeat.Tasks.Tests.PreyCapture.PreyCaptureWorldTests.AngleDelta()
  nameWithType: PreyCaptureWorldTests.AngleDelta()
- uid: SharpNeat.Tasks.Tests.PreyCapture.PreyCaptureWorldTests.AngleDelta*
  name: AngleDelta
  href: api/SharpNeat.Tasks.Tests.PreyCapture.PreyCaptureWorldTests.html#SharpNeat_Tasks_Tests_PreyCapture_PreyCaptureWorldTests_AngleDelta_
  commentId: Overload:SharpNeat.Tasks.Tests.PreyCapture.PreyCaptureWorldTests.AngleDelta
  isSpec: "True"
  fullName: SharpNeat.Tasks.Tests.PreyCapture.PreyCaptureWorldTests.AngleDelta
  nameWithType: PreyCaptureWorldTests.AngleDelta
- uid: SharpNeat.Tasks.Tests.PreyCapture.PreyCaptureWorldTests.Atan2LookupTable
  name: Atan2LookupTable()
  href: api/SharpNeat.Tasks.Tests.PreyCapture.PreyCaptureWorldTests.html#SharpNeat_Tasks_Tests_PreyCapture_PreyCaptureWorldTests_Atan2LookupTable
  commentId: M:SharpNeat.Tasks.Tests.PreyCapture.PreyCaptureWorldTests.Atan2LookupTable
  fullName: SharpNeat.Tasks.Tests.PreyCapture.PreyCaptureWorldTests.Atan2LookupTable()
  nameWithType: PreyCaptureWorldTests.Atan2LookupTable()
- uid: SharpNeat.Tasks.Tests.PreyCapture.PreyCaptureWorldTests.Atan2LookupTable*
  name: Atan2LookupTable
  href: api/SharpNeat.Tasks.Tests.PreyCapture.PreyCaptureWorldTests.html#SharpNeat_Tasks_Tests_PreyCapture_PreyCaptureWorldTests_Atan2LookupTable_
  commentId: Overload:SharpNeat.Tasks.Tests.PreyCapture.PreyCaptureWorldTests.Atan2LookupTable
  isSpec: "True"
  fullName: SharpNeat.Tasks.Tests.PreyCapture.PreyCaptureWorldTests.Atan2LookupTable
  nameWithType: PreyCaptureWorldTests.Atan2LookupTable
- uid: SharpNeat.Tasks.Tests.PreyCapture.PreyCaptureWorldTests.CartesianToPolar
  name: CartesianToPolar()
  href: api/SharpNeat.Tasks.Tests.PreyCapture.PreyCaptureWorldTests.html#SharpNeat_Tasks_Tests_PreyCapture_PreyCaptureWorldTests_CartesianToPolar
  commentId: M:SharpNeat.Tasks.Tests.PreyCapture.PreyCaptureWorldTests.CartesianToPolar
  fullName: SharpNeat.Tasks.Tests.PreyCapture.PreyCaptureWorldTests.CartesianToPolar()
  nameWithType: PreyCaptureWorldTests.CartesianToPolar()
- uid: SharpNeat.Tasks.Tests.PreyCapture.PreyCaptureWorldTests.CartesianToPolar*
  name: CartesianToPolar
  href: api/SharpNeat.Tasks.Tests.PreyCapture.PreyCaptureWorldTests.html#SharpNeat_Tasks_Tests_PreyCapture_PreyCaptureWorldTests_CartesianToPolar_
  commentId: Overload:SharpNeat.Tasks.Tests.PreyCapture.PreyCaptureWorldTests.CartesianToPolar
  isSpec: "True"
  fullName: SharpNeat.Tasks.Tests.PreyCapture.PreyCaptureWorldTests.CartesianToPolar
  nameWithType: PreyCaptureWorldTests.CartesianToPolar
- uid: SharpNeat.Tasks.Tests.PreyCapture.PreyCaptureWorldTests.ExpApproximation
  name: ExpApproximation()
  href: api/SharpNeat.Tasks.Tests.PreyCapture.PreyCaptureWorldTests.html#SharpNeat_Tasks_Tests_PreyCapture_PreyCaptureWorldTests_ExpApproximation
  commentId: M:SharpNeat.Tasks.Tests.PreyCapture.PreyCaptureWorldTests.ExpApproximation
  fullName: SharpNeat.Tasks.Tests.PreyCapture.PreyCaptureWorldTests.ExpApproximation()
  nameWithType: PreyCaptureWorldTests.ExpApproximation()
- uid: SharpNeat.Tasks.Tests.PreyCapture.PreyCaptureWorldTests.ExpApproximation*
  name: ExpApproximation
  href: api/SharpNeat.Tasks.Tests.PreyCapture.PreyCaptureWorldTests.html#SharpNeat_Tasks_Tests_PreyCapture_PreyCaptureWorldTests_ExpApproximation_
  commentId: Overload:SharpNeat.Tasks.Tests.PreyCapture.PreyCaptureWorldTests.ExpApproximation
  isSpec: "True"
  fullName: SharpNeat.Tasks.Tests.PreyCapture.PreyCaptureWorldTests.ExpApproximation
  nameWithType: PreyCaptureWorldTests.ExpApproximation
- uid: SharpNeat.Tasks.Tests.PreyCapture.PreyCaptureWorldTests.MoveAgent
  name: MoveAgent()
  href: api/SharpNeat.Tasks.Tests.PreyCapture.PreyCaptureWorldTests.html#SharpNeat_Tasks_Tests_PreyCapture_PreyCaptureWorldTests_MoveAgent
  commentId: M:SharpNeat.Tasks.Tests.PreyCapture.PreyCaptureWorldTests.MoveAgent
  fullName: SharpNeat.Tasks.Tests.PreyCapture.PreyCaptureWorldTests.MoveAgent()
  nameWithType: PreyCaptureWorldTests.MoveAgent()
- uid: SharpNeat.Tasks.Tests.PreyCapture.PreyCaptureWorldTests.MoveAgent*
  name: MoveAgent
  href: api/SharpNeat.Tasks.Tests.PreyCapture.PreyCaptureWorldTests.html#SharpNeat_Tasks_Tests_PreyCapture_PreyCaptureWorldTests_MoveAgent_
  commentId: Overload:SharpNeat.Tasks.Tests.PreyCapture.PreyCaptureWorldTests.MoveAgent
  isSpec: "True"
  fullName: SharpNeat.Tasks.Tests.PreyCapture.PreyCaptureWorldTests.MoveAgent
  nameWithType: PreyCaptureWorldTests.MoveAgent
- uid: SharpNeat.Tasks.Windows.GenerativeFunctionRegression
  name: SharpNeat.Tasks.Windows.GenerativeFunctionRegression
  href: api/SharpNeat.Tasks.Windows.GenerativeFunctionRegression.html
  commentId: N:SharpNeat.Tasks.Windows.GenerativeFunctionRegression
  fullName: SharpNeat.Tasks.Windows.GenerativeFunctionRegression
  nameWithType: SharpNeat.Tasks.Windows.GenerativeFunctionRegression
- uid: SharpNeat.Tasks.Windows.GenerativeFunctionRegression.GenerativeFnRegressionUi
  name: GenerativeFnRegressionUi
  href: api/SharpNeat.Tasks.Windows.GenerativeFunctionRegression.GenerativeFnRegressionUi.html
  commentId: T:SharpNeat.Tasks.Windows.GenerativeFunctionRegression.GenerativeFnRegressionUi
  fullName: SharpNeat.Tasks.Windows.GenerativeFunctionRegression.GenerativeFnRegressionUi
  nameWithType: GenerativeFnRegressionUi
- uid: SharpNeat.Tasks.Windows.GenerativeFunctionRegression.GenerativeFnRegressionUi.#ctor(SharpNeat.Experiments.INeatExperiment{System.Double},System.Func{System.Double,System.Double},SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo)
  name: GenerativeFnRegressionUi(INeatExperiment<double>, Func<double, double>, ParamSamplingInfo)
  href: api/SharpNeat.Tasks.Windows.GenerativeFunctionRegression.GenerativeFnRegressionUi.html#SharpNeat_Tasks_Windows_GenerativeFunctionRegression_GenerativeFnRegressionUi__ctor_SharpNeat_Experiments_INeatExperiment_System_Double__System_Func_System_Double_System_Double__SharpNeat_Tasks_FunctionRegression_ParamSamplingInfo_
  commentId: M:SharpNeat.Tasks.Windows.GenerativeFunctionRegression.GenerativeFnRegressionUi.#ctor(SharpNeat.Experiments.INeatExperiment{System.Double},System.Func{System.Double,System.Double},SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo)
  name.vb: New(INeatExperiment(Of Double), Func(Of Double, Double), ParamSamplingInfo)
  fullName: SharpNeat.Tasks.Windows.GenerativeFunctionRegression.GenerativeFnRegressionUi.GenerativeFnRegressionUi(SharpNeat.Experiments.INeatExperiment<double>, System.Func<double, double>, SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo)
  fullName.vb: SharpNeat.Tasks.Windows.GenerativeFunctionRegression.GenerativeFnRegressionUi.New(SharpNeat.Experiments.INeatExperiment(Of Double), System.Func(Of Double, Double), SharpNeat.Tasks.FunctionRegression.ParamSamplingInfo)
  nameWithType: GenerativeFnRegressionUi.GenerativeFnRegressionUi(INeatExperiment<double>, Func<double, double>, ParamSamplingInfo)
  nameWithType.vb: GenerativeFnRegressionUi.New(INeatExperiment(Of Double), Func(Of Double, Double), ParamSamplingInfo)
- uid: SharpNeat.Tasks.Windows.GenerativeFunctionRegression.GenerativeFnRegressionUi.#ctor*
  name: GenerativeFnRegressionUi
  href: api/SharpNeat.Tasks.Windows.GenerativeFunctionRegression.GenerativeFnRegressionUi.html#SharpNeat_Tasks_Windows_GenerativeFunctionRegression_GenerativeFnRegressionUi__ctor_
  commentId: Overload:SharpNeat.Tasks.Windows.GenerativeFunctionRegression.GenerativeFnRegressionUi.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Tasks.Windows.GenerativeFunctionRegression.GenerativeFnRegressionUi.GenerativeFnRegressionUi
  fullName.vb: SharpNeat.Tasks.Windows.GenerativeFunctionRegression.GenerativeFnRegressionUi.New
  nameWithType: GenerativeFnRegressionUi.GenerativeFnRegressionUi
  nameWithType.vb: GenerativeFnRegressionUi.New
- uid: SharpNeat.Tasks.Windows.GenerativeFunctionRegression.GenerativeFnRegressionUi.CreateTaskControl
  name: CreateTaskControl()
  href: api/SharpNeat.Tasks.Windows.GenerativeFunctionRegression.GenerativeFnRegressionUi.html#SharpNeat_Tasks_Windows_GenerativeFunctionRegression_GenerativeFnRegressionUi_CreateTaskControl
  commentId: M:SharpNeat.Tasks.Windows.GenerativeFunctionRegression.GenerativeFnRegressionUi.CreateTaskControl
  fullName: SharpNeat.Tasks.Windows.GenerativeFunctionRegression.GenerativeFnRegressionUi.CreateTaskControl()
  nameWithType: GenerativeFnRegressionUi.CreateTaskControl()
- uid: SharpNeat.Tasks.Windows.GenerativeFunctionRegression.GenerativeFnRegressionUi.CreateTaskControl*
  name: CreateTaskControl
  href: api/SharpNeat.Tasks.Windows.GenerativeFunctionRegression.GenerativeFnRegressionUi.html#SharpNeat_Tasks_Windows_GenerativeFunctionRegression_GenerativeFnRegressionUi_CreateTaskControl_
  commentId: Overload:SharpNeat.Tasks.Windows.GenerativeFunctionRegression.GenerativeFnRegressionUi.CreateTaskControl
  isSpec: "True"
  fullName: SharpNeat.Tasks.Windows.GenerativeFunctionRegression.GenerativeFnRegressionUi.CreateTaskControl
  nameWithType: GenerativeFnRegressionUi.CreateTaskControl
- uid: SharpNeat.Tasks.Windows.GenerativeFunctionRegression.GenerativeFnRegressionUiFactory
  name: GenerativeFnRegressionUiFactory
  href: api/SharpNeat.Tasks.Windows.GenerativeFunctionRegression.GenerativeFnRegressionUiFactory.html
  commentId: T:SharpNeat.Tasks.Windows.GenerativeFunctionRegression.GenerativeFnRegressionUiFactory
  fullName: SharpNeat.Tasks.Windows.GenerativeFunctionRegression.GenerativeFnRegressionUiFactory
  nameWithType: GenerativeFnRegressionUiFactory
- uid: SharpNeat.Tasks.Windows.GenerativeFunctionRegression.GenerativeFnRegressionUiFactory.CreateExperimentUi(SharpNeat.Experiments.INeatExperiment{System.Double},System.IO.Stream)
  name: CreateExperimentUi(INeatExperiment<double>, Stream)
  href: api/SharpNeat.Tasks.Windows.GenerativeFunctionRegression.GenerativeFnRegressionUiFactory.html#SharpNeat_Tasks_Windows_GenerativeFunctionRegression_GenerativeFnRegressionUiFactory_CreateExperimentUi_SharpNeat_Experiments_INeatExperiment_System_Double__System_IO_Stream_
  commentId: M:SharpNeat.Tasks.Windows.GenerativeFunctionRegression.GenerativeFnRegressionUiFactory.CreateExperimentUi(SharpNeat.Experiments.INeatExperiment{System.Double},System.IO.Stream)
  name.vb: CreateExperimentUi(INeatExperiment(Of Double), Stream)
  fullName: SharpNeat.Tasks.Windows.GenerativeFunctionRegression.GenerativeFnRegressionUiFactory.CreateExperimentUi(SharpNeat.Experiments.INeatExperiment<double>, System.IO.Stream)
  fullName.vb: SharpNeat.Tasks.Windows.GenerativeFunctionRegression.GenerativeFnRegressionUiFactory.CreateExperimentUi(SharpNeat.Experiments.INeatExperiment(Of Double), System.IO.Stream)
  nameWithType: GenerativeFnRegressionUiFactory.CreateExperimentUi(INeatExperiment<double>, Stream)
  nameWithType.vb: GenerativeFnRegressionUiFactory.CreateExperimentUi(INeatExperiment(Of Double), Stream)
- uid: SharpNeat.Tasks.Windows.GenerativeFunctionRegression.GenerativeFnRegressionUiFactory.CreateExperimentUi*
  name: CreateExperimentUi
  href: api/SharpNeat.Tasks.Windows.GenerativeFunctionRegression.GenerativeFnRegressionUiFactory.html#SharpNeat_Tasks_Windows_GenerativeFunctionRegression_GenerativeFnRegressionUiFactory_CreateExperimentUi_
  commentId: Overload:SharpNeat.Tasks.Windows.GenerativeFunctionRegression.GenerativeFnRegressionUiFactory.CreateExperimentUi
  isSpec: "True"
  fullName: SharpNeat.Tasks.Windows.GenerativeFunctionRegression.GenerativeFnRegressionUiFactory.CreateExperimentUi
  nameWithType: GenerativeFnRegressionUiFactory.CreateExperimentUi
- uid: SharpNeat.Tasks.Windows.PreyCapture
  name: SharpNeat.Tasks.Windows.PreyCapture
  href: api/SharpNeat.Tasks.Windows.PreyCapture.html
  commentId: N:SharpNeat.Tasks.Windows.PreyCapture
  fullName: SharpNeat.Tasks.Windows.PreyCapture
  nameWithType: SharpNeat.Tasks.Windows.PreyCapture
- uid: SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureControl
  name: PreyCaptureControl
  href: api/SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureControl.html
  commentId: T:SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureControl
  fullName: SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureControl
  nameWithType: PreyCaptureControl
- uid: SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureControl.#ctor(SharpNeat.Evaluation.IGenomeDecoder{SharpNeat.Neat.Genome.NeatGenome{System.Double},SharpNeat.IBlackBox{System.Double}},SharpNeat.Tasks.PreyCapture.PreyCaptureWorld)
  name: PreyCaptureControl(IGenomeDecoder<NeatGenome<double>, IBlackBox<double>>, PreyCaptureWorld)
  href: api/SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureControl.html#SharpNeat_Tasks_Windows_PreyCapture_PreyCaptureControl__ctor_SharpNeat_Evaluation_IGenomeDecoder_SharpNeat_Neat_Genome_NeatGenome_System_Double__SharpNeat_IBlackBox_System_Double___SharpNeat_Tasks_PreyCapture_PreyCaptureWorld_
  commentId: M:SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureControl.#ctor(SharpNeat.Evaluation.IGenomeDecoder{SharpNeat.Neat.Genome.NeatGenome{System.Double},SharpNeat.IBlackBox{System.Double}},SharpNeat.Tasks.PreyCapture.PreyCaptureWorld)
  name.vb: New(IGenomeDecoder(Of NeatGenome(Of Double), IBlackBox(Of Double)), PreyCaptureWorld)
  fullName: SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureControl.PreyCaptureControl(SharpNeat.Evaluation.IGenomeDecoder<SharpNeat.Neat.Genome.NeatGenome<double>, SharpNeat.IBlackBox<double>>, SharpNeat.Tasks.PreyCapture.PreyCaptureWorld)
  fullName.vb: SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureControl.New(SharpNeat.Evaluation.IGenomeDecoder(Of SharpNeat.Neat.Genome.NeatGenome(Of Double), SharpNeat.IBlackBox(Of Double)), SharpNeat.Tasks.PreyCapture.PreyCaptureWorld)
  nameWithType: PreyCaptureControl.PreyCaptureControl(IGenomeDecoder<NeatGenome<double>, IBlackBox<double>>, PreyCaptureWorld)
  nameWithType.vb: PreyCaptureControl.New(IGenomeDecoder(Of NeatGenome(Of Double), IBlackBox(Of Double)), PreyCaptureWorld)
- uid: SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureControl.#ctor*
  name: PreyCaptureControl
  href: api/SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureControl.html#SharpNeat_Tasks_Windows_PreyCapture_PreyCaptureControl__ctor_
  commentId: Overload:SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureControl.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureControl.PreyCaptureControl
  fullName.vb: SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureControl.New
  nameWithType: PreyCaptureControl.PreyCaptureControl
  nameWithType.vb: PreyCaptureControl.New
- uid: SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureControl.Dispose(System.Boolean)
  name: Dispose(bool)
  href: api/SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureControl.html#SharpNeat_Tasks_Windows_PreyCapture_PreyCaptureControl_Dispose_System_Boolean_
  commentId: M:SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureControl.Dispose(System.Boolean)
  name.vb: Dispose(Boolean)
  fullName: SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureControl.Dispose(bool)
  fullName.vb: SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureControl.Dispose(Boolean)
  nameWithType: PreyCaptureControl.Dispose(bool)
  nameWithType.vb: PreyCaptureControl.Dispose(Boolean)
- uid: SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureControl.Dispose*
  name: Dispose
  href: api/SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureControl.html#SharpNeat_Tasks_Windows_PreyCapture_PreyCaptureControl_Dispose_
  commentId: Overload:SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureControl.Dispose
  isSpec: "True"
  fullName: SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureControl.Dispose
  nameWithType: PreyCaptureControl.Dispose
- uid: SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureControl.OnGenomeUpdated
  name: OnGenomeUpdated()
  href: api/SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureControl.html#SharpNeat_Tasks_Windows_PreyCapture_PreyCaptureControl_OnGenomeUpdated
  commentId: M:SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureControl.OnGenomeUpdated
  fullName: SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureControl.OnGenomeUpdated()
  nameWithType: PreyCaptureControl.OnGenomeUpdated()
- uid: SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureControl.OnGenomeUpdated*
  name: OnGenomeUpdated
  href: api/SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureControl.html#SharpNeat_Tasks_Windows_PreyCapture_PreyCaptureControl_OnGenomeUpdated_
  commentId: Overload:SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureControl.OnGenomeUpdated
  isSpec: "True"
  fullName: SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureControl.OnGenomeUpdated
  nameWithType: PreyCaptureControl.OnGenomeUpdated
- uid: SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureExperimentUi
  name: PreyCaptureExperimentUi
  href: api/SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureExperimentUi.html
  commentId: T:SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureExperimentUi
  fullName: SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureExperimentUi
  nameWithType: PreyCaptureExperimentUi
- uid: SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureExperimentUi.#ctor(SharpNeat.Experiments.INeatExperiment{System.Double},SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureCustomConfig)
  name: PreyCaptureExperimentUi(INeatExperiment<double>, PreyCaptureCustomConfig)
  href: api/SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureExperimentUi.html#SharpNeat_Tasks_Windows_PreyCapture_PreyCaptureExperimentUi__ctor_SharpNeat_Experiments_INeatExperiment_System_Double__SharpNeat_Tasks_PreyCapture_ConfigModels_PreyCaptureCustomConfig_
  commentId: M:SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureExperimentUi.#ctor(SharpNeat.Experiments.INeatExperiment{System.Double},SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureCustomConfig)
  name.vb: New(INeatExperiment(Of Double), PreyCaptureCustomConfig)
  fullName: SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureExperimentUi.PreyCaptureExperimentUi(SharpNeat.Experiments.INeatExperiment<double>, SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureCustomConfig)
  fullName.vb: SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureExperimentUi.New(SharpNeat.Experiments.INeatExperiment(Of Double), SharpNeat.Tasks.PreyCapture.ConfigModels.PreyCaptureCustomConfig)
  nameWithType: PreyCaptureExperimentUi.PreyCaptureExperimentUi(INeatExperiment<double>, PreyCaptureCustomConfig)
  nameWithType.vb: PreyCaptureExperimentUi.New(INeatExperiment(Of Double), PreyCaptureCustomConfig)
- uid: SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureExperimentUi.#ctor*
  name: PreyCaptureExperimentUi
  href: api/SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureExperimentUi.html#SharpNeat_Tasks_Windows_PreyCapture_PreyCaptureExperimentUi__ctor_
  commentId: Overload:SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureExperimentUi.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureExperimentUi.PreyCaptureExperimentUi
  fullName.vb: SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureExperimentUi.New
  nameWithType: PreyCaptureExperimentUi.PreyCaptureExperimentUi
  nameWithType.vb: PreyCaptureExperimentUi.New
- uid: SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureExperimentUi.CreateTaskControl
  name: CreateTaskControl()
  href: api/SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureExperimentUi.html#SharpNeat_Tasks_Windows_PreyCapture_PreyCaptureExperimentUi_CreateTaskControl
  commentId: M:SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureExperimentUi.CreateTaskControl
  fullName: SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureExperimentUi.CreateTaskControl()
  nameWithType: PreyCaptureExperimentUi.CreateTaskControl()
- uid: SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureExperimentUi.CreateTaskControl*
  name: CreateTaskControl
  href: api/SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureExperimentUi.html#SharpNeat_Tasks_Windows_PreyCapture_PreyCaptureExperimentUi_CreateTaskControl_
  commentId: Overload:SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureExperimentUi.CreateTaskControl
  isSpec: "True"
  fullName: SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureExperimentUi.CreateTaskControl
  nameWithType: PreyCaptureExperimentUi.CreateTaskControl
- uid: SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureExperimentUiFactory
  name: PreyCaptureExperimentUiFactory
  href: api/SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureExperimentUiFactory.html
  commentId: T:SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureExperimentUiFactory
  fullName: SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureExperimentUiFactory
  nameWithType: PreyCaptureExperimentUiFactory
- uid: SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureExperimentUiFactory.CreateExperimentUi(SharpNeat.Experiments.INeatExperiment{System.Double},System.IO.Stream)
  name: CreateExperimentUi(INeatExperiment<double>, Stream)
  href: api/SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureExperimentUiFactory.html#SharpNeat_Tasks_Windows_PreyCapture_PreyCaptureExperimentUiFactory_CreateExperimentUi_SharpNeat_Experiments_INeatExperiment_System_Double__System_IO_Stream_
  commentId: M:SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureExperimentUiFactory.CreateExperimentUi(SharpNeat.Experiments.INeatExperiment{System.Double},System.IO.Stream)
  name.vb: CreateExperimentUi(INeatExperiment(Of Double), Stream)
  fullName: SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureExperimentUiFactory.CreateExperimentUi(SharpNeat.Experiments.INeatExperiment<double>, System.IO.Stream)
  fullName.vb: SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureExperimentUiFactory.CreateExperimentUi(SharpNeat.Experiments.INeatExperiment(Of Double), System.IO.Stream)
  nameWithType: PreyCaptureExperimentUiFactory.CreateExperimentUi(INeatExperiment<double>, Stream)
  nameWithType.vb: PreyCaptureExperimentUiFactory.CreateExperimentUi(INeatExperiment(Of Double), Stream)
- uid: SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureExperimentUiFactory.CreateExperimentUi*
  name: CreateExperimentUi
  href: api/SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureExperimentUiFactory.html#SharpNeat_Tasks_Windows_PreyCapture_PreyCaptureExperimentUiFactory_CreateExperimentUi_
  commentId: Overload:SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureExperimentUiFactory.CreateExperimentUi
  isSpec: "True"
  fullName: SharpNeat.Tasks.Windows.PreyCapture.PreyCaptureExperimentUiFactory.CreateExperimentUi
  nameWithType: PreyCaptureExperimentUiFactory.CreateExperimentUi
- uid: SharpNeat.Tasks.Xor
  name: SharpNeat.Tasks.Xor
  href: api/SharpNeat.Tasks.Xor.html
  commentId: N:SharpNeat.Tasks.Xor
  fullName: SharpNeat.Tasks.Xor
  nameWithType: SharpNeat.Tasks.Xor
- uid: SharpNeat.Tasks.Xor.XorEvaluationScheme
  name: XorEvaluationScheme
  href: api/SharpNeat.Tasks.Xor.XorEvaluationScheme.html
  commentId: T:SharpNeat.Tasks.Xor.XorEvaluationScheme
  fullName: SharpNeat.Tasks.Xor.XorEvaluationScheme
  nameWithType: XorEvaluationScheme
- uid: SharpNeat.Tasks.Xor.XorEvaluationScheme.CreateEvaluator
  name: CreateEvaluator()
  href: api/SharpNeat.Tasks.Xor.XorEvaluationScheme.html#SharpNeat_Tasks_Xor_XorEvaluationScheme_CreateEvaluator
  commentId: M:SharpNeat.Tasks.Xor.XorEvaluationScheme.CreateEvaluator
  fullName: SharpNeat.Tasks.Xor.XorEvaluationScheme.CreateEvaluator()
  nameWithType: XorEvaluationScheme.CreateEvaluator()
- uid: SharpNeat.Tasks.Xor.XorEvaluationScheme.CreateEvaluator*
  name: CreateEvaluator
  href: api/SharpNeat.Tasks.Xor.XorEvaluationScheme.html#SharpNeat_Tasks_Xor_XorEvaluationScheme_CreateEvaluator_
  commentId: Overload:SharpNeat.Tasks.Xor.XorEvaluationScheme.CreateEvaluator
  isSpec: "True"
  fullName: SharpNeat.Tasks.Xor.XorEvaluationScheme.CreateEvaluator
  nameWithType: XorEvaluationScheme.CreateEvaluator
- uid: SharpNeat.Tasks.Xor.XorEvaluationScheme.EvaluatorsHaveState
  name: EvaluatorsHaveState
  href: api/SharpNeat.Tasks.Xor.XorEvaluationScheme.html#SharpNeat_Tasks_Xor_XorEvaluationScheme_EvaluatorsHaveState
  commentId: P:SharpNeat.Tasks.Xor.XorEvaluationScheme.EvaluatorsHaveState
  fullName: SharpNeat.Tasks.Xor.XorEvaluationScheme.EvaluatorsHaveState
  nameWithType: XorEvaluationScheme.EvaluatorsHaveState
- uid: SharpNeat.Tasks.Xor.XorEvaluationScheme.EvaluatorsHaveState*
  name: EvaluatorsHaveState
  href: api/SharpNeat.Tasks.Xor.XorEvaluationScheme.html#SharpNeat_Tasks_Xor_XorEvaluationScheme_EvaluatorsHaveState_
  commentId: Overload:SharpNeat.Tasks.Xor.XorEvaluationScheme.EvaluatorsHaveState
  isSpec: "True"
  fullName: SharpNeat.Tasks.Xor.XorEvaluationScheme.EvaluatorsHaveState
  nameWithType: XorEvaluationScheme.EvaluatorsHaveState
- uid: SharpNeat.Tasks.Xor.XorEvaluationScheme.FitnessComparer
  name: FitnessComparer
  href: api/SharpNeat.Tasks.Xor.XorEvaluationScheme.html#SharpNeat_Tasks_Xor_XorEvaluationScheme_FitnessComparer
  commentId: P:SharpNeat.Tasks.Xor.XorEvaluationScheme.FitnessComparer
  fullName: SharpNeat.Tasks.Xor.XorEvaluationScheme.FitnessComparer
  nameWithType: XorEvaluationScheme.FitnessComparer
- uid: SharpNeat.Tasks.Xor.XorEvaluationScheme.FitnessComparer*
  name: FitnessComparer
  href: api/SharpNeat.Tasks.Xor.XorEvaluationScheme.html#SharpNeat_Tasks_Xor_XorEvaluationScheme_FitnessComparer_
  commentId: Overload:SharpNeat.Tasks.Xor.XorEvaluationScheme.FitnessComparer
  isSpec: "True"
  fullName: SharpNeat.Tasks.Xor.XorEvaluationScheme.FitnessComparer
  nameWithType: XorEvaluationScheme.FitnessComparer
- uid: SharpNeat.Tasks.Xor.XorEvaluationScheme.InputCount
  name: InputCount
  href: api/SharpNeat.Tasks.Xor.XorEvaluationScheme.html#SharpNeat_Tasks_Xor_XorEvaluationScheme_InputCount
  commentId: P:SharpNeat.Tasks.Xor.XorEvaluationScheme.InputCount
  fullName: SharpNeat.Tasks.Xor.XorEvaluationScheme.InputCount
  nameWithType: XorEvaluationScheme.InputCount
- uid: SharpNeat.Tasks.Xor.XorEvaluationScheme.InputCount*
  name: InputCount
  href: api/SharpNeat.Tasks.Xor.XorEvaluationScheme.html#SharpNeat_Tasks_Xor_XorEvaluationScheme_InputCount_
  commentId: Overload:SharpNeat.Tasks.Xor.XorEvaluationScheme.InputCount
  isSpec: "True"
  fullName: SharpNeat.Tasks.Xor.XorEvaluationScheme.InputCount
  nameWithType: XorEvaluationScheme.InputCount
- uid: SharpNeat.Tasks.Xor.XorEvaluationScheme.IsDeterministic
  name: IsDeterministic
  href: api/SharpNeat.Tasks.Xor.XorEvaluationScheme.html#SharpNeat_Tasks_Xor_XorEvaluationScheme_IsDeterministic
  commentId: P:SharpNeat.Tasks.Xor.XorEvaluationScheme.IsDeterministic
  fullName: SharpNeat.Tasks.Xor.XorEvaluationScheme.IsDeterministic
  nameWithType: XorEvaluationScheme.IsDeterministic
- uid: SharpNeat.Tasks.Xor.XorEvaluationScheme.IsDeterministic*
  name: IsDeterministic
  href: api/SharpNeat.Tasks.Xor.XorEvaluationScheme.html#SharpNeat_Tasks_Xor_XorEvaluationScheme_IsDeterministic_
  commentId: Overload:SharpNeat.Tasks.Xor.XorEvaluationScheme.IsDeterministic
  isSpec: "True"
  fullName: SharpNeat.Tasks.Xor.XorEvaluationScheme.IsDeterministic
  nameWithType: XorEvaluationScheme.IsDeterministic
- uid: SharpNeat.Tasks.Xor.XorEvaluationScheme.NullFitness
  name: NullFitness
  href: api/SharpNeat.Tasks.Xor.XorEvaluationScheme.html#SharpNeat_Tasks_Xor_XorEvaluationScheme_NullFitness
  commentId: P:SharpNeat.Tasks.Xor.XorEvaluationScheme.NullFitness
  fullName: SharpNeat.Tasks.Xor.XorEvaluationScheme.NullFitness
  nameWithType: XorEvaluationScheme.NullFitness
- uid: SharpNeat.Tasks.Xor.XorEvaluationScheme.NullFitness*
  name: NullFitness
  href: api/SharpNeat.Tasks.Xor.XorEvaluationScheme.html#SharpNeat_Tasks_Xor_XorEvaluationScheme_NullFitness_
  commentId: Overload:SharpNeat.Tasks.Xor.XorEvaluationScheme.NullFitness
  isSpec: "True"
  fullName: SharpNeat.Tasks.Xor.XorEvaluationScheme.NullFitness
  nameWithType: XorEvaluationScheme.NullFitness
- uid: SharpNeat.Tasks.Xor.XorEvaluationScheme.OutputCount
  name: OutputCount
  href: api/SharpNeat.Tasks.Xor.XorEvaluationScheme.html#SharpNeat_Tasks_Xor_XorEvaluationScheme_OutputCount
  commentId: P:SharpNeat.Tasks.Xor.XorEvaluationScheme.OutputCount
  fullName: SharpNeat.Tasks.Xor.XorEvaluationScheme.OutputCount
  nameWithType: XorEvaluationScheme.OutputCount
- uid: SharpNeat.Tasks.Xor.XorEvaluationScheme.OutputCount*
  name: OutputCount
  href: api/SharpNeat.Tasks.Xor.XorEvaluationScheme.html#SharpNeat_Tasks_Xor_XorEvaluationScheme_OutputCount_
  commentId: Overload:SharpNeat.Tasks.Xor.XorEvaluationScheme.OutputCount
  isSpec: "True"
  fullName: SharpNeat.Tasks.Xor.XorEvaluationScheme.OutputCount
  nameWithType: XorEvaluationScheme.OutputCount
- uid: SharpNeat.Tasks.Xor.XorEvaluationScheme.TestForStopCondition(SharpNeat.Evaluation.FitnessInfo)
  name: TestForStopCondition(FitnessInfo)
  href: api/SharpNeat.Tasks.Xor.XorEvaluationScheme.html#SharpNeat_Tasks_Xor_XorEvaluationScheme_TestForStopCondition_SharpNeat_Evaluation_FitnessInfo_
  commentId: M:SharpNeat.Tasks.Xor.XorEvaluationScheme.TestForStopCondition(SharpNeat.Evaluation.FitnessInfo)
  fullName: SharpNeat.Tasks.Xor.XorEvaluationScheme.TestForStopCondition(SharpNeat.Evaluation.FitnessInfo)
  nameWithType: XorEvaluationScheme.TestForStopCondition(FitnessInfo)
- uid: SharpNeat.Tasks.Xor.XorEvaluationScheme.TestForStopCondition*
  name: TestForStopCondition
  href: api/SharpNeat.Tasks.Xor.XorEvaluationScheme.html#SharpNeat_Tasks_Xor_XorEvaluationScheme_TestForStopCondition_
  commentId: Overload:SharpNeat.Tasks.Xor.XorEvaluationScheme.TestForStopCondition
  isSpec: "True"
  fullName: SharpNeat.Tasks.Xor.XorEvaluationScheme.TestForStopCondition
  nameWithType: XorEvaluationScheme.TestForStopCondition
- uid: SharpNeat.Tasks.Xor.XorEvaluator
  name: XorEvaluator
  href: api/SharpNeat.Tasks.Xor.XorEvaluator.html
  commentId: T:SharpNeat.Tasks.Xor.XorEvaluator
  fullName: SharpNeat.Tasks.Xor.XorEvaluator
  nameWithType: XorEvaluator
- uid: SharpNeat.Tasks.Xor.XorEvaluator.Evaluate(SharpNeat.IBlackBox{System.Double})
  name: Evaluate(IBlackBox<double>)
  href: api/SharpNeat.Tasks.Xor.XorEvaluator.html#SharpNeat_Tasks_Xor_XorEvaluator_Evaluate_SharpNeat_IBlackBox_System_Double__
  commentId: M:SharpNeat.Tasks.Xor.XorEvaluator.Evaluate(SharpNeat.IBlackBox{System.Double})
  name.vb: Evaluate(IBlackBox(Of Double))
  fullName: SharpNeat.Tasks.Xor.XorEvaluator.Evaluate(SharpNeat.IBlackBox<double>)
  fullName.vb: SharpNeat.Tasks.Xor.XorEvaluator.Evaluate(SharpNeat.IBlackBox(Of Double))
  nameWithType: XorEvaluator.Evaluate(IBlackBox<double>)
  nameWithType.vb: XorEvaluator.Evaluate(IBlackBox(Of Double))
- uid: SharpNeat.Tasks.Xor.XorEvaluator.Evaluate*
  name: Evaluate
  href: api/SharpNeat.Tasks.Xor.XorEvaluator.html#SharpNeat_Tasks_Xor_XorEvaluator_Evaluate_
  commentId: Overload:SharpNeat.Tasks.Xor.XorEvaluator.Evaluate
  isSpec: "True"
  fullName: SharpNeat.Tasks.Xor.XorEvaluator.Evaluate
  nameWithType: XorEvaluator.Evaluate
- uid: SharpNeat.Tasks.Xor.XorExperimentFactory
  name: XorExperimentFactory
  href: api/SharpNeat.Tasks.Xor.XorExperimentFactory.html
  commentId: T:SharpNeat.Tasks.Xor.XorExperimentFactory
  fullName: SharpNeat.Tasks.Xor.XorExperimentFactory
  nameWithType: XorExperimentFactory
- uid: SharpNeat.Tasks.Xor.XorExperimentFactory.CreateExperiment(System.IO.Stream)
  name: CreateExperiment(Stream)
  href: api/SharpNeat.Tasks.Xor.XorExperimentFactory.html#SharpNeat_Tasks_Xor_XorExperimentFactory_CreateExperiment_System_IO_Stream_
  commentId: M:SharpNeat.Tasks.Xor.XorExperimentFactory.CreateExperiment(System.IO.Stream)
  fullName: SharpNeat.Tasks.Xor.XorExperimentFactory.CreateExperiment(System.IO.Stream)
  nameWithType: XorExperimentFactory.CreateExperiment(Stream)
- uid: SharpNeat.Tasks.Xor.XorExperimentFactory.CreateExperiment*
  name: CreateExperiment
  href: api/SharpNeat.Tasks.Xor.XorExperimentFactory.html#SharpNeat_Tasks_Xor_XorExperimentFactory_CreateExperiment_
  commentId: Overload:SharpNeat.Tasks.Xor.XorExperimentFactory.CreateExperiment
  isSpec: "True"
  fullName: SharpNeat.Tasks.Xor.XorExperimentFactory.CreateExperiment
  nameWithType: XorExperimentFactory.CreateExperiment
- uid: SharpNeat.Tasks.Xor.XorExperimentFactory.CreateExperimentSinglePrecision(System.IO.Stream)
  name: CreateExperimentSinglePrecision(Stream)
  href: api/SharpNeat.Tasks.Xor.XorExperimentFactory.html#SharpNeat_Tasks_Xor_XorExperimentFactory_CreateExperimentSinglePrecision_System_IO_Stream_
  commentId: M:SharpNeat.Tasks.Xor.XorExperimentFactory.CreateExperimentSinglePrecision(System.IO.Stream)
  fullName: SharpNeat.Tasks.Xor.XorExperimentFactory.CreateExperimentSinglePrecision(System.IO.Stream)
  nameWithType: XorExperimentFactory.CreateExperimentSinglePrecision(Stream)
- uid: SharpNeat.Tasks.Xor.XorExperimentFactory.CreateExperimentSinglePrecision*
  name: CreateExperimentSinglePrecision
  href: api/SharpNeat.Tasks.Xor.XorExperimentFactory.html#SharpNeat_Tasks_Xor_XorExperimentFactory_CreateExperimentSinglePrecision_
  commentId: Overload:SharpNeat.Tasks.Xor.XorExperimentFactory.CreateExperimentSinglePrecision
  isSpec: "True"
  fullName: SharpNeat.Tasks.Xor.XorExperimentFactory.CreateExperimentSinglePrecision
  nameWithType: XorExperimentFactory.CreateExperimentSinglePrecision
- uid: SharpNeat.Tasks.Xor.XorExperimentFactory.Id
  name: Id
  href: api/SharpNeat.Tasks.Xor.XorExperimentFactory.html#SharpNeat_Tasks_Xor_XorExperimentFactory_Id
  commentId: P:SharpNeat.Tasks.Xor.XorExperimentFactory.Id
  fullName: SharpNeat.Tasks.Xor.XorExperimentFactory.Id
  nameWithType: XorExperimentFactory.Id
- uid: SharpNeat.Tasks.Xor.XorExperimentFactory.Id*
  name: Id
  href: api/SharpNeat.Tasks.Xor.XorExperimentFactory.html#SharpNeat_Tasks_Xor_XorExperimentFactory_Id_
  commentId: Overload:SharpNeat.Tasks.Xor.XorExperimentFactory.Id
  isSpec: "True"
  fullName: SharpNeat.Tasks.Xor.XorExperimentFactory.Id
  nameWithType: XorExperimentFactory.Id
- uid: SharpNeat.Tests
  name: SharpNeat.Tests
  href: api/SharpNeat.Tests.html
  commentId: N:SharpNeat.Tests
  fullName: SharpNeat.Tests
  nameWithType: SharpNeat.Tests
- uid: SharpNeat.Tests.ArrayTestUtils
  name: ArrayTestUtils
  href: api/SharpNeat.Tests.ArrayTestUtils.html
  commentId: T:SharpNeat.Tests.ArrayTestUtils
  fullName: SharpNeat.Tests.ArrayTestUtils
  nameWithType: ArrayTestUtils
- uid: SharpNeat.Tests.ArrayTestUtils.ConponentwiseEqual(System.Double[],System.Double[],System.Double)
  name: ConponentwiseEqual(double[], double[], double)
  href: api/SharpNeat.Tests.ArrayTestUtils.html#SharpNeat_Tests_ArrayTestUtils_ConponentwiseEqual_System_Double___System_Double___System_Double_
  commentId: M:SharpNeat.Tests.ArrayTestUtils.ConponentwiseEqual(System.Double[],System.Double[],System.Double)
  name.vb: ConponentwiseEqual(Double(), Double(), Double)
  fullName: SharpNeat.Tests.ArrayTestUtils.ConponentwiseEqual(double[], double[], double)
  fullName.vb: SharpNeat.Tests.ArrayTestUtils.ConponentwiseEqual(Double(), Double(), Double)
  nameWithType: ArrayTestUtils.ConponentwiseEqual(double[], double[], double)
  nameWithType.vb: ArrayTestUtils.ConponentwiseEqual(Double(), Double(), Double)
- uid: SharpNeat.Tests.ArrayTestUtils.ConponentwiseEqual*
  name: ConponentwiseEqual
  href: api/SharpNeat.Tests.ArrayTestUtils.html#SharpNeat_Tests_ArrayTestUtils_ConponentwiseEqual_
  commentId: Overload:SharpNeat.Tests.ArrayTestUtils.ConponentwiseEqual
  isSpec: "True"
  fullName: SharpNeat.Tests.ArrayTestUtils.ConponentwiseEqual
  nameWithType: ArrayTestUtils.ConponentwiseEqual
- uid: SharpNeat.Tests.ArrayTestUtils.ConponentwiseEqual``1(``0[],``0[],System.Int32,System.Int32)
  name: ConponentwiseEqual<T>(T[], T[], int, int)
  href: api/SharpNeat.Tests.ArrayTestUtils.html#SharpNeat_Tests_ArrayTestUtils_ConponentwiseEqual__1___0_____0___System_Int32_System_Int32_
  commentId: M:SharpNeat.Tests.ArrayTestUtils.ConponentwiseEqual``1(``0[],``0[],System.Int32,System.Int32)
  name.vb: ConponentwiseEqual(Of T)(T(), T(), Integer, Integer)
  fullName: SharpNeat.Tests.ArrayTestUtils.ConponentwiseEqual<T>(T[], T[], int, int)
  fullName.vb: SharpNeat.Tests.ArrayTestUtils.ConponentwiseEqual(Of T)(T(), T(), Integer, Integer)
  nameWithType: ArrayTestUtils.ConponentwiseEqual<T>(T[], T[], int, int)
  nameWithType.vb: ArrayTestUtils.ConponentwiseEqual(Of T)(T(), T(), Integer, Integer)
- uid: SharpNeat.Tests.FuncTestUtils
  name: FuncTestUtils
  href: api/SharpNeat.Tests.FuncTestUtils.html
  commentId: T:SharpNeat.Tests.FuncTestUtils
  fullName: SharpNeat.Tests.FuncTestUtils
  nameWithType: FuncTestUtils
- uid: SharpNeat.Tests.FuncTestUtils.IsMonotonicIncreasing(System.Func{System.Double,System.Double},System.Double,System.Double,System.Double,System.Boolean)
  name: IsMonotonicIncreasing(Func<double, double>, double, double, double, bool)
  href: api/SharpNeat.Tests.FuncTestUtils.html#SharpNeat_Tests_FuncTestUtils_IsMonotonicIncreasing_System_Func_System_Double_System_Double__System_Double_System_Double_System_Double_System_Boolean_
  commentId: M:SharpNeat.Tests.FuncTestUtils.IsMonotonicIncreasing(System.Func{System.Double,System.Double},System.Double,System.Double,System.Double,System.Boolean)
  name.vb: IsMonotonicIncreasing(Func(Of Double, Double), Double, Double, Double, Boolean)
  fullName: SharpNeat.Tests.FuncTestUtils.IsMonotonicIncreasing(System.Func<double, double>, double, double, double, bool)
  fullName.vb: SharpNeat.Tests.FuncTestUtils.IsMonotonicIncreasing(System.Func(Of Double, Double), Double, Double, Double, Boolean)
  nameWithType: FuncTestUtils.IsMonotonicIncreasing(Func<double, double>, double, double, double, bool)
  nameWithType.vb: FuncTestUtils.IsMonotonicIncreasing(Func(Of Double, Double), Double, Double, Double, Boolean)
- uid: SharpNeat.Tests.FuncTestUtils.IsMonotonicIncreasing*
  name: IsMonotonicIncreasing
  href: api/SharpNeat.Tests.FuncTestUtils.html#SharpNeat_Tests_FuncTestUtils_IsMonotonicIncreasing_
  commentId: Overload:SharpNeat.Tests.FuncTestUtils.IsMonotonicIncreasing
  isSpec: "True"
  fullName: SharpNeat.Tests.FuncTestUtils.IsMonotonicIncreasing
  nameWithType: FuncTestUtils.IsMonotonicIncreasing
- uid: SharpNeat.WeightedDirectedGraphFactoryTests
  name: WeightedDirectedGraphFactoryTests
  href: api/SharpNeat.WeightedDirectedGraphFactoryTests.html
  commentId: T:SharpNeat.WeightedDirectedGraphFactoryTests
  fullName: SharpNeat.WeightedDirectedGraphFactoryTests
  nameWithType: WeightedDirectedGraphFactoryTests
- uid: SharpNeat.WeightedDirectedGraphFactoryTests.SimpleAcyclic
  name: SimpleAcyclic()
  href: api/SharpNeat.WeightedDirectedGraphFactoryTests.html#SharpNeat_WeightedDirectedGraphFactoryTests_SimpleAcyclic
  commentId: M:SharpNeat.WeightedDirectedGraphFactoryTests.SimpleAcyclic
  fullName: SharpNeat.WeightedDirectedGraphFactoryTests.SimpleAcyclic()
  nameWithType: WeightedDirectedGraphFactoryTests.SimpleAcyclic()
- uid: SharpNeat.WeightedDirectedGraphFactoryTests.SimpleAcyclic_DefinedNodes
  name: SimpleAcyclic_DefinedNodes()
  href: api/SharpNeat.WeightedDirectedGraphFactoryTests.html#SharpNeat_WeightedDirectedGraphFactoryTests_SimpleAcyclic_DefinedNodes
  commentId: M:SharpNeat.WeightedDirectedGraphFactoryTests.SimpleAcyclic_DefinedNodes
  fullName: SharpNeat.WeightedDirectedGraphFactoryTests.SimpleAcyclic_DefinedNodes()
  nameWithType: WeightedDirectedGraphFactoryTests.SimpleAcyclic_DefinedNodes()
- uid: SharpNeat.WeightedDirectedGraphFactoryTests.SimpleAcyclic_DefinedNodes_NodeIdGap
  name: SimpleAcyclic_DefinedNodes_NodeIdGap()
  href: api/SharpNeat.WeightedDirectedGraphFactoryTests.html#SharpNeat_WeightedDirectedGraphFactoryTests_SimpleAcyclic_DefinedNodes_NodeIdGap
  commentId: M:SharpNeat.WeightedDirectedGraphFactoryTests.SimpleAcyclic_DefinedNodes_NodeIdGap
  fullName: SharpNeat.WeightedDirectedGraphFactoryTests.SimpleAcyclic_DefinedNodes_NodeIdGap()
  nameWithType: WeightedDirectedGraphFactoryTests.SimpleAcyclic_DefinedNodes_NodeIdGap()
- uid: SharpNeat.WeightedDirectedGraphFactoryTests.SimpleAcyclic_DefinedNodes_NodeIdGap*
  name: SimpleAcyclic_DefinedNodes_NodeIdGap
  href: api/SharpNeat.WeightedDirectedGraphFactoryTests.html#SharpNeat_WeightedDirectedGraphFactoryTests_SimpleAcyclic_DefinedNodes_NodeIdGap_
  commentId: Overload:SharpNeat.WeightedDirectedGraphFactoryTests.SimpleAcyclic_DefinedNodes_NodeIdGap
  isSpec: "True"
  fullName: SharpNeat.WeightedDirectedGraphFactoryTests.SimpleAcyclic_DefinedNodes_NodeIdGap
  nameWithType: WeightedDirectedGraphFactoryTests.SimpleAcyclic_DefinedNodes_NodeIdGap
- uid: SharpNeat.WeightedDirectedGraphFactoryTests.SimpleAcyclic_DefinedNodes*
  name: SimpleAcyclic_DefinedNodes
  href: api/SharpNeat.WeightedDirectedGraphFactoryTests.html#SharpNeat_WeightedDirectedGraphFactoryTests_SimpleAcyclic_DefinedNodes_
  commentId: Overload:SharpNeat.WeightedDirectedGraphFactoryTests.SimpleAcyclic_DefinedNodes
  isSpec: "True"
  fullName: SharpNeat.WeightedDirectedGraphFactoryTests.SimpleAcyclic_DefinedNodes
  nameWithType: WeightedDirectedGraphFactoryTests.SimpleAcyclic_DefinedNodes
- uid: SharpNeat.WeightedDirectedGraphFactoryTests.SimpleAcyclic*
  name: SimpleAcyclic
  href: api/SharpNeat.WeightedDirectedGraphFactoryTests.html#SharpNeat_WeightedDirectedGraphFactoryTests_SimpleAcyclic_
  commentId: Overload:SharpNeat.WeightedDirectedGraphFactoryTests.SimpleAcyclic
  isSpec: "True"
  fullName: SharpNeat.WeightedDirectedGraphFactoryTests.SimpleAcyclic
  nameWithType: WeightedDirectedGraphFactoryTests.SimpleAcyclic
- uid: SharpNeat.Windows
  name: SharpNeat.Windows
  href: api/SharpNeat.Windows.html
  commentId: N:SharpNeat.Windows
  fullName: SharpNeat.Windows
  nameWithType: SharpNeat.Windows
- uid: SharpNeat.Windows.Experiments
  name: SharpNeat.Windows.Experiments
  href: api/SharpNeat.Windows.Experiments.html
  commentId: N:SharpNeat.Windows.Experiments
  fullName: SharpNeat.Windows.Experiments
  nameWithType: SharpNeat.Windows.Experiments
- uid: SharpNeat.Windows.Experiments.ExperimentUiFactoryExtensions
  name: ExperimentUiFactoryExtensions
  href: api/SharpNeat.Windows.Experiments.ExperimentUiFactoryExtensions.html
  commentId: T:SharpNeat.Windows.Experiments.ExperimentUiFactoryExtensions
  fullName: SharpNeat.Windows.Experiments.ExperimentUiFactoryExtensions
  nameWithType: ExperimentUiFactoryExtensions
- uid: SharpNeat.Windows.Experiments.ExperimentUiFactoryExtensions.CreateExperimentUi(SharpNeat.Windows.Experiments.IExperimentUiFactory,SharpNeat.Experiments.INeatExperiment{System.Double},System.String)
  name: CreateExperimentUi(IExperimentUiFactory, INeatExperiment<double>, string)
  href: api/SharpNeat.Windows.Experiments.ExperimentUiFactoryExtensions.html#SharpNeat_Windows_Experiments_ExperimentUiFactoryExtensions_CreateExperimentUi_SharpNeat_Windows_Experiments_IExperimentUiFactory_SharpNeat_Experiments_INeatExperiment_System_Double__System_String_
  commentId: M:SharpNeat.Windows.Experiments.ExperimentUiFactoryExtensions.CreateExperimentUi(SharpNeat.Windows.Experiments.IExperimentUiFactory,SharpNeat.Experiments.INeatExperiment{System.Double},System.String)
  name.vb: CreateExperimentUi(IExperimentUiFactory, INeatExperiment(Of Double), String)
  fullName: SharpNeat.Windows.Experiments.ExperimentUiFactoryExtensions.CreateExperimentUi(SharpNeat.Windows.Experiments.IExperimentUiFactory, SharpNeat.Experiments.INeatExperiment<double>, string)
  fullName.vb: SharpNeat.Windows.Experiments.ExperimentUiFactoryExtensions.CreateExperimentUi(SharpNeat.Windows.Experiments.IExperimentUiFactory, SharpNeat.Experiments.INeatExperiment(Of Double), String)
  nameWithType: ExperimentUiFactoryExtensions.CreateExperimentUi(IExperimentUiFactory, INeatExperiment<double>, string)
  nameWithType.vb: ExperimentUiFactoryExtensions.CreateExperimentUi(IExperimentUiFactory, INeatExperiment(Of Double), String)
- uid: SharpNeat.Windows.Experiments.ExperimentUiFactoryExtensions.CreateExperimentUi*
  name: CreateExperimentUi
  href: api/SharpNeat.Windows.Experiments.ExperimentUiFactoryExtensions.html#SharpNeat_Windows_Experiments_ExperimentUiFactoryExtensions_CreateExperimentUi_
  commentId: Overload:SharpNeat.Windows.Experiments.ExperimentUiFactoryExtensions.CreateExperimentUi
  isSpec: "True"
  fullName: SharpNeat.Windows.Experiments.ExperimentUiFactoryExtensions.CreateExperimentUi
  nameWithType: ExperimentUiFactoryExtensions.CreateExperimentUi
- uid: SharpNeat.Windows.Experiments.IExperimentUi
  name: IExperimentUi
  href: api/SharpNeat.Windows.Experiments.IExperimentUi.html
  commentId: T:SharpNeat.Windows.Experiments.IExperimentUi
  fullName: SharpNeat.Windows.Experiments.IExperimentUi
  nameWithType: IExperimentUi
- uid: SharpNeat.Windows.Experiments.IExperimentUi.CreateGenomeControl
  name: CreateGenomeControl()
  href: api/SharpNeat.Windows.Experiments.IExperimentUi.html#SharpNeat_Windows_Experiments_IExperimentUi_CreateGenomeControl
  commentId: M:SharpNeat.Windows.Experiments.IExperimentUi.CreateGenomeControl
  fullName: SharpNeat.Windows.Experiments.IExperimentUi.CreateGenomeControl()
  nameWithType: IExperimentUi.CreateGenomeControl()
- uid: SharpNeat.Windows.Experiments.IExperimentUi.CreateGenomeControl*
  name: CreateGenomeControl
  href: api/SharpNeat.Windows.Experiments.IExperimentUi.html#SharpNeat_Windows_Experiments_IExperimentUi_CreateGenomeControl_
  commentId: Overload:SharpNeat.Windows.Experiments.IExperimentUi.CreateGenomeControl
  isSpec: "True"
  fullName: SharpNeat.Windows.Experiments.IExperimentUi.CreateGenomeControl
  nameWithType: IExperimentUi.CreateGenomeControl
- uid: SharpNeat.Windows.Experiments.IExperimentUi.CreateTaskControl
  name: CreateTaskControl()
  href: api/SharpNeat.Windows.Experiments.IExperimentUi.html#SharpNeat_Windows_Experiments_IExperimentUi_CreateTaskControl
  commentId: M:SharpNeat.Windows.Experiments.IExperimentUi.CreateTaskControl
  fullName: SharpNeat.Windows.Experiments.IExperimentUi.CreateTaskControl()
  nameWithType: IExperimentUi.CreateTaskControl()
- uid: SharpNeat.Windows.Experiments.IExperimentUi.CreateTaskControl*
  name: CreateTaskControl
  href: api/SharpNeat.Windows.Experiments.IExperimentUi.html#SharpNeat_Windows_Experiments_IExperimentUi_CreateTaskControl_
  commentId: Overload:SharpNeat.Windows.Experiments.IExperimentUi.CreateTaskControl
  isSpec: "True"
  fullName: SharpNeat.Windows.Experiments.IExperimentUi.CreateTaskControl
  nameWithType: IExperimentUi.CreateTaskControl
- uid: SharpNeat.Windows.Experiments.IExperimentUiFactory
  name: IExperimentUiFactory
  href: api/SharpNeat.Windows.Experiments.IExperimentUiFactory.html
  commentId: T:SharpNeat.Windows.Experiments.IExperimentUiFactory
  fullName: SharpNeat.Windows.Experiments.IExperimentUiFactory
  nameWithType: IExperimentUiFactory
- uid: SharpNeat.Windows.Experiments.IExperimentUiFactory.CreateExperimentUi(SharpNeat.Experiments.INeatExperiment{System.Double},System.IO.Stream)
  name: CreateExperimentUi(INeatExperiment<double>, Stream)
  href: api/SharpNeat.Windows.Experiments.IExperimentUiFactory.html#SharpNeat_Windows_Experiments_IExperimentUiFactory_CreateExperimentUi_SharpNeat_Experiments_INeatExperiment_System_Double__System_IO_Stream_
  commentId: M:SharpNeat.Windows.Experiments.IExperimentUiFactory.CreateExperimentUi(SharpNeat.Experiments.INeatExperiment{System.Double},System.IO.Stream)
  name.vb: CreateExperimentUi(INeatExperiment(Of Double), Stream)
  fullName: SharpNeat.Windows.Experiments.IExperimentUiFactory.CreateExperimentUi(SharpNeat.Experiments.INeatExperiment<double>, System.IO.Stream)
  fullName.vb: SharpNeat.Windows.Experiments.IExperimentUiFactory.CreateExperimentUi(SharpNeat.Experiments.INeatExperiment(Of Double), System.IO.Stream)
  nameWithType: IExperimentUiFactory.CreateExperimentUi(INeatExperiment<double>, Stream)
  nameWithType.vb: IExperimentUiFactory.CreateExperimentUi(INeatExperiment(Of Double), Stream)
- uid: SharpNeat.Windows.Experiments.IExperimentUiFactory.CreateExperimentUi*
  name: CreateExperimentUi
  href: api/SharpNeat.Windows.Experiments.IExperimentUiFactory.html#SharpNeat_Windows_Experiments_IExperimentUiFactory_CreateExperimentUi_
  commentId: Overload:SharpNeat.Windows.Experiments.IExperimentUiFactory.CreateExperimentUi
  isSpec: "True"
  fullName: SharpNeat.Windows.Experiments.IExperimentUiFactory.CreateExperimentUi
  nameWithType: IExperimentUiFactory.CreateExperimentUi
- uid: SharpNeat.Windows.GenomeControl
  name: GenomeControl
  href: api/SharpNeat.Windows.GenomeControl.html
  commentId: T:SharpNeat.Windows.GenomeControl
  fullName: SharpNeat.Windows.GenomeControl
  nameWithType: GenomeControl
- uid: SharpNeat.Windows.GenomeControl._genome
  name: _genome
  href: api/SharpNeat.Windows.GenomeControl.html#SharpNeat_Windows_GenomeControl__genome
  commentId: F:SharpNeat.Windows.GenomeControl._genome
  fullName: SharpNeat.Windows.GenomeControl._genome
  nameWithType: GenomeControl._genome
- uid: SharpNeat.Windows.GenomeControl.#ctor
  name: GenomeControl()
  href: api/SharpNeat.Windows.GenomeControl.html#SharpNeat_Windows_GenomeControl__ctor
  commentId: M:SharpNeat.Windows.GenomeControl.#ctor
  name.vb: New()
  fullName: SharpNeat.Windows.GenomeControl.GenomeControl()
  fullName.vb: SharpNeat.Windows.GenomeControl.New()
  nameWithType: GenomeControl.GenomeControl()
  nameWithType.vb: GenomeControl.New()
- uid: SharpNeat.Windows.GenomeControl.#ctor*
  name: GenomeControl
  href: api/SharpNeat.Windows.GenomeControl.html#SharpNeat_Windows_GenomeControl__ctor_
  commentId: Overload:SharpNeat.Windows.GenomeControl.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Windows.GenomeControl.GenomeControl
  fullName.vb: SharpNeat.Windows.GenomeControl.New
  nameWithType: GenomeControl.GenomeControl
  nameWithType.vb: GenomeControl.New
- uid: SharpNeat.Windows.GenomeControl.Dispose(System.Boolean)
  name: Dispose(bool)
  href: api/SharpNeat.Windows.GenomeControl.html#SharpNeat_Windows_GenomeControl_Dispose_System_Boolean_
  commentId: M:SharpNeat.Windows.GenomeControl.Dispose(System.Boolean)
  name.vb: Dispose(Boolean)
  fullName: SharpNeat.Windows.GenomeControl.Dispose(bool)
  fullName.vb: SharpNeat.Windows.GenomeControl.Dispose(Boolean)
  nameWithType: GenomeControl.Dispose(bool)
  nameWithType.vb: GenomeControl.Dispose(Boolean)
- uid: SharpNeat.Windows.GenomeControl.Dispose*
  name: Dispose
  href: api/SharpNeat.Windows.GenomeControl.html#SharpNeat_Windows_GenomeControl_Dispose_
  commentId: Overload:SharpNeat.Windows.GenomeControl.Dispose
  isSpec: "True"
  fullName: SharpNeat.Windows.GenomeControl.Dispose
  nameWithType: GenomeControl.Dispose
- uid: SharpNeat.Windows.GenomeControl.Genome
  name: Genome
  href: api/SharpNeat.Windows.GenomeControl.html#SharpNeat_Windows_GenomeControl_Genome
  commentId: P:SharpNeat.Windows.GenomeControl.Genome
  fullName: SharpNeat.Windows.GenomeControl.Genome
  nameWithType: GenomeControl.Genome
- uid: SharpNeat.Windows.GenomeControl.Genome*
  name: Genome
  href: api/SharpNeat.Windows.GenomeControl.html#SharpNeat_Windows_GenomeControl_Genome_
  commentId: Overload:SharpNeat.Windows.GenomeControl.Genome
  isSpec: "True"
  fullName: SharpNeat.Windows.GenomeControl.Genome
  nameWithType: GenomeControl.Genome
- uid: SharpNeat.Windows.GenomeControl.OnGenomeUpdated
  name: OnGenomeUpdated()
  href: api/SharpNeat.Windows.GenomeControl.html#SharpNeat_Windows_GenomeControl_OnGenomeUpdated
  commentId: M:SharpNeat.Windows.GenomeControl.OnGenomeUpdated
  fullName: SharpNeat.Windows.GenomeControl.OnGenomeUpdated()
  nameWithType: GenomeControl.OnGenomeUpdated()
- uid: SharpNeat.Windows.GenomeControl.OnGenomeUpdated*
  name: OnGenomeUpdated
  href: api/SharpNeat.Windows.GenomeControl.html#SharpNeat_Windows_GenomeControl_OnGenomeUpdated_
  commentId: Overload:SharpNeat.Windows.GenomeControl.OnGenomeUpdated
  isSpec: "True"
  fullName: SharpNeat.Windows.GenomeControl.OnGenomeUpdated
  nameWithType: GenomeControl.OnGenomeUpdated
- uid: SharpNeat.Windows.Neat
  name: SharpNeat.Windows.Neat
  href: api/SharpNeat.Windows.Neat.html
  commentId: N:SharpNeat.Windows.Neat
  fullName: SharpNeat.Windows.Neat
  nameWithType: SharpNeat.Windows.Neat
- uid: SharpNeat.Windows.Neat.NeatExperimentUi
  name: NeatExperimentUi
  href: api/SharpNeat.Windows.Neat.NeatExperimentUi.html
  commentId: T:SharpNeat.Windows.Neat.NeatExperimentUi
  fullName: SharpNeat.Windows.Neat.NeatExperimentUi
  nameWithType: NeatExperimentUi
- uid: SharpNeat.Windows.Neat.NeatExperimentUi.CreateGenomeControl
  name: CreateGenomeControl()
  href: api/SharpNeat.Windows.Neat.NeatExperimentUi.html#SharpNeat_Windows_Neat_NeatExperimentUi_CreateGenomeControl
  commentId: M:SharpNeat.Windows.Neat.NeatExperimentUi.CreateGenomeControl
  fullName: SharpNeat.Windows.Neat.NeatExperimentUi.CreateGenomeControl()
  nameWithType: NeatExperimentUi.CreateGenomeControl()
- uid: SharpNeat.Windows.Neat.NeatExperimentUi.CreateGenomeControl*
  name: CreateGenomeControl
  href: api/SharpNeat.Windows.Neat.NeatExperimentUi.html#SharpNeat_Windows_Neat_NeatExperimentUi_CreateGenomeControl_
  commentId: Overload:SharpNeat.Windows.Neat.NeatExperimentUi.CreateGenomeControl
  isSpec: "True"
  fullName: SharpNeat.Windows.Neat.NeatExperimentUi.CreateGenomeControl
  nameWithType: NeatExperimentUi.CreateGenomeControl
- uid: SharpNeat.Windows.Neat.NeatExperimentUi.CreateTaskControl
  name: CreateTaskControl()
  href: api/SharpNeat.Windows.Neat.NeatExperimentUi.html#SharpNeat_Windows_Neat_NeatExperimentUi_CreateTaskControl
  commentId: M:SharpNeat.Windows.Neat.NeatExperimentUi.CreateTaskControl
  fullName: SharpNeat.Windows.Neat.NeatExperimentUi.CreateTaskControl()
  nameWithType: NeatExperimentUi.CreateTaskControl()
- uid: SharpNeat.Windows.Neat.NeatExperimentUi.CreateTaskControl*
  name: CreateTaskControl
  href: api/SharpNeat.Windows.Neat.NeatExperimentUi.html#SharpNeat_Windows_Neat_NeatExperimentUi_CreateTaskControl_
  commentId: Overload:SharpNeat.Windows.Neat.NeatExperimentUi.CreateTaskControl
  isSpec: "True"
  fullName: SharpNeat.Windows.Neat.NeatExperimentUi.CreateTaskControl
  nameWithType: NeatExperimentUi.CreateTaskControl
- uid: SharpNeat.Windows.Neat.NeatExperimentUiFactory
  name: NeatExperimentUiFactory
  href: api/SharpNeat.Windows.Neat.NeatExperimentUiFactory.html
  commentId: T:SharpNeat.Windows.Neat.NeatExperimentUiFactory
  fullName: SharpNeat.Windows.Neat.NeatExperimentUiFactory
  nameWithType: NeatExperimentUiFactory
- uid: SharpNeat.Windows.Neat.NeatExperimentUiFactory.CreateExperimentUi(SharpNeat.Experiments.INeatExperiment{System.Double},System.IO.Stream)
  name: CreateExperimentUi(INeatExperiment<double>, Stream)
  href: api/SharpNeat.Windows.Neat.NeatExperimentUiFactory.html#SharpNeat_Windows_Neat_NeatExperimentUiFactory_CreateExperimentUi_SharpNeat_Experiments_INeatExperiment_System_Double__System_IO_Stream_
  commentId: M:SharpNeat.Windows.Neat.NeatExperimentUiFactory.CreateExperimentUi(SharpNeat.Experiments.INeatExperiment{System.Double},System.IO.Stream)
  name.vb: CreateExperimentUi(INeatExperiment(Of Double), Stream)
  fullName: SharpNeat.Windows.Neat.NeatExperimentUiFactory.CreateExperimentUi(SharpNeat.Experiments.INeatExperiment<double>, System.IO.Stream)
  fullName.vb: SharpNeat.Windows.Neat.NeatExperimentUiFactory.CreateExperimentUi(SharpNeat.Experiments.INeatExperiment(Of Double), System.IO.Stream)
  nameWithType: NeatExperimentUiFactory.CreateExperimentUi(INeatExperiment<double>, Stream)
  nameWithType.vb: NeatExperimentUiFactory.CreateExperimentUi(INeatExperiment(Of Double), Stream)
- uid: SharpNeat.Windows.Neat.NeatExperimentUiFactory.CreateExperimentUi*
  name: CreateExperimentUi
  href: api/SharpNeat.Windows.Neat.NeatExperimentUiFactory.html#SharpNeat_Windows_Neat_NeatExperimentUiFactory_CreateExperimentUi_
  commentId: Overload:SharpNeat.Windows.Neat.NeatExperimentUiFactory.CreateExperimentUi
  isSpec: "True"
  fullName: SharpNeat.Windows.Neat.NeatExperimentUiFactory.CreateExperimentUi
  nameWithType: NeatExperimentUiFactory.CreateExperimentUi
- uid: SharpNeat.Windows.Neat.NeatGenomeControl
  name: NeatGenomeControl
  href: api/SharpNeat.Windows.Neat.NeatGenomeControl.html
  commentId: T:SharpNeat.Windows.Neat.NeatGenomeControl
  fullName: SharpNeat.Windows.Neat.NeatGenomeControl
  nameWithType: NeatGenomeControl
- uid: SharpNeat.Windows.Neat.NeatGenomeControl.#ctor
  name: NeatGenomeControl()
  href: api/SharpNeat.Windows.Neat.NeatGenomeControl.html#SharpNeat_Windows_Neat_NeatGenomeControl__ctor
  commentId: M:SharpNeat.Windows.Neat.NeatGenomeControl.#ctor
  name.vb: New()
  fullName: SharpNeat.Windows.Neat.NeatGenomeControl.NeatGenomeControl()
  fullName.vb: SharpNeat.Windows.Neat.NeatGenomeControl.New()
  nameWithType: NeatGenomeControl.NeatGenomeControl()
  nameWithType.vb: NeatGenomeControl.New()
- uid: SharpNeat.Windows.Neat.NeatGenomeControl.#ctor*
  name: NeatGenomeControl
  href: api/SharpNeat.Windows.Neat.NeatGenomeControl.html#SharpNeat_Windows_Neat_NeatGenomeControl__ctor_
  commentId: Overload:SharpNeat.Windows.Neat.NeatGenomeControl.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Windows.Neat.NeatGenomeControl.NeatGenomeControl
  fullName.vb: SharpNeat.Windows.Neat.NeatGenomeControl.New
  nameWithType: NeatGenomeControl.NeatGenomeControl
  nameWithType.vb: NeatGenomeControl.New
- uid: SharpNeat.Windows.Neat.NeatGenomeControl.Dispose(System.Boolean)
  name: Dispose(bool)
  href: api/SharpNeat.Windows.Neat.NeatGenomeControl.html#SharpNeat_Windows_Neat_NeatGenomeControl_Dispose_System_Boolean_
  commentId: M:SharpNeat.Windows.Neat.NeatGenomeControl.Dispose(System.Boolean)
  name.vb: Dispose(Boolean)
  fullName: SharpNeat.Windows.Neat.NeatGenomeControl.Dispose(bool)
  fullName.vb: SharpNeat.Windows.Neat.NeatGenomeControl.Dispose(Boolean)
  nameWithType: NeatGenomeControl.Dispose(bool)
  nameWithType.vb: NeatGenomeControl.Dispose(Boolean)
- uid: SharpNeat.Windows.Neat.NeatGenomeControl.Dispose*
  name: Dispose
  href: api/SharpNeat.Windows.Neat.NeatGenomeControl.html#SharpNeat_Windows_Neat_NeatGenomeControl_Dispose_
  commentId: Overload:SharpNeat.Windows.Neat.NeatGenomeControl.Dispose
  isSpec: "True"
  fullName: SharpNeat.Windows.Neat.NeatGenomeControl.Dispose
  nameWithType: NeatGenomeControl.Dispose
- uid: SharpNeat.Windows.Neat.NeatGenomeControl.OnGenomeUpdated
  name: OnGenomeUpdated()
  href: api/SharpNeat.Windows.Neat.NeatGenomeControl.html#SharpNeat_Windows_Neat_NeatGenomeControl_OnGenomeUpdated
  commentId: M:SharpNeat.Windows.Neat.NeatGenomeControl.OnGenomeUpdated
  fullName: SharpNeat.Windows.Neat.NeatGenomeControl.OnGenomeUpdated()
  nameWithType: NeatGenomeControl.OnGenomeUpdated()
- uid: SharpNeat.Windows.Neat.NeatGenomeControl.OnGenomeUpdated*
  name: OnGenomeUpdated
  href: api/SharpNeat.Windows.Neat.NeatGenomeControl.html#SharpNeat_Windows_Neat_NeatGenomeControl_OnGenomeUpdated_
  commentId: Overload:SharpNeat.Windows.Neat.NeatGenomeControl.OnGenomeUpdated
  isSpec: "True"
  fullName: SharpNeat.Windows.Neat.NeatGenomeControl.OnGenomeUpdated
  nameWithType: NeatGenomeControl.OnGenomeUpdated
- uid: SharpNeat.Windows.ViewportControl
  name: ViewportControl
  href: api/SharpNeat.Windows.ViewportControl.html
  commentId: T:SharpNeat.Windows.ViewportControl
  fullName: SharpNeat.Windows.ViewportControl
  nameWithType: ViewportControl
- uid: SharpNeat.Windows.ViewportControl.#ctor
  name: ViewportControl()
  href: api/SharpNeat.Windows.ViewportControl.html#SharpNeat_Windows_ViewportControl__ctor
  commentId: M:SharpNeat.Windows.ViewportControl.#ctor
  name.vb: New()
  fullName: SharpNeat.Windows.ViewportControl.ViewportControl()
  fullName.vb: SharpNeat.Windows.ViewportControl.New()
  nameWithType: ViewportControl.ViewportControl()
  nameWithType.vb: ViewportControl.New()
- uid: SharpNeat.Windows.ViewportControl.#ctor*
  name: ViewportControl
  href: api/SharpNeat.Windows.ViewportControl.html#SharpNeat_Windows_ViewportControl__ctor_
  commentId: Overload:SharpNeat.Windows.ViewportControl.#ctor
  isSpec: "True"
  name.vb: New
  fullName: SharpNeat.Windows.ViewportControl.ViewportControl
  fullName.vb: SharpNeat.Windows.ViewportControl.New
  nameWithType: ViewportControl.ViewportControl
  nameWithType.vb: ViewportControl.New
- uid: SharpNeat.Windows.ViewportControl.Dispose(System.Boolean)
  name: Dispose(bool)
  href: api/SharpNeat.Windows.ViewportControl.html#SharpNeat_Windows_ViewportControl_Dispose_System_Boolean_
  commentId: M:SharpNeat.Windows.ViewportControl.Dispose(System.Boolean)
  name.vb: Dispose(Boolean)
  fullName: SharpNeat.Windows.ViewportControl.Dispose(bool)
  fullName.vb: SharpNeat.Windows.ViewportControl.Dispose(Boolean)
  nameWithType: ViewportControl.Dispose(bool)
  nameWithType.vb: ViewportControl.Dispose(Boolean)
- uid: SharpNeat.Windows.ViewportControl.Dispose*
  name: Dispose
  href: api/SharpNeat.Windows.ViewportControl.html#SharpNeat_Windows_ViewportControl_Dispose_
  commentId: Overload:SharpNeat.Windows.ViewportControl.Dispose
  isSpec: "True"
  fullName: SharpNeat.Windows.ViewportControl.Dispose
  nameWithType: ViewportControl.Dispose
- uid: SharpNeat.Windows.ViewportControl.RepaintViewport
  name: RepaintViewport()
  href: api/SharpNeat.Windows.ViewportControl.html#SharpNeat_Windows_ViewportControl_RepaintViewport
  commentId: M:SharpNeat.Windows.ViewportControl.RepaintViewport
  fullName: SharpNeat.Windows.ViewportControl.RepaintViewport()
  nameWithType: ViewportControl.RepaintViewport()
- uid: SharpNeat.Windows.ViewportControl.RepaintViewport*
  name: RepaintViewport
  href: api/SharpNeat.Windows.ViewportControl.html#SharpNeat_Windows_ViewportControl_RepaintViewport_
  commentId: Overload:SharpNeat.Windows.ViewportControl.RepaintViewport
  isSpec: "True"
  fullName: SharpNeat.Windows.ViewportControl.RepaintViewport
  nameWithType: ViewportControl.RepaintViewport
- uid: SharpNeat.Windows.ViewportControl.ViewportPainter
  name: ViewportPainter
  href: api/SharpNeat.Windows.ViewportControl.html#SharpNeat_Windows_ViewportControl_ViewportPainter
  commentId: P:SharpNeat.Windows.ViewportControl.ViewportPainter
  fullName: SharpNeat.Windows.ViewportControl.ViewportPainter
  nameWithType: ViewportControl.ViewportPainter
- uid: SharpNeat.Windows.ViewportControl.ViewportPainter*
  name: ViewportPainter
  href: api/SharpNeat.Windows.ViewportControl.html#SharpNeat_Windows_ViewportControl_ViewportPainter_
  commentId: Overload:SharpNeat.Windows.ViewportControl.ViewportPainter
  isSpec: "True"
  fullName: SharpNeat.Windows.ViewportControl.ViewportPainter
  nameWithType: ViewportControl.ViewportPainter
- uid: SharpNeat.Windows.ViewportControl.ZoomFactor
  name: ZoomFactor
  href: api/SharpNeat.Windows.ViewportControl.html#SharpNeat_Windows_ViewportControl_ZoomFactor
  commentId: P:SharpNeat.Windows.ViewportControl.ZoomFactor
  fullName: SharpNeat.Windows.ViewportControl.ZoomFactor
  nameWithType: ViewportControl.ZoomFactor
- uid: SharpNeat.Windows.ViewportControl.ZoomFactor*
  name: ZoomFactor
  href: api/SharpNeat.Windows.ViewportControl.html#SharpNeat_Windows_ViewportControl_ZoomFactor_
  commentId: Overload:SharpNeat.Windows.ViewportControl.ZoomFactor
  isSpec: "True"
  fullName: SharpNeat.Windows.ViewportControl.ZoomFactor
  nameWithType: ViewportControl.ZoomFactor
- uid: TestApp1
  name: TestApp1
  href: api/TestApp1.html
  commentId: N:TestApp1
  fullName: TestApp1
  nameWithType: TestApp1
- uid: TestApp1.EvolutionAlgorithmFactory
  name: EvolutionAlgorithmFactory
  href: api/TestApp1.EvolutionAlgorithmFactory.html
  commentId: T:TestApp1.EvolutionAlgorithmFactory
  fullName: TestApp1.EvolutionAlgorithmFactory
  nameWithType: EvolutionAlgorithmFactory
- uid: TestApp1.EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_Binary11
  name: CreateNeatEvolutionAlgorithm_Binary11()
  href: api/TestApp1.EvolutionAlgorithmFactory.html#TestApp1_EvolutionAlgorithmFactory_CreateNeatEvolutionAlgorithm_Binary11
  commentId: M:TestApp1.EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_Binary11
  fullName: TestApp1.EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_Binary11()
  nameWithType: EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_Binary11()
- uid: TestApp1.EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_Binary11*
  name: CreateNeatEvolutionAlgorithm_Binary11
  href: api/TestApp1.EvolutionAlgorithmFactory.html#TestApp1_EvolutionAlgorithmFactory_CreateNeatEvolutionAlgorithm_Binary11_
  commentId: Overload:TestApp1.EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_Binary11
  isSpec: "True"
  fullName: TestApp1.EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_Binary11
  nameWithType: EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_Binary11
- uid: TestApp1.EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_Binary6
  name: CreateNeatEvolutionAlgorithm_Binary6()
  href: api/TestApp1.EvolutionAlgorithmFactory.html#TestApp1_EvolutionAlgorithmFactory_CreateNeatEvolutionAlgorithm_Binary6
  commentId: M:TestApp1.EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_Binary6
  fullName: TestApp1.EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_Binary6()
  nameWithType: EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_Binary6()
- uid: TestApp1.EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_Binary6*
  name: CreateNeatEvolutionAlgorithm_Binary6
  href: api/TestApp1.EvolutionAlgorithmFactory.html#TestApp1_EvolutionAlgorithmFactory_CreateNeatEvolutionAlgorithm_Binary6_
  commentId: Overload:TestApp1.EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_Binary6
  isSpec: "True"
  fullName: TestApp1.EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_Binary6
  nameWithType: EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_Binary6
- uid: TestApp1.EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_CartDoublePole
  name: CreateNeatEvolutionAlgorithm_CartDoublePole()
  href: api/TestApp1.EvolutionAlgorithmFactory.html#TestApp1_EvolutionAlgorithmFactory_CreateNeatEvolutionAlgorithm_CartDoublePole
  commentId: M:TestApp1.EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_CartDoublePole
  fullName: TestApp1.EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_CartDoublePole()
  nameWithType: EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_CartDoublePole()
- uid: TestApp1.EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_CartDoublePole*
  name: CreateNeatEvolutionAlgorithm_CartDoublePole
  href: api/TestApp1.EvolutionAlgorithmFactory.html#TestApp1_EvolutionAlgorithmFactory_CreateNeatEvolutionAlgorithm_CartDoublePole_
  commentId: Overload:TestApp1.EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_CartDoublePole
  isSpec: "True"
  fullName: TestApp1.EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_CartDoublePole
  nameWithType: EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_CartDoublePole
- uid: TestApp1.EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_CartSinglePole
  name: CreateNeatEvolutionAlgorithm_CartSinglePole()
  href: api/TestApp1.EvolutionAlgorithmFactory.html#TestApp1_EvolutionAlgorithmFactory_CreateNeatEvolutionAlgorithm_CartSinglePole
  commentId: M:TestApp1.EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_CartSinglePole
  fullName: TestApp1.EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_CartSinglePole()
  nameWithType: EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_CartSinglePole()
- uid: TestApp1.EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_CartSinglePole*
  name: CreateNeatEvolutionAlgorithm_CartSinglePole
  href: api/TestApp1.EvolutionAlgorithmFactory.html#TestApp1_EvolutionAlgorithmFactory_CreateNeatEvolutionAlgorithm_CartSinglePole_
  commentId: Overload:TestApp1.EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_CartSinglePole
  isSpec: "True"
  fullName: TestApp1.EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_CartSinglePole
  nameWithType: EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_CartSinglePole
- uid: TestApp1.EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_GenerativeSinewave
  name: CreateNeatEvolutionAlgorithm_GenerativeSinewave()
  href: api/TestApp1.EvolutionAlgorithmFactory.html#TestApp1_EvolutionAlgorithmFactory_CreateNeatEvolutionAlgorithm_GenerativeSinewave
  commentId: M:TestApp1.EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_GenerativeSinewave
  fullName: TestApp1.EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_GenerativeSinewave()
  nameWithType: EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_GenerativeSinewave()
- uid: TestApp1.EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_GenerativeSinewave*
  name: CreateNeatEvolutionAlgorithm_GenerativeSinewave
  href: api/TestApp1.EvolutionAlgorithmFactory.html#TestApp1_EvolutionAlgorithmFactory_CreateNeatEvolutionAlgorithm_GenerativeSinewave_
  commentId: Overload:TestApp1.EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_GenerativeSinewave
  isSpec: "True"
  fullName: TestApp1.EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_GenerativeSinewave
  nameWithType: EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_GenerativeSinewave
- uid: TestApp1.EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_PreyCapture
  name: CreateNeatEvolutionAlgorithm_PreyCapture()
  href: api/TestApp1.EvolutionAlgorithmFactory.html#TestApp1_EvolutionAlgorithmFactory_CreateNeatEvolutionAlgorithm_PreyCapture
  commentId: M:TestApp1.EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_PreyCapture
  fullName: TestApp1.EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_PreyCapture()
  nameWithType: EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_PreyCapture()
- uid: TestApp1.EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_PreyCapture*
  name: CreateNeatEvolutionAlgorithm_PreyCapture
  href: api/TestApp1.EvolutionAlgorithmFactory.html#TestApp1_EvolutionAlgorithmFactory_CreateNeatEvolutionAlgorithm_PreyCapture_
  commentId: Overload:TestApp1.EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_PreyCapture
  isSpec: "True"
  fullName: TestApp1.EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_PreyCapture
  nameWithType: EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_PreyCapture
- uid: TestApp1.EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_Xor
  name: CreateNeatEvolutionAlgorithm_Xor()
  href: api/TestApp1.EvolutionAlgorithmFactory.html#TestApp1_EvolutionAlgorithmFactory_CreateNeatEvolutionAlgorithm_Xor
  commentId: M:TestApp1.EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_Xor
  fullName: TestApp1.EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_Xor()
  nameWithType: EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_Xor()
- uid: TestApp1.EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_Xor*
  name: CreateNeatEvolutionAlgorithm_Xor
  href: api/TestApp1.EvolutionAlgorithmFactory.html#TestApp1_EvolutionAlgorithmFactory_CreateNeatEvolutionAlgorithm_Xor_
  commentId: Overload:TestApp1.EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_Xor
  isSpec: "True"
  fullName: TestApp1.EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_Xor
  nameWithType: EvolutionAlgorithmFactory.CreateNeatEvolutionAlgorithm_Xor
- uid: UiSandbox
  name: UiSandbox
  href: api/UiSandbox.html
  commentId: N:UiSandbox
  fullName: UiSandbox
  nameWithType: UiSandbox
- uid: UiSandbox.Form1
  name: Form1
  href: api/UiSandbox.Form1.html
  commentId: T:UiSandbox.Form1
  fullName: UiSandbox.Form1
  nameWithType: Form1
- uid: UiSandbox.Form1.#ctor
  name: Form1()
  href: api/UiSandbox.Form1.html#UiSandbox_Form1__ctor
  commentId: M:UiSandbox.Form1.#ctor
  name.vb: New()
  fullName: UiSandbox.Form1.Form1()
  fullName.vb: UiSandbox.Form1.New()
  nameWithType: Form1.Form1()
  nameWithType.vb: Form1.New()
- uid: UiSandbox.Form1.#ctor*
  name: Form1
  href: api/UiSandbox.Form1.html#UiSandbox_Form1__ctor_
  commentId: Overload:UiSandbox.Form1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: UiSandbox.Form1.Form1
  fullName.vb: UiSandbox.Form1.New
  nameWithType: Form1.Form1
  nameWithType.vb: Form1.New
- uid: UiSandbox.Form1.Dispose(System.Boolean)
  name: Dispose(bool)
  href: api/UiSandbox.Form1.html#UiSandbox_Form1_Dispose_System_Boolean_
  commentId: M:UiSandbox.Form1.Dispose(System.Boolean)
  name.vb: Dispose(Boolean)
  fullName: UiSandbox.Form1.Dispose(bool)
  fullName.vb: UiSandbox.Form1.Dispose(Boolean)
  nameWithType: Form1.Dispose(bool)
  nameWithType.vb: Form1.Dispose(Boolean)
- uid: UiSandbox.Form1.Dispose*
  name: Dispose
  href: api/UiSandbox.Form1.html#UiSandbox_Form1_Dispose_
  commentId: Overload:UiSandbox.Form1.Dispose
  isSpec: "True"
  fullName: UiSandbox.Form1.Dispose
  nameWithType: Form1.Dispose
